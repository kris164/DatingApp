using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace API.Migrations
{
    public partial class Comapny : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.EnsureSchema(
                name: "olap");

            migrationBuilder.EnsureSchema(
                name: "app");

            migrationBuilder.EnsureSchema(
                name: "geo");

            migrationBuilder.EnsureSchema(
                name: "yMASZ");

            migrationBuilder.EnsureSchema(
                name: "espeed");

            migrationBuilder.EnsureSchema(
                name: "contr");

            migrationBuilder.EnsureSchema(
                name: "lng");

            migrationBuilder.EnsureSchema(
                name: "crm");

            migrationBuilder.EnsureSchema(
                name: "opti");

            migrationBuilder.EnsureSchema(
                name: "dashboard");

            migrationBuilder.EnsureSchema(
                name: "rest");

            migrationBuilder.EnsureSchema(
                name: "arch");

            migrationBuilder.EnsureSchema(
                name: "map");

            migrationBuilder.EnsureSchema(
                name: "ling");

            migrationBuilder.EnsureSchema(
                name: "mob");

            migrationBuilder.EnsureSchema(
                name: "hub");

            migrationBuilder.EnsureSchema(
                name: "scan");

            migrationBuilder.EnsureSchema(
                name: "edi");

            migrationBuilder.EnsureSchema(
                name: "iLAN");

            migrationBuilder.EnsureSchema(
                name: "rep");

            migrationBuilder.EnsureSchema(
                name: "cr");

            migrationBuilder.EnsureSchema(
                name: "sent");

            migrationBuilder.EnsureSchema(
                name: "task");

            migrationBuilder.EnsureSchema(
                name: "workshop");

            migrationBuilder.EnsureSchema(
                name: "gie");

            migrationBuilder.CreateTable(
                name: "_JU_TMP",
                columns: table => new
                {
                    DT = table.Column<DateTime>(type: "datetime", nullable: true),
                    Params = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "Access",
                schema: "olap",
                columns: table => new
                {
                    AccessId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    DefinitionId = table.Column<int>(type: "int", nullable: true),
                    UserId = table.Column<int>(type: "int", nullable: true),
                    UserGroupId = table.Column<int>(type: "int", nullable: true),
                    Edit = table.Column<int>(type: "int", nullable: true),
                    View = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Access", x => x.AccessId);
                });

            migrationBuilder.CreateTable(
                name: "AccessLevel",
                schema: "app",
                columns: table => new
                {
                    AccessLevelId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: false),
                    Hint = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AccessLevel", x => x.AccessLevelId);
                });

            migrationBuilder.CreateTable(
                name: "ActionType",
                schema: "geo",
                columns: table => new
                {
                    ActionTypeId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Description = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ActionType", x => x.ActionTypeId);
                });

            migrationBuilder.CreateTable(
                name: "ADR_KODY_POJAZDOW",
                columns: table => new
                {
                    ID_ADR_KODY_POJAZDOW = table.Column<int>(type: "int", nullable: false),
                    LP = table.Column<int>(type: "int", nullable: false),
                    KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: false),
                    TYPY_POJAZDOW = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    DictionaryId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TextId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ADR_KODY_POJAZDOW", x => x.ID_ADR_KODY_POJAZDOW);
                });

            migrationBuilder.CreateTable(
                name: "ADR_SPRZET",
                columns: table => new
                {
                    ID_ADR_SPRZET = table.Column<int>(type: "int", nullable: false),
                    NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: false),
                    OPIS = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    DictionaryId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TextId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ADR_SPRZET", x => x.ID_ADR_SPRZET);
                });

            migrationBuilder.CreateTable(
                name: "ADR_UN",
                columns: table => new
                {
                    ID_ADR_UN = table.Column<int>(type: "int", nullable: false),
                    NIEPODLEGA = table.Column<int>(type: "int", nullable: true, comment: "0/1 gdy powinien pojawić się tekxt NIE PODLEGA ADR"),
                    PRZEWZABR = table.Column<int>(type: "int", nullable: true, comment: "0/1 gdy powinien pojawić się tekst PRZEWÓZ ZABRONIONY"),
                    PRZEWZABRRID = table.Column<int>(type: "int", nullable: true, comment: "0/1 gdy powinien pojawić się tekst RID: PRZEWÓZ ZABRONONY"),
                    NIEPODLEGAINFO = table.Column<string>(type: "varchar(26)", unicode: false, maxLength: 26, nullable: true, comment: "dodatkowy tekst jaki pojawia sią za NIE PODLEGA ADR"),
                    PRZEWZABRINFO = table.Column<string>(type: "varchar(26)", unicode: false, maxLength: 26, nullable: true),
                    UN = table.Column<string>(type: "varchar(4)", unicode: false, maxLength: 4, nullable: true, comment: "Kod UN"),
                    KLASA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Klasa"),
                    KOD_KLASY = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Kod klasyfikacyjny"),
                    GRUPA_PAKOWANIA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Grupa pakowania"),
                    NALEPKI = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Nalepki ADR/RID"),
                    NALEPKI_RID = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Nalepki RID"),
                    PRZEPISY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Przepisy szczególne"),
                    ILOSC_OGRANICZONA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Ilości ograniczone (bez ADR)"),
                    ILOSCI_OGR_LQ2011 = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Ilości ograniczone - LQ-2011"),
                    ILOSCI_WYLACZ = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Ilości wyłaczone"),
                    OPAK_INSTR = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true, comment: "Instrukcje pakowania"),
                    OPAK_PRZEPISY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Szczególne przepisy pakowania"),
                    OPAK_PAK_RAZEM = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Przepisy dotyczące pakowania razem"),
                    CYSTP_INSTR = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Instrukcje dla cystern przenośnych  i kontenerów do przewozu luzem"),
                    CYSTP_PRZEPISY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Przepisy szczególne dla cystern przenośnych i kontenerów do przewozu luzem"),
                    CYST_ADR_KOD = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Kod cysterny dla cystern ADR"),
                    CYST_ADR_PRZEPISY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Przepisy szczególne dla cystern ADR"),
                    POJAZD_CYST_ADR = table.Column<string>(type: "varchar(6)", unicode: false, maxLength: 6, nullable: true, comment: "Pojazdy do przewozu w cysternach"),
                    KATEGORIA_TRANSP = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true, comment: "Kategoria transportowa"),
                    MNOZNIK = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Mnożnik"),
                    ILOSC_JT = table.Column<string>(type: "varchar(4)", unicode: false, maxLength: 4, nullable: true, comment: "Ilość na jednostkę transportową"),
                    OGR_TUNELE = table.Column<string>(type: "varchar(8)", unicode: false, maxLength: 8, nullable: true, comment: "Kod ograniczeń przewozu przez tunele"),
                    PRZEPISY_SZT = table.Column<string>(type: "varchar(11)", unicode: false, maxLength: 11, nullable: true, comment: "Przepisy szczególne dotyczące przewozu - sztuki przesyłki"),
                    PRZEPISY_LUZEM = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Przepisy szczególne dotyczące przewozu - przewóz luzem"),
                    PRZEPISY_ZALWYL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Przepisy szczególne dotyczące przewozu - załadunek i rozładunek"),
                    PRZEPISY_POST = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Przepisy szczególne dotyczące przewozu - postępowanie ADR2009"),
                    NR_ZAGROZ = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Numer rozpoznawczy zagrożenia"),
                    RID = table.Column<int>(type: "int", nullable: true, comment: "0/1 gdy numer rozpoznawczy zagrożenia dotyczy RID"),
                    OPIS_PL = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true, comment: "Opis po polsku"),
                    OPIS_GB = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true, comment: "Opis po angielsku")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ADR_UN", x => x.ID_ADR_UN);
                },
                comment: "baza ADR");

            migrationBuilder.CreateTable(
                name: "ADR_UN_LIST",
                columns: table => new
                {
                    ID_ADR_UN_LIST = table.Column<int>(type: "int", nullable: false),
                    UN = table.Column<string>(type: "varchar(4)", unicode: false, maxLength: 4, nullable: true, comment: "Kod UN"),
                    KLASA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Klasa"),
                    KOD_KLASYFIK = table.Column<string>(type: "varchar(11)", unicode: false, maxLength: 11, nullable: true, comment: "Kod klasyfikacyjny"),
                    GRUPA_PAKOW = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Grupa pakowania"),
                    Nalepki = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Nalepki")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ADR_UN_LIST", x => x.ID_ADR_UN_LIST);
                },
                comment: "ADR-UN wyłączone z selekcji");

            migrationBuilder.CreateTable(
                name: "ADR_ZESTAW_SPRZET",
                columns: table => new
                {
                    ID_ADR_ZESTAW_SPRZET = table.Column<int>(type: "int", nullable: false),
                    ADR_SPRZET_ID = table.Column<int>(type: "int", nullable: false),
                    ADR_SPRZET = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: false),
                    ADR_ZESTAW_ID = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ADR_ZESTAW_SPRZET", x => x.ID_ADR_ZESTAW_SPRZET);
                });

            migrationBuilder.CreateTable(
                name: "ADR_ZESTAWY_WYP",
                columns: table => new
                {
                    ID_ADR_ZESTAWY_WYP = table.Column<int>(type: "int", nullable: false),
                    OZNACZENIE = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: false),
                    NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: false),
                    OPIS = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    DictionaryId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TextId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ADR_ZESTAWY_WYP", x => x.ID_ADR_ZESTAWY_WYP);
                });

            migrationBuilder.CreateTable(
                name: "ADRESY",
                columns: table => new
                {
                    ID_ADRESY = table.Column<int>(type: "int", nullable: false),
                    RODZAJ = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    NAZWA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_OD = table.Column<int>(type: "int", nullable: true),
                    NR_DO = table.Column<int>(type: "int", nullable: true),
                    KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    GMINA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    STREFA = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    SORT_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ADRESY", x => x.ID_ADRESY);
                });

            migrationBuilder.CreateTable(
                name: "AKT_FAKTUROWANE",
                columns: table => new
                {
                    ID_AKT_FAKTUROWANE = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    KALKULACJE_ID = table.Column<int>(type: "int", nullable: true),
                    ZLEC_POZ_FAKT_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE_ID = table.Column<int>(type: "int", nullable: true),
                    LIST_LINIOWY_ID = table.Column<int>(type: "int", nullable: true),
                    POZ_KOREKTA_ID = table.Column<int>(type: "int", nullable: true),
                    PROMY_ID = table.Column<int>(type: "int", nullable: true),
                    UZYTKOWNIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NAZWA_STACJI = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    IP_STACJI = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AKT_FAKTUROWANE", x => x.ID_AKT_FAKTUROWANE);
                });

            migrationBuilder.CreateTable(
                name: "AKT_PRZELEWY",
                columns: table => new
                {
                    ID_AKT_PRZELEWY = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    OBJ_ID = table.Column<int>(type: "int", nullable: true),
                    REC_ID = table.Column<int>(type: "int", nullable: true),
                    UZYTKOWNIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NAZWA_STACJI = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    IP_STACJI = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AKT_PRZELEWY", x => x.ID_AKT_PRZELEWY);
                });

            migrationBuilder.CreateTable(
                name: "ANKIETY_ODP",
                columns: table => new
                {
                    ID_ANKIETY_ODP = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ANKIETY_PYT_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    OBJ_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    REC_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ODPOWIEDZ = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true),
                    USER_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    DT_ODP = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "('')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ANKIETY_ODP", x => x.ID_ANKIETY_ODP);
                });

            migrationBuilder.CreateTable(
                name: "ANKIETY_PYT",
                columns: table => new
                {
                    ID_ANKIETY_PYT = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    OBJ_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    LP = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    AKTYWNE = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    PYTANIE = table.Column<string>(type: "varchar(250)", unicode: false, maxLength: 250, nullable: false, defaultValueSql: "('')"),
                    TYP_ODP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: false, defaultValueSql: "('')"),
                    ZRODLO_LISTY = table.Column<string>(type: "varchar(250)", unicode: false, maxLength: 250, nullable: true),
                    ODP_DOMYSLNA = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true),
                    ODP_WYMAGANA = table.Column<int>(type: "int", nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ANKIETY_PYT", x => x.ID_ANKIETY_PYT);
                });

            migrationBuilder.CreateTable(
                name: "APP_DEBUG",
                columns: table => new
                {
                    ID_APP_DEBUG = table.Column<int>(type: "int", nullable: false),
                    DT = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    CZAS = table.Column<DateTime>(type: "datetime", nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    TYPTERM = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    ID = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    OPERACJA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    INFO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    SQL = table.Column<string>(type: "varchar(4000)", unicode: false, maxLength: 4000, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_APP_DEBUG", x => x.ID_APP_DEBUG);
                });

            migrationBuilder.CreateTable(
                name: "APP_LOG",
                columns: table => new
                {
                    ID_APP_LOG = table.Column<int>(type: "int", nullable: false),
                    OPERACJA = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    OP_EXT = table.Column<int>(type: "int", nullable: true),
                    TYP_OBJEKTU = table.Column<int>(type: "int", nullable: true),
                    ID_OBJEKTU = table.Column<int>(type: "int", nullable: true),
                    DATA_START = table.Column<double>(type: "float", nullable: true),
                    DATA_STOP = table.Column<double>(type: "float", nullable: true),
                    CZAS = table.Column<double>(type: "float", nullable: true),
                    ID_UZYTK = table.Column<int>(type: "int", nullable: true),
                    NAZWA_UZYTK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    IP_STACJI = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true),
                    NAZWA_STACJI = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: true),
                    INFO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_APP_LOG", x => x.ID_APP_LOG);
                });

            migrationBuilder.CreateTable(
                name: "APP_MSG",
                columns: table => new
                {
                    ID_APP_MSG = table.Column<int>(type: "int", nullable: false),
                    ID_USER = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    DT = table.Column<DateTime>(type: "datetime", nullable: true),
                    TYP = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    SID = table.Column<int>(type: "int", nullable: true),
                    TITLE = table.Column<string>(type: "varchar(70)", unicode: false, maxLength: 70, nullable: true),
                    MSG = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_APP_MSG", x => x.ID_APP_MSG);
                });

            migrationBuilder.CreateTable(
                name: "AppDebugInfo",
                columns: table => new
                {
                    IdAppDebugInfo = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    StartDT = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    StopDT = table.Column<DateTime>(type: "datetime", nullable: true),
                    UserId = table.Column<int>(type: "int", nullable: true),
                    AppName = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    AppVer = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    StationName = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    StationIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__AppDebug__B90DFD47C929DA0B", x => x.IdAppDebugInfo);
                });

            migrationBuilder.CreateTable(
                name: "AppDebugInfoItem",
                columns: table => new
                {
                    IdAppDebugInfoItem = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    AppDebugInfoId = table.Column<int>(type: "int", nullable: true),
                    AppDebugInfoObjectId = table.Column<int>(type: "int", nullable: true),
                    DT = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    BaseTC = table.Column<long>(type: "bigint", nullable: true),
                    LastTC = table.Column<long>(type: "bigint", nullable: true),
                    LastTCDB = table.Column<long>(type: "bigint", nullable: true),
                    CurrentTC = table.Column<long>(type: "bigint", nullable: true),
                    BTC = table.Column<long>(type: "bigint", nullable: true, computedColumnSql: "([CurrentTC]-[BaseTC])", stored: false),
                    CTC = table.Column<long>(type: "bigint", nullable: true, computedColumnSql: "([CurrentTC]-[LastTC])", stored: false),
                    CTCDB = table.Column<long>(type: "bigint", nullable: true, computedColumnSql: "([CurrentTC]-[LastTCDB])", stored: false),
                    Level = table.Column<int>(type: "int", nullable: true),
                    Info = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__AppDebug__33F4A40FB79CF7FA", x => x.IdAppDebugInfoItem);
                });

            migrationBuilder.CreateTable(
                name: "AppDebugInfoObject",
                columns: table => new
                {
                    IdAppDebugInfoObject = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    AppDebugInfoId = table.Column<int>(type: "int", nullable: true),
                    StartDT = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    StopDT = table.Column<DateTime>(type: "datetime", nullable: true),
                    ObjectClass = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    Info = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__AppDebug__19ED7A6D3C421655", x => x.IdAppDebugInfoObject);
                });

            migrationBuilder.CreateTable(
                name: "Application",
                schema: "app",
                columns: table => new
                {
                    ApplicationId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Code = table.Column<string>(type: "nvarchar(20)", maxLength: 20, nullable: false),
                    Description = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CurrentApplicationVersionId = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Application", x => x.ApplicationId);
                });

            migrationBuilder.CreateTable(
                name: "ApplicationContext",
                schema: "app",
                columns: table => new
                {
                    ApplicationContextId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Code = table.Column<string>(type: "nvarchar(20)", maxLength: 20, nullable: false),
                    Description = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ApplicationContext", x => x.ApplicationContextId);
                });

            migrationBuilder.CreateTable(
                name: "ApplicationModule",
                schema: "app",
                columns: table => new
                {
                    ApplicationModuleId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Code = table.Column<string>(type: "nvarchar(20)", maxLength: 20, nullable: false),
                    Description = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ApplicationModule", x => x.ApplicationModuleId);
                });

            migrationBuilder.CreateTable(
                name: "ApplicationProfile",
                schema: "app",
                columns: table => new
                {
                    ApplicationProfileId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: false),
                    Description = table.Column<string>(type: "nvarchar(500)", maxLength: 500, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ApplicationProfile", x => x.ApplicationProfileId);
                });

            migrationBuilder.CreateTable(
                name: "ApplicationSettings",
                schema: "app",
                columns: table => new
                {
                    ApplicationSettingsId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ApplicationProfileId = table.Column<int>(type: "int", nullable: false),
                    HideRibbon = table.Column<int>(type: "int", nullable: true),
                    HideRibbonTabs = table.Column<int>(type: "int", nullable: true),
                    HideNavBar = table.Column<int>(type: "int", nullable: true),
                    HideActionBar = table.Column<int>(type: "int", nullable: true),
                    HideActionPanel = table.Column<int>(type: "int", nullable: true),
                    HideTabs = table.Column<int>(type: "int", nullable: true),
                    HideDesktopMeters = table.Column<int>(type: "int", nullable: true),
                    HideToolDescription = table.Column<int>(type: "int", nullable: true),
                    HideToolHeader = table.Column<int>(type: "int", nullable: true),
                    HideStatusBar = table.Column<int>(type: "int", nullable: true),
                    StatusBarPanels = table.Column<int>(type: "int", nullable: true),
                    FullScreen = table.Column<int>(type: "int", nullable: true),
                    BorderStyle = table.Column<int>(type: "int", nullable: true),
                    DesktopItemClickToExecute = table.Column<int>(type: "int", nullable: true),
                    ActionPanelBevels = table.Column<int>(type: "int", nullable: true),
                    ActionPanelBorder = table.Column<int>(type: "int", nullable: true),
                    BoxBorder = table.Column<int>(type: "int", nullable: true),
                    ActivateExistingTool = table.Column<int>(type: "int", nullable: true),
                    AskBeforeCreateTool = table.Column<int>(type: "int", nullable: true),
                    ClientWidth = table.Column<int>(type: "int", nullable: true),
                    ClientHeight = table.Column<int>(type: "int", nullable: true),
                    DesktopElementFontSize = table.Column<int>(type: "int", nullable: true),
                    DesktopElementLineCount = table.Column<int>(type: "int", nullable: true),
                    DesktopElementWidth = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ApplicationSettings", x => x.ApplicationSettingsId);
                });

            migrationBuilder.CreateTable(
                name: "ApplicationStatistic",
                schema: "app",
                columns: table => new
                {
                    ApplicationStatisticId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    NavBarItemId = table.Column<int>(type: "int", nullable: true),
                    ToolId = table.Column<int>(type: "int", nullable: true),
                    UserId = table.Column<int>(type: "int", nullable: true),
                    Counter = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ApplicationStatistic", x => x.ApplicationStatisticId);
                });

            migrationBuilder.CreateTable(
                name: "AppLocation",
                schema: "app",
                columns: table => new
                {
                    AppLocationId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: false),
                    Hint = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AppLocation", x => x.AppLocationId);
                });

            migrationBuilder.CreateTable(
                name: "AppLoginContext",
                columns: table => new
                {
                    AppLoginContextId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Version = table.Column<int>(type: "int", nullable: true),
                    Data = table.Column<string>(type: "varchar(max)", unicode: false, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AppLoginContext", x => x.AppLoginContextId);
                });

            migrationBuilder.CreateTable(
                name: "AppNewActions",
                columns: table => new
                {
                    idAppNewActions = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    windowClassName = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    actionName = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    dtCreate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__AppNewAc__7D7496D30E260103", x => x.idAppNewActions);
                });

            migrationBuilder.CreateTable(
                name: "AppSchema",
                columns: table => new
                {
                    AppSchemaId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Description = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    SchemaId = table.Column<int>(type: "int", nullable: true),
                    System = table.Column<int>(type: "int", nullable: true),
                    Visible = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AppSchema", x => x.AppSchemaId);
                });

            migrationBuilder.CreateTable(
                name: "AppSchema",
                schema: "app",
                columns: table => new
                {
                    AppSchemaId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Description = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    SchemaId = table.Column<int>(type: "int", nullable: true),
                    System = table.Column<int>(type: "int", nullable: true),
                    Visible = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AppSchema", x => x.AppSchemaId);
                });

            migrationBuilder.CreateTable(
                name: "AppSchemaDetails",
                columns: table => new
                {
                    AppSchemaDetailsId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    AppSchemaId = table.Column<int>(type: "int", nullable: false),
                    AppSchemaGroupId = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AppSchemaDetails", x => x.AppSchemaDetailsId);
                });

            migrationBuilder.CreateTable(
                name: "AppSchemaDetails",
                schema: "app",
                columns: table => new
                {
                    AppSchemaDetailsId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    AppSchemaId = table.Column<int>(type: "int", nullable: false),
                    AppSchemaGroupId = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AppSchemaDetails", x => x.AppSchemaDetailsId);
                });

            migrationBuilder.CreateTable(
                name: "AppSchemaGroup",
                columns: table => new
                {
                    AppSchemaGroupId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    GroupName = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: false),
                    GroupDescription = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    Prefix = table.Column<string>(type: "nvarchar(10)", maxLength: 10, nullable: true),
                    System = table.Column<int>(type: "int", nullable: true),
                    Visible = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AppSchemaGroup", x => x.AppSchemaGroupId);
                });

            migrationBuilder.CreateTable(
                name: "AppSchemaGroup",
                schema: "app",
                columns: table => new
                {
                    AppSchemaGroupId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    GroupName = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: false),
                    GroupDescription = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    Prefix = table.Column<string>(type: "nvarchar(10)", maxLength: 10, nullable: true),
                    System = table.Column<int>(type: "int", nullable: true),
                    Visible = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AppSchemaGroup", x => x.AppSchemaGroupId);
                });

            migrationBuilder.CreateTable(
                name: "AppSkipCreateIndex",
                columns: table => new
                {
                    ID_AppSkipCreateIndex = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    indexName = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    dtCreate = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__AppSkipC__D53AF5539EC6F85A", x => x.ID_AppSkipCreateIndex);
                });

            migrationBuilder.CreateTable(
                name: "ArchiveDatabase",
                columns: table => new
                {
                    ID_ArchiveDatabase = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ArchiveDT = table.Column<DateTime>(type: "datetime", nullable: true),
                    ConnectionString = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ArchiveDatabase", x => x.ID_ArchiveDatabase);
                });

            migrationBuilder.CreateTable(
                name: "Area",
                schema: "geo",
                columns: table => new
                {
                    AreaId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ShapeTypeId = table.Column<int>(type: "int", nullable: true),
                    Name = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    Description = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    Shape = table.Column<string>(type: "xml", nullable: true),
                    Status = table.Column<int>(type: "int", nullable: true, defaultValueSql: "((0))"),
                    Color = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    CreateUserId = table.Column<int>(type: "int", nullable: true),
                    CreateTime = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    ModifyUserId = table.Column<int>(type: "int", nullable: true),
                    ModifyTime = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Area", x => x.AreaId);
                });

            migrationBuilder.CreateTable(
                name: "AttachmentToJoin",
                schema: "yMASZ",
                columns: table => new
                {
                    ID = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_REC = table.Column<int>(type: "int", nullable: true),
                    OBIEKT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    INSERT_DATE = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    DONE_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    DONE = table.Column<byte>(type: "tinyint", nullable: true, defaultValueSql: "((0))"),
                    ID_ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    RODZAJ = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "Auction",
                columns: table => new
                {
                    AuctionId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ObjectId = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    RecordId = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    Type = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    Currency = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: false, defaultValueSql: "('')"),
                    StartValue = table.Column<double>(type: "float", nullable: false, defaultValueSql: "('')"),
                    BuyNowValue = table.Column<double>(type: "float", nullable: true),
                    BiddingStep = table.Column<double>(type: "float", nullable: false, defaultValueSql: "('')"),
                    ValidFrom = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "('')"),
                    ValidTo = table.Column<DateTime>(type: "datetime", nullable: true),
                    Canceled = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    Descriptions = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Auction", x => x.AuctionId);
                });

            migrationBuilder.CreateTable(
                name: "AuctionHistory",
                columns: table => new
                {
                    AuctionHistoryId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    AuctionId = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    OfferDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "('')"),
                    Value = table.Column<double>(type: "float", nullable: false, defaultValueSql: "('')"),
                    CarrierId = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    UserId = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    Accepted = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    Canceled = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    BuyNow = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    Descriptions = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AuctionHistory", x => x.AuctionHistoryId);
                });

            migrationBuilder.CreateTable(
                name: "AUTO_POZ_FAKTUR",
                columns: table => new
                {
                    ID_AUTO_POZ_FAKTUR = table.Column<int>(type: "int", nullable: false),
                    ZB = table.Column<int>(type: "int", nullable: true),
                    RODZ_FV = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    TYP_FV = table.Column<int>(type: "int", nullable: true),
                    ODC = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    POZYCJA_ID = table.Column<int>(type: "int", nullable: true),
                    POZYCJA = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    VAT_ID = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    VAT = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AUTO_POZ_FAKTUR", x => x.ID_AUTO_POZ_FAKTUR);
                });

            migrationBuilder.CreateTable(
                name: "AUTO_POZ_FAKTUR_2",
                columns: table => new
                {
                    ID_AUTO_POZ_FAKTUR_2 = table.Column<int>(type: "int", nullable: false),
                    RODZ_PRZYCHODOW = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    KIERUNEK = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    RODZ_TRANSP = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    KLIENT = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    ODCINEK = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    KWOTA_WG = table.Column<string>(type: "varchar(6)", unicode: false, maxLength: 6, nullable: true),
                    POZYCJA_ID = table.Column<int>(type: "int", nullable: true),
                    POZYCJA = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    POZYCJA_ZB1_ID = table.Column<int>(type: "int", nullable: true),
                    POZYCJA_ZB1 = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    POZYCJA_ZB2_ID = table.Column<int>(type: "int", nullable: true),
                    POZYCJA_ZB2 = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    VAT_ID = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    VAT = table.Column<double>(type: "float", nullable: true),
                    KONTO = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AUTO_POZ_FAKTUR_2", x => x.ID_AUTO_POZ_FAKTUR_2);
                });

            migrationBuilder.CreateTable(
                name: "AUTORYZACJE_PRAWA",
                columns: table => new
                {
                    ID_AUTORYZACJE_PRAWA = table.Column<int>(type: "int", nullable: false),
                    SOURCE_ID = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: false, comment: "Kod źródła wykonania"),
                    OPIS = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true, comment: "Opis zdarzenia"),
                    KTO_MOZE = table.Column<string>(type: "text", nullable: true, comment: "Kto może autoryzować"),
                    CRC = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: false, comment: "Kod CRC do weryfikacji poprawnosci wpisu"),
                    BEZ_POTW = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy bez interakcji gdy uprawniony ")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AUTORYZACJE_PRAWA", x => x.ID_AUTORYZACJE_PRAWA);
                },
                comment: "Prawa użytkowników do autoryzacji dodatkowych");

            migrationBuilder.CreateTable(
                name: "AWIZACJE",
                columns: table => new
                {
                    ID_AWIZACJE = table.Column<int>(type: "int", nullable: false),
                    NR_AWIZACJI = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_AWIZACJI_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    NR_AWIZACJI_ROK = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    NR_AWIZACJI_MIES = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "('')"),
                    OBJ_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    REC_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    WAGA = table.Column<double>(type: "float", nullable: true),
                    OBJ = table.Column<double>(type: "float", nullable: true),
                    ILOSC = table.Column<double>(type: "float", nullable: true),
                    ILOSC_PRZESYLEK = table.Column<double>(type: "float", nullable: true),
                    MIEJSCA_PAL = table.Column<double>(type: "float", nullable: true),
                    ILOSC_PAL = table.Column<double>(type: "float", nullable: true),
                    ILOSC_PAC = table.Column<double>(type: "float", nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    PRZEWOZNIK_ID = table.Column<int>(type: "int", nullable: true),
                    PRZEWOZNIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SAMOCHOD_ID = table.Column<int>(type: "int", nullable: true),
                    SAMOCHOD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NACZEPA_ID = table.Column<int>(type: "int", nullable: true),
                    NACZEPA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KIEROWCA_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KIEROWCA_TEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    MIEJSCE_DOSTAWY_ID = table.Column<int>(type: "int", nullable: true),
                    LISTY_LINIOWE_ZA_WY_ID = table.Column<int>(type: "int", nullable: true),
                    ODBIORCA_ID = table.Column<int>(type: "int", nullable: true),
                    ODBIORCA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DATA_DOSTAWY_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_DOSTAWY_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    STAN = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    STATUS = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    STATUS_MAIL = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    STATUS_EMISJA = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AWIZACJE", x => x.ID_AWIZACJE);
                });

            migrationBuilder.CreateTable(
                name: "AWIZACJE_POJAZDOW",
                columns: table => new
                {
                    ID_AWIZACJE_POJAZDOW = table.Column<int>(type: "int", nullable: false),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    KRAJ = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ADRES = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    GEO_LON = table.Column<double>(type: "float", nullable: true),
                    GEO_LAT = table.Column<double>(type: "float", nullable: true),
                    PRZEWOZNIK_ID = table.Column<int>(type: "int", nullable: true),
                    PRZEWOZNIK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    PRZEWOZNIK_TEL1 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PRZEWOZNIK_TEL2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SAMOCHOD_ID = table.Column<int>(type: "int", nullable: true),
                    SAMOCHOD = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    NACZEPA_ID = table.Column<int>(type: "int", nullable: true),
                    NACZEPA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    STAN = table.Column<int>(type: "int", nullable: true),
                    PREF_KIER = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AWIZACJE_POJAZDOW", x => x.ID_AWIZACJE_POJAZDOW);
                });

            migrationBuilder.CreateTable(
                name: "AWIZACJE_POJAZDOW_ODL",
                columns: table => new
                {
                    ID_AWIZACJE_POJAZDOW_ODL = table.Column<int>(type: "int", nullable: false),
                    AWIZACJE_POJAZDOW_ID = table.Column<int>(type: "int", nullable: true),
                    ID_SESJI = table.Column<int>(type: "int", nullable: true),
                    ODLEGLOSC = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AWIZACJE_POJAZDOW_ODL", x => x.ID_AWIZACJE_POJAZDOW_ODL);
                });

            migrationBuilder.CreateTable(
                name: "AWIZACJE_POZ",
                columns: table => new
                {
                    ID_AWIZACJE_POZ = table.Column<int>(type: "int", nullable: false),
                    AWIZACJE_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    LP = table.Column<int>(type: "int", nullable: true),
                    PRZESYLKI_ID = table.Column<int>(type: "int", nullable: true),
                    WAGA = table.Column<double>(type: "float", nullable: true),
                    OBJ = table.Column<double>(type: "float", nullable: true),
                    ILOSC = table.Column<double>(type: "float", nullable: true),
                    MIEJSCA_PAL = table.Column<double>(type: "float", nullable: true),
                    ILOSC_PAL = table.Column<double>(type: "float", nullable: true),
                    ILOSC_PAC = table.Column<double>(type: "float", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AWIZACJE_POZ", x => x.ID_AWIZACJE_POZ);
                });

            migrationBuilder.CreateTable(
                name: "BANKI",
                columns: table => new
                {
                    ID_BANKI = table.Column<int>(type: "int", nullable: false),
                    SYMBOL = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    NAZWA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KONTO = table.Column<string>(type: "varchar(36)", unicode: false, maxLength: 36, nullable: true),
                    BANK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KONTO_KSIEG = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    WYROZNIK = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_BANKI", x => x.ID_BANKI);
                });

            migrationBuilder.CreateTable(
                name: "bcp_zal",
                columns: table => new
                {
                    ID_ZALACZNIKI = table.Column<int>(type: "int", nullable: false),
                    OBIEKT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OBIEKT_ID_FLD_NAME = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OBIEKT_ID = table.Column<int>(type: "int", nullable: true),
                    OBIEKT2_ID = table.Column<int>(type: "int", nullable: true),
                    RODZAJ = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    STATUS = table.Column<int>(type: "int", nullable: true),
                    ORG_KATALOG = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    ORG_NAZWA_PLIKU = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WEWN_KATALOG = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WEWN_NAZWA_PLIKU = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    ROZSZEZENIE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    UZYTKOWNIK = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    EDYCJA = table.Column<int>(type: "int", nullable: true),
                    HTTP = table.Column<int>(type: "int", nullable: true),
                    HTTP_ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    IS_EXPORTED = table.Column<int>(type: "int", nullable: true),
                    IS_EXPORTED_DT = table.Column<DateTime>(type: "datetime", nullable: true),
                    EXT_SCAN_DT = table.Column<DateTime>(type: "datetime", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    CR_FORMATKA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DT_MODIFY = table.Column<DateTime>(type: "datetime", nullable: true),
                    NR_PUDLA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FILELOCATION = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "BD_UPGRADE",
                columns: table => new
                {
                    APPNAME = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: false),
                    VERSION = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: false, defaultValueSql: "(' ')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_BD_UPGRADE", x => x.APPNAME);
                });

            migrationBuilder.CreateTable(
                name: "BILANS_OPAK_LOK",
                columns: table => new
                {
                    ID_BILANS_OPAK_LOK = table.Column<int>(type: "int", nullable: false),
                    STAN = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: false, defaultValueSql: "('')"),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "('')"),
                    GODZ = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "('')"),
                    DATA_ZAMKNIECIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_ZAMKNIECIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    FTL = table.Column<int>(type: "int", nullable: true),
                    DATA_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_OD = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_BILANS_OPAK_LOK", x => x.ID_BILANS_OPAK_LOK);
                });

            migrationBuilder.CreateTable(
                name: "BILANS_OPAK_LOK_POZ",
                columns: table => new
                {
                    ID_BILANS_OPAK_LOK_POZ = table.Column<int>(type: "int", nullable: false),
                    BILANS_OPAK_LOK_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    LOKALIZACJA_Z = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: false, defaultValueSql: "('')"),
                    LOKALIZACJA_DO = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: false, defaultValueSql: "('')"),
                    KOD_OPAK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: false, defaultValueSql: "('')"),
                    ILOSC = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ILOSC_Z_PRZENIESIENIA = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ILOSC_SKORYGOWANA = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ILOSC_ROZLICZONA = table.Column<int>(type: "int", nullable: true),
                    ILOSC_NA_PP = table.Column<int>(type: "int", nullable: true),
                    ILOSC_DO_ROZLICZENIA = table.Column<int>(type: "int", nullable: true),
                    ZRODLO = table.Column<int>(type: "int", nullable: true),
                    PRZYCZYNA_KOR = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true),
                    OPIS_DOD = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_BILANS_OPAK_LOK_POZ", x => x.ID_BILANS_OPAK_LOK_POZ);
                });

            migrationBuilder.CreateTable(
                name: "BILINGI_OPER",
                columns: table => new
                {
                    ID_BILINGI_OPER = table.Column<int>(type: "int", nullable: false),
                    SYMBOL = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Symbol operacji"),
                    OPIS = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Opis operacji"),
                    KONTRAHENT_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kontrahenta - tab: KONTRAHENCI"),
                    KONTRAHENT = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Symbol kontrahenta"),
                    WCZYTUJ_VAT = table.Column<int>(type: "int", nullable: true, comment: "Znacznik, czy wczytywać kwote VAT-u"),
                    DOMYSLNY_VAT = table.Column<double>(type: "float", nullable: true, comment: "Domyślna stawka VAT"),
                    DOMYSLNY_RODZ_KOSZTOW = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Domyślny rodzaj kosztu")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_BILINGI_OPER", x => x.ID_BILINGI_OPER);
                },
                comment: "Rodzaje operacji w plikach bilingowych GSM");

            migrationBuilder.CreateTable(
                name: "BILINGI_PLIK",
                columns: table => new
                {
                    ID_BILINGI_PLIK = table.Column<int>(type: "int", nullable: false),
                    DATA_WCZYTANIA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data wczytania pliku z bilingiem"),
                    CZAS_WCZYTANIA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina wczytania pliku z bilingiem"),
                    NAZWA_PLIKU = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Nazwa wczytanego pliku"),
                    UZYTKOWNIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Kto wczytał"),
                    ILOSC_OPERACJI = table.Column<int>(type: "int", nullable: true, comment: "Ilość operacji w pliku"),
                    TYP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Typ pliku"),
                    UWAGI = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Dowolne uwagi do pliku"),
                    F_FAKTURA_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do faktury kosztowej - tab: FAKTURY"),
                    F_FAKTURA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Numer faktury kosztowej"),
                    F_KONTRAH_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kontrahenta z faktury - tab: KONTRAHENCI"),
                    F_KONTRAH = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Symbol kontrahenta"),
                    F_DATA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data z faktury kosztowej"),
                    F_WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Waluta z faktury kosztowej"),
                    F_NETTO = table.Column<double>(type: "float", nullable: true, comment: "Kwota netto z faktury kosztowej"),
                    F_VAT = table.Column<double>(type: "float", nullable: true, comment: "Kwota VAT z faktury kosztowej"),
                    F_BRUTTO = table.Column<double>(type: "float", nullable: true, comment: "Kwota brutto z faktury kosztowej"),
                    F_NETTO_PLN = table.Column<double>(type: "float", nullable: true, comment: "Kwota netto w PLN z faktury kosztowej"),
                    F_VAT_PLN = table.Column<double>(type: "float", nullable: true, comment: "Kwota VAT w PLN z faktury kosztowej"),
                    F_BRUTTO_PLN = table.Column<double>(type: "float", nullable: true, comment: "Kwota brutto w PLN z faktury kosztowej"),
                    SUMA_ILOSCI = table.Column<double>(type: "float", nullable: true, comment: "Łączna ilość w pliku"),
                    SUMA_POZ_NETTO = table.Column<double>(type: "float", nullable: true, comment: "Łączna wartość netto w pliku"),
                    SUMA_POZ_VAT = table.Column<double>(type: "float", nullable: true, comment: "Łączna wartość VAT w pliku"),
                    SUMA_POZ_BRUTTO = table.Column<double>(type: "float", nullable: true, comment: "Łączna wartość brutto w pliku"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja wczytania pliku"),
                    FV_TR = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy suma z FV = suma z transakcji"),
                    F_RABAT_NETTO_PLN = table.Column<double>(type: "float", nullable: true, comment: "Rabat z faktury - netto w PLN")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_BILINGI_PLIK", x => x.ID_BILINGI_PLIK);
                },
                comment: "Nagłówek pliku z operacjami GSM");

            migrationBuilder.CreateTable(
                name: "BILINGI_PLIK_POZ",
                columns: table => new
                {
                    ID_BILINGI_PLIK_POZ = table.Column<int>(type: "int", nullable: false),
                    BILINGI_PLIK_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do nagłówka pliku - tab: BILINGI_PLIK"),
                    DATA_TRANSAKCJI = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data transakcji"),
                    CZAS_TRANSAKCJI = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godz. transakcji"),
                    ID_TRANSAKCJI = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Identyfikator transakcji"),
                    OPIS_TRANSAKCJI = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Opis transakcji"),
                    SIM_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do karty SIM - tab: SIM"),
                    SIM = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer karty SIM - numer telefonu"),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do pojazdu - tab: TABOR"),
                    TABOR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer rejestracyjny pojazdu"),
                    WYJAZD_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do polecenia wyjazdu - tab: WYJAZDY"),
                    WYJAZD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer polecenia wyjazdu"),
                    DELEGACJA_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do delegacji pracownika - tab: DELEGACJE"),
                    DELEGACJA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer delegacji pracownika"),
                    RODZAJ_TRANS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Rodzaj transakcji"),
                    RODZ_KOSZTOW = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Rodzaj kosztów"),
                    KRAJ_KOSZTOW = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "Kraj kosztów"),
                    ILOSC = table.Column<double>(type: "float", nullable: true, comment: "Ilość transakcji"),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Waluta transakcji"),
                    KWOTA_NETTO = table.Column<double>(type: "float", nullable: true, comment: "Kwota netto transakcji"),
                    STAWKA_VAT = table.Column<double>(type: "float", nullable: true, comment: "Stawka VAT dla transakcji"),
                    KWOTA_VAT = table.Column<double>(type: "float", nullable: true, comment: "Kwota VAT transakcji"),
                    KWOTA_BRUTTO = table.Column<double>(type: "float", nullable: true, comment: "Kwota brutto transakcji"),
                    STATUS = table.Column<int>(type: "int", nullable: true, comment: "Status transakcji"),
                    FAKTURA_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do faktury dekretujacej - tab: FAKTURY"),
                    FAKTURA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer faktury dekretującej"),
                    DEKRET = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer dekretu"),
                    TABOR_NR_B = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer boczny pojazdu"),
                    ZLECENIA_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do zlecenia - tab: ZLECENIA"),
                    ZLECENIA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer zlecenia"),
                    LISTY_LINIOWE_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do trasy - tab: LISTY_LINIOWE"),
                    LISTY_LINIOWE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer trasy"),
                    POLACZENIE_WYCH = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Numer telefonu na jaki dzwoniopno"),
                    PRACOWNIK_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do pracownika - tab: KIEROWCY"),
                    PRACOWNIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Nazwisko i imię pracownika"),
                    TYP_DANYCH = table.Column<int>(type: "int", nullable: true, comment: "0 - połączenia, 1 - abonament, 2 - inne")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_BILINGI_PLIK_POZ", x => x.ID_BILINGI_PLIK_POZ);
                },
                comment: "Pozycje pliku z operacjami GSM");

            migrationBuilder.CreateTable(
                name: "BILINGI_TYPY_OPER",
                columns: table => new
                {
                    ID_BILINGI_TYPY_OPER = table.Column<int>(type: "int", nullable: false),
                    BILINGI_OPER_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do operacji - tab: BILINGI_OPER"),
                    KOD_TYPU_OPERACJI = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Kod typu operacji"),
                    RODZ_KOSZTOW = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true, comment: "Rodzaj kosztów dla operacji"),
                    RODZ_KOSZTOW_EXT = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "Dodatkowe opcje rodzaju kosztów dla operacji")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_BILINGI_TYPY_OPER", x => x.ID_BILINGI_TYPY_OPER);
                },
                comment: "Typy operacji w plikach bilingowych GSM");

            migrationBuilder.CreateTable(
                name: "BLEDY_OBIEKTOW",
                columns: table => new
                {
                    ID_BLEDY_OBIEKTOW = table.Column<int>(type: "int", nullable: false),
                    OBIEKT_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    OBIEKT_TYP = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: false),
                    ZDARZENIE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: false),
                    KIEDY = table.Column<DateTime>(type: "datetime", nullable: false),
                    OPIS = table.Column<string>(type: "text", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_BLEDY_OBIEKTOW", x => x.ID_BLEDY_OBIEKTOW);
                });

            migrationBuilder.CreateTable(
                name: "BLOKADY",
                columns: table => new
                {
                    ID_BLOKADY = table.Column<int>(type: "int", nullable: false),
                    BLOKADY_TYPY_ID = table.Column<int>(type: "int", nullable: false, comment: "Relacja do BLOKADY_TYPY"),
                    TABELA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: false, comment: "Nazwa tabeli w bazie której dotyczy blokada"),
                    REC_ID = table.Column<int>(type: "int", nullable: false, comment: "Relacja do obiektu którego dotyczy blokada"),
                    REC_OPIS = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true, comment: "Opis blokowanego rekordy, np symbol kierowcy, symbol kontrahenta etc"),
                    DOD_OPIS = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true, comment: "Dodatkowy opis blokady"),
                    BLOK_LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja zakładająca blokadę"),
                    BLOK_DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dział zakładający blokadę"),
                    BLOK_UZYTKOWNIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: false, comment: "Użytkownik zakładajacy blokadę"),
                    BLOK_UZYTKOWNIK_ID = table.Column<int>(type: "int", nullable: false, comment: "ID Użytkownika"),
                    BLOK_DT = table.Column<DateTime>(type: "datetime", nullable: false, comment: "DT założenia blokady"),
                    ODBLOK_LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja zdejmująca blokadę"),
                    ODBLOK_DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dział zdejmujący blokadę"),
                    ODBLOK_UZYTKOWNIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Użytkownik zdejmujący blokadę"),
                    ODBLOK_UZYTKOWNIK_ID = table.Column<int>(type: "int", nullable: true, comment: "ID Użytkownika"),
                    ODBLOK_DT = table.Column<DateTime>(type: "datetime", nullable: true, comment: "DT zdjęcia blokady"),
                    OBJ_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Typ obiektu którego dotyczy blokada")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_BLOKADY", x => x.ID_BLOKADY);
                },
                comment: "Blokady obiektów systemowych (kontrahenci, kierowcy etc)");

            migrationBuilder.CreateTable(
                name: "BLOKADY_LOG",
                columns: table => new
                {
                    ID_BLOKADY_LOG = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BLOKADY_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Relacja do BLOKADY"),
                    BLOKADY_TYPY_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do BLOKADY_TYPY"),
                    BLOKADY_PK_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do BLOKADY_PK"),
                    TYP_LOGU = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Typ logu"),
                    LOG_DT = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "('')", comment: "DT zdarzenia"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja"),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dział"),
                    UZYTKOWNIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')", comment: "Użytkownik"),
                    UZYTKOWNIK_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "ID Użytkownika"),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: true, comment: "ID kontrahenta"),
                    OBJ1_ID = table.Column<int>(type: "int", nullable: true, comment: "Typ obiektu 1"),
                    REC1_ID = table.Column<int>(type: "int", nullable: true, comment: "ID obiektu 1"),
                    OBJ2_ID = table.Column<int>(type: "int", nullable: true, comment: "Typ obiektu 2"),
                    REC2_ID = table.Column<int>(type: "int", nullable: true, comment: "ID obiektu 2"),
                    INFO = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true, comment: "Info")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_BLOKADY_LOG", x => x.ID_BLOKADY_LOG);
                },
                comment: "Blokady obiektów - logi");

            migrationBuilder.CreateTable(
                name: "BLOKADY_PK",
                columns: table => new
                {
                    ID_BLOKADY_PK = table.Column<int>(type: "int", nullable: false),
                    NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: false, defaultValueSql: "('')"),
                    OPIS = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: false, defaultValueSql: "('')"),
                    PROCEDURA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    GRUPA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZATW_ZB = table.Column<int>(type: "int", nullable: true),
                    BLOKADY_TYPY_ID = table.Column<int>(type: "int", nullable: true),
                    PROCEDURA_DOMYSLNA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_BLOKADY_PK", x => x.ID_BLOKADY_PK);
                },
                comment: "Blokady obiektów systemowych - punkty kontrolne");

            migrationBuilder.CreateTable(
                name: "BLOKADY_TYPY",
                columns: table => new
                {
                    ID_BLOKADY_TYPY = table.Column<int>(type: "int", nullable: false),
                    KOD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: false, comment: "Kod blokady"),
                    AKTYWNY = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('1')", comment: "Czy aktywny/widoczny"),
                    SYSTEMOWY = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Czy systemowy"),
                    OPIS = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true, comment: "Opis"),
                    DictionaryId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TextId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_BLOKADY_TYPY", x => x.ID_BLOKADY_TYPY);
                },
                comment: "Typy blokad obiektów systemowych");

            migrationBuilder.CreateTable(
                name: "BLOKADY_TYPY_PRAWA",
                columns: table => new
                {
                    ID_BLOKADY_TYPY_PRAWA = table.Column<int>(type: "int", nullable: false),
                    BLOKADY_TYPY_ID = table.Column<int>(type: "int", nullable: false, comment: "Relacja do BLOKADY_TYPY"),
                    UZYTKOWNIK_ID = table.Column<int>(type: "int", nullable: false, comment: "Relacja do użytkownika - tab: UZYTKOWNIK"),
                    MOZE_ZALOZYC = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Flaga, czy ma prawo założyć"),
                    MOZE_ZDJAC = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Flaga, czy ma prawo zdjąć"),
                    MOZE_PUSCIC = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Flaga, czy ma prawo przepuścić"),
                    CRC = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: false, comment: "Kod CRC do weryfikacji poprawnosci wpisu")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_BLOKADY_TYPY_PRAWA", x => x.ID_BLOKADY_TYPY_PRAWA);
                },
                comment: "Prawa użytkowników do typów blokad obiektów systemowych");

            migrationBuilder.CreateTable(
                name: "BoxObject",
                columns: table => new
                {
                    BoxObjectId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BoxClass = table.Column<string>(type: "nvarchar(128)", maxLength: 128, nullable: false),
                    ObjectId = table.Column<int>(type: "int", nullable: true),
                    Analysis = table.Column<int>(type: "int", nullable: true),
                    History = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_BoxObject", x => x.BoxObjectId);
                });

            migrationBuilder.CreateTable(
                name: "BOXSETTINGS",
                columns: table => new
                {
                    ID_BOXSETTINGS = table.Column<int>(type: "int", nullable: false),
                    BOX_CLASS = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "klasa okna"),
                    BOX_NAME = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "nazwa okna"),
                    BOX_TYPE = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "typ okna"),
                    BOX_DESC = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "opis okna"),
                    CTRL_CLASS = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "klasa kontrolki"),
                    CTRL_NAME = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "nazwa kontrolki"),
                    CTRL_DESC = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "opis kontrolki"),
                    FIELDNAME = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: true, comment: "nazwa pola w tabeli bazy danych"),
                    TABLENAME = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: true, comment: "nazwa tabeli w bazie danych"),
                    ZERO_EQ_EMPTY = table.Column<short>(type: "smallint", nullable: true, comment: "wartości \"0.00\", \"00:00\" traktuj jako puste"),
                    FIELDTYPE = table.Column<short>(type: "smallint", nullable: true, comment: "typ pola (wartości jak w TFieldType)"),
                    VALUEMIN = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "wartość maksymalna"),
                    VALUEMAX = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "wartość minimalna"),
                    CHARCASE = table.Column<short>(type: "smallint", nullable: true, comment: "0-default /1-normal /2-upper /3-lower"),
                    VALIDSQL = table.Column<string>(type: "text", nullable: true, comment: "zapytanie do walidacji edytowanej wartości"),
                    Notes = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: false, defaultValueSql: "('')", comment: "powód zmiany / informacje dodatkowe")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_BOXSETTINGS", x => x.ID_BOXSETTINGS);
                });

            migrationBuilder.CreateTable(
                name: "BoxSettingsHist",
                columns: table => new
                {
                    ID_BoxSettingsHist = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Action = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: false, defaultValueSql: "('')", comment: "typ zmiany I-insert /U-update /D-delete"),
                    ActionDT = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "('')", comment: "data zmiany"),
                    Id_User = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "id użytkownika dokonującego zmiany"),
                    AppVersion = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: false, defaultValueSql: "('')", comment: "wersja programu"),
                    Id_BoxSettings = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "id głównych ustawień dla kontrolki"),
                    Box_Class = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "klasa okna"),
                    Box_Name = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "nazwa okna"),
                    Box_Type = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "typ okna"),
                    Box_Desc = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "opis okna"),
                    Ctrl_Class = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "klasa kontrolki"),
                    Ctrl_Name = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "nazwa kontrolki"),
                    Ctrl_Desc = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "opis kontrolki"),
                    TableName = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: true, comment: "nazwa tabeli w bazie danych"),
                    FieldName = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: true, comment: "nazwa pola w tabeli bazy danych"),
                    FieldType = table.Column<short>(type: "smallint", nullable: true, comment: "typ pola (wartości jak w TFieldType)"),
                    Zero_Eq_Empty = table.Column<byte>(type: "tinyint", nullable: true, comment: "wartości \"0.00\", \"00:00\" traktuj jako puste"),
                    ValueMin = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "wartość maksymalna"),
                    ValueMax = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "wartość minimalna"),
                    CharCase = table.Column<short>(type: "smallint", nullable: true, comment: "0-default /1-normal /2-upper /3-lower"),
                    ValidSQL = table.Column<string>(type: "text", nullable: true, comment: "zapytanie do walidacji edytowanej wartości"),
                    Notes = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: false, defaultValueSql: "('')", comment: "powód zmiany / informacje dodatkowe")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_BoxSettingsHist", x => x.ID_BoxSettingsHist);
                });

            migrationBuilder.CreateTable(
                name: "BOXSETTINGSUSER",
                columns: table => new
                {
                    ID_BOXSETTINGSUSER = table.Column<int>(type: "int", nullable: false),
                    ID_BOXSETTINGS = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "id głównych ustawień dla kontrolki"),
                    ID_USER = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "id użytkownika"),
                    CTRL_STATE = table.Column<short>(type: "smallint", nullable: true, comment: "0-disable /1-hide /2-required /-2-ust. ogólne (EDYCJA)"),
                    NEWCTRL_STATE = table.Column<short>(type: "smallint", nullable: true, comment: "0-disable /1-hide /2-required /-2-ust. ogólne (NOWY)"),
                    EXTCTRL_STATE = table.Column<short>(type: "smallint", nullable: true, comment: "0-disable /1-hide /2-required /-2-ust. ogólne (INNY)"),
                    ID_PROFILE = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "id profilu"),
                    READONLY = table.Column<short>(type: "smallint", nullable: true, comment: "0/1 - wyłączenie edycji \"ręcznej\" (EDYCJA)"),
                    NEWREADONLY = table.Column<short>(type: "smallint", nullable: true, comment: "0/1 - wyłączenie edycji \"ręcznej\" (NOWY)"),
                    EXTREADONLY = table.Column<short>(type: "smallint", nullable: true, comment: "0/1 - wyłączenie edycji \"ręcznej\" (INNY)")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_BOXSETTINGSUSER", x => x.ID_BOXSETTINGSUSER);
                });

            migrationBuilder.CreateTable(
                name: "BoxSettingsUserHist",
                columns: table => new
                {
                    ID_BoxSettingsUserHist = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Id_BoxSettingsHist = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "id rekordu głównego w tabeli [BoxSettingsHist]"),
                    Id_BoxSettings = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "id głównych ustawień dla kontrolki"),
                    Id_User = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "id użytkownika"),
                    Id_Profile = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "id profilu"),
                    Ctrl_State = table.Column<short>(type: "smallint", nullable: true, comment: "0-disable /1-hide /2-required /-2-ust. ogólne (EDYCJA)"),
                    NewCtrl_State = table.Column<short>(type: "smallint", nullable: true, comment: "0-disable /1-hide /2-required /-2-ust. ogólne (NOWY)"),
                    ExtCtrl_State = table.Column<short>(type: "smallint", nullable: true, comment: "0-disable /1-hide /2-required /-2-ust. ogólne (INNY)"),
                    ReadOnly = table.Column<short>(type: "smallint", nullable: true, comment: "0/1 - wyłączenie edycji \"ręcznej\" (EDYCJA)"),
                    NewReadOnly = table.Column<short>(type: "smallint", nullable: true, comment: "0/1 - wyłączenie edycji \"ręcznej\" (NOWY)"),
                    ExtReadOnly = table.Column<short>(type: "smallint", nullable: true, comment: "0/1 - wyłączenie edycji \"ręcznej\" (INNY)")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_BoxSettingsUserHist", x => x.ID_BoxSettingsUserHist);
                });

            migrationBuilder.CreateTable(
                name: "CarrierData",
                schema: "espeed",
                columns: table => new
                {
                    CarrierDataId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    CarrierId = table.Column<int>(type: "int", nullable: true),
                    Title = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    Description = table.Column<string>(type: "varchar(max)", unicode: false, nullable: true),
                    Type = table.Column<int>(type: "int", nullable: true),
                    Active = table.Column<int>(type: "int", nullable: true),
                    CreateDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ModifyDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Lead = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true),
                    Language = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__CarrierD__F72C56BAF96F2D8B", x => x.CarrierDataId);
                });

            migrationBuilder.CreateTable(
                name: "CarrierDataAttachment",
                schema: "espeed",
                columns: table => new
                {
                    CarrierDataAttachmentId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    CarrierDataId = table.Column<int>(type: "int", nullable: true),
                    Name = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    Attachment = table.Column<byte[]>(type: "varbinary(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_CarrierDataAttachment", x => x.CarrierDataAttachmentId);
                });

            migrationBuilder.CreateTable(
                name: "cc_debug",
                columns: table => new
                {
                    id_cc_debug = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    dt = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__cc_debug__0A9CA0B76F94E3C7", x => x.id_cc_debug);
                });

            migrationBuilder.CreateTable(
                name: "cc_debug_back2",
                columns: table => new
                {
                    id_cc_debug = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    dt = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__cc_debug__0A9CA0B74FF55B23", x => x.id_cc_debug);
                });

            migrationBuilder.CreateTable(
                name: "CC_mSpeed",
                columns: table => new
                {
                    IdCC_mSpeed = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    taskObjId = table.Column<int>(type: "int", nullable: true),
                    taskRecId = table.Column<int>(type: "int", nullable: true),
                    masterRecId = table.Column<int>(type: "int", nullable: true),
                    precision = table.Column<int>(type: "int", nullable: true),
                    polyline = table.Column<string>(type: "varchar(max)", unicode: false, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__CC_mSpee__B73F6B9C628F284D", x => x.IdCC_mSpeed);
                });

            migrationBuilder.CreateTable(
                name: "CENNIKI",
                columns: table => new
                {
                    ID_CENNIKI = table.Column<int>(type: "int", nullable: false),
                    NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa cennika"),
                    FTL = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy dotyczy FTL"),
                    KLIENT_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kontrahenta - tab: KONTRAHENCI"),
                    KLIENT = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Symbol kontrahenta"),
                    TRASA_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do trasy - tab: TRASY"),
                    TRASA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Opis trasy"),
                    DATA_OD = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Ważność cennika od"),
                    DATA_DO = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Ważność cennika do"),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Waluta cennika"),
                    TYP_ID = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "ID typu cennika - pobierane z XML-a"),
                    TYP = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Typ cennika - pobierane z XML-a"),
                    CEL_ID = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "ID celu cennika - pobierane z XML-a"),
                    CEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Cel cennika - pobierane z XML-a"),
                    AUTO_FILL = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy automatycznie wypełniać wartościami"),
                    DEF_COL = table.Column<int>(type: "int", nullable: true, comment: "Definicja - Ilość kolumn"),
                    DEF_ROW = table.Column<int>(type: "int", nullable: true, comment: "Definicja - Ilosć wierszy"),
                    DEF_COL_MEAN = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Definicja - Znaczenie kolumn"),
                    DEF_ROW_MEAN = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Definicja - Znaczenie wierszy"),
                    DEF_COL_INTV = table.Column<int>(type: "int", nullable: true, comment: "Definicja - Interwał wierszy"),
                    DEF_ROW_INTV = table.Column<int>(type: "int", nullable: true, comment: "Definicja - Interwał kolumn"),
                    DEF_COL_START = table.Column<int>(type: "int", nullable: true, comment: "Definicja - Wartosć początkowa dla kolumn"),
                    DEF_ROW_START = table.Column<int>(type: "int", nullable: true, comment: "Definicja - Wartosć początkowa dla wierszy"),
                    DEF_FILL_START = table.Column<double>(type: "float", nullable: true, comment: "Definicja wypełnienia - Wartość początkowa"),
                    DEF_FILL_STEP_X = table.Column<double>(type: "float", nullable: true, comment: "Definicja wypełnienia - Interwał w wierszach"),
                    DEF_FILL_STEP_Y = table.Column<double>(type: "float", nullable: true, comment: "Definicja wypełnienia - Interwał w kolumnach"),
                    DEF_COL_TAB = table.Column<byte[]>(type: "image", nullable: true, comment: "Definicja kolumn - format MemData"),
                    DEF_ROW_TAB = table.Column<byte[]>(type: "image", nullable: true, comment: "Definicja wierszy - format MemData"),
                    TABELA_FRACHTOWA = table.Column<byte[]>(type: "image", nullable: true, comment: "Wypełniona tabela ze stawkami - format MemData"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja"),
                    CALC_TYPE = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true, comment: "Sposób wyliczania ceny: Z, K, W"),
                    KODPOCZT_KRAJ = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy kody pocztowe zawierają symbol kraju"),
                    KODPOCZT_RODZ = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Wg jakiego kodu pocztowego ma się odbywać liczenie: ZLE,NAD,ODB"),
                    PRZEDZIALOWO_X = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy liczyć przedziałowo w wierszach"),
                    PRZEDZIALOWO_Y = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy liczyć przedziałowo w kolumnach"),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dział")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_CENNIKI", x => x.ID_CENNIKI);
                },
                comment: "Definicje cenników standardowych");

            migrationBuilder.CreateTable(
                name: "CENNIKI_PRZELICZNIKI",
                columns: table => new
                {
                    ID_CENNIKI_PRZELICZNIKI = table.Column<int>(type: "int", nullable: false),
                    CENNIKI_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do cennika - tab: CENNIKI"),
                    WARTOSC_Z = table.Column<int>(type: "int", nullable: true, comment: "Wartość wejściowa"),
                    JM_Z = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Jednostka miary wartości wejściowej"),
                    WARTOSC_DO = table.Column<int>(type: "int", nullable: true, comment: "Wartość wyjściowa"),
                    JM_DO = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Jednostka miary wartości wyjściowej")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_CENNIKI_PRZELICZNIKI", x => x.ID_CENNIKI_PRZELICZNIKI);
                },
                comment: "Przeliczniki do cenników standardowych");

            migrationBuilder.CreateTable(
                name: "CENNIKI_SQL",
                columns: table => new
                {
                    ID_CENNIKI_SQL = table.Column<int>(type: "int", nullable: false),
                    NAZWA = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Nazwa cennika"),
                    OPIS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Opis"),
                    FTL = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy cennik FTL"),
                    KLIENT_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kontrahenta - tab: KONTRAHENCI"),
                    KLIENT = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Symbol kontrahenta"),
                    TRASA_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do trasy - tab: TRASY"),
                    TRASA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Opis trasy"),
                    DATA_OD = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Ważność cennika od"),
                    DATA_DO = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Ważność cennika do"),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Waluta cennika"),
                    TYP_ID = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "ID typu cennika - pobierane z XML-a"),
                    TYP = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Typ cennika - pobierane z XML-a"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja"),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dział"),
                    OPIS_EXT = table.Column<byte[]>(type: "image", nullable: true, comment: "Opis rozszerzony"),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true, comment: "Ilość załączników"),
                    CENNIK_USE_TMP = table.Column<int>(type: "int", nullable: true, comment: "Czy cennik używa struktur _TMP"),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    PROCEDURA = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true, comment: "Nazwa procedury skladowanej"),
                    SCHEMAT_NAZWA = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true, comment: "Nazwa schematu"),
                    SCHEMAT_SYMBOL = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true, comment: "Symbol schematu"),
                    WZORZEC = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Flaga okreslajaca czy cennik jest wzorcem"),
                    TYP_CENNIKA = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: false, defaultValueSql: "('0')", comment: "Określenie typu cennika  P - przychod, K koszt, RW - rozliczenie wewnetrzne"),
                    DOTYCZY = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: false, defaultValueSql: "('0')", comment: " P - przesyłka, T - trasa, PM - prom, Z Zlecenie FTL,"),
                    POZIOM = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: false, defaultValueSql: "('0')", comment: " K - kalkulacja, N nagłówek, "),
                    KIERUNEK = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: false, defaultValueSql: "('0')", comment: " P - podjecie, D - dostawa - doręczenie, I - inny, X - podjęcie/ dostawa"),
                    AKTUALIZACJA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: " 0 - aktualizacja trwa, 1 aktualizacja rekodru zakonczona"),
                    NIEAKTYWNY = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: " 0 - cennik aktywny, 1- cennik nieaktywny"),
                    REF_1 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_3 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_4 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_5 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KONFIGURACJA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy cennik KONFIGURACYJNY"),
                    KONTEKSTOWY = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy cennik KONTEKSTOWY")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_CENNIKI_SQL", x => x.ID_CENNIKI_SQL);
                },
                comment: "Definicje cenników SQL (opartych o procedury składowane)");

            migrationBuilder.CreateTable(
                name: "CENNIKI_SQL_ERR",
                columns: table => new
                {
                    ID_CENNIKI_SQL_ERR = table.Column<int>(type: "int", nullable: false),
                    OBIEKT_ID = table.Column<int>(type: "int", nullable: false, comment: "Relacja do obiektu którego bład dotyczy"),
                    OBIEKT_TYP = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: false, comment: "Typ obiektu [P]rzesyłka, [Z]lecenie FTL, [T]rasa, [PR]om"),
                    CENNIKI_SQL_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do nagłówka definicji - tab: CENNIKI_SQL"),
                    KOD = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Kod błedu"),
                    OPIS = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true, comment: "Opis"),
                    WAGA = table.Column<int>(type: "int", nullable: true, comment: "Waga błedu 0-3 - 0 - brak ikonki, 1-3 ikonki zółta, pomarańczowa, czerwona")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_CENNIKI_SQL_ERR", x => x.ID_CENNIKI_SQL_ERR);
                },
                comment: "Błedy z cennika SQL");

            migrationBuilder.CreateTable(
                name: "CENNIKI_SQL_POZ",
                columns: table => new
                {
                    ID_CENNIKI_SQL_POZ = table.Column<int>(type: "int", nullable: false),
                    ID_CENNIKI_SQL = table.Column<int>(type: "int", nullable: true, comment: "Relacja do nagłówka definicji - tab: CENNIKI_SQL"),
                    NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa pozycji"),
                    TABELA_SQL = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true, comment: "Nazwa tabeli w bazie"),
                    XLS = table.Column<byte[]>(type: "image", nullable: true, comment: "Plik XLS"),
                    KOLUMNY = table.Column<byte[]>(type: "image", nullable: true, comment: "Definicja kolumn"),
                    WIERSZE = table.Column<byte[]>(type: "image", nullable: true, comment: "Definicja wierszy"),
                    TABELA = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_CENNIKI_SQL_POZ", x => x.ID_CENNIKI_SQL_POZ);
                },
                comment: "Pozycje cennika SQL");

            migrationBuilder.CreateTable(
                name: "CENNIKI_SQL_PRAWA",
                columns: table => new
                {
                    ID_CENNIKI_SQL_PRAWA = table.Column<int>(type: "int", nullable: false),
                    CENNIK_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do nagłówka definicji - tab: CENNIKI_SQL"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa lokalizacji"),
                    DZIAL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa dzialu")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_CENNIKI_SQL_PRAWA", x => x.ID_CENNIKI_SQL_PRAWA);
                },
                comment: "Prawa cennika SQL");

            migrationBuilder.CreateTable(
                name: "CENNIKI_SQL_UPRAWNIENIA",
                columns: table => new
                {
                    ID_CENNIKI_SQL_UPRAWNIENIA = table.Column<int>(type: "int", nullable: false),
                    CENNIK_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Relacja do nagłówka definicji - tab: CENNIKI_SQL"),
                    TYP = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Typ uprawnienia 0 - user, 1 - profil"),
                    OBIEKT_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Relacja do użytkownika, profilu"),
                    EDYCJA = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    WIDOK = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_CENNIKI_SQL_UPRAWNIENIA", x => x.ID_CENNIKI_SQL_UPRAWNIENIA);
                },
                comment: "Uprawnienia do statusów");

            migrationBuilder.CreateTable(
                name: "ChangeLog",
                columns: table => new
                {
                    ID_ChangeLog = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    LogId = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Relacja do logu - tab: LOGI"),
                    FieldName = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: false, defaultValueSql: "('')"),
                    OldValue = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true),
                    NewValue = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ChangeLog", x => x.ID_ChangeLog);
                },
                comment: "Logi systemowe - zmiany");

            migrationBuilder.CreateTable(
                name: "ChangeTrack",
                schema: "app",
                columns: table => new
                {
                    ChangeTrackId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    Hint = table.Column<string>(type: "nvarchar(500)", maxLength: 500, nullable: true),
                    DatabaseObject = table.Column<string>(type: "nvarchar(128)", maxLength: 128, nullable: false),
                    FieldName = table.Column<string>(type: "nvarchar(128)", maxLength: 128, nullable: false),
                    TriggerName = table.Column<string>(type: "nvarchar(128)", maxLength: 128, nullable: true),
                    DataType = table.Column<int>(type: "int", nullable: true),
                    ObjectId = table.Column<int>(type: "int", nullable: false),
                    Enabled = table.Column<int>(type: "int", nullable: false, defaultValueSql: "((1))")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ChangeTrack", x => x.ChangeTrackId);
                });

            migrationBuilder.CreateTable(
                name: "ChangeTrackData",
                columns: table => new
                {
                    ChangeTrackDataId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ChangeTrackId = table.Column<int>(type: "int", nullable: false),
                    RecordId = table.Column<int>(type: "int", nullable: false),
                    Host = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    UserId = table.Column<int>(type: "int", nullable: true),
                    UserName = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true),
                    ValueBefore = table.Column<object>(type: "sql_variant", nullable: true),
                    ValueAfter = table.Column<object>(type: "sql_variant", nullable: true),
                    RegisterDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ChangeTrackData", x => x.ChangeTrackDataId);
                });

            migrationBuilder.CreateTable(
                name: "ChangeTrackData",
                schema: "app",
                columns: table => new
                {
                    ChangeTrackDataId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ChangeTrackId = table.Column<int>(type: "int", nullable: false),
                    RecordId = table.Column<int>(type: "int", nullable: false),
                    Host = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    UserId = table.Column<int>(type: "int", nullable: true),
                    UserName = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true),
                    ValueBefore = table.Column<object>(type: "sql_variant", nullable: true),
                    ValueAfter = table.Column<object>(type: "sql_variant", nullable: true),
                    RegisterDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ChangeTrackData", x => x.ChangeTrackDataId);
                });

            migrationBuilder.CreateTable(
                name: "ChangeTrackDatabase",
                schema: "app",
                columns: table => new
                {
                    ChangeTrackDatabaseId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Database = table.Column<string>(type: "nvarchar(128)", maxLength: 128, nullable: false),
                    Table = table.Column<string>(type: "nvarchar(128)", maxLength: 128, nullable: false),
                    ObjectId = table.Column<int>(type: "int", nullable: false),
                    Enabled = table.Column<int>(type: "int", nullable: false, defaultValueSql: "((1))")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ChangeTrackDatabase", x => x.ChangeTrackDatabaseId);
                });

            migrationBuilder.CreateTable(
                name: "CHECKLIST_HIST",
                columns: table => new
                {
                    ID_CHECKLIST_HIST = table.Column<int>(type: "int", nullable: false),
                    ID_TABOR = table.Column<int>(type: "int", nullable: true, comment: "id pojazdu"),
                    ID_KIEROWCA = table.Column<int>(type: "int", nullable: true, comment: "id kierowcy"),
                    KIEROWCA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "nazwa kierowcy"),
                    DT = table.Column<DateTime>(type: "datetime", nullable: true, comment: "data check-listy"),
                    DT_ZAPIS = table.Column<DateTime>(type: "datetime", nullable: true, comment: "data zapisu")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_CHECKLIST_HIST", x => x.ID_CHECKLIST_HIST);
                });

            migrationBuilder.CreateTable(
                name: "CHECKLIST_HISTPOZ",
                columns: table => new
                {
                    ID_CHECKLIST_HISTPOZ = table.Column<int>(type: "int", nullable: false),
                    ID_CHECKLIST_HIST = table.Column<int>(type: "int", nullable: true),
                    ID_CHECKLIST_PYT = table.Column<int>(type: "int", nullable: true),
                    ODPOWIEDZ = table.Column<int>(type: "int", nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_CHECKLIST_HISTPOZ", x => x.ID_CHECKLIST_HISTPOZ);
                });

            migrationBuilder.CreateTable(
                name: "CHECKLIST_PYT",
                columns: table => new
                {
                    ID_CHECKLIST_PYT = table.Column<int>(type: "int", nullable: false),
                    TEKST = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    AKTYWNE = table.Column<short>(type: "smallint", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_CHECKLIST_PYT", x => x.ID_CHECKLIST_PYT);
                });

            migrationBuilder.CreateTable(
                name: "CHECKLIST_TABOR",
                columns: table => new
                {
                    ID_CHECKLIST_TABOR = table.Column<int>(type: "int", nullable: false),
                    ID_CHECKLIST_PYT = table.Column<int>(type: "int", nullable: true),
                    ID_TABOR = table.Column<int>(type: "int", nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_CHECKLIST_TABOR", x => x.ID_CHECKLIST_TABOR);
                });

            migrationBuilder.CreateTable(
                name: "CHECKLIST_WYSLIJ",
                columns: table => new
                {
                    ID_CHECKLIST_WYSLIJ = table.Column<int>(type: "int", nullable: false),
                    ID_TABOR = table.Column<int>(type: "int", nullable: true),
                    ID_UZYTK = table.Column<int>(type: "int", nullable: true),
                    UZYTK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DT_WYSYLKI = table.Column<DateTime>(type: "datetime", nullable: true),
                    DT_ZAPIS = table.Column<DateTime>(type: "datetime", nullable: true),
                    WYSLANO = table.Column<short>(type: "smallint", nullable: true),
                    ERRORMSG = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_CHECKLIST_WYSLIJ", x => x.ID_CHECKLIST_WYSLIJ);
                });

            migrationBuilder.CreateTable(
                name: "CHECKLISTDEF",
                columns: table => new
                {
                    ID_CHECKLISTDEF = table.Column<int>(type: "int", nullable: false),
                    OBJID = table.Column<int>(type: "int", nullable: true, comment: "Jakiego obiektu dotyczy pozycja"),
                    CODE = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Kod pozycji"),
                    DESCRIPTION = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Opis "),
                    INUSE = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy pozycja aktywna"),
                    DictionaryId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TextId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_CHECKLISTDEF", x => x.ID_CHECKLISTDEF);
                },
                comment: "Słownik pozycji list kontrolnych");

            migrationBuilder.CreateTable(
                name: "CMR",
                columns: table => new
                {
                    ID_CMR = table.Column<int>(type: "int", nullable: false),
                    NR_CMR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_CMR_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    NR_CMR_ROK = table.Column<int>(type: "int", nullable: true),
                    NR_CMR_MIES = table.Column<int>(type: "int", nullable: true),
                    KRAJOWY = table.Column<int>(type: "int", nullable: true),
                    DROBNICA = table.Column<int>(type: "int", nullable: true),
                    KLIENT_ID = table.Column<int>(type: "int", nullable: true),
                    KLIENT_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    DATA_ZALADUNKU = table.Column<DateTime>(type: "datetime", nullable: true),
                    PRZEWOZNIK_ID = table.Column<int>(type: "int", nullable: true),
                    PRZEWOZNIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    XML = table.Column<string>(type: "text", nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    OBJ_ID = table.Column<int>(type: "int", nullable: true),
                    REC_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_CMR", x => x.ID_CMR);
                });

            migrationBuilder.CreateTable(
                name: "Config",
                schema: "app",
                columns: table => new
                {
                    ConfigId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    VariableId = table.Column<int>(type: "int", nullable: false),
                    Name = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    Value = table.Column<byte[]>(type: "varbinary(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Config", x => x.ConfigId);
                });

            migrationBuilder.CreateTable(
                name: "CONTAINER_LIST",
                columns: table => new
                {
                    ID_CONTAINER_LIST = table.Column<int>(type: "int", nullable: false),
                    SERIAL_NUMBER = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    KIND = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SYMBOL = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    CAPACITY = table.Column<double>(type: "float", nullable: true),
                    UNIT = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_CONTAINER_LIST", x => x.ID_CONTAINER_LIST);
                });

            migrationBuilder.CreateTable(
                name: "CONTAINER_TYPE",
                columns: table => new
                {
                    ID_CONTAINER_TYPE = table.Column<int>(type: "int", nullable: false),
                    KIND = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SYMBOL = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    CAPACITY = table.Column<double>(type: "float", nullable: true),
                    UNIT = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_CONTAINER_TYPE", x => x.ID_CONTAINER_TYPE);
                });

            migrationBuilder.CreateTable(
                name: "Contract",
                schema: "contr",
                columns: table => new
                {
                    ContractId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ContractStatusId = table.Column<int>(type: "int", nullable: false),
                    Number = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    ExternalNumber = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    ContractNumber = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    AdviceNumber = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    ContractTypeId = table.Column<int>(type: "int", nullable: true),
                    StartDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    FinishDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClientId = table.Column<int>(type: "int", nullable: true),
                    ProductId = table.Column<int>(type: "int", nullable: true),
                    Product = table.Column<string>(type: "nvarchar(500)", maxLength: 500, nullable: true),
                    Amount = table.Column<double>(type: "float", nullable: true),
                    AmountUnitId = table.Column<int>(type: "int", nullable: true),
                    IncotermsId = table.Column<int>(type: "int", nullable: true),
                    CollectId = table.Column<int>(type: "int", nullable: true),
                    Collect = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true),
                    CollectAddress = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true),
                    CollectPostCode = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    CollectCity = table.Column<string>(type: "nvarchar(60)", maxLength: 60, nullable: true),
                    CollectCountry = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    CollectTelephone = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    CollectContactPerson = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true),
                    DeliveryId = table.Column<int>(type: "int", nullable: true),
                    Delivery = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true),
                    DeliveryAddress = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true),
                    DeliveryPostCode = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    DeliveryCity = table.Column<string>(type: "nvarchar(60)", maxLength: 60, nullable: true),
                    DeliveryCountry = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    DeliveryTelephone = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    DeliveryContactPerson = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true),
                    EstimatedFreightRate = table.Column<decimal>(type: "money", nullable: true),
                    FreightRate = table.Column<decimal>(type: "money", nullable: true),
                    EstimatedDistance = table.Column<double>(type: "float", nullable: true),
                    Distance = table.Column<double>(type: "float", nullable: true),
                    IssuePersonId = table.Column<int>(type: "int", nullable: true),
                    LocalizationId = table.Column<int>(type: "int", nullable: true),
                    DepartmentId = table.Column<int>(type: "int", nullable: true),
                    CreateUserId = table.Column<int>(type: "int", nullable: true),
                    CreateUser = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true),
                    CreateDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    EditUserId = table.Column<int>(type: "int", nullable: true),
                    EditUser = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true),
                    EditDate = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Contract", x => x.ContractId);
                });

            migrationBuilder.CreateTable(
                name: "ContractConfiguration",
                schema: "contr",
                columns: table => new
                {
                    ContractConfigurationId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    VariableId = table.Column<int>(type: "int", nullable: false),
                    Name = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true),
                    Hint = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    Value = table.Column<byte[]>(type: "varbinary(max)", nullable: true),
                    DefaultValue = table.Column<byte[]>(type: "varbinary(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ContractConfiguration", x => x.ContractConfigurationId);
                });

            migrationBuilder.CreateTable(
                name: "ContractOrder",
                schema: "contr",
                columns: table => new
                {
                    ContractOrderId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ContractOrderStatusId = table.Column<int>(type: "int", nullable: true),
                    ContractId = table.Column<int>(type: "int", nullable: false),
                    CarrierId = table.Column<int>(type: "int", nullable: false),
                    Number = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    OrderValue = table.Column<decimal>(type: "money", nullable: true),
                    EstimatedFreightRate = table.Column<decimal>(type: "money", nullable: true),
                    FreightRate = table.Column<decimal>(type: "money", nullable: true),
                    OrderAmount = table.Column<double>(type: "float", nullable: true),
                    OrderAmountUnitId = table.Column<int>(type: "int", nullable: true),
                    DeliveryDateStart = table.Column<DateTime>(type: "datetime", nullable: true),
                    DeliveryDateFinish = table.Column<DateTime>(type: "datetime", nullable: true),
                    LoadCarryingCapacity = table.Column<double>(type: "float", nullable: true),
                    LoadCarryingCapacityUnitId = table.Column<int>(type: "int", nullable: true),
                    CollectId = table.Column<int>(type: "int", nullable: true),
                    Collect = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true),
                    CollectAddress = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true),
                    CollectPostCode = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    CollectCity = table.Column<string>(type: "nvarchar(60)", maxLength: 60, nullable: true),
                    CollectCountry = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    CollectTelephone = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    CollectContactPerson = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true),
                    DeliveryId = table.Column<int>(type: "int", nullable: true),
                    Delivery = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true),
                    DeliveryAddress = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true),
                    DeliveryPostCode = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    DeliveryCity = table.Column<string>(type: "nvarchar(60)", maxLength: 60, nullable: true),
                    DeliveryCountry = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    DeliveryTelephone = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    DeliveryContactPerson = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true),
                    CreateUserId = table.Column<int>(type: "int", nullable: true),
                    CreateUser = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true),
                    CreateDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    EditUserId = table.Column<int>(type: "int", nullable: true),
                    EditUser = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true),
                    EditDate = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ContractOrder", x => x.ContractOrderId);
                });

            migrationBuilder.CreateTable(
                name: "ContractOrderSchedule",
                schema: "contr",
                columns: table => new
                {
                    ContractOrderScheduleId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ContractOrderId = table.Column<int>(type: "int", nullable: true),
                    FtlId = table.Column<int>(type: "int", nullable: true),
                    CollectDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    DeliveryDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    OrderAmount = table.Column<double>(type: "float", nullable: true),
                    OrderAmountUnitId = table.Column<int>(type: "int", nullable: true),
                    TruckId = table.Column<int>(type: "int", nullable: true),
                    TruckRegistractionNumber = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    SemitrailerId = table.Column<int>(type: "int", nullable: true),
                    SemitrailerRegistractionNumber = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    DriverMobile = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DriverName = table.Column<string>(type: "nvarchar(150)", maxLength: 150, nullable: true),
                    CreateUserId = table.Column<int>(type: "int", nullable: true),
                    CreateUser = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true),
                    CreateDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    EditUserId = table.Column<int>(type: "int", nullable: true),
                    EditUser = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true),
                    EditDate = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ContractOrderSchedule", x => x.ContractOrderScheduleId);
                });

            migrationBuilder.CreateTable(
                name: "ContractStatus",
                schema: "contr",
                columns: table => new
                {
                    ContractStatusId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true),
                    Description = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    Color = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ContractStatus", x => x.ContractStatusId);
                });

            migrationBuilder.CreateTable(
                name: "ContractType",
                schema: "contr",
                columns: table => new
                {
                    ContractTypeId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true),
                    Description = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    Visible = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ContractType", x => x.ContractTypeId);
                });

            migrationBuilder.CreateTable(
                name: "Control",
                schema: "lng",
                columns: table => new
                {
                    ControlId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Control", x => x.ControlId);
                });

            migrationBuilder.CreateTable(
                name: "CR_ReportLog",
                columns: table => new
                {
                    ID_CR_ReportLog = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    RPT = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    IsTTX = table.Column<int>(type: "int", nullable: true),
                    SaveToFile = table.Column<int>(type: "int", nullable: true),
                    DT = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    ExecTime = table.Column<int>(type: "int", nullable: true),
                    AppName = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    UserId = table.Column<int>(type: "int", nullable: true),
                    FileName = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_CR_ReportLog", x => x.ID_CR_ReportLog);
                });

            migrationBuilder.CreateTable(
                name: "CR_TextTranslate",
                columns: table => new
                {
                    ID_CR_TextTranslate = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    RptName = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TextCode = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    LangCode = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    Text = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_CR_TextTranslate", x => x.ID_CR_TextTranslate);
                });

            migrationBuilder.CreateTable(
                name: "CRM_CEL",
                columns: table => new
                {
                    ID_CRM_CEL = table.Column<int>(type: "int", nullable: false),
                    NAZWA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DictionaryId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TextId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_CRM_CEL", x => x.ID_CRM_CEL);
                });

            migrationBuilder.CreateTable(
                name: "CRM_CEL_UPRAWNIENIA",
                columns: table => new
                {
                    ID_CRM_CEL_UPRAWNIENIA = table.Column<int>(type: "int", nullable: false),
                    CRM_CEL_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Relacja do celu, tab: CRM_CEL"),
                    TYP = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Typ uprawnienia 0 - user, 1 - profil"),
                    OBIEKT_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Relacja do użytkownika, profilu")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_CRM_CEL_UPRAWNIENIA", x => x.ID_CRM_CEL_UPRAWNIENIA);
                });

            migrationBuilder.CreateTable(
                name: "CrmData",
                schema: "crm",
                columns: table => new
                {
                    CrmDataId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    crm = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    NewMessage = table.Column<int>(type: "int", nullable: true),
                    Inbox = table.Column<int>(type: "int", nullable: true),
                    ExternalIndex = table.Column<int>(type: "int", nullable: true),
                    ContractorId = table.Column<int>(type: "int", nullable: true),
                    CrmTypeKey = table.Column<int>(type: "int", nullable: true),
                    CrmTypeValue = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    CrmSubtypeKey = table.Column<int>(type: "int", nullable: true),
                    CrmSubtypeValue = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    Sender = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    To = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    Email = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    ConversationIndex = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    Subject = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    Body = table.Column<string>(type: "varchar(8000)", unicode: false, maxLength: 8000, nullable: true),
                    ReceivedTime = table.Column<DateTime>(type: "datetime", nullable: true),
                    XmlData = table.Column<string>(type: "xml", nullable: true),
                    State = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_crmdata", x => x.CrmDataId);
                });

            migrationBuilder.CreateTable(
                name: "CutsETALogs",
                schema: "opti",
                columns: table => new
                {
                    SolverTaskId = table.Column<int>(type: "int", nullable: true),
                    SessionId = table.Column<int>(type: "int", nullable: true),
                    MacierzZleceniaTaborId = table.Column<int>(type: "int", nullable: true),
                    ID_ZLECENIA = table.Column<int>(type: "int", nullable: true),
                    NR_ZLECENIA_K = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    NR_ZLECENIA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    ID_TABORU = table.Column<int>(type: "int", nullable: true),
                    NR_REJ = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: false),
                    ID_KIEROWCY = table.Column<int>(type: "int", nullable: true),
                    Kierowca = table.Column<string>(type: "nvarchar(255)", maxLength: 255, nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    TYP = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    Miejsce = table.Column<string>(type: "nvarchar(500)", maxLength: 500, nullable: true),
                    Data_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    Data_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    Data_ETA = table.Column<DateTime>(type: "datetime", nullable: true),
                    ETA = table.Column<string>(type: "xml", nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "CutsOrdersLogs",
                schema: "opti",
                columns: table => new
                {
                    id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SolverTaskId = table.Column<int>(type: "int", nullable: true),
                    SessionId = table.Column<int>(type: "int", nullable: true),
                    CutTypeId = table.Column<int>(type: "int", nullable: true),
                    Powod = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ID_ZLECENIA = table.Column<int>(type: "int", nullable: true),
                    ID_TABORU = table.Column<int>(type: "int", nullable: true),
                    ID_NACZEPY = table.Column<int>(type: "int", nullable: true),
                    ID_KIEROWCY = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "CZYNNOSCI",
                columns: table => new
                {
                    ID_CZYNNOSCI = table.Column<int>(type: "int", nullable: false),
                    KOD = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: false, defaultValueSql: "('')"),
                    NAZWA = table.Column<string>(type: "varchar(120)", unicode: false, maxLength: 120, nullable: false, defaultValueSql: "('')"),
                    OPIS = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    WSKAZNIK = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    INTERWAL = table.Column<int>(type: "int", nullable: true),
                    BLOK_PRZEKR = table.Column<int>(type: "int", nullable: true),
                    BLOK_PRZEKR_O = table.Column<int>(type: "int", nullable: true),
                    DictionaryId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TextId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    VISIBLE = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('1')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_CZYNNOSCI", x => x.ID_CZYNNOSCI);
                });

            migrationBuilder.CreateTable(
                name: "CZYNNOSCI_PRZEG_POZ",
                columns: table => new
                {
                    ID_CZYNNOSCI_PRZEG_POZ = table.Column<int>(type: "int", nullable: false),
                    CZYNNOSCI_ID = table.Column<int>(type: "int", nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    W_GRUPY_PRZEGLAD_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    W_GRUPY_PRZEGLAD = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    PRZEGLAD_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    PRZEGLAD_POZ = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_CZYNNOSCI_PRZEG_POZ", x => x.ID_CZYNNOSCI_PRZEG_POZ);
                });

            migrationBuilder.CreateTable(
                name: "DANE_AWB",
                columns: table => new
                {
                    ID_DANE_AWB = table.Column<int>(type: "int", nullable: false),
                    OBJ_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    REC_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    TYP_DOK = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: false, defaultValueSql: "('')", comment: "MAWB/HAWB"),
                    NUMBERS_1 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    NUMBERS_2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    SHIPPER_ID = table.Column<int>(type: "int", nullable: true),
                    SHIPPER_SYMBOL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SHIPPER = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    CONSIGNEE_ID = table.Column<int>(type: "int", nullable: true),
                    CONSIGNEE_SYMBOL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    CONSIGNEE = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    AGENT_ID = table.Column<int>(type: "int", nullable: true),
                    AGENT_SYMBOL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    AGENT = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    AGENT_IATA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    AGENT_ACCOUNT = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    WAYBILL_ID = table.Column<int>(type: "int", nullable: true),
                    WAYBILL_SYMBOL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    WAYBILL = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    ACCOUNT_INFO = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    AIRPORT_OF_DEPARTURE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ROUTING = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TO_1 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    BY_1 = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    TO_2 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    BY_2 = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    TO_3 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    BY_3 = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    AIRPORT_OF_DESTINATION = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    FLIGHT_1 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    FLIGHT_2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_1 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_3 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    CURR = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    WT_VAL = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    OTHER = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    DECL_VAL_CARR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DECL_VAL_CUST = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    AMOUNT_OF_INSURANCE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    HANDLING_INFO = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true),
                    SCI = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    NATURE_OF_GOODS = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true),
                    NOTES = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true),
                    WEIGHT_CHARGE_1 = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true),
                    WEIGHT_CHARGE_2 = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true),
                    VAL_CHARGE_1 = table.Column<double>(type: "float", nullable: true),
                    VAL_CHARGE_2 = table.Column<double>(type: "float", nullable: true),
                    TAX_1 = table.Column<double>(type: "float", nullable: true),
                    TAX_2 = table.Column<double>(type: "float", nullable: true),
                    TOTAL_A_1 = table.Column<double>(type: "float", nullable: true),
                    TOTAL_A_2 = table.Column<double>(type: "float", nullable: true),
                    TOTAL_C_1 = table.Column<double>(type: "float", nullable: true),
                    TOTAL_C_2 = table.Column<double>(type: "float", nullable: true),
                    TOTAL_PREPAID = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true),
                    TOTAL_COLLECT = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true),
                    CURR_CONV_RATE = table.Column<double>(type: "float", nullable: true),
                    SIGNATURE = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true),
                    EXECUTED_ON = table.Column<DateTime>(type: "datetime", nullable: true),
                    AT_PLACE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SIGNATURE_USER = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_DANE_AWB", x => x.ID_DANE_AWB);
                });

            migrationBuilder.CreateTable(
                name: "DANE_AWB_KOSZTY",
                columns: table => new
                {
                    ID_DANE_AWB_KOSZTY = table.Column<int>(type: "int", nullable: false),
                    DANE_AWB_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    QUANTITY = table.Column<double>(type: "float", nullable: true),
                    GROSS_WEIGHT = table.Column<double>(type: "float", nullable: true),
                    JM = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    RATE_CLASS = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    VOLUME = table.Column<double>(type: "float", nullable: true),
                    COMMODITY = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    CHARGEABLE_WEIGHT = table.Column<double>(type: "float", nullable: true),
                    RATE = table.Column<double>(type: "float", nullable: true),
                    TOTAL = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true),
                    NO = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_DANE_AWB_KOSZTY", x => x.ID_DANE_AWB_KOSZTY);
                });

            migrationBuilder.CreateTable(
                name: "DANE_AWB_OPL_DOD",
                columns: table => new
                {
                    ID_DANE_AWB_OPL_DOD = table.Column<int>(type: "int", nullable: false),
                    DANE_AWB_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    SYMBOL = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: false, defaultValueSql: "('')"),
                    WARTOSC = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_DANE_AWB_OPL_DOD", x => x.ID_DANE_AWB_OPL_DOD);
                });

            migrationBuilder.CreateTable(
                name: "DANE_EXT",
                columns: table => new
                {
                    ID_DANE_EXT = table.Column<int>(type: "int", nullable: false),
                    OBIEKT_TYP = table.Column<int>(type: "int", nullable: false),
                    OBIEKT_ID = table.Column<int>(type: "int", nullable: false),
                    TEKST_1 = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_1 = table.Column<DateTime>(type: "datetime", nullable: true),
                    LICZBA_1 = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')"),
                    BIT_1 = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    TEKST_2 = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_2 = table.Column<DateTime>(type: "datetime", nullable: true),
                    LICZBA_2 = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')"),
                    BIT_2 = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    TEKST_3 = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_3 = table.Column<DateTime>(type: "datetime", nullable: true),
                    LICZBA_3 = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')"),
                    BIT_3 = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    TEKST_4 = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_4 = table.Column<DateTime>(type: "datetime", nullable: true),
                    LICZBA_4 = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')"),
                    BIT_4 = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    TEKST_5 = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_5 = table.Column<DateTime>(type: "datetime", nullable: true),
                    LICZBA_5 = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')"),
                    BIT_5 = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    TEKST_6 = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_6 = table.Column<DateTime>(type: "datetime", nullable: true),
                    LICZBA_6 = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')"),
                    BIT_6 = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    TEKST_7 = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_7 = table.Column<DateTime>(type: "datetime", nullable: true),
                    LICZBA_7 = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')"),
                    BIT_7 = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    TEKST_8 = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_8 = table.Column<DateTime>(type: "datetime", nullable: true),
                    LICZBA_8 = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')"),
                    BIT_8 = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    TEKST_9 = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_9 = table.Column<DateTime>(type: "datetime", nullable: true),
                    LICZBA_9 = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')"),
                    BIT_9 = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    TEKST_10 = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_10 = table.Column<DateTime>(type: "datetime", nullable: true),
                    LICZBA_10 = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')"),
                    BIT_10 = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    TEKST_11 = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_11 = table.Column<DateTime>(type: "datetime", nullable: true),
                    LICZBA_11 = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')"),
                    BIT_11 = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    TEKST_12 = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_12 = table.Column<DateTime>(type: "datetime", nullable: true),
                    LICZBA_12 = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')"),
                    BIT_12 = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    TEKST_13 = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_13 = table.Column<DateTime>(type: "datetime", nullable: true),
                    LICZBA_13 = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')"),
                    BIT_13 = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    TEKST_14 = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_14 = table.Column<DateTime>(type: "datetime", nullable: true),
                    LICZBA_14 = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')"),
                    BIT_14 = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    TEKST_15 = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_15 = table.Column<DateTime>(type: "datetime", nullable: true),
                    LICZBA_15 = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')"),
                    BIT_15 = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    TEKST_16 = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_16 = table.Column<DateTime>(type: "datetime", nullable: true),
                    LICZBA_16 = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')"),
                    BIT_16 = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    TEKST_17 = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_17 = table.Column<DateTime>(type: "datetime", nullable: true),
                    LICZBA_17 = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')"),
                    BIT_17 = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    TEKST_18 = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_18 = table.Column<DateTime>(type: "datetime", nullable: true),
                    LICZBA_18 = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')"),
                    BIT_18 = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    TEKST_19 = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_19 = table.Column<DateTime>(type: "datetime", nullable: true),
                    LICZBA_19 = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')"),
                    BIT_19 = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    TEKST_20 = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_20 = table.Column<DateTime>(type: "datetime", nullable: true),
                    LICZBA_20 = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')"),
                    BIT_20 = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_DANE_EXT", x => x.ID_DANE_EXT);
                });

            migrationBuilder.CreateTable(
                name: "DANE_EXT_DEF",
                columns: table => new
                {
                    ID_DANE_EXT_DEF = table.Column<int>(type: "int", nullable: false),
                    OBIEKT_TYP = table.Column<int>(type: "int", nullable: false),
                    FRM_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    TEKST_1_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    TEKST_1_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_1_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_1_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_1_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_1_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_1_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_1_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_1_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    LICZBA_1_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_1_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_1_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_1_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    BIT_1_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_1_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_1_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_2_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    TEKST_2_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_2_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_2_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_2_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_2_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_2_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_2_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_2_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    LICZBA_2_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_2_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_2_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_2_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    BIT_2_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_2_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_2_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_3_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    TEKST_3_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_3_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_3_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_3_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_3_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_3_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_3_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_3_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    LICZBA_3_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_3_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_3_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_3_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    BIT_3_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_3_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_3_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_4_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    TEKST_4_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_4_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_4_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_4_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_4_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_4_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_4_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_4_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    LICZBA_4_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_4_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_4_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_4_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    BIT_4_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_4_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_4_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_5_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    TEKST_5_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_5_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_5_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_5_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_5_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_5_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_5_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_5_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    LICZBA_5_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_5_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_5_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_5_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    BIT_5_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_5_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_5_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_6_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    TEKST_6_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_6_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_6_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_6_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_6_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_6_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_6_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_6_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    LICZBA_6_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_6_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_6_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_6_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    BIT_6_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_6_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_6_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_7_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    TEKST_7_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_7_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_7_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_7_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_7_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_7_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_7_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_7_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    LICZBA_7_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_7_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_7_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_7_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    BIT_7_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_7_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_7_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_8_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    TEKST_8_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_8_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_8_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_8_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_8_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_8_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_8_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_8_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    LICZBA_8_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_8_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_8_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_8_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    BIT_8_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_8_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_8_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_9_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    TEKST_9_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_9_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_9_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_9_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_9_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_9_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_9_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_9_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    LICZBA_9_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_9_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_9_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_9_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    BIT_9_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_9_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_9_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_10_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    TEKST_10_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_10_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_10_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_10_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_10_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_10_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_10_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_10_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    LICZBA_10_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_10_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_10_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_10_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    BIT_10_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_10_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_10_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_1_LIST = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_2_LIST = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_3_LIST = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_4_LIST = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_5_LIST = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_6_LIST = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_7_LIST = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_8_LIST = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_9_LIST = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_10_LIST = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_11_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    TEKST_11_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_11_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_11_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_11_LIST = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_11_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_11_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_11_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_11_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_11_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    LICZBA_11_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_11_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_11_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_11_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    BIT_11_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_11_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_11_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_12_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    TEKST_12_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_12_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_12_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_12_LIST = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_12_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_12_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_12_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_12_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_12_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    LICZBA_12_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_12_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_12_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_12_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    BIT_12_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_12_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_12_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_13_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    TEKST_13_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_13_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_13_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_13_LIST = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_13_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_13_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_13_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_13_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_13_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    LICZBA_13_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_13_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_13_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_13_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    BIT_13_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_13_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_13_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_14_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    TEKST_14_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_14_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_14_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_14_LIST = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_14_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_14_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_14_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_14_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_14_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    LICZBA_14_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_14_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_14_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_14_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    BIT_14_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_14_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_14_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_15_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    TEKST_15_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_15_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_15_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_15_LIST = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_15_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_15_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_15_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_15_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_15_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    LICZBA_15_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_15_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_15_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_15_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    BIT_15_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_15_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_15_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_16_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    TEKST_16_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_16_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_16_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_16_LIST = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_16_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_16_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_16_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_16_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_16_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    LICZBA_16_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_16_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_16_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_16_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    BIT_16_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_16_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_16_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_17_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    TEKST_17_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_17_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_17_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_17_LIST = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_17_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_17_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_17_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_17_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_17_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    LICZBA_17_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_17_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_17_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_17_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    BIT_17_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_17_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_17_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_18_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    TEKST_18_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_18_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_18_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_18_LIST = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_18_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_18_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_18_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_18_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_18_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    LICZBA_18_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_18_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_18_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_18_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    BIT_18_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_18_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_18_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_19_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    TEKST_19_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_19_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_19_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_19_LIST = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_19_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_19_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_19_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_19_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_19_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    LICZBA_19_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_19_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_19_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_19_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    BIT_19_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_19_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_19_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_20_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    TEKST_20_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_20_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_20_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TEKST_20_LIST = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_20_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_20_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_20_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_20_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_20_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    LICZBA_20_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_20_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_20_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_20_LBL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    BIT_20_ACT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_20_REQ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BIT_20_LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_DANE_EXT_DEF", x => x.ID_DANE_EXT_DEF);
                });

            migrationBuilder.CreateTable(
                name: "DANE_MBL",
                columns: table => new
                {
                    ID_DANE_MBL = table.Column<int>(type: "int", nullable: false),
                    OBJ_ID = table.Column<int>(type: "int", nullable: true),
                    REC_ID = table.Column<int>(type: "int", nullable: true),
                    TYP_DOK = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    AGENT_REFERENCE = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    BOOKING_NO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SHIPPER_ID = table.Column<int>(type: "int", nullable: true),
                    SHIPPER_SYMBOL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SHIPPER = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    CONSIGNEE_ID = table.Column<int>(type: "int", nullable: true),
                    CONSIGNEE_SYMBOL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    CONSIGNEE = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    AGENT_ID = table.Column<int>(type: "int", nullable: true),
                    AGENT_SYMBOL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    AGENT = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    NOTIFY_ID = table.Column<int>(type: "int", nullable: true),
                    NOTIFY_SYMBOL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NOTIFY = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    NOTIFY_EXT_ID = table.Column<int>(type: "int", nullable: true),
                    NOTIFY_EXT_SYMBOL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NOTIFY_EXT = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    ISSUER_ID = table.Column<int>(type: "int", nullable: true),
                    ISSUER_SYMBOL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ISSUER = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    SHIPOWNER_ID = table.Column<int>(type: "int", nullable: true),
                    SHIPOWNER_SYMBOL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SHIPOWNER = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    PRE_CARRIAGE_BY = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    PLACE_OF_RECEIPT = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    VESSEL = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    PORT_OF_LOADING = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    EXPORT_REFERENCES = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    INTERNAL_REFERENCES = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    PLACE_OF_DELIVERY = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    FREIGHT_PAYABLE = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    PORT_OF_DISCHARGE = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    PORT_OF_TRANSHIPMENT = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    POINT_AND_COUNTRY_OF_ORIGIN = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    TYPE_OF_MOVE = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    TEMP_CONTROL_INSTRUCTIONS = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    EXCESS_VALUE_DECLARATION = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    ADDITIONAL_GOODS_DESCRIPTION = table.Column<string>(type: "varchar(1500)", unicode: false, maxLength: 1500, nullable: true),
                    FINAL_DESTINATION = table.Column<string>(type: "varchar(1500)", unicode: false, maxLength: 1500, nullable: true),
                    ADDITIONAL_INFORMATION = table.Column<string>(type: "varchar(1500)", unicode: false, maxLength: 1500, nullable: true),
                    QNT_OF_ORYGIN = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_DANE_MBL", x => x.ID_DANE_MBL);
                },
                comment: "Opłaty dodatkowe MBL");

            migrationBuilder.CreateTable(
                name: "DANE_MBL_KOSZTY",
                columns: table => new
                {
                    ID_DANE_MBL_KOSZTY = table.Column<int>(type: "int", nullable: false),
                    DANE_MBL_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    LP = table.Column<int>(type: "int", nullable: true),
                    CONTAINERS_NUMBERS = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true),
                    SEALS = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true),
                    NO_OF_PKGS = table.Column<double>(type: "float", nullable: true),
                    PACKAGE_TYPE = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true),
                    DESCRIPTION_OF_GOODS = table.Column<string>(type: "varchar(250)", unicode: false, maxLength: 250, nullable: true),
                    CARGO_NET_WEIGHT = table.Column<double>(type: "float", nullable: true),
                    GROSS_WEIGHT = table.Column<double>(type: "float", nullable: true),
                    MEASUREMENT = table.Column<string>(type: "varchar(250)", unicode: false, maxLength: 250, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_DANE_MBL_KOSZTY", x => x.ID_DANE_MBL_KOSZTY);
                },
                comment: "Opłaty dodatkowe MBL");

            migrationBuilder.CreateTable(
                name: "DANE_MBL_OPL_DOD",
                columns: table => new
                {
                    ID_DANE_MBL_OPL_DOD = table.Column<int>(type: "int", nullable: false),
                    DANE_MBL_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    DESCRIPTION = table.Column<string>(type: "varchar(250)", unicode: false, maxLength: 250, nullable: true),
                    SYMBOL = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    CURRENCY = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    PAIDTYPE = table.Column<string>(type: "varchar(25)", unicode: false, maxLength: 25, nullable: true),
                    WARTOSC = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_DANE_MBL_OPL_DOD", x => x.ID_DANE_MBL_OPL_DOD);
                },
                comment: "Opłaty dodatkowe MBL");

            migrationBuilder.CreateTable(
                name: "Dashboard",
                schema: "dashboard",
                columns: table => new
                {
                    DashboardId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: false),
                    Description = table.Column<string>(type: "nvarchar(250)", maxLength: 250, nullable: true),
                    Dashboard = table.Column<byte[]>(type: "varbinary(max)", nullable: true),
                    Refresh = table.Column<int>(type: "int", nullable: true),
                    Enabled = table.Column<int>(type: "int", nullable: true),
                    System = table.Column<int>(type: "int", nullable: true),
                    CreateUserId = table.Column<int>(type: "int", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    EditUserId = table.Column<int>(type: "int", nullable: true),
                    EditUser = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    EditDate = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Dashboard", x => x.DashboardId);
                });

            migrationBuilder.CreateTable(
                name: "DashboardObject",
                schema: "dashboard",
                columns: table => new
                {
                    DashboardObjectId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    DashboardId = table.Column<int>(type: "int", nullable: true),
                    ObjectId = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_DashboardObject", x => x.DashboardObjectId);
                });

            migrationBuilder.CreateTable(
                name: "DATABASECHANGELOG",
                schema: "opti",
                columns: table => new
                {
                    ID = table.Column<string>(type: "nvarchar(255)", maxLength: 255, nullable: false),
                    AUTHOR = table.Column<string>(type: "nvarchar(255)", maxLength: 255, nullable: false),
                    FILENAME = table.Column<string>(type: "nvarchar(255)", maxLength: 255, nullable: false),
                    DATEEXECUTED = table.Column<DateTime>(type: "datetime2(3)", precision: 3, nullable: false),
                    ORDEREXECUTED = table.Column<int>(type: "int", nullable: false),
                    EXECTYPE = table.Column<string>(type: "nvarchar(10)", maxLength: 10, nullable: false),
                    MD5SUM = table.Column<string>(type: "nvarchar(35)", maxLength: 35, nullable: true),
                    DESCRIPTION = table.Column<string>(type: "nvarchar(255)", maxLength: 255, nullable: true),
                    COMMENTS = table.Column<string>(type: "nvarchar(255)", maxLength: 255, nullable: true),
                    TAG = table.Column<string>(type: "nvarchar(255)", maxLength: 255, nullable: true),
                    LIQUIBASE = table.Column<string>(type: "nvarchar(20)", maxLength: 20, nullable: true),
                    CONTEXTS = table.Column<string>(type: "nvarchar(255)", maxLength: 255, nullable: true),
                    LABELS = table.Column<string>(type: "nvarchar(255)", maxLength: 255, nullable: true),
                    DEPLOYMENT_ID = table.Column<string>(type: "nvarchar(10)", maxLength: 10, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "DATABASECHANGELOGLOCK",
                schema: "opti",
                columns: table => new
                {
                    ID = table.Column<int>(type: "int", nullable: false),
                    LOCKED = table.Column<bool>(type: "bit", nullable: false),
                    LOCKGRANTED = table.Column<DateTime>(type: "datetime2(3)", precision: 3, nullable: true),
                    LOCKEDBY = table.Column<string>(type: "nvarchar(255)", maxLength: 255, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_DATABASECHANGELOGLOCK", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "DataExchange",
                schema: "rest",
                columns: table => new
                {
                    DataExchangeId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    LocalIndex = table.Column<int>(type: "int", nullable: true),
                    RemoteIndex = table.Column<int>(type: "int", nullable: true),
                    ExchangeState = table.Column<int>(type: "int", nullable: true),
                    ObjectId = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_DataExchange", x => x.DataExchangeId);
                });

            migrationBuilder.CreateTable(
                name: "DataProcessor",
                columns: table => new
                {
                    IdDataProcessor = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    DataKindId = table.Column<int>(type: "int", nullable: true),
                    DataProcessorModuleId = table.Column<int>(type: "int", nullable: true),
                    Enabled = table.Column<int>(type: "int", nullable: true),
                    LastRun = table.Column<DateTime>(type: "datetime", nullable: true),
                    LastStop = table.Column<DateTime>(type: "datetime", nullable: true),
                    NextRunInterval = table.Column<string>(type: "nvarchar(128)", maxLength: 128, nullable: false),
                    NextRunIncrement = table.Column<int>(type: "int", nullable: true),
                    NextRun = table.Column<DateTime>(type: "datetime", nullable: true),
                    config = table.Column<string>(type: "xml", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__DataProc__17CE0D686712E926", x => x.IdDataProcessor);
                });

            migrationBuilder.CreateTable(
                name: "DataProcessorModule",
                columns: table => new
                {
                    IdDataProcessorModule = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SrcDataKindId = table.Column<int>(type: "int", nullable: true),
                    SrcDataTypeId = table.Column<int>(type: "int", nullable: true),
                    DstDataKindId = table.Column<int>(type: "int", nullable: true),
                    DstDataTypeId = table.Column<int>(type: "int", nullable: true),
                    Enabled = table.Column<int>(type: "int", nullable: true),
                    ModuleName = table.Column<string>(type: "nvarchar(255)", maxLength: 255, nullable: true),
                    ModulePath = table.Column<string>(type: "nvarchar(255)", maxLength: 255, nullable: true),
                    ModuleFileName = table.Column<string>(type: "nvarchar(255)", maxLength: 255, nullable: true),
                    Description = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__DataProc__43E22E68A2BE76CB", x => x.IdDataProcessorModule);
                });

            migrationBuilder.CreateTable(
                name: "DataRecord",
                columns: table => new
                {
                    IdDataRecord = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    DataKindId = table.Column<int>(type: "int", nullable: true),
                    DataTypeId = table.Column<int>(type: "int", nullable: true),
                    Status = table.Column<int>(type: "int", nullable: true),
                    DataTxt = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DataXml = table.Column<string>(type: "xml", nullable: true),
                    DataBin = table.Column<byte[]>(type: "varbinary(max)", nullable: true),
                    ExtInfo = table.Column<string>(type: "xml", nullable: true),
                    dtCreate = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    CalcDataLen = table.Column<long>(type: "bigint", nullable: true, computedColumnSql: "(case when [DataTxt] IS NOT NULL then datalength([DataTxt]) when [DataXml] IS NOT NULL then datalength([DataXml]) when [DataBin] IS NOT NULL then datalength([DataBin])  end)", stored: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__DataReco__6DE444936C0C206C", x => x.IdDataRecord);
                });

            migrationBuilder.CreateTable(
                name: "DataRecordKind",
                columns: table => new
                {
                    IdDataRecordKind = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: false),
                    Description = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__DataReco__C33D99CFE5FF8A80", x => x.IdDataRecordKind);
                });

            migrationBuilder.CreateTable(
                name: "DataRecordPunchTraceData",
                columns: table => new
                {
                    idDataRecordPunchTraceData = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    systemId = table.Column<int>(type: "int", nullable: true),
                    dataRecordId = table.Column<int>(type: "int", nullable: true),
                    traceLp = table.Column<int>(type: "int", nullable: true),
                    traceType = table.Column<int>(type: "int", nullable: true),
                    isTablet = table.Column<int>(type: "int", nullable: true),
                    isLocation = table.Column<int>(type: "int", nullable: true),
                    isDriverReport = table.Column<int>(type: "int", nullable: true),
                    isTraceReport = table.Column<int>(type: "int", nullable: true),
                    id_SFM_Pos = table.Column<int>(type: "int", nullable: true),
                    timeStartUTC = table.Column<DateTime>(type: "datetime", nullable: true),
                    timeUTC = table.Column<DateTime>(type: "datetime", nullable: true),
                    timeStartLocal = table.Column<DateTime>(type: "datetime", nullable: true),
                    timeLocal = table.Column<DateTime>(type: "datetime", nullable: true),
                    durationSec = table.Column<double>(type: "float", nullable: true),
                    driveDurationSec = table.Column<double>(type: "float", nullable: true),
                    distance = table.Column<int>(type: "int", nullable: true),
                    lat = table.Column<double>(type: "float", nullable: true),
                    lon = table.Column<double>(type: "float", nullable: true),
                    direction = table.Column<int>(type: "int", nullable: true),
                    speed = table.Column<int>(type: "int", nullable: true),
                    LKM = table.Column<double>(type: "float", nullable: true),
                    TFU = table.Column<int>(type: "int", nullable: true),
                    FLA = table.Column<double>(type: "float", nullable: true),
                    driverId1 = table.Column<int>(type: "int", nullable: true),
                    driverId2 = table.Column<int>(type: "int", nullable: true),
                    terminalId = table.Column<int>(type: "int", nullable: true),
                    vehicleId = table.Column<int>(type: "int", nullable: true),
                    extDriverId1 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    extDriverId2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    extVehicleId = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    extTabletId = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    srcDriverId = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    srcVehicleId = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    srcTrailerId = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    placeId = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    objType = table.Column<int>(type: "int", nullable: true),
                    objId = table.Column<int>(type: "int", nullable: true),
                    objStatStart = table.Column<int>(type: "int", nullable: true),
                    objStatStop = table.Column<int>(type: "int", nullable: true),
                    sesionLTY = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    sesionMODE = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    sesionLoginDT = table.Column<DateTime>(type: "datetime", nullable: true),
                    reverseGeocodingId = table.Column<int>(type: "int", nullable: true),
                    country = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    zipCode = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true),
                    province = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    place = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    street = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    reportForTraceType = table.Column<byte[]>(type: "varbinary(max)", nullable: true),
                    report = table.Column<byte[]>(type: "varbinary(max)", nullable: true),
                    @params = table.Column<string>(name: "params", type: "xml", nullable: true),
                    traceData = table.Column<string>(type: "xml", nullable: true),
                    status = table.Column<int>(type: "int", nullable: true, defaultValueSql: "((0))"),
                    createTime = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    modifyTime = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__DataReco__BEF72F6DBBAA7E18", x => x.idDataRecordPunchTraceData);
                });

            migrationBuilder.CreateTable(
                name: "DataRecordType",
                columns: table => new
                {
                    IdDataRecordType = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "nvarchar(20)", maxLength: 20, nullable: false),
                    FieldName = table.Column<string>(type: "nvarchar(20)", maxLength: 20, nullable: true),
                    Description = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__DataReco__CF53415B704C746A", x => x.IdDataRecordType);
                });

            migrationBuilder.CreateTable(
                name: "dboRequestBaseType",
                schema: "arch",
                columns: table => new
                {
                    _archId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    _archDt = table.Column<DateTime>(type: "datetime", nullable: false),
                    _archOp = table.Column<string>(type: "char(1)", unicode: false, fixedLength: true, maxLength: 1, nullable: true),
                    _archSQL = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    _archHostName = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RequestBaseTypeId = table.Column<int>(type: "int", nullable: false),
                    Name = table.Column<string>(type: "nvarchar(200)", maxLength: 200, nullable: true),
                    Description = table.Column<string>(type: "nvarchar(512)", maxLength: 512, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "dboRequestConfiguration",
                schema: "arch",
                columns: table => new
                {
                    _archId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    _archDt = table.Column<DateTime>(type: "datetime", nullable: false),
                    _archOp = table.Column<string>(type: "char(1)", unicode: false, fixedLength: true, maxLength: 1, nullable: true),
                    _archSQL = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    _archHostName = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RequestConfigurationId = table.Column<int>(type: "int", nullable: false),
                    Name = table.Column<string>(type: "nvarchar(200)", maxLength: 200, nullable: true),
                    RequestBaseTypeId = table.Column<int>(type: "int", nullable: true),
                    Enabled = table.Column<int>(type: "int", nullable: true),
                    RequestGroupId = table.Column<int>(type: "int", nullable: true),
                    RequestDataTypeId = table.Column<int>(type: "int", nullable: true),
                    RequestTypeId = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "dboRequestconfigurationQuery",
                schema: "arch",
                columns: table => new
                {
                    _archId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    _archDt = table.Column<DateTime>(type: "datetime", nullable: false),
                    _archOp = table.Column<string>(type: "char(1)", unicode: false, fixedLength: true, maxLength: 1, nullable: true),
                    _archSQL = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    _archHostName = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RequestConfigurationQueryId = table.Column<int>(type: "int", nullable: false),
                    RequestConfigurationId = table.Column<int>(type: "int", nullable: true),
                    Sql = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Enabled = table.Column<int>(type: "int", nullable: true),
                    DataElement = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    KeyItem = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    ReferenceKey = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    KeyGenerator = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    ReferenceItem = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    QueryOrder = table.Column<int>(type: "int", nullable: true),
                    TableName = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    RequestTypeId = table.Column<int>(type: "int", nullable: true),
                    ExecuteOnly = table.Column<int>(type: "int", nullable: true),
                    Layout = table.Column<string>(type: "xml", nullable: true),
                    PacketSize = table.Column<int>(type: "int", nullable: true),
                    KeyField = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    ItemField = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    KeyOrder = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    ConditionElement = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ConditionValue = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    RequestData = table.Column<int>(type: "int", nullable: true),
                    AllowInsert = table.Column<int>(type: "int", nullable: false),
                    QueryHint = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    ParentElement = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "dboRequestConfigurationQueryBinding",
                schema: "arch",
                columns: table => new
                {
                    _archId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    _archDt = table.Column<DateTime>(type: "datetime", nullable: false),
                    _archOp = table.Column<string>(type: "char(1)", unicode: false, fixedLength: true, maxLength: 1, nullable: true),
                    _archSQL = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    _archHostName = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RequestConfigurationQueryBindingId = table.Column<int>(type: "int", nullable: false),
                    RequestConfigurationQueryId = table.Column<int>(type: "int", nullable: true),
                    FieldName = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: false),
                    Element = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: false)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "dboRequestForm",
                schema: "arch",
                columns: table => new
                {
                    _archId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    _archDt = table.Column<DateTime>(type: "datetime", nullable: false),
                    _archOp = table.Column<string>(type: "char(1)", unicode: false, fixedLength: true, maxLength: 1, nullable: true),
                    _archSQL = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    _archHostName = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RequestFormId = table.Column<int>(type: "int", nullable: false),
                    Name = table.Column<string>(type: "nvarchar(512)", maxLength: 512, nullable: true),
                    Description = table.Column<string>(type: "nvarchar(1000)", maxLength: 1000, nullable: true),
                    RequestFormBaseTypeId = table.Column<int>(type: "int", nullable: true),
                    ClientId = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "dboRequestFormItem",
                schema: "arch",
                columns: table => new
                {
                    _archId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    _archDt = table.Column<DateTime>(type: "datetime", nullable: false),
                    _archOp = table.Column<string>(type: "char(1)", unicode: false, fixedLength: true, maxLength: 1, nullable: true),
                    _archSQL = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    _archHostName = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RequestFormItemId = table.Column<int>(type: "int", nullable: false),
                    RequestFormId = table.Column<int>(type: "int", nullable: true),
                    Name = table.Column<string>(type: "nvarchar(512)", maxLength: 512, nullable: true),
                    Description = table.Column<string>(type: "nvarchar(1000)", maxLength: 1000, nullable: true),
                    DictionaryId = table.Column<int>(type: "int", nullable: true),
                    TextId = table.Column<int>(type: "int", nullable: true),
                    RequestFormSectionId = table.Column<int>(type: "int", nullable: true),
                    Type = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    Attribute = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequestFormItemTypeId = table.Column<int>(type: "int", nullable: true),
                    ItemOrder = table.Column<int>(type: "int", nullable: true),
                    ReadOnly = table.Column<int>(type: "int", nullable: true),
                    Required = table.Column<int>(type: "int", nullable: true),
                    Columns = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Data = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EmptyData = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Action = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Disabled = table.Column<int>(type: "int", nullable: true),
                    constraints = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DisableEdit = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "dboRequestFormSection",
                schema: "arch",
                columns: table => new
                {
                    _archId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    _archDt = table.Column<DateTime>(type: "datetime", nullable: false),
                    _archOp = table.Column<string>(type: "char(1)", unicode: false, fixedLength: true, maxLength: 1, nullable: true),
                    _archSQL = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    _archHostName = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RequestFormSectionId = table.Column<int>(type: "int", nullable: false),
                    Name = table.Column<string>(type: "nvarchar(512)", maxLength: 512, nullable: true),
                    Description = table.Column<string>(type: "nvarchar(1000)", maxLength: 1000, nullable: true),
                    Required = table.Column<int>(type: "int", nullable: true),
                    DictionaryId = table.Column<int>(type: "int", nullable: true),
                    TextId = table.Column<int>(type: "int", nullable: true),
                    SectionOrder = table.Column<int>(type: "int", nullable: true),
                    RequestFormId = table.Column<int>(type: "int", nullable: true),
                    Collapsed = table.Column<int>(type: "int", nullable: true),
                    Collapsible = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "dboRequestProfilePermission",
                schema: "arch",
                columns: table => new
                {
                    _archId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    _archDt = table.Column<DateTime>(type: "datetime", nullable: false),
                    _archOp = table.Column<string>(type: "char(1)", unicode: false, fixedLength: true, maxLength: 1, nullable: true),
                    _archSQL = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    _archHostName = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    RequestProfilePermissionId = table.Column<int>(type: "int", nullable: false),
                    RequestProfileId = table.Column<int>(type: "int", nullable: true),
                    RequestPermissionId = table.Column<int>(type: "int", nullable: true),
                    AllowPermission = table.Column<int>(type: "int", nullable: true),
                    DenyPermission = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "DefaultColors",
                schema: "map",
                columns: table => new
                {
                    id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    color = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_DefaultColors", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "Definition",
                schema: "olap",
                columns: table => new
                {
                    DefinitionId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    OlapGroupId = table.Column<int>(type: "int", nullable: false),
                    Description = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    Version = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    System = table.Column<int>(type: "int", nullable: true),
                    ToolId = table.Column<int>(type: "int", nullable: true),
                    www = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Definition", x => x.DefinitionId);
                });

            migrationBuilder.CreateTable(
                name: "DefinitionContext",
                schema: "olap",
                columns: table => new
                {
                    DefinitionContextId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    DefinitionId = table.Column<int>(type: "int", nullable: false),
                    ObjectId = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_DefinitionContext", x => x.DefinitionContextId);
                });

            migrationBuilder.CreateTable(
                name: "DefinitionParam",
                schema: "olap",
                columns: table => new
                {
                    DefinitionParamId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    DefinitionId = table.Column<int>(type: "int", nullable: true),
                    Param = table.Column<string>(type: "nvarchar(128)", maxLength: 128, nullable: true),
                    Label = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true),
                    DefaultValue = table.Column<object>(type: "sql_variant", nullable: true),
                    SQLDefinition = table.Column<string>(type: "varchar(max)", unicode: false, nullable: true),
                    ParameterTypeId = table.Column<int>(type: "int", nullable: true),
                    System = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_DefinitionParam", x => x.DefinitionParamId);
                });

            migrationBuilder.CreateTable(
                name: "DELEGACJE",
                columns: table => new
                {
                    ID_DELEGACJE = table.Column<int>(type: "int", nullable: false),
                    NR_DELEGACJI = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Licznik - numer"),
                    NR_DELEGACJI_KOLEJNY = table.Column<int>(type: "int", nullable: true, comment: "Licznik - nr kolejny"),
                    NR_DELEGACJI_ROK = table.Column<int>(type: "int", nullable: true, comment: "Licznik - rok"),
                    NR_DELEGACJI_MIES = table.Column<int>(type: "int", nullable: true, comment: "Licznik - miesiąc"),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data delegacji"),
                    WYJAZD_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do PW, tab: WYJAZDY"),
                    WYJAZD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer PW"),
                    PRACOWNIK_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do pracownika, tab: KIEROWCY"),
                    PRACOWNIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Imię i nazwisko pracownika"),
                    ROZLICZONO = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy rozliczono delegacje"),
                    DATA_ROZLICZENIA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data rozliczenia"),
                    CEL_WYJAZDU = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true, comment: "Cel wyjazdu"),
                    STANOWISKO = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true, comment: "Stanowisko pracownika"),
                    SRODKI_LOKOMOCJI = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true, comment: "Srodek lokomocji"),
                    MIEJSCE_DOCELOWE = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true, comment: "Miejsce docelowe"),
                    KRAJ_DOCELOWY = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Kraj docelowy"),
                    WYJAZD_OD = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Wyjazd w okresie OD"),
                    WYJAZD_DO = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Wyjazd w okresie DO"),
                    DATA_WYJAZDU = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data wyjazdu"),
                    DATA_POWROTU = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data powrotu"),
                    GODZ_WYJAZDU = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina wyjazdu"),
                    GODZ_POWROTU = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina powrotu"),
                    ZAGRANICZNA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy delegacja zagraniczna"),
                    DATA_WYJAZDU_GRANICA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data wyjazdu z kraju"),
                    DATA_POWROTU_GRANICA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data powrotu do kraju"),
                    GODZ_WYJAZDU_GRANICA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina wyjazdu z kraju"),
                    GODZ_POWROTU_GRANICA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina powrotu do kraju"),
                    DOBY_KRAJ = table.Column<int>(type: "int", nullable: true, comment: "Ilość dob delegacji krajowej"),
                    GODZINY_KRAJ = table.Column<double>(type: "float", nullable: true, comment: "Ilość godzin delegacji krajowej"),
                    DOBY_ZAGR = table.Column<int>(type: "int", nullable: true, comment: "Ilość dob delegacji zagranicznej"),
                    GODZINY_ZAGR = table.Column<double>(type: "float", nullable: true, comment: "Ilość godzin delegacji zagranicznej"),
                    NOCLEGI_KRAJ = table.Column<int>(type: "int", nullable: true, comment: "Ilość noclegów krajowych"),
                    NOCLEGI_ZAGR = table.Column<int>(type: "int", nullable: true, comment: "Ilość noclegów zagranicznych"),
                    KURSY_WALUT_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do tabeli kursowej dla rozliczenia"),
                    KURSY_WALUT = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Nr tabeli kursowej dla rozliczenia"),
                    KURS = table.Column<double>(type: "float", nullable: true, comment: "Kurs waluty dla rozliczenia"),
                    KURSY_WALUT_DATA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data kursu waluty dla rozliczenia"),
                    DIETA_KRAJ_WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Waluta diety krajowej"),
                    DIETA_ZAGR_WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Waluta diety zagranicznej"),
                    DIETA_KRAJ = table.Column<double>(type: "float", nullable: true, comment: "Dieta krajowa"),
                    DIETA_ZAGR = table.Column<double>(type: "float", nullable: true, comment: "Dieta zagraniczna"),
                    NOCLEG_KRAJ = table.Column<double>(type: "float", nullable: true, comment: "Noclegi krajowe"),
                    NOCLEG_ZAGR = table.Column<double>(type: "float", nullable: true, comment: "Noclegi zagraniczne"),
                    INNE_KRAJ = table.Column<double>(type: "float", nullable: true, comment: "Inne koszty krajowe"),
                    INNE_ZAGR = table.Column<double>(type: "float", nullable: true, comment: "Inne koszty zagraniczne"),
                    DIETY_RAZEM_KRAJ = table.Column<double>(type: "float", nullable: true, comment: "Diety razem - krajowe"),
                    DIETY_RAZEM_ZAGR = table.Column<double>(type: "float", nullable: true, comment: "Diety razem - zagraniczne"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja"),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dział"),
                    WYJAZDY_ZDARZENIA_OD_ID = table.Column<int>(type: "int", nullable: true, comment: "Licz OD zdarzenia PW, tab: WYJAZDY_ZDARZENIA"),
                    WYJAZDY_ZDARZENIA_DO_ID = table.Column<int>(type: "int", nullable: true, comment: "Licz DO zdarzenia PW, tab: WYJAZDY_ZDARZENIA"),
                    LICZ_NOCLEGI = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy liczyć noclegi automatem"),
                    UWAGI = table.Column<string>(type: "text", nullable: true, comment: "Uwagi"),
                    IS_EXPORTED = table.Column<int>(type: "int", nullable: true),
                    IS_EXPORTED_DT = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_DELEGACJE", x => x.ID_DELEGACJE);
                },
                comment: "Delegacje pracowników");

            migrationBuilder.CreateTable(
                name: "DELEGACJE_DIETY",
                columns: table => new
                {
                    ID_DELEGACJE_DIETY = table.Column<int>(type: "int", nullable: false),
                    LP = table.Column<int>(type: "int", nullable: true, comment: "Lp"),
                    DELEGACJA_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do nagłówka delegacji, tab: DELEGACJE"),
                    KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Kraj odcinka - symbol ISO"),
                    KRAJ_SL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Kraj odcinka - słownie"),
                    DATA_START = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data od"),
                    DATA_STOP = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data do"),
                    GODZ_START = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina od"),
                    GODZ_STOP = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina do"),
                    DOBY = table.Column<int>(type: "int", nullable: true, comment: "Ilość dob"),
                    GODZINY = table.Column<double>(type: "float", nullable: true, comment: "Ilość godzin"),
                    NOCLEGI = table.Column<int>(type: "int", nullable: true, comment: "Ilość noclegów"),
                    DIETA_ILOSC = table.Column<double>(type: "float", nullable: true, comment: "Ilość diet"),
                    DIETA_WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Waluta diet"),
                    DIETA_STAWKA = table.Column<double>(type: "float", nullable: true, comment: "Stawka dla 1 diety"),
                    NOCLEG_STAWKA = table.Column<double>(type: "float", nullable: true, comment: "Stawka 1 noclegu"),
                    DIETA = table.Column<double>(type: "float", nullable: true, comment: "Łącznie diety"),
                    NOCLEG = table.Column<double>(type: "float", nullable: true, comment: "Łącznie noclegi"),
                    INNE = table.Column<double>(type: "float", nullable: true, comment: "Inne koszty"),
                    DIETY_RAZEM = table.Column<double>(type: "float", nullable: true, comment: "Diety dla odcinka razem"),
                    NOCLEGI_BKP = table.Column<int>(type: "int", nullable: true, comment: "Ilość noclegów - backup na potrzeby kontroli"),
                    MIASTO = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Miasto"),
                    RAB_TYP_STAWKI = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true, comment: "RABEN - typ stawki - S - stała, M - malejaca")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_DELEGACJE_DIETY", x => x.ID_DELEGACJE_DIETY);
                },
                comment: "Delegacje pracowników - odcinki");

            migrationBuilder.CreateTable(
                name: "DELEGACJE_LOGOWANIA",
                columns: table => new
                {
                    ID_DELEGACJE_LOGOWANIA = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    KIEROWCA_ID = table.Column<int>(type: "int", nullable: false),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    TYP_PRACY = table.Column<int>(type: "int", nullable: true),
                    TYP_LOGOWANIA = table.Column<int>(type: "int", nullable: true),
                    TIMES = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())")
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "DELEGACJE_POM",
                columns: table => new
                {
                    ID_DELEGACJE_POM = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SFM_VEH_EVENTS_ID = table.Column<int>(type: "int", nullable: true),
                    STATUS = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "DeletedAttachments",
                columns: table => new
                {
                    DeletedAttachmentsId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    FileName = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    TerminalType = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    CreateDT = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__DeletedA__6F86A0E811087611", x => x.DeletedAttachmentsId);
                });

            migrationBuilder.CreateTable(
                name: "Desktop",
                schema: "app",
                columns: table => new
                {
                    DesktopId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true),
                    Hint = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    ToolId = table.Column<int>(type: "int", nullable: false),
                    IconIndexId = table.Column<int>(type: "int", nullable: false),
                    UserId = table.Column<int>(type: "int", nullable: true),
                    Order = table.Column<int>(type: "int", nullable: true),
                    ProfileId = table.Column<int>(type: "int", nullable: true),
                    ShortCut = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    DictionaryId = table.Column<int>(type: "int", nullable: true),
                    TextId = table.Column<int>(type: "int", nullable: true),
                    DesktopElementFontSize = table.Column<int>(type: "int", nullable: true),
                    DesktopElementLineCount = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Desktop", x => x.DesktopId);
                });

            migrationBuilder.CreateTable(
                name: "DICTIONARIES",
                columns: table => new
                {
                    ID_DICTIONARIES = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    NAME = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    DESCRIPTION = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    ReadOnly = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_DICTIONARIES", x => x.ID_DICTIONARIES);
                },
                comment: "Tabela słowników");

            migrationBuilder.CreateTable(
                name: "Dictionary",
                schema: "app",
                columns: table => new
                {
                    DictionaryId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Dictionary", x => x.DictionaryId);
                });

            migrationBuilder.CreateTable(
                name: "Dictionary",
                schema: "ling",
                columns: table => new
                {
                    DictionaryId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ApplicationId = table.Column<int>(type: "int", nullable: true),
                    ApplicationModuleId = table.Column<int>(type: "int", nullable: true),
                    ApplicationContextId = table.Column<int>(type: "int", nullable: true),
                    ApplicationContextReference = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    Name = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Dictionary", x => x.DictionaryId);
                });

            migrationBuilder.CreateTable(
                name: "DICTIONARY_VALUES",
                columns: table => new
                {
                    ID_DICTIONARY_VALUES = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    DICTIONARIES_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    NAME = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: false, defaultValueSql: "('')"),
                    DESCRIPTION = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true),
                    ACTIVE = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('1')"),
                    EXT_VALUE_1 = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    EXT_VALUE_2 = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    EXT_VALUE_3 = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DictionaryId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TextId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    ImageIndex = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    VISIBLE = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('1')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_DICTIONARY_VALUES", x => x.ID_DICTIONARY_VALUES);
                },
                comment: "Tabela słowników - wartości");

            migrationBuilder.CreateTable(
                name: "DictionaryText",
                schema: "app",
                columns: table => new
                {
                    DictionaryId = table.Column<int>(type: "int", nullable: false),
                    TextId = table.Column<int>(type: "int", nullable: false),
                    DatabaseLanguageId = table.Column<int>(type: "int", nullable: false),
                    DictionaryTextId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Text = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CustomText = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_DictionaryText", x => new { x.DictionaryId, x.DatabaseLanguageId, x.TextId });
                });

            migrationBuilder.CreateTable(
                name: "DictionaryText",
                schema: "lng",
                columns: table => new
                {
                    DictionaryTextId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MultilingualTextId = table.Column<int>(type: "int", nullable: false),
                    DatabaseLanguageId = table.Column<int>(type: "int", nullable: false),
                    Text = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CustomText = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__Dictiona__D527CFE631B23DE9", x => x.DictionaryTextId);
                });

            migrationBuilder.CreateTable(
                name: "DOD_PALIWOWE",
                columns: table => new
                {
                    ID_DOD_PALIWOWE = table.Column<int>(type: "int", nullable: false),
                    DATA_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    DOTYCZY = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    OPIS = table.Column<string>(type: "text", nullable: true),
                    ALGORYTM = table.Column<string>(type: "text", nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_DOD_PALIWOWE", x => x.ID_DOD_PALIWOWE);
                });

            migrationBuilder.CreateTable(
                name: "DOKUMENTY",
                columns: table => new
                {
                    ID_DOKUMENTY = table.Column<int>(type: "int", nullable: false),
                    LP = table.Column<int>(type: "int", nullable: true, comment: "Lp"),
                    KOD = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Kod dokumentu"),
                    OPIS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Opis dokumentu"),
                    DOMYSLNIE_WIDOCZNY = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy dokument domyślnie dodawany do obiektu (widoczny)"),
                    DOMYSLNIE_WYMAGANY = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy dokument domyślnie wymagany"),
                    SYSTEMOWY = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy dokument systemowy - dodany przez InterLAN"),
                    GRUPA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Oznaczenie z jakim procesem zwiazane są dokumnety: UBEZPIECZENIA,FTL.."),
                    STATUS = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Status danego dokumentu w grupie np. w UBEZPIECZENIU moze byc ZGLOSZENIE"),
                    DOMYSLNIE_ROD = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy dokument domyślnie jest ROD"),
                    WYMAGAJ_NUMER = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy dokument wymaga wprowadzenie numeru"),
                    DOMYSLNIE_ROD_DO = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Do kogo zwrot ROD"),
                    DOMYSLNIE_EROD = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy dokument domyślnie jest eROD"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja"),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dział"),
                    DictionaryId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TextId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_DOKUMENTY", x => x.ID_DOKUMENTY);
                },
                comment: "Słownik dokumentów wymaganych");

            migrationBuilder.CreateTable(
                name: "DOKUMENTY_KIEROWCY",
                columns: table => new
                {
                    ID_DOKUMENTY_KIEROWCY = table.Column<int>(type: "int", nullable: false),
                    DOKUMENT_ID = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    DOKUMENT = table.Column<string>(type: "varchar(120)", unicode: false, maxLength: 120, nullable: true),
                    PRACOWNIK_ID = table.Column<int>(type: "int", nullable: true),
                    DATA_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    INFO_DOD = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    VISIBLE = table.Column<int>(type: "int", nullable: true),
                    BLOKUJ_PO = table.Column<int>(type: "int", nullable: true),
                    ARCH = table.Column<int>(type: "int", nullable: true),
                    DATA_ARCH = table.Column<DateTime>(type: "datetime", nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_DOKUMENTY_KIEROWCY", x => x.ID_DOKUMENTY_KIEROWCY);
                });

            migrationBuilder.CreateTable(
                name: "DOKUMENTY_STATUS",
                columns: table => new
                {
                    ID_DOKUMENTY_STATUS = table.Column<int>(type: "int", nullable: false),
                    GRUPA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Oznaczenie z jakim procesem zwiazane są dokumnety: UBEZPIECZENIA,FTL.."),
                    STATUS = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Status"),
                    SYSTEMOWY = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy status systemowy - dodany przez InterLAN"),
                    DictionaryId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TextId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_DOKUMENTY_STATUS", x => x.ID_DOKUMENTY_STATUS);
                },
                comment: "Słownik statusów dokumentów");

            migrationBuilder.CreateTable(
                name: "DOKUMENTY_SZUFLADY",
                columns: table => new
                {
                    ID_DOKUMENTY_SZUFLADY = table.Column<int>(type: "int", nullable: false),
                    KOD = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Kod pozycji"),
                    OPIS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Opis "),
                    DictionaryId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TextId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_DOKUMENTY_SZUFLADY", x => x.ID_DOKUMENTY_SZUFLADY);
                },
                comment: "Słownik szuflad na dokumenty ROD");

            migrationBuilder.CreateTable(
                name: "DOKUMENTY_UWAGI",
                columns: table => new
                {
                    ID_DOKUMENTY_UWAGI = table.Column<int>(type: "int", nullable: false),
                    KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PROCENT = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_DOKUMENTY_UWAGI", x => x.ID_DOKUMENTY_UWAGI);
                });

            migrationBuilder.CreateTable(
                name: "DostepnyTabor",
                schema: "opti",
                columns: table => new
                {
                    SolverTaskId = table.Column<int>(type: "int", nullable: true),
                    SessionId = table.Column<int>(type: "int", nullable: true),
                    ID_TABORU = table.Column<int>(type: "int", nullable: true),
                    ID_NACZEPY = table.Column<int>(type: "int", nullable: true),
                    PROFIL_ID = table.Column<int>(type: "int", nullable: true),
                    MAX_ILOSC = table.Column<double>(type: "float", nullable: true),
                    MAX_WAGA = table.Column<double>(type: "float", nullable: true),
                    MAX_OBJ = table.Column<double>(type: "float", nullable: true),
                    NACZ_MAX_ILOSC = table.Column<double>(type: "float", nullable: true),
                    NACZ_MAX_WAGA = table.Column<double>(type: "float", nullable: true),
                    NACZ_MAX_OBJ = table.Column<double>(type: "float", nullable: true),
                    PROFIL = table.Column<string>(type: "nvarchar(255)", maxLength: 255, nullable: true),
                    VIP = table.Column<int>(type: "int", nullable: true),
                    REZERWACJA = table.Column<int>(type: "int", nullable: true),
                    REZERWACJA_TYP = table.Column<string>(type: "nvarchar(255)", maxLength: 255, nullable: true),
                    REZERWACJA_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    REZERWACJA_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    REZERWACJA_Z_LADUNKIEM = table.Column<int>(type: "int", nullable: true),
                    REZERWACJA_MIEJSCE_ID = table.Column<int>(type: "int", nullable: true),
                    REZERWACJA_MIEJSCE_KRAJ = table.Column<string>(type: "nvarchar(255)", maxLength: 255, nullable: true),
                    REZERWACJA_MIEJSCE_LON = table.Column<double>(type: "float", nullable: true),
                    REZERWACJA_MIEJSCE_LAT = table.Column<double>(type: "float", nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "nvarchar(255)", maxLength: 255, nullable: true),
                    LOKALIZACJA_KRAJ = table.Column<string>(type: "nvarchar(255)", maxLength: 255, nullable: true),
                    OstRejestrPOZ_TYP = table.Column<string>(type: "nvarchar(10)", maxLength: 10, nullable: true),
                    OstRejestrPOZId = table.Column<int>(type: "int", nullable: true),
                    OstRejestrPOZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    OstLON = table.Column<double>(type: "float", nullable: true),
                    OstLAT = table.Column<double>(type: "float", nullable: true),
                    KabotazKraj = table.Column<string>(type: "nvarchar(10)", maxLength: 10, nullable: true),
                    KabotazIlosc = table.Column<int>(type: "int", nullable: true),
                    KabotazNaPusto = table.Column<int>(type: "int", nullable: true),
                    OstLAT_KIER = table.Column<double>(type: "float", nullable: true),
                    OstLON_KIER = table.Column<double>(type: "float", nullable: true),
                    OstRejestrPOZ_KIER = table.Column<DateTime>(type: "datetime", nullable: true),
                    OstRejestrPOZId_KIER = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "DostepnyTaborKierowcy",
                schema: "opti",
                columns: table => new
                {
                    SolverTaskId = table.Column<int>(type: "int", nullable: true),
                    SessionId = table.Column<int>(type: "int", nullable: true),
                    ID_KIEROWCY = table.Column<int>(type: "int", nullable: true),
                    ID_TABORU = table.Column<int>(type: "int", nullable: true),
                    ID_NACZEPY = table.Column<int>(type: "int", nullable: true),
                    UplywajacyTermDokTypDok = table.Column<string>(type: "nvarchar(255)", maxLength: 255, nullable: true),
                    UplywajacyTermDokData = table.Column<DateTime>(type: "datetime", nullable: true),
                    Zjazd = table.Column<string>(type: "nvarchar(30)", maxLength: 30, nullable: true),
                    TerminZjazdu = table.Column<DateTime>(type: "datetime", nullable: true),
                    KierowcaKraj = table.Column<string>(type: "nvarchar(255)", maxLength: 255, nullable: true),
                    KierowcaBlokadaKraj = table.Column<string>(type: "nvarchar(255)", maxLength: 255, nullable: true),
                    KierowcaBlokadaPOI = table.Column<int>(type: "int", nullable: true),
                    KierowcaBlokadaLAD = table.Column<string>(type: "nvarchar(255)", maxLength: 255, nullable: true),
                    KierowcaBlokadaNaWYWiekszeOd2 = table.Column<int>(type: "int", nullable: true),
                    GranicznaDlugoscTrasy = table.Column<int>(type: "int", nullable: true),
                    KierowcaZgodaNaTrasyDluzszeNizGranicznaDlugoscTrasy = table.Column<int>(type: "int", nullable: true),
                    ZjazdWeekendpwyTyp = table.Column<string>(type: "nvarchar(255)", maxLength: 255, nullable: true),
                    ZjazdWeekendpwyData = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZjazdWeekendpwyPOIId = table.Column<int>(type: "int", nullable: true),
                    ZjazdWeekendpwyPOI_LON = table.Column<double>(type: "float", nullable: true),
                    ZjazdWeekendpwyPOI_LAT = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "DPS_HepTable",
                schema: "opti",
                columns: table => new
                {
                    id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    DT = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    SessionId = table.Column<int>(type: "int", nullable: true),
                    Status = table.Column<int>(type: "int", nullable: true, defaultValueSql: "((0))"),
                    Msg = table.Column<string>(type: "nvarchar(max)", nullable: true, defaultValueSql: "('')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_DPS_HepTable", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "DPS_StateInfo",
                schema: "opti",
                columns: table => new
                {
                    state = table.Column<int>(type: "int", nullable: false),
                    stateNext = table.Column<int>(type: "int", nullable: true),
                    step = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    logStep = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    logInfo = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__DPS_Stat__A9360BC20EBA5BAE", x => x.state);
                });

            migrationBuilder.CreateTable(
                name: "DPS-Opti_Routes_GetTaskGroups_Task",
                schema: "opti",
                columns: table => new
                {
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    InsertDt = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    SolverTaskId = table.Column<int>(type: "int", nullable: true),
                    SessionId = table.Column<int>(type: "int", nullable: true),
                    ID_TABORU = table.Column<int>(type: "int", nullable: true),
                    groupId = table.Column<int>(type: "int", nullable: true),
                    ID_ZLECENIA_ZA_WY = table.Column<int>(type: "int", nullable: true),
                    lp = table.Column<int>(type: "int", nullable: true),
                    lat = table.Column<decimal>(type: "numeric(20,6)", nullable: true),
                    lon = table.Column<decimal>(type: "numeric(20,6)", nullable: true),
                    dt = table.Column<DateTime>(type: "datetime", nullable: true),
                    dtMax = table.Column<DateTime>(type: "datetime", nullable: true),
                    duration = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_DPS-Opti_Routes_GetTaskGroups_Task", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "DPS-Opti_Routes_GetTaskGroups_VehTask",
                schema: "opti",
                columns: table => new
                {
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    InsertDt = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    SolverTaskId = table.Column<int>(type: "int", nullable: true),
                    SessionId = table.Column<int>(type: "int", nullable: true),
                    ID_TABORU = table.Column<int>(type: "int", nullable: true),
                    ID_ZLECENIA_ZA_WY = table.Column<int>(type: "int", nullable: true),
                    lp = table.Column<int>(type: "int", nullable: true),
                    lat = table.Column<decimal>(type: "numeric(20,6)", nullable: true),
                    lon = table.Column<decimal>(type: "numeric(20,6)", nullable: true),
                    dt = table.Column<DateTime>(type: "datetime", nullable: true),
                    dtMax = table.Column<DateTime>(type: "datetime", nullable: true),
                    duration = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_DPS-Opti_Routes_GetTaskGroups_VehTask", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "DriversOnMap",
                schema: "opti",
                columns: table => new
                {
                    DriversOnMapId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    PlannerTypeId = table.Column<int>(type: "int", nullable: false),
                    SessionId = table.Column<int>(type: "int", nullable: false),
                    UserId = table.Column<int>(type: "int", nullable: false),
                    DriverId = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_DriversOnMap", x => x.DriversOnMapId);
                });

            migrationBuilder.CreateTable(
                name: "DZIALY",
                columns: table => new
                {
                    ID_DZIALY = table.Column<int>(type: "int", nullable: false),
                    KOD = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: false, comment: "Kod działu"),
                    OPIS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Opis"),
                    SYMBOL_DO_NUMERACJI = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Symbol używany w formacie numeracji w licznikach"),
                    SYMBOL_DO_FK = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Symbol używany w interfejsach do FK"),
                    SYMBOL_DOD_1 = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Dodatkowy symbol używany w interfejsach"),
                    SYMBOL_DOD_2 = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Dodatkowy symbol używany w interfejsach"),
                    SYMBOL_DOD_3 = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Dodatkowy symbol używany w interfejsach"),
                    SYMBOL_W_SIECI = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Symbol lokalizacji w sieci dystrybucyjnej"),
                    USTALENIA_SP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Relacja do tekstu ustaleń klienta na zlec. spedycyjne - tab: TEKSTY_DO_WYDRUKOW"),
                    USTALENIA_SP_P = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Relacja do tekstu ustaleń przewoźnika na zlec. spedycyjne - tab: TEKSTY_DO_WYDRUKOW"),
                    USTALENIA_TR = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Relacja do tekstu ustaleń klienta na zlec. transportowe - tab: TEKSTY_DO_WYDRUKOW"),
                    USTALENIA_TR_P = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Relacja do tekstu ustaleń przewoźnika na zlec. transportowe - tab: TEKSTY_DO_WYDRUKOW"),
                    USTALENIA_DR = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Relacja do tekstu ustaleń klienta na zlec. drobnicowe - tab: TEKSTY_DO_WYDRUKOW"),
                    USTALENIA_DR_P = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Relacja do tekstu ustaleń przewoźnika na zlec. drobnicowe - tab: TEKSTY_DO_WYDRUKOW"),
                    USTALENIA_LL = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Relacja do tekstu ustaleń przewoźnika na trasę drobnicową - tab: TEKSTY_DO_WYDRUKOW"),
                    USTALENIA_LL_ZLEC = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Relacja do tekstu ustaleń klienta na trasę drobnicową - tab: TEKSTY_DO_WYDRUKOW"),
                    IMPORT = table.Column<int>(type: "int", nullable: true, comment: "Flaga aktywnosci - IMPORT"),
                    EKSPORT = table.Column<int>(type: "int", nullable: true, comment: "Flaga aktywnosci - EKSPORT"),
                    KRAJ = table.Column<int>(type: "int", nullable: true, comment: "Flaga aktywnosci - KRAJ"),
                    DRO_DEF_OPIS_LAD_ID = table.Column<int>(type: "int", nullable: true, comment: "Domyślny opis ładunku paczki"),
                    DRO_PRZELICZNIKI_Z = table.Column<int>(type: "int", nullable: true, comment: "Domyślnie pobieraj przeliczniki dla drobnicy z... 0 - globalne, 1 - kontrahent, 2 - partner"),
                    DRO_ALG_WAG_OBL = table.Column<int>(type: "int", nullable: true, comment: "Domyślnie ustaw algorytm wagi oblicz. (-1 - wyłaczone)"),
                    BEZ_KONTR_DOP_OPAK = table.Column<int>(type: "int", nullable: true, comment: "Wyłacz kontrole dopuszczalnych opakowań"),
                    AKTYWNY = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('1')", comment: "Flaga, czy lokalizacja jest aktywny"),
                    DZIAL_NADRZ_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do lokalizacji nadrzędnej - tab: DZIALY"),
                    DZIAL_NADRZ = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Kod działu nadrzędnego")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_DZIALY", x => x.ID_DZIALY);
                },
                comment: "Działy systemowe");

            migrationBuilder.CreateTable(
                name: "DZIALY_PRAWA",
                columns: table => new
                {
                    ID_DZIALY_PRAWA = table.Column<int>(type: "int", nullable: false),
                    DZIALY_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do działu - tab: DZIALY"),
                    DZIALY = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Kod działu"),
                    UZYTKOWNIK_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika - tab: UZYTKOWNIK"),
                    PODGLAD = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy ma prawo podglądu danych z działu"),
                    EDYCJA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy ma prawo edycji danych z działu")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_DZIALY_PRAWA", x => x.ID_DZIALY_PRAWA);
                },
                comment: "Prawa użytkowników do lokalizacji");

            migrationBuilder.CreateTable(
                name: "E_ADRES",
                columns: table => new
                {
                    ID_E_ADRES = table.Column<int>(type: "int", nullable: false),
                    KRAJ_ID = table.Column<int>(type: "int", nullable: true),
                    MIASTO_ID = table.Column<int>(type: "int", nullable: true),
                    ADRES = table.Column<string>(type: "varchar(70)", unicode: false, maxLength: 70, nullable: true),
                    ADRES_NOPL = table.Column<string>(type: "varchar(70)", unicode: false, maxLength: 70, nullable: true),
                    KOD = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true),
                    KOD_POCZTA = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true),
                    LON = table.Column<double>(type: "float", nullable: true),
                    LAT = table.Column<double>(type: "float", nullable: true),
                    PLAC = table.Column<int>(type: "int", nullable: true),
                    OSIEDLE = table.Column<int>(type: "int", nullable: true),
                    DZIELNICA = table.Column<int>(type: "int", nullable: true),
                    ZJAZD = table.Column<int>(type: "int", nullable: true),
                    LOTNISKO = table.Column<int>(type: "int", nullable: true),
                    ULICA = table.Column<int>(type: "int", nullable: true),
                    RZEKA = table.Column<int>(type: "int", nullable: true),
                    JEZIORO = table.Column<int>(type: "int", nullable: true),
                    CMENTARZ = table.Column<int>(type: "int", nullable: true),
                    PARK = table.Column<int>(type: "int", nullable: true),
                    MOST = table.Column<int>(type: "int", nullable: true),
                    ALEJA = table.Column<int>(type: "int", nullable: true),
                    RYNEK = table.Column<int>(type: "int", nullable: true),
                    RONDO = table.Column<int>(type: "int", nullable: true),
                    INNY = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_E_ADRES", x => x.ID_E_ADRES);
                });

            migrationBuilder.CreateTable(
                name: "E_DOK_HIST",
                columns: table => new
                {
                    ID_E_DOK_HIST = table.Column<int>(type: "int", nullable: false),
                    OBIEKT_TYP = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: false),
                    OBIEKT_ID = table.Column<int>(type: "int", nullable: false),
                    STATUS = table.Column<int>(type: "int", nullable: false),
                    UZYTKOWNIK_ID = table.Column<int>(type: "int", nullable: false, comment: "Retacja do użytkownika rej. spłate - tab: UZYTKOWNIK"),
                    UZYTKOWNIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: false, comment: "Nazwa użytkwnika"),
                    DATA_GODZ = table.Column<DateTime>(type: "datetime", nullable: false),
                    APP_NAME = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: false),
                    APP_VER = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: false),
                    INFO = table.Column<string>(type: "text", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_E_DOK_HIST", x => x.ID_E_DOK_HIST);
                });

            migrationBuilder.CreateTable(
                name: "E_KRAJ",
                columns: table => new
                {
                    ID_E_KRAJ = table.Column<int>(type: "int", nullable: false),
                    SYMBOL_ISO = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    SYMBOL_DROGOWY = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    KRAJ = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_E_KRAJ", x => x.ID_E_KRAJ);
                });

            migrationBuilder.CreateTable(
                name: "E_MIASTO",
                columns: table => new
                {
                    ID_E_MIASTO = table.Column<int>(type: "int", nullable: false),
                    KRAJ_ID = table.Column<int>(type: "int", nullable: true),
                    KOD = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true),
                    KOD_POCZTA = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true),
                    MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    MIASTO_NOPL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    WOJEWODZTWO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    POWIAT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    LON = table.Column<double>(type: "float", nullable: true),
                    LAT = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_E_MIASTO", x => x.ID_E_MIASTO);
                });

            migrationBuilder.CreateTable(
                name: "EDI_REQUEST",
                columns: table => new
                {
                    ID_EDI_REQUEST = table.Column<int>(type: "int", nullable: false),
                    CREATE_DT = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    DONE_DT = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data realizacji"),
                    FLAG = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('1')", comment: "stan realizacji  0 - zrobione, - 1 - nierealizowalne, 1 - do zrobienia"),
                    FUNKCJA_NR = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "numer funkcji wg wpisow ini - Funkcja_1 to 1"),
                    REQUESTER = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "nazwa procesu, ktory wymusil przebieg"),
                    PARAMS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "dodatkowe parametry dla procedury")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_EDI_REQUEST", x => x.ID_EDI_REQUEST);
                },
                comment: "Tabela do extra przebiegów dla EDI_SRV");

            migrationBuilder.CreateTable(
                name: "EDI_STATUSY2INSERT",
                columns: table => new
                {
                    ID_EDI_STATUSY2INSERT = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_OBJ = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ID_REC = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    SOURCE = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    STATUS = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(35)", unicode: false, maxLength: 35, nullable: true),
                    INFO = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    CZAS = table.Column<DateTime>(type: "datetime", nullable: true),
                    INSERT_DT = table.Column<DateTime>(type: "datetime", nullable: true),
                    DONE = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    DONE_DT = table.Column<DateTime>(type: "datetime", nullable: true),
                    INSERT_WHO = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_EDI_STATUSY2INSERT", x => x.ID_EDI_STATUSY2INSERT);
                });

            migrationBuilder.CreateTable(
                name: "EMAIL_ATTACH",
                columns: table => new
                {
                    ID_EMAIL_ATTACH = table.Column<int>(type: "int", nullable: false),
                    ID_EMAIL_MSG = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    FILENAME = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    BODY = table.Column<byte[]>(type: "image", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_EMAIL_ATTACH", x => x.ID_EMAIL_ATTACH);
                });

            migrationBuilder.CreateTable(
                name: "EMAIL_CROSS",
                columns: table => new
                {
                    ID_EMAIL_CROSS = table.Column<int>(type: "int", nullable: false),
                    ID_EMAIL_SRV = table.Column<int>(type: "int", nullable: true, comment: "id definicji parametrów skrzynki pocztowej"),
                    ID_OBJ = table.Column<int>(type: "int", nullable: true, comment: "id obiektu SPEED"),
                    ID_REC = table.Column<int>(type: "int", nullable: true, comment: "id rekordu obiektu SPEED"),
                    FUNKCJA = table.Column<short>(type: "smallint", nullable: true, comment: "(0-64) id funkcji skrzynki pocztowej pełnionej w ramach obiektu")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_EMAIL_CROSS", x => x.ID_EMAIL_CROSS);
                });

            migrationBuilder.CreateTable(
                name: "EMAIL_MSG",
                columns: table => new
                {
                    ID_EMAIL_MSG = table.Column<int>(type: "int", nullable: false),
                    ID_EMAIL_SRV = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    INOUT = table.Column<short>(type: "smallint", nullable: false, defaultValueSql: "('0')", comment: "rodzaj wiadomości (0:IN; 1:OUT)"),
                    STATUS = table.Column<short>(type: "smallint", nullable: false, defaultValueSql: "('0')", comment: "status wiadomości (0:nowa/nieprzeczytana; 1:wysłana/przeczytana; 2:błąd)"),
                    ATTACH = table.Column<short>(type: "smallint", nullable: true),
                    FOLDER = table.Column<short>(type: "smallint", nullable: true),
                    MAIL_TYPE = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    MAIL_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    SUBJECT = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    MAIL_FROM = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    MAIL_TO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    MAIL_ID = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MAIL_FORMAT = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MAIL_HASH = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    MAIL_BODY = table.Column<string>(type: "text", nullable: true),
                    EML = table.Column<string>(type: "text", nullable: true, comment: "oryginał wiadomości"),
                    MAIL_ERROR = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "błędy komunikacji"),
                    PROCESS_STAT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "0 - OK; 1 - wystapiły błędy"),
                    PROCESS_INFO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    PROCESS_LOG = table.Column<string>(type: "text", nullable: true),
                    CONFIRM = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "0/1 - wymagaj potwierdzenia przeczytania")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_EMAIL_MSG", x => x.ID_EMAIL_MSG);
                });

            migrationBuilder.CreateTable(
                name: "EMAIL_SRV",
                columns: table => new
                {
                    ID_EMAIL_SRV = table.Column<int>(type: "int", nullable: false),
                    EMAIL = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "adres konta"),
                    EMAIL_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "nazwa konta"),
                    SMTP_SERVER = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    SMTP_PORT = table.Column<int>(type: "int", nullable: true),
                    SMTP_LOGIN = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SMTP_PASSWORD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SMTP_AUTHENTICATION = table.Column<short>(type: "smallint", nullable: true),
                    POP3_SERVER = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    POP3_PORT = table.Column<int>(type: "int", nullable: true),
                    POP3_LOGIN = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    POP3_PASSWORD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ID_USER = table.Column<int>(type: "int", nullable: true, comment: "właściciel konta"),
                    STATUS = table.Column<short>(type: "smallint", nullable: true, comment: "0/1 - aktywne"),
                    DEL_SRC = table.Column<short>(type: "smallint", nullable: true, comment: "0/1 - usuwaj z serwera"),
                    SERWER_IMAP = table.Column<short>(type: "smallint", nullable: true, comment: "0/1 - serwer IMAP"),
                    IMAP_MAILBOX = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SMTP_SSL = table.Column<short>(type: "smallint", nullable: true, comment: "0/1 - połączenie szyfrowane SSL/TLS"),
                    POP3_SSL = table.Column<short>(type: "smallint", nullable: true, comment: "0/1 - połączenie szyfrowane SSL/TLS"),
                    LOCKPROCESSING = table.Column<short>(type: "smallint", nullable: true, comment: "0/1 - blokada automatycznego przetwarzania wiadomości"),
                    FUNKCJA = table.Column<string>(type: "varchar(64)", unicode: false, maxLength: 64, nullable: true, comment: "funkcje jakie może pełnić konto e-mail"),
                    SSLSTARTMODE = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    SSLEnabledProtocols = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_EMAIL_SRV", x => x.ID_EMAIL_SRV);
                });

            migrationBuilder.CreateTable(
                name: "EMI_XML",
                columns: table => new
                {
                    ID_EMI_XML = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    DIRECTION = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: false),
                    TYPE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: false),
                    DT = table.Column<DateTime>(type: "datetime", nullable: false),
                    XML = table.Column<string>(type: "xml", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_EMI_XML", x => x.ID_EMI_XML);
                });

            migrationBuilder.CreateTable(
                name: "ESPEED_DS",
                columns: table => new
                {
                    id = table.Column<int>(type: "int", nullable: false),
                    select_body = table.Column<string>(type: "text", nullable: true),
                    Name = table.Column<string>(type: "varchar(450)", unicode: false, maxLength: 450, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ESPEED_DS", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "ESPEED_TABS",
                columns: table => new
                {
                    id_espeed_tabs = table.Column<int>(type: "int", nullable: false),
                    espeed_ds_id = table.Column<int>(type: "int", nullable: true),
                    fields_nr = table.Column<int>(type: "int", nullable: true),
                    tab_name = table.Column<string>(type: "varchar(90)", unicode: false, maxLength: 90, nullable: true),
                    image_url = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    ONLY_AUTHORIZED = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ESPEED_TABS", x => x.id_espeed_tabs);
                });

            migrationBuilder.CreateTable(
                name: "ESPEED_TABS_LABELS",
                columns: table => new
                {
                    ID = table.Column<int>(type: "int", nullable: false),
                    ID_ESPEED_TABS = table.Column<int>(type: "int", nullable: true),
                    TEXT_BOX_LABEL = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    NR_POLA = table.Column<int>(type: "int", nullable: true),
                    TEXT_BOX_VAR = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    TEXT_BOX_TYPE = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ESPEED_TABS_LABELS", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "ESPEED_THEMES",
                columns: table => new
                {
                    id = table.Column<int>(type: "int", nullable: false),
                    delete_image = table.Column<string>(type: "varchar(450)", unicode: false, maxLength: 450, nullable: true),
                    mod_image = table.Column<string>(type: "varchar(450)", unicode: false, maxLength: 450, nullable: true),
                    add_image = table.Column<string>(type: "varchar(450)", unicode: false, maxLength: 450, nullable: true),
                    background_color = table.Column<string>(type: "varchar(18)", unicode: false, maxLength: 18, nullable: true),
                    header_bg_color = table.Column<string>(type: "varchar(18)", unicode: false, maxLength: 18, nullable: true),
                    header_image = table.Column<string>(type: "varchar(450)", unicode: false, maxLength: 450, nullable: true),
                    page_control_color = table.Column<string>(type: "varchar(18)", unicode: false, maxLength: 18, nullable: true),
                    main_frame_color = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    theme = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    user_id = table.Column<int>(type: "int", nullable: true),
                    header_bg_image = table.Column<string>(type: "varchar(450)", unicode: false, maxLength: 450, nullable: true),
                    header_bg_image_style = table.Column<string>(type: "varchar(450)", unicode: false, maxLength: 450, nullable: true),
                    footer_text = table.Column<string>(type: "varchar(450)", unicode: false, maxLength: 450, nullable: true),
                    footer_link = table.Column<string>(type: "varchar(450)", unicode: false, maxLength: 450, nullable: true),
                    footer_font = table.Column<string>(type: "varchar(450)", unicode: false, maxLength: 450, nullable: true),
                    footer_size = table.Column<string>(type: "varchar(450)", unicode: false, maxLength: 450, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ESPEED_THEMES", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "ETA_EVENTS",
                columns: table => new
                {
                    ID_ETA_EVENTS = table.Column<int>(type: "int", nullable: false),
                    ID_OBJ = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "ID obiektu SPEED"),
                    ID_REC = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "ID rekordu obiektu"),
                    DT_ETA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas uruchomienia zdarzenia (DT_ETA = DT_Base + OneMinute*Delta_Min)"),
                    DT_EXPIRE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas wygaśnięcia"),
                    DT_STATUS = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas nadania statusu"),
                    STATUS = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "0-nowy/10-wykonany/20-anulowany/30-wygasł/99-blad"),
                    ERROR_MSG = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: false, comment: "treść błędu podczas wykonywania akcji zdarzenia"),
                    ETA_LON = table.Column<double>(type: "float", nullable: true, comment: "planowana pozycja GPS (+/-)E/W"),
                    ETA_LAT = table.Column<double>(type: "float", nullable: true, comment: "planowana pozycja GPS (+/-)N/S"),
                    ID_ETA_EVENTS_FMT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "formatka definicji wyzwalacza i akcji"),
                    SRC_STATUS = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: false, comment: "status, który wyzwolił zdarzenie"),
                    DT_CREATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas utworzenia"),
                    DT_MODIFY = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas ostatniej modyfikacji"),
                    ID_SFM_MSG = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "ID utworzonej wiadomości"),
                    ID_SFM_POS = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "ID pozycji najbliższej czasowo"),
                    OPIS = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true, comment: "opis zdarzenia"),
                    DELTA_MIN = table.Column<int>(type: "int", nullable: true, comment: "przesunięcie w minutach względem DT_Base"),
                    DT_BASE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas bazowy obiektu z ID_REC"),
                    ID_SFM_SMS = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "ID utworzonej wiadomości SMS")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ETA_EVENTS", x => x.ID_ETA_EVENTS);
                });

            migrationBuilder.CreateTable(
                name: "ETA_EVENTS_FMT",
                columns: table => new
                {
                    ID_ETA_EVENTS_FMT = table.Column<int>(type: "int", nullable: false),
                    SYMBOL = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: false, comment: "symbol formatki zdarzenia"),
                    ID_OBJ = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "ID obiektu SPEED"),
                    STATUSLIST = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: false, comment: "statusy (po przecinkach) wyzwalające zdarzenie"),
                    ACT_MSG = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "(0/1) akcja - utworz wiadomość"),
                    ID_OBJ_WZORZEC = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "ID wzorca do utworzenia wiadomości"),
                    ALERT_MSG = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "(0/1) utworz wiadomość typu alert"),
                    ACT_PROCEDURE = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "(0/1) akcja - wykonaj procedurę składowaną"),
                    PROCEDURA = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "nazwa procedury składowanej"),
                    PROCEDURA_ID = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "id procedury składowanej"),
                    OPIS = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true, comment: "opis zdarzenia"),
                    DELTA_MIN = table.Column<int>(type: "int", nullable: true, comment: "przesunięcie w minutach względem ETA_EVENTS.DT_Base"),
                    ACT_SMS = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "(0/1) akcja - utworz wiadomość SMS"),
                    ID_OBJ_WZORZEC_SMS = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "ID wzorca wiadomości SMS")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ETA_EVENTS_FMT", x => x.ID_ETA_EVENTS_FMT);
                });

            migrationBuilder.CreateTable(
                name: "EventLog",
                schema: "geo",
                columns: table => new
                {
                    EventLogId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    CreateTime = table.Column<DateTime>(type: "datetime", nullable: true),
                    GeofencingId = table.Column<int>(type: "int", nullable: true),
                    GeofencingEventId = table.Column<int>(type: "int", nullable: true),
                    EventTypeId = table.Column<int>(type: "int", nullable: true),
                    ActionTypeId = table.Column<int>(type: "int", nullable: true),
                    DriverId = table.Column<int>(type: "int", nullable: true),
                    VehicleId = table.Column<int>(type: "int", nullable: true),
                    TerminalId = table.Column<int>(type: "int", nullable: true),
                    PositionId = table.Column<int>(type: "int", nullable: true),
                    PositionDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Lat = table.Column<double>(type: "float", nullable: true),
                    Lon = table.Column<double>(type: "float", nullable: true),
                    ExtraInfo = table.Column<string>(type: "xml", nullable: true),
                    Status = table.Column<int>(type: "int", nullable: true),
                    LogText = table.Column<string>(type: "varchar(max)", unicode: false, nullable: true),
                    ErrorText = table.Column<string>(type: "varchar(max)", unicode: false, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_EventLog", x => x.EventLogId);
                });

            migrationBuilder.CreateTable(
                name: "EventType",
                schema: "geo",
                columns: table => new
                {
                    EventTypeId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Code = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    Description = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_EventType", x => x.EventTypeId);
                });

            migrationBuilder.CreateTable(
                name: "FAKTURY",
                columns: table => new
                {
                    ID_FAKTURY = table.Column<int>(type: "int", nullable: false),
                    FRM_ID = table.Column<int>(type: "int", nullable: true),
                    PARAGON = table.Column<int>(type: "int", nullable: true),
                    PARAGON_NR = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    PARAGON_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    PARAGON_ROK = table.Column<int>(type: "int", nullable: true),
                    PARAGON_MIES = table.Column<int>(type: "int", nullable: true),
                    PARAGON_FISKALNY = table.Column<int>(type: "int", nullable: true),
                    PARAGON_FISKALNY_NR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PARAGON_WPLATA = table.Column<double>(type: "float", nullable: true),
                    PARAGON_RESZTA = table.Column<double>(type: "float", nullable: true),
                    DEKRET = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DEKRET_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    DEKRET_ROK = table.Column<int>(type: "int", nullable: true),
                    DEKRET_MIES = table.Column<int>(type: "int", nullable: true),
                    NUMER_FAKTURY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NUMER_FAKTURY_KORYG = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NUMER_EXT = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    NUMER = table.Column<int>(type: "int", nullable: true),
                    NUMER_FAKTURY_PF = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NUMER_PF = table.Column<int>(type: "int", nullable: true),
                    TECZKA_ID = table.Column<int>(type: "int", nullable: true),
                    TECZKA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    RODZ_FV = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    JEZYK_FAKTURY = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, defaultValueSql: "('PL')"),
                    TYP_FV = table.Column<int>(type: "int", nullable: true),
                    ZBIORCZA = table.Column<int>(type: "int", nullable: true),
                    ROK_FAKTURY = table.Column<int>(type: "int", nullable: true),
                    ROK_FAKTURY_PF = table.Column<int>(type: "int", nullable: true),
                    MIES_FAKTURY = table.Column<int>(type: "int", nullable: true),
                    MIES_FAKTURY_PF = table.Column<int>(type: "int", nullable: true),
                    FAKTURA_OTRZYMANA = table.Column<int>(type: "int", nullable: true),
                    RODZ_KOSZTOW = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    RODZ_KOSZTOW_EXT = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    UWZGL_ROZL_KIER = table.Column<int>(type: "int", nullable: true),
                    STR_ROZL_KIER = table.Column<int>(type: "int", nullable: true),
                    TYP_KOSZTOW = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    KRAJ_KOSZTOW = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    RODZ_PRZYCHODOW = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: false),
                    KONTRAH_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KONTRAH_NAZWA = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    KONTRAH_ADRES = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    KONTRAH_MIASTO = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    KONTRAH_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    KONTRAH_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KONTRAH_NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    DATA_WYSTAWIENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_SPRZEDAZY = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_OTRZYMANIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_PLATNOSCI = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_ZAPLATY = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZAPLACONO = table.Column<int>(type: "int", nullable: false),
                    STATUS_ZAPLATY = table.Column<int>(type: "int", nullable: true),
                    FORMA_PLATNOSCI = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: false),
                    TERMIN_PLATNOSCI = table.Column<int>(type: "int", nullable: false),
                    NETTO_PLN = table.Column<double>(type: "float", nullable: true),
                    VAT_PLN = table.Column<double>(type: "float", nullable: true),
                    BRUTTO_PLN = table.Column<double>(type: "float", nullable: true),
                    NETTO_RAZEM = table.Column<double>(type: "float", nullable: false),
                    PODATEK_RAZEM = table.Column<double>(type: "float", nullable: false),
                    BRUTTO_RAZEM = table.Column<double>(type: "float", nullable: false),
                    NETTO_PLN_KOR = table.Column<double>(type: "float", nullable: true),
                    VAT_PLN_KOR = table.Column<double>(type: "float", nullable: true),
                    BRUTTO_PLN_KOR = table.Column<double>(type: "float", nullable: true),
                    NETTO_RAZEM_KOR = table.Column<double>(type: "float", nullable: true),
                    PODATEK_RAZEM_KOR = table.Column<double>(type: "float", nullable: true),
                    BRUTTO_RAZEM_KOR = table.Column<double>(type: "float", nullable: true),
                    ILOSC_RAZEM = table.Column<double>(type: "float", nullable: true),
                    ILOSC_RAZEM_KOR = table.Column<double>(type: "float", nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true),
                    UWAGI2 = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true),
                    TR_INFO = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true),
                    ROZNE_KURSY = table.Column<int>(type: "int", nullable: true),
                    KURSY_WALUT_ID = table.Column<int>(type: "int", nullable: true),
                    KURSY_WALUT_TYP = table.Column<int>(type: "int", nullable: true),
                    KURSY_WALUT_RODZ = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    FAKTURA_WALUTOWA = table.Column<int>(type: "int", nullable: false),
                    KURS_WALUTY = table.Column<double>(type: "float", nullable: false),
                    NR_TABELI_KURSOW = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    DATA_TABELI_KURSOW = table.Column<DateTime>(type: "datetime", nullable: true),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    ZLECENIE_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    WYJAZD_ID = table.Column<int>(type: "int", nullable: true),
                    WYJAZD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PRZESYLKA_ID = table.Column<int>(type: "int", nullable: true),
                    PRZESYLKA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    LIST_LINIOWY_ID = table.Column<int>(type: "int", nullable: true),
                    LIST_LINIOWY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TABOR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KIEROWCA_ID = table.Column<int>(type: "int", nullable: true),
                    KARTA_ID = table.Column<int>(type: "int", nullable: true),
                    KARTA_TYP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    KARTA_NR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    STAN_LICZNIKA = table.Column<double>(type: "float", nullable: true),
                    DELEGACJA_ID = table.Column<int>(type: "int", nullable: true),
                    DELEGACJA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZALICZKA_ID = table.Column<int>(type: "int", nullable: true),
                    ZALICZKA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KOREKTA_ID = table.Column<int>(type: "int", nullable: true),
                    KOREKTA = table.Column<int>(type: "int", nullable: false),
                    KOREKTA_POWOD = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true),
                    ZAKSIEGOWANA = table.Column<int>(type: "int", nullable: true),
                    DATA_ZAKSIEGOWANIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    JEST_USTAWA = table.Column<int>(type: "int", nullable: true),
                    USTAWA = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true),
                    NR_ZLEC_K = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    KONTO_ID = table.Column<int>(type: "int", nullable: true),
                    KONTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    IBAN = table.Column<int>(type: "int", nullable: true),
                    WYDRUK_SPORZADZIL = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    WYDRUK_PODPISAL = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    WYDRUK_ODEBRAL = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    WYDRUK_PROFORMA = table.Column<int>(type: "int", nullable: true),
                    WYDRUK_DUPLIKAT = table.Column<int>(type: "int", nullable: true),
                    L_ORG = table.Column<int>(type: "int", nullable: true),
                    L_KOP = table.Column<int>(type: "int", nullable: true),
                    OPIS_TRASY_DO_FZ = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    WYSTAWIONO_DUPLIKAT = table.Column<int>(type: "int", nullable: true),
                    DATA_DUPLIKATU = table.Column<DateTime>(type: "datetime", nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DOT_LOKALIZACJI = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KOMUNIKACJA_FK_ID = table.Column<int>(type: "int", nullable: true),
                    KOMUNIKACJA_FK_RK_ID = table.Column<int>(type: "int", nullable: true),
                    NR_SPED = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KONTO_FK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KONTO_FK_MA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MPK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    EMISJA_DO_FK = table.Column<int>(type: "int", nullable: true),
                    GOTOWA_DO_FK = table.Column<int>(type: "int", nullable: true),
                    STATUS = table.Column<int>(type: "int", nullable: true),
                    STATUS_MAIL = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    ANULOWANA = table.Column<int>(type: "int", nullable: true),
                    POMIJAJ_NA_RAP = table.Column<int>(type: "int", nullable: true),
                    WALUTA_B = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Waluta z tabeli B"),
                    KURSY_WALUT_B_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do tabeli kursów B"),
                    NR_TABELI_KURSOW_B = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Numer tabeli kursó B"),
                    DATA_TABELI_KURSOW_B = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data tabeli kursów B"),
                    KURS_WALUTY_B = table.Column<double>(type: "float", nullable: true, comment: "Kurs waluty B"),
                    NETTO_RAZEM_B = table.Column<double>(type: "float", nullable: true, comment: "Razem NETTO dla waluty B"),
                    RAP_KAS_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do raportu kasowego - RAP_KAS"),
                    RAP_KAS = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer raportu kasowego"),
                    KOD_OPER_KAS = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Kod operatora kasy"),
                    TANK_DO_PELNA = table.Column<int>(type: "int", nullable: true, comment: "Znacznik, czy tankowanie do pełna"),
                    REJ_KOSZT_OG_POZ_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do pozycji rejestru kosztów ogólnych - REJ_KOSZT_OG_POZ"),
                    WYDR_ZB_STD = table.Column<int>(type: "int", nullable: true, comment: "Znacznik, czy drukować zbiorczą jako pojedynczą"),
                    Z_WARSZTATU = table.Column<int>(type: "int", nullable: true, comment: "Znacznik, czy koszt pochodzi z warsztatu"),
                    W_ZLECENIE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer zlecenia warsztatowego"),
                    W_ZLECENIE_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do zlecenia warsztatowego - W_ZLECENIA"),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true, comment: "Liczba załączników"),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    LICZNIK_ID = table.Column<int>(type: "int", nullable: true),
                    STATUS_WINDYKACJI = table.Column<int>(type: "int", nullable: true),
                    ZAPL_GOT = table.Column<int>(type: "int", nullable: true),
                    V_KURSY_WALUT_ID = table.Column<int>(type: "int", nullable: true),
                    V_KURSY_WALUT_TYP = table.Column<int>(type: "int", nullable: true),
                    V_KURSY_WALUT_RODZ = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    V_KURS_WALUTY = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('1')"),
                    V_NR_TABELI_KURSOW = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    V_DATA_TABELI_KURSOW = table.Column<DateTime>(type: "datetime", nullable: true),
                    W_DO_FK_ID = table.Column<int>(type: "int", nullable: true),
                    RODZ_FV_OTRZ = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    DATA_WYSLANIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_KSIEGOWA_1 = table.Column<DateTime>(type: "datetime", nullable: true),
                    IMP_USLUG = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    STATUS_DO_ZAPL = table.Column<int>(type: "int", nullable: true),
                    STATUS_WYSLANA = table.Column<int>(type: "int", nullable: true),
                    DATA_WYSLANIA_FK = table.Column<DateTime>(type: "datetime", nullable: true),
                    NACZEPA_ID = table.Column<int>(type: "int", nullable: true),
                    NACZEPA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    FRM_WYDR_VAT = table.Column<int>(type: "int", nullable: true),
                    PALIWO_FV_ZB = table.Column<int>(type: "int", nullable: true),
                    INFO_OPIEKUNA = table.Column<string>(type: "text", nullable: true, comment: "Informacje od opiekuna"),
                    WEWN = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    WEWN_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    WEWN_ROK = table.Column<int>(type: "int", nullable: true),
                    WEWN_MIES = table.Column<int>(type: "int", nullable: true),
                    TRAFIK_ID = table.Column<int>(type: "int", nullable: true),
                    TRAFIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KOSZTY_MO = table.Column<int>(type: "int", nullable: true, comment: "Znacznik, czy koszt międzyokresowy"),
                    W_PZ = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer PZ w warsztacie"),
                    W_PZ_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do PZ w warsztacie - W_PW"),
                    W_WZ = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer WZ w warsztacie"),
                    W_WZ_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do WZ w warsztacie - W_WZ"),
                    Z_TRASH = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy faktura utworzona na podstawie zleceń trashowych"),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    STAT_DOKUM_OTRZ = table.Column<int>(type: "int", nullable: true),
                    ODDZIAL_ID = table.Column<int>(type: "int", nullable: true),
                    ODDZIAL_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    ODDZIAL_ADRES = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ODDZIAL_MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ODDZIAL_KOD = table.Column<string>(type: "varchar(6)", unicode: false, maxLength: 6, nullable: true),
                    ODDZIAL_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    GODZ_SPRZEDAZY = table.Column<DateTime>(type: "datetime", nullable: true),
                    PLATNIK_ID = table.Column<int>(type: "int", nullable: true),
                    PLATNIK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    ZALICZKOWA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    VAT_W_PLN = table.Column<int>(type: "int", nullable: true),
                    SZKODA_ID = table.Column<int>(type: "int", nullable: true),
                    SZKODA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    BEZ_IMP_PLAT_Z_FK = table.Column<int>(type: "int", nullable: true),
                    IMP_TOWAROW = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    KONTO2_ID = table.Column<int>(type: "int", nullable: true),
                    KONTO2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    IBAN2 = table.Column<int>(type: "int", nullable: true),
                    STATUS_EMISJA = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    Z_ROZLICZENIA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Znacznik, czy koszt powstał z rozliczenia"),
                    SFM_COSTS_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do transakcji GPS w warsztacie - SFM_Costs"),
                    SFM_COSTS_OK = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy transakcja GPS zostałą zweryfikowana pomyślnie"),
                    SA_KONTAKTY = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy są podpięte jakies kontakty"),
                    WYNAGR_LP_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do pozycji wynagrodzenia - WYNAGR_LP"),
                    ROZL_M_OKRESOWE_ID = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Relacja do rozliczenia miedzyokresowego - dla faktury źródłowej"),
                    ROZL_M_OKRESOWE_POZ_ID = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Relacja do pozycji rozliczenia miedzyokresowego - dla dekretów"),
                    BUFOR = table.Column<int>(type: "int", nullable: true),
                    GRUPA_DOK = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    DATA_WSTRZ_ZAPL = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZAPL_W_TERMINIE = table.Column<int>(type: "int", nullable: true),
                    ZALICZKOWA_ID = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    ZALICZKOWA_NR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    STATUS_ZWR_PODP = table.Column<int>(type: "int", nullable: true),
                    DATA_ZWR_PODP = table.Column<DateTime>(type: "datetime", nullable: true),
                    PODLICZNIK_ID = table.Column<int>(type: "int", nullable: true),
                    ZB_GRUPUJ_WG = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    EF_KARTY_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do karty z modułu EnergoFleet - EF_KARTY"),
                    EF_KARTY_TANKOWANIA_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do tankowania z modułu EnergoFleet - EF_KARTY_TANKOWANIA"),
                    KOMUNIKACJA_FK_ID_LP = table.Column<int>(type: "int", nullable: true),
                    ZAPL_WSTRZ_KIEDY = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZAPL_WSTRZ_KTO = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    STATUS_NEW = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    ZLECENIE_M_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE_M = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    E_FAKTURA_STATUS = table.Column<int>(type: "int", nullable: true),
                    PDF_FILE_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa pliku pdf wygenerowanego podczas drukowania - na potrzeby ePodpisu"),
                    ALGORYTM_SUM = table.Column<int>(type: "int", nullable: true),
                    EDYCJA_SUM = table.Column<int>(type: "int", nullable: true),
                    TRIG_TIMESTAMP = table.Column<DateTime>(type: "datetime", nullable: true),
                    SKONTO = table.Column<int>(type: "int", nullable: true),
                    SKONTO_ID = table.Column<int>(type: "int", nullable: true),
                    ZALICZKA_KURS_ROZL = table.Column<double>(type: "float", nullable: true),
                    KOMUNIKACJA_FK_INFO = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    GSM_FV_ZB = table.Column<int>(type: "int", nullable: true),
                    ZALICZKA_KURS_ROZL_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    NOTA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy rekord jest NOTĄ a nie FV"),
                    NOTA_UZNANIOWA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy rekord jest NOTĄ uznaniową"),
                    NOTA_ROZL_COD = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy rekord jest NOTĄ rozliczeniem COD"),
                    NOTA_NAGLOWEK = table.Column<string>(type: "text", nullable: true, comment: "Nagłówek noty"),
                    NOTA_STOPKA = table.Column<string>(type: "text", nullable: true, comment: "Stopka noty"),
                    KOREKTA_POWOD_SYMBOL_ID = table.Column<int>(type: "int", nullable: true),
                    KOREKTA_POWOD_SYMBOL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    NOTA_ROZL_KWIT_PAL = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy rekord jest NOTĄ rozliczeniem KWIT_PAL"),
                    PF_ZALICZKOWA_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do faktury zaliczkowej utworzonej z faktury PF"),
                    NETTO_DOCEL = table.Column<double>(type: "float", nullable: true),
                    VAT_DOCEL = table.Column<double>(type: "float", nullable: true),
                    BRUTTO_DOCEL = table.Column<double>(type: "float", nullable: true),
                    ZLECENIE_ZB_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE_ZB = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    METODA_KASOWA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    IS_EXPORTED = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    IS_EXPORTED_DT = table.Column<DateTime>(type: "datetime", nullable: true),
                    PARAGON_DR_FISK = table.Column<int>(type: "int", nullable: true),
                    KONTRAH_NIP_VIES_OK = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE_C_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE_C = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PREFAKTURY_ID = table.Column<int>(type: "int", nullable: true),
                    RABAT = table.Column<int>(type: "int", nullable: true),
                    RABAT_WART = table.Column<double>(type: "float", nullable: true),
                    NOTA_WEWN = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy rekord jest NOTĄ wewnętrzną"),
                    REKLAMACJE_ID = table.Column<int>(type: "int", nullable: true),
                    REKLAMACJE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NAZWA_K = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Adr. koresp. - Nazwa"),
                    ULICA_K = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Adr. koresp. - Adres (ulica i numery)"),
                    MIEJSCOWOSC_K = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Adr. koresp. - Miejscowość"),
                    KOD_K = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Adr. koresp. - Kod pocztowy"),
                    KRAJ_K = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: true, comment: "Adr. koresp. - Kraj"),
                    DATA_PLATNOSCI_USR = table.Column<DateTime>(type: "datetime", nullable: true),
                    TERMIN_PLATNOSCI_USR = table.Column<int>(type: "int", nullable: true),
                    STATUS_FAKTORING = table.Column<int>(type: "int", nullable: true),
                    EMI_ORG_ID = table.Column<int>(type: "int", nullable: true),
                    EDYCJA_SUM_PLN = table.Column<int>(type: "int", nullable: true),
                    SLOT_1 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_2 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_3 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_4 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_5 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    ZB_OKRES_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZB_OKRES_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    E_FAKTURA = table.Column<int>(type: "int", nullable: true),
                    MASZONSKI_MASTER_FV_S_ID = table.Column<int>(type: "int", nullable: true, comment: "MASZONSKI (dedyk.) - pole wskazuje na fakturę sprzedaży z której powstałą bieżąca faktura sprzedaży"),
                    MASZONSKI_MASTER_FV_K_ID = table.Column<int>(type: "int", nullable: true, comment: "MASZONSKI (dedyk.) - pole wskazuje na fakturę sprzedaży z której powstałą bieżąca faktura kosztowa"),
                    SAMOFAKTUROWANIE = table.Column<int>(type: "int", nullable: true),
                    DATA_WYSTAWIENIA_PARAG = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZLECENIE_RAIL_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE_RAIL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SplitPayment = table.Column<int>(type: "int", nullable: true),
                    DATA_KONTR_CZYNNY_VAT = table.Column<DateTime>(type: "datetime", nullable: true),
                    CZYNNY_VAT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "1-podatnik czynny, 0-podatnik nieczynny"),
                    DATA_KONTR_WYKAZ_WL = table.Column<DateTime>(type: "datetime", nullable: true),
                    WYNIK_KONTR_WYKAZ_WL = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    REQUEST_ID = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    DATA_KSIEGOWANIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    KONTO_FAKTOR_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FAKTURY", x => x.ID_FAKTURY);
                });

            migrationBuilder.CreateTable(
                name: "FAKTURY_DEKRET",
                columns: table => new
                {
                    ID_FAKTURY_DEKRET = table.Column<int>(type: "int", nullable: false),
                    FAKTURY_ID = table.Column<int>(type: "int", nullable: true),
                    STRONA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KONTO = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KWOTA = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FAKTURY_DEKRET", x => x.ID_FAKTURY_DEKRET);
                });

            migrationBuilder.CreateTable(
                name: "FAKTURY_POZYCJE",
                columns: table => new
                {
                    ID_FAKTURY_POZYCJE = table.Column<int>(type: "int", nullable: false),
                    FAKTURY_ID = table.Column<int>(type: "int", nullable: false),
                    LP = table.Column<int>(type: "int", nullable: true),
                    RODZ_KOSZTOW = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: false),
                    UWZGL_ROZL_KIER = table.Column<int>(type: "int", nullable: true),
                    STR_ROZL_KIER = table.Column<int>(type: "int", nullable: true),
                    RODZ_PRZYCHODOW = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    TYTUL_ID = table.Column<int>(type: "int", nullable: true),
                    TYTUL = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: false),
                    TYTUL_OPIS = table.Column<string>(type: "varchar(400)", unicode: false, maxLength: 400, nullable: true),
                    PKWIU = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    JM = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: false),
                    ILOSC = table.Column<double>(type: "float", nullable: false),
                    NETTO_JEDN_WAL = table.Column<double>(type: "float", nullable: false),
                    NETTO_JEDN_PLN = table.Column<double>(type: "float", nullable: false),
                    RABAT = table.Column<double>(type: "float", nullable: false),
                    RABAT_WARTOSC_PLN = table.Column<double>(type: "float", nullable: false),
                    NETTO_WARTOSC_PLN = table.Column<double>(type: "float", nullable: false),
                    VAT_ID = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: false),
                    VAT_STAWKA = table.Column<double>(type: "float", nullable: false),
                    VAT_WARTOSC_PLN = table.Column<double>(type: "float", nullable: false),
                    BRUTTO_WARTOSC_PLN = table.Column<double>(type: "float", nullable: false),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: false),
                    KURS_WALUTY = table.Column<double>(type: "float", nullable: false),
                    KALKULACJE_ID = table.Column<int>(type: "int", nullable: true),
                    ZLEC_POZ_FAKT_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    TABOR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TABOR_LICZNIK = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    KURSY_WALUT_ID = table.Column<int>(type: "int", nullable: true),
                    NR_TABELI_KURSOW = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    DATA_TABELI_KURSOW = table.Column<DateTime>(type: "datetime", nullable: true),
                    KONTO_FK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    POZ_KOREKTA_ID = table.Column<int>(type: "int", nullable: true),
                    TYTUL_TYP = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    V_KURS_WALUTY = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('1')"),
                    V_KURSY_WALUT_ID = table.Column<int>(type: "int", nullable: true),
                    V_NR_TABELI_KURSOW = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    V_DATA_TABELI_KURSOW = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_ZDARZENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    NACZEPA_ID = table.Column<int>(type: "int", nullable: true),
                    NACZEPA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    MAGAZYN = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZBIORCZA = table.Column<int>(type: "int", nullable: true),
                    WYJAZD_ID = table.Column<int>(type: "int", nullable: true),
                    WYJAZD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    LIST_LINIOWY_ID = table.Column<int>(type: "int", nullable: true),
                    LIST_LINIOWY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SZKODA_ID = table.Column<int>(type: "int", nullable: true),
                    SZKODA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PROMY_ID = table.Column<int>(type: "int", nullable: true),
                    PROMY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DOT_LOKALIZACJI = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DOT_DZIALU = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    PRZESYLKA_ID = table.Column<int>(type: "int", nullable: true),
                    PRZESYLKA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TYTUL_KOD = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    EF_KARTY_ID = table.Column<int>(type: "int", nullable: true),
                    EF_KARTY_TANKOWANIA_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE_M_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE_M = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    W_ZLECENIE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    W_ZLECENIE_ID = table.Column<int>(type: "int", nullable: true),
                    W_PZ = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    W_PZ_ID = table.Column<int>(type: "int", nullable: true),
                    WALUTA_PRZEWAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KURS_PRZEWAL = table.Column<double>(type: "float", nullable: true),
                    NETTO_JEDN_PRZEWAL = table.Column<double>(type: "float", nullable: true),
                    TABELA_PRZEWAL_ID = table.Column<int>(type: "int", nullable: true),
                    TABELA_PRZEWAL = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TABELA_PRZEWAL_DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZRODLO = table.Column<int>(type: "int", nullable: true),
                    TYTUL_AGREG = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    KURS_WSK_RECZNIE = table.Column<int>(type: "int", nullable: true),
                    KWIT_PAL_ID = table.Column<int>(type: "int", nullable: true),
                    KWIT_PAL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KWIT_PAL_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    W_ZLECENIE_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    W_PZ_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    KONTENERY_ID = table.Column<int>(type: "int", nullable: true),
                    KONTENERY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    WALUTOWA_NETTO_PLN = table.Column<double>(type: "float", nullable: true),
                    WALUTOWA_VAT_PLN = table.Column<double>(type: "float", nullable: true),
                    WALUTOWA_BRUTTO_PLN = table.Column<double>(type: "float", nullable: true),
                    ZLECENIE_ZB_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE_ZB = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PREFAKTURY_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    KOR_DO_ZERA = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE_C_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE_C = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ORG_KWOTA = table.Column<double>(type: "float", nullable: true),
                    ORG_WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    W_WZ_DLA_FK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REKLAMACJE_ID = table.Column<int>(type: "int", nullable: true),
                    REKLAMACJE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    W_WZ = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    W_WZ_ID = table.Column<int>(type: "int", nullable: true),
                    W_WZ_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    INFORMACJE_DODATKOWE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OPAKOWANIE_ID = table.Column<int>(type: "int", nullable: true),
                    KOD_OPAK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    ILOSC_OPAK = table.Column<int>(type: "int", nullable: true),
                    W_PRZYDZIAL_KOSZTU = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    MASZONSKI_MASTER_FV_S_ID = table.Column<int>(type: "int", nullable: true, comment: "MASZONSKI (dedyk.) - pole wskazuje na fakturę sprzedaży z której powstałą bieżąca faktura sprzedaży"),
                    MASZONSKI_MASTER_FV_POZ_S_ID = table.Column<int>(type: "int", nullable: true, comment: "MASZONSKI (dedyk.) - pole wskazuje na pozycję faktury sprzedaży z której powstałą bieżąca pozycja"),
                    MASZONSKI_MASTER_FV_K_ID = table.Column<int>(type: "int", nullable: true, comment: "MASZONSKI (dedyk.) - pole wskazuje na fakturę sprzedaży z której powstałą bieżąca faktura kosztowa"),
                    MASZONSKI_MASTER_FV_POZ_K_ID = table.Column<int>(type: "int", nullable: true, comment: "MASZONSKI (dedyk.) - pole wskazuje na pozycję faktury sprzedaży z której powstałą bieżąca pozycja"),
                    ZLECENIE_RAIL_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE_RAIL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REKL_KOSZTY_ODSZKOD_ID = table.Column<int>(type: "int", nullable: true),
                    IntOrdersPositionsId = table.Column<int>(type: "int", nullable: true),
                    POMIN_NA_RAP = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FAKTURY_POZYCJE", x => x.ID_FAKTURY_POZYCJE);
                });

            migrationBuilder.CreateTable(
                name: "FAKTURY_POZYCJE_ZB",
                columns: table => new
                {
                    ID_FAKTURY_POZYCJE_ZB = table.Column<int>(type: "int", nullable: false),
                    FAKTURY_ID = table.Column<int>(type: "int", nullable: false),
                    FAKTURY_POZYCJE_ID = table.Column<int>(type: "int", nullable: false),
                    LP = table.Column<int>(type: "int", nullable: true),
                    RODZ_KOSZTOW = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    UWZGL_ROZL_KIER = table.Column<int>(type: "int", nullable: true),
                    STR_ROZL_KIER = table.Column<int>(type: "int", nullable: true),
                    RODZ_PRZYCHODOW = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    TYTUL_ID = table.Column<int>(type: "int", nullable: true),
                    TYTUL = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: false),
                    TYTUL_OPIS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    PKWIU = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    JM = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    ILOSC = table.Column<double>(type: "float", nullable: false),
                    NETTO_JEDN_WAL = table.Column<double>(type: "float", nullable: false),
                    NETTO_JEDN_PLN = table.Column<double>(type: "float", nullable: false),
                    RABAT = table.Column<double>(type: "float", nullable: false),
                    RABAT_WARTOSC_PLN = table.Column<double>(type: "float", nullable: false),
                    NETTO_WARTOSC_PLN = table.Column<double>(type: "float", nullable: false),
                    VAT_ID = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: false),
                    VAT_STAWKA = table.Column<double>(type: "float", nullable: false),
                    VAT_WARTOSC_PLN = table.Column<double>(type: "float", nullable: false),
                    BRUTTO_WARTOSC_PLN = table.Column<double>(type: "float", nullable: false),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: false),
                    KURS_WALUTY = table.Column<double>(type: "float", nullable: false, defaultValueSql: "('1')"),
                    KURSY_WALUT_ID = table.Column<int>(type: "int", nullable: true),
                    NR_TABELI_KURSOW = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    DATA_TABELI_KURSOW = table.Column<DateTime>(type: "datetime", nullable: true),
                    V_KURS_WALUTY = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('1')"),
                    V_KURSY_WALUT_ID = table.Column<int>(type: "int", nullable: true),
                    V_NR_TABELI_KURSOW = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    V_DATA_TABELI_KURSOW = table.Column<DateTime>(type: "datetime", nullable: true),
                    KALKULACJE_ID = table.Column<int>(type: "int", nullable: true),
                    ZLEC_POZ_FAKT_ID = table.Column<int>(type: "int", nullable: true),
                    WYJAZD_ID = table.Column<int>(type: "int", nullable: true),
                    WYJAZD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZLECENIE_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    LIST_LINIOWY_ID = table.Column<int>(type: "int", nullable: true),
                    LIST_LINIOWY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    TABOR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NACZEPA_ID = table.Column<int>(type: "int", nullable: true),
                    NACZEPA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TABOR_LICZNIK = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    KONTO_FK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    POZ_KOREKTA_ID = table.Column<int>(type: "int", nullable: true),
                    DATA_ZDARZENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    SZKODA_ID = table.Column<int>(type: "int", nullable: true),
                    SZKODA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DOT_LOKALIZACJI = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DOT_DZIALU = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    PRZESYLKA_ID = table.Column<int>(type: "int", nullable: true),
                    PRZESYLKA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TYTUL_KOD = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    ZLECENIE_M_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE_M = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PROMY_ID = table.Column<int>(type: "int", nullable: true),
                    PROMY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    WALUTA_PRZEWAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KURS_PRZEWAL = table.Column<double>(type: "float", nullable: true),
                    NETTO_JEDN_PRZEWAL = table.Column<double>(type: "float", nullable: true),
                    TABELA_PRZEWAL_ID = table.Column<int>(type: "int", nullable: true),
                    TABELA_PRZEWAL = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TABELA_PRZEWAL_DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZRODLO = table.Column<int>(type: "int", nullable: true),
                    TYTUL_AGREG = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    KURS_WSK_RECZNIE = table.Column<int>(type: "int", nullable: true),
                    KONTENERY_ID = table.Column<int>(type: "int", nullable: true),
                    KONTENERY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    WALUTOWA_NETTO_PLN = table.Column<double>(type: "float", nullable: true),
                    WALUTOWA_VAT_PLN = table.Column<double>(type: "float", nullable: true),
                    WALUTOWA_BRUTTO_PLN = table.Column<double>(type: "float", nullable: true),
                    PREFAKTURY_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    KOR_DO_ZERA = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE_C_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE_C = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REKLAMACJE_ID = table.Column<int>(type: "int", nullable: true),
                    REKLAMACJE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZLECENIE_RAIL_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE_RAIL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FAKTURY_POZYCJE_ZB", x => x.ID_FAKTURY_POZYCJE_ZB);
                });

            migrationBuilder.CreateTable(
                name: "FAKTURY_PROW_PRAC",
                columns: table => new
                {
                    ID_FAKTURY_PROW_PRAC = table.Column<int>(type: "int", nullable: false),
                    FAKTURY_ID = table.Column<int>(type: "int", nullable: false, comment: "Relacja do faktury - tab: FAKTURY"),
                    KWOTA = table.Column<double>(type: "float", nullable: true, comment: "Kwota do prowizji"),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Waluta"),
                    UZYTKOWNIK_ID = table.Column<int>(type: "int", nullable: true, comment: "Retacja do pracownika - tab: UZYTKOWNIK"),
                    UZYTKOWNIK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa pracownika"),
                    INSP_INLAN = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FAKTURY_PROW_PRAC", x => x.ID_FAKTURY_PROW_PRAC);
                },
                comment: "Kwoty do prowizji pracowników - detal do tabeli FAKTURY");

            migrationBuilder.CreateTable(
                name: "FAKTURY_PRZYCZYNY_KOR",
                columns: table => new
                {
                    ID_FAKTURY_PRZYCZYNY_KOR = table.Column<int>(type: "int", nullable: false),
                    OPIS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DOD_OPIS = table.Column<int>(type: "int", nullable: true, comment: "0 - możliwy, 1 - wymagany, 2 - niedozwolony"),
                    SYMBOL_DO_FK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Symbol używany w interfejsach do FK"),
                    DictionaryId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TextId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FAKTURY_PRZYCZYNY_KOR", x => x.ID_FAKTURY_PRZYCZYNY_KOR);
                });

            migrationBuilder.CreateTable(
                name: "FAKTURY_SPLATY",
                columns: table => new
                {
                    ID_FAKTURY_SPLATY = table.Column<int>(type: "int", nullable: false),
                    FAKTURY_ID = table.Column<int>(type: "int", nullable: false, comment: "Relacja do faktury - tab: FAKTURY"),
                    DATA_SPLATY = table.Column<DateTime>(type: "datetime", nullable: false, comment: "Data spłaty"),
                    NR_WYCIAGU = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer wyciągu"),
                    KWOTA_SPLATY = table.Column<double>(type: "float", nullable: false, comment: "Kwota spłaty w walucie faktury"),
                    KURSY_WALUT_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do tabeli kursów - tab: TABELA_KURSY_D"),
                    NR_TABELI_KURSOW = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Numer tabeli kursowej"),
                    KURS_WALUTY = table.Column<double>(type: "float", nullable: true, comment: "Kurs waluty"),
                    DATA_TABELI_KURSOW = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data tabeli kursowej"),
                    KOMPENSATY_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kompensaty - tab: KOMPENSATY"),
                    KOMUNIKACJA_FK_RK_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do tabeli komunikacji z FK"),
                    PRZEDPLATA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy zapłata była przedpłatą"),
                    SPLATA_W_PLN = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy spłata w PLN"),
                    KWOTA_SPLATY_W_PLN = table.Column<double>(type: "float", nullable: true, comment: "Kwota spłaty w PLN"),
                    UZYTKOWNIK_ID = table.Column<int>(type: "int", nullable: true, comment: "Retacja do użytkownika rej. spłate - tab: UZYTKOWNIK"),
                    UZYTKOWNIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Nazwa użytkwnika"),
                    WYC_BANK_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do wyciągu bankowego - tab: WYC_BANK"),
                    WYC_BANK_OPER_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do poz. wyciągu bankowego - tab: WYC_BANK_OPER"),
                    Z_ZALICZKOWEJ_ID = table.Column<int>(type: "int", nullable: true),
                    KWOTA_SPLATY_VAT = table.Column<double>(type: "float", nullable: true, comment: "Kwota spłaty VAT (SplitPayment)"),
                    PRZELEWY_DOK_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FAKTURY_SPLATY", x => x.ID_FAKTURY_SPLATY);
                },
                comment: "Pozycje spłat do faktury - detal do tabeli FAKTURY");

            migrationBuilder.CreateTable(
                name: "FAKTURY_VAT",
                columns: table => new
                {
                    ID_FAKTURY_VAT = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    FAKTURY_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    SP_LICZENIA = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    VAT_ID = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: false, defaultValueSql: "('')"),
                    VAT_STAWKA = table.Column<double>(type: "float", nullable: false, defaultValueSql: "('')"),
                    NETTO = table.Column<double>(type: "float", nullable: false, defaultValueSql: "('')"),
                    VAT = table.Column<double>(type: "float", nullable: false, defaultValueSql: "('')"),
                    BRUTTO = table.Column<double>(type: "float", nullable: false, defaultValueSql: "('')"),
                    NETTO_PLN = table.Column<double>(type: "float", nullable: false, defaultValueSql: "('')"),
                    VAT_PLN = table.Column<double>(type: "float", nullable: false, defaultValueSql: "('')"),
                    BRUTTO_PLN = table.Column<double>(type: "float", nullable: false, defaultValueSql: "('')"),
                    ZMIEN = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ZMIEN_PLN = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FAKTURY_VAT", x => x.ID_FAKTURY_VAT);
                },
                comment: "Tabelka VAT dla faktury");

            migrationBuilder.CreateTable(
                name: "FAKTURY_VAT_JPK_OZN",
                columns: table => new
                {
                    ID_FAKTURY_VAT_JPK_OZN = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    FAKTURY_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    VAT_JPK_OZN_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    RM = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FAKTURY_VAT_JPK_OZN", x => x.ID_FAKTURY_VAT_JPK_OZN);
                });

            migrationBuilder.CreateTable(
                name: "FAKTURY_VAT_JPK_OZN_DOD",
                columns: table => new
                {
                    ID_FAKTURY_VAT_JPK_OZN_DOD = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    FAKTURY_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    VAT_JPK_OZN_DOD_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    RM = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FAKTURY_VAT_JPK_OZN_DOD", x => x.ID_FAKTURY_VAT_JPK_OZN_DOD);
                });

            migrationBuilder.CreateTable(
                name: "FAKTURY_WZORCE",
                columns: table => new
                {
                    ID_FAKTURY_WZORCE = table.Column<int>(type: "int", nullable: false),
                    FRM_ID = table.Column<int>(type: "int", nullable: true),
                    NAZWA_WZORCA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    RODZ_FV_OTRZ = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    RODZ_KOSZTOW = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    RODZ_KOSZTOW_EXT = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    UWZGL_ROZL_KIER = table.Column<int>(type: "int", nullable: true),
                    STR_ROZL_KIER = table.Column<int>(type: "int", nullable: true),
                    TYP_KOSZTOW = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    KRAJ_KOSZTOW = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: false),
                    KONTRAH_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KONTRAH_NAZWA = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    KONTRAH_ADRES = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    KONTRAH_MIASTO = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    KONTRAH_KOD = table.Column<string>(type: "varchar(6)", unicode: false, maxLength: 6, nullable: true),
                    KONTRAH_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KONTRAH_NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    ODDZIAL_ID = table.Column<int>(type: "int", nullable: true),
                    ODDZIAL_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    ODDZIAL_ADRES = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ODDZIAL_MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ODDZIAL_KOD = table.Column<string>(type: "varchar(6)", unicode: false, maxLength: 6, nullable: true),
                    ODDZIAL_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    FORMA_PLATNOSCI = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: false),
                    ZAPL_GOT = table.Column<int>(type: "int", nullable: true),
                    TERMIN_PLATNOSCI = table.Column<int>(type: "int", nullable: false),
                    PLATNIK_ID = table.Column<int>(type: "int", nullable: true),
                    PLATNIK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    NETTO_PLN = table.Column<double>(type: "float", nullable: true),
                    VAT_PLN = table.Column<double>(type: "float", nullable: true),
                    BRUTTO_PLN = table.Column<double>(type: "float", nullable: true),
                    NETTO_RAZEM = table.Column<double>(type: "float", nullable: false),
                    PODATEK_RAZEM = table.Column<double>(type: "float", nullable: false),
                    BRUTTO_RAZEM = table.Column<double>(type: "float", nullable: false),
                    UWAGI = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    FAKTURA_WALUTOWA = table.Column<int>(type: "int", nullable: false),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    ROZNE_KURSY = table.Column<int>(type: "int", nullable: true),
                    KURSY_WALUT_ID = table.Column<int>(type: "int", nullable: true),
                    KURSY_WALUT_TYP = table.Column<int>(type: "int", nullable: true),
                    KURSY_WALUT_RODZ = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    KURS_WALUTY = table.Column<double>(type: "float", nullable: false, defaultValueSql: "('1')"),
                    NR_TABELI_KURSOW = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    DATA_TABELI_KURSOW = table.Column<DateTime>(type: "datetime", nullable: true),
                    V_KURSY_WALUT_ID = table.Column<int>(type: "int", nullable: true),
                    V_KURSY_WALUT_TYP = table.Column<int>(type: "int", nullable: true),
                    V_KURSY_WALUT_RODZ = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    V_KURS_WALUTY = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('1')"),
                    V_NR_TABELI_KURSOW = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    V_DATA_TABELI_KURSOW = table.Column<DateTime>(type: "datetime", nullable: true),
                    IMP_USLUG = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    IMP_TOWAROW = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    KONTO_ID = table.Column<int>(type: "int", nullable: true),
                    KONTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    IBAN = table.Column<int>(type: "int", nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KONTO_FK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KONTO_FK_MA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MPK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    EMISJA_DO_FK = table.Column<int>(type: "int", nullable: true),
                    GOTOWA_DO_FK = table.Column<int>(type: "int", nullable: true),
                    POMIJAJ_NA_RAP = table.Column<int>(type: "int", nullable: true),
                    TANK_DO_PELNA = table.Column<int>(type: "int", nullable: true),
                    INFO_OPIEKUNA = table.Column<string>(type: "text", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    DOT_LOKALIZACJI = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KOSZTY_MO = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Znacznik, czy koszt międzyokresowy"),
                    VAT_W_PLN = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FAKTURY_WZORCE", x => x.ID_FAKTURY_WZORCE);
                });

            migrationBuilder.CreateTable(
                name: "FAKTURY_WZORCE_POZYCJE",
                columns: table => new
                {
                    ID_FAKTURY_WZORCE_POZYCJE = table.Column<int>(type: "int", nullable: false),
                    FAKTURY_WZORCE_ID = table.Column<int>(type: "int", nullable: false),
                    LP = table.Column<int>(type: "int", nullable: true),
                    RODZ_KOSZTOW = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: false),
                    UWZGL_ROZL_KIER = table.Column<int>(type: "int", nullable: true),
                    STR_ROZL_KIER = table.Column<int>(type: "int", nullable: true),
                    TYTUL_ID = table.Column<int>(type: "int", nullable: true),
                    TYTUL = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: false),
                    TYTUL_OPIS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    PKWIU = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    JM = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: false),
                    ILOSC = table.Column<double>(type: "float", nullable: false),
                    NETTO_JEDN_WAL = table.Column<double>(type: "float", nullable: false),
                    NETTO_JEDN_PLN = table.Column<double>(type: "float", nullable: false),
                    RABAT = table.Column<double>(type: "float", nullable: false),
                    RABAT_WARTOSC_PLN = table.Column<double>(type: "float", nullable: false),
                    NETTO_WARTOSC_PLN = table.Column<double>(type: "float", nullable: false),
                    VAT_ID = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: false),
                    VAT_STAWKA = table.Column<double>(type: "float", nullable: false),
                    VAT_WARTOSC_PLN = table.Column<double>(type: "float", nullable: false),
                    BRUTTO_WARTOSC_PLN = table.Column<double>(type: "float", nullable: false),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: false),
                    KURS_WALUTY = table.Column<double>(type: "float", nullable: false, defaultValueSql: "('1')"),
                    KURSY_WALUT_ID = table.Column<int>(type: "int", nullable: true),
                    NR_TABELI_KURSOW = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    DATA_TABELI_KURSOW = table.Column<DateTime>(type: "datetime", nullable: true),
                    V_KURS_WALUTY = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('1')"),
                    V_KURSY_WALUT_ID = table.Column<int>(type: "int", nullable: true),
                    V_NR_TABELI_KURSOW = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    V_DATA_TABELI_KURSOW = table.Column<DateTime>(type: "datetime", nullable: true),
                    KONTO_FK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    WALUTA_PRZEWAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KURS_PRZEWAL = table.Column<double>(type: "float", nullable: true),
                    NETTO_JEDN_PRZEWAL = table.Column<double>(type: "float", nullable: true),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    TABOR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FAKTURY_WZORCE_POZYCJE", x => x.ID_FAKTURY_WZORCE_POZYCJE);
                });

            migrationBuilder.CreateTable(
                name: "FAKTURY_ZLEC",
                columns: table => new
                {
                    ID_FAKTURY_ZLEC = table.Column<int>(type: "int", nullable: false),
                    TYP = table.Column<int>(type: "int", nullable: true),
                    FAKTURA_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FAKTURY_ZLEC", x => x.ID_FAKTURY_ZLEC);
                },
                comment: "**** NIEUŻYWANA");

            migrationBuilder.CreateTable(
                name: "FileTransferProtocol",
                schema: "app",
                columns: table => new
                {
                    FileTransferProtocolId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: false, defaultValueSql: "('')"),
                    RemotHost = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: false),
                    RemotePort = table.Column<int>(type: "int", nullable: true),
                    UserName = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    UserPassword = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    SSL = table.Column<int>(type: "int", nullable: true),
                    SSLStartMode = table.Column<int>(type: "int", nullable: true),
                    SSH = table.Column<int>(type: "int", nullable: true),
                    SSHAuthMode = table.Column<int>(type: "int", nullable: true),
                    CipherType = table.Column<int>(type: "int", nullable: true),
                    RemoteHost = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FileTransferProtocol", x => x.FileTransferProtocolId);
                });

            migrationBuilder.CreateTable(
                name: "FILTRY",
                columns: table => new
                {
                    ID_FILTRY = table.Column<int>(type: "int", nullable: false),
                    NAZWA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(250)", unicode: false, maxLength: 250, nullable: true),
                    BOX_CLASS = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    WIN_CLASS = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    WIN_WINTYPE = table.Column<int>(type: "int", nullable: true),
                    FILTR = table.Column<string>(type: "text", nullable: true),
                    ID_USER = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FILTRY", x => x.ID_FILTRY);
                });

            migrationBuilder.CreateTable(
                name: "FIRMA",
                columns: table => new
                {
                    ID_FIRMA = table.Column<int>(type: "int", nullable: false),
                    SYMBOL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    ULICA = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: true),
                    NR_DOM = table.Column<string>(type: "varchar(6)", unicode: false, maxLength: 6, nullable: true),
                    NR_LOK = table.Column<string>(type: "varchar(4)", unicode: false, maxLength: 4, nullable: true),
                    MIEJSCOWOSC = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true),
                    KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    POCZTA = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true),
                    KRAJ = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: true),
                    REGON = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    PESEL = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    DELETED = table.Column<short>(type: "smallint", nullable: false, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FIRMA", x => x.ID_FIRMA);
                });

            migrationBuilder.CreateTable(
                name: "FORMTEXT",
                columns: table => new
                {
                    ID_FORMTEXT = table.Column<int>(type: "int", nullable: false),
                    FORM = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "forma - przeznaczenie wzorca"),
                    FORM_TYPE = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "rodzaj wzorca dla formy"),
                    FORM_DESCR = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "opis wzorca"),
                    COUNTRY = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, defaultValueSql: "('PL')", comment: "kraj"),
                    LANGUAGE = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, defaultValueSql: "('PL')", comment: "wersja językowa"),
                    DT_CREATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas utworzenia wzorca"),
                    DT_MODIFY = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas ostatniej modyfikacji wzorca"),
                    FORM_DEF = table.Column<string>(type: "text", nullable: true, comment: "definicja wzorca"),
                    FORM_SUBJECT = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "temat (max. 254 znaki)"),
                    TEMPLATE_TYPE = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "papeteria/wzór: 0-brak/1-txt/2-html"),
                    TEMPLATE_FILE = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "papeteria/wzór - nazwa pliku"),
                    TEMPLATE = table.Column<string>(type: "text", nullable: true, comment: "papeteria/wzór - dane")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FORMTEXT", x => x.ID_FORMTEXT);
                });

            migrationBuilder.CreateTable(
                name: "FORMY_PLATNOSCI",
                columns: table => new
                {
                    ID_FORMY_PLATNOSCI = table.Column<int>(type: "int", nullable: false),
                    KOD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Kod formy płatności"),
                    KARTA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy płatność kartą"),
                    AUTO_ZAPLATA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy nanosić automatycznie zapłatę"),
                    PRZELEW = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy płatność przelewem"),
                    COD = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy COD"),
                    KONTO_FK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ROZL_ZALICZKE = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy rozlicza zaliczkę")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FORMY_PLATNOSCI", x => x.ID_FORMY_PLATNOSCI);
                },
                comment: "Słownik form płatności");

            migrationBuilder.CreateTable(
                name: "FORMY_PLATNOSCI_TLUMACZ",
                columns: table => new
                {
                    ID_FORMY_PLATNOSCI_TLUMACZ = table.Column<int>(type: "int", nullable: false),
                    FORMY_PLATNOSCI_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Relacja do słownika form płatności - tab: FORMY_PLATNOSCI"),
                    JEZYK_POZYCJI = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: false, defaultValueSql: "('PL')", comment: "Kod języka"),
                    KOD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')", comment: "Kod formy płatności")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FORMY_PLATNOSCI_TLUMACZ", x => x.ID_FORMY_PLATNOSCI_TLUMACZ);
                },
                comment: "Słownik form płatności - tłumaczenia na inne języki");

            migrationBuilder.CreateTable(
                name: "FRACHT_PROC",
                columns: table => new
                {
                    OPIS = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    wie = table.Column<int>(type: "int", nullable: true),
                    kol = table.Column<int>(type: "int", nullable: true),
                    wynik = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "FtlCalc",
                columns: table => new
                {
                    IdFtlCalc = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    CalcDT = table.Column<DateTime>(type: "datetime", nullable: true),
                    UserId = table.Column<int>(type: "int", nullable: true),
                    TruckId = table.Column<int>(type: "int", nullable: true),
                    TrailerId = table.Column<int>(type: "int", nullable: true),
                    Driver1Id = table.Column<int>(type: "int", nullable: true),
                    Driver2Id = table.Column<int>(type: "int", nullable: true),
                    EmptyKm = table.Column<int>(type: "int", nullable: true),
                    LoadingKm = table.Column<int>(type: "int", nullable: true),
                    FullKm = table.Column<int>(type: "int", nullable: true),
                    CalcResult = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true),
                    State = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FtlCalc", x => x.IdFtlCalc);
                });

            migrationBuilder.CreateTable(
                name: "FtlCalcCostItems",
                columns: table => new
                {
                    IdFtlCalcCostItems = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    IdFtlCalc = table.Column<int>(type: "int", nullable: true),
                    IdItemDict = table.Column<int>(type: "int", nullable: true),
                    Quantity = table.Column<double>(type: "float", nullable: true),
                    Price = table.Column<double>(type: "float", nullable: true),
                    Value = table.Column<double>(type: "float", nullable: true),
                    Currency = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    FromMap = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FtlCalcCostItems", x => x.IdFtlCalcCostItems);
                });

            migrationBuilder.CreateTable(
                name: "FtlCalcEvents",
                columns: table => new
                {
                    IdFtlCalcEvents = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    IdFtlCalc = table.Column<int>(type: "int", nullable: true),
                    Order = table.Column<int>(type: "int", nullable: true),
                    IdPoi = table.Column<int>(type: "int", nullable: true),
                    PoiType = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    EventDT = table.Column<DateTime>(type: "datetime", nullable: true),
                    Weight = table.Column<double>(type: "float", nullable: true),
                    Capacity = table.Column<double>(type: "float", nullable: true),
                    Quantity = table.Column<double>(type: "float", nullable: true),
                    PalletPlaces = table.Column<double>(type: "float", nullable: true),
                    Approach = table.Column<int>(type: "int", nullable: true),
                    Name = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true),
                    Address = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true),
                    City = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PostCode = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    Country = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    Lon = table.Column<double>(type: "float", nullable: true),
                    Lat = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FtlCalcEvents", x => x.IdFtlCalcEvents);
                });

            migrationBuilder.CreateTable(
                name: "FtlCalcIncomeItems",
                columns: table => new
                {
                    IdFtlCalcIncomeItems = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    IdFtlCalc = table.Column<int>(type: "int", nullable: true),
                    IdItemDict = table.Column<int>(type: "int", nullable: true),
                    Quantity = table.Column<double>(type: "float", nullable: true),
                    Price = table.Column<double>(type: "float", nullable: true),
                    Value = table.Column<double>(type: "float", nullable: true),
                    Currency = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_FtlCalcIncomeItems", x => x.IdFtlCalcIncomeItems);
                });

            migrationBuilder.CreateTable(
                name: "GDPR_CATEGORY_PROCESSING_REGISTER",
                columns: table => new
                {
                    ID_GDPR_CATEGORY_PROCESSING_REGISTER = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    REGISTER_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    ADMINISTER_CONTACT_DATA_ID = table.Column<int>(type: "int", nullable: true),
                    ADMINISTER_CONTACT_DATA = table.Column<string>(type: "varchar(max)", unicode: false, nullable: true),
                    PROCESSING_CATEGORY_ID = table.Column<int>(type: "int", nullable: true),
                    PROCESSING_CATEGORY = table.Column<string>(type: "varchar(max)", unicode: false, nullable: true),
                    SECURITY_MEASURES_ID = table.Column<int>(type: "int", nullable: true),
                    SECURITY_MEASURES = table.Column<string>(type: "varchar(max)", unicode: false, nullable: true),
                    PROCESSING_TIME_ID = table.Column<int>(type: "int", nullable: true),
                    PROCESSING_TIME = table.Column<string>(type: "varchar(max)", unicode: false, nullable: true),
                    CO_PROCESSOR_CONTACT_DATA_ID = table.Column<int>(type: "int", nullable: true),
                    CO_PROCESSOR_CONTACT_DATA = table.Column<string>(type: "varchar(max)", unicode: false, nullable: true),
                    CATEGORY_CO_PROCESSING_ID = table.Column<int>(type: "int", nullable: true),
                    CATEGORY_CO_PROCESSING = table.Column<string>(type: "varchar(max)", unicode: false, nullable: true),
                    CO_ADMINISTER_CONTACT_DATA_ID = table.Column<int>(type: "int", nullable: true),
                    CO_ADMINISTER_CONTACT_DATA = table.Column<string>(type: "varchar(max)", unicode: false, nullable: true),
                    CO_ADMINISTER_REPRESENTATIVE_CONTACT_DATA_ID = table.Column<int>(type: "int", nullable: true),
                    CO_ADMINISTER_REPRESENTATIVE_CONTACT_DATA = table.Column<string>(type: "varchar(max)", unicode: false, nullable: true),
                    ADMINISTER_INSPECTOR_CONTACT_DATA_ID = table.Column<int>(type: "int", nullable: true),
                    ADMINISTER_INSPECTOR_CONTACT_DATA = table.Column<string>(type: "varchar(max)", unicode: false, nullable: true),
                    THIRD_COUNTRY_TRANSFER_ID = table.Column<int>(type: "int", nullable: true),
                    THIRD_COUNTRY_TRANSFER = table.Column<string>(type: "varchar(max)", unicode: false, nullable: true),
                    THIRD_COUNTRY_TRANSFER_SECURITY_MEASURES_ID = table.Column<int>(type: "int", nullable: true),
                    THIRD_COUNTRY_TRANSFER_SECURITY_MEASURES = table.Column<string>(type: "varchar(max)", unicode: false, nullable: true),
                    CANCELED = table.Column<int>(type: "int", nullable: true),
                    STATUS_EMISJA = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_GDPR_CATEGORY_PROCESSING_REGISTER", x => x.ID_GDPR_CATEGORY_PROCESSING_REGISTER);
                });

            migrationBuilder.CreateTable(
                name: "GDPR_KIEROWCY",
                columns: table => new
                {
                    ID_GDPR_KIEROWCY = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    NAZWISKO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    IMIE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TELEFON = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    TELEFON_KOM = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    TEL_SLUZBOWY2 = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    TEL_SLUZBOWY = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    EMAIL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    PESEL = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    KONTO = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    NUMER_DOWODU = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    PASZPORT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PRAWO_JAZDY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SWIAD_KWALIF = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KURS_PRZEWOZ_RZECZY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KURS_PRZEWOZ_OSOB = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ADRES = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    MIASTO = table.Column<string>(type: "varchar(80)", unicode: false, maxLength: 80, nullable: true),
                    KOD_POCZTOWY = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    KRAJ = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    DATA_UR = table.Column<DateTime>(type: "datetime", nullable: true),
                    MIEJSCE_UR = table.Column<string>(type: "varchar(80)", unicode: false, maxLength: 80, nullable: true),
                    UZYTKOWNIK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    UZYTKOWNIK_ID = table.Column<int>(type: "int", nullable: true),
                    ZATRUDNIONY_W = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ZATRUDNIONY_W_ID = table.Column<int>(type: "int", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    ID_KIEROWCY = table.Column<int>(type: "int", nullable: true),
                    GDPR_OBLIVION_ID = table.Column<int>(type: "int", nullable: true),
                    PSEUDONIM = table.Column<int>(type: "int", nullable: true),
                    ANONIM = table.Column<int>(type: "int", nullable: true),
                    PSEUDONIM_CANCEL = table.Column<int>(type: "int", nullable: true),
                    ANONIM_CANCEL = table.Column<int>(type: "int", nullable: true),
                    org_ID_GDPR_KIEROWCY = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_GDPR_KIEROWCY", x => x.ID_GDPR_KIEROWCY);
                });

            migrationBuilder.CreateTable(
                name: "GDPR_KONTRAHENCI",
                columns: table => new
                {
                    ID_GDPR_KONTRAH = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    ULICA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    NR_DOM = table.Column<string>(type: "varchar(6)", unicode: false, maxLength: 6, nullable: true),
                    NR_LOK = table.Column<string>(type: "varchar(4)", unicode: false, maxLength: 4, nullable: true),
                    MIEJSCOWOSC = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    POCZTA = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true),
                    KRAJ = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: true),
                    WOJEWODZTWO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NAZWA_K = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    ULICA_K = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    NR_DOM_K = table.Column<string>(type: "varchar(6)", unicode: false, maxLength: 6, nullable: true),
                    NR_LOK_K = table.Column<string>(type: "varchar(4)", unicode: false, maxLength: 4, nullable: true),
                    MIEJSCOWOSC_K = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KOD_K = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    POCZTA_K = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true),
                    KRAJ_K = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: true),
                    WOJEWODZTWO_K = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REGON = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    PESEL = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    NIP2 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    NIP_CZYSTY = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    BANK_NAZWA = table.Column<string>(type: "varchar(80)", unicode: false, maxLength: 80, nullable: true),
                    BANK_KONTO = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true),
                    OSOBAFIN1 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OSOBAFIN2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TELEFON1 = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    TELEFON2 = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    FAX = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    EMAIL = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    OSOBA_KONTAKT = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    WWW = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    GG = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    SKYPE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KONTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    IBAN = table.Column<int>(type: "int", nullable: true),
                    GEO_LONGI = table.Column<double>(type: "float", nullable: true),
                    GEO_LAT = table.Column<double>(type: "float", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    ID_KONTRAHENCI = table.Column<int>(type: "int", nullable: true),
                    GDPR_OBLIVION_ID = table.Column<int>(type: "int", nullable: true),
                    PSEUDONIM = table.Column<int>(type: "int", nullable: true),
                    ANONIM = table.Column<int>(type: "int", nullable: true),
                    PSEUDONIM_CANCEL = table.Column<int>(type: "int", nullable: true),
                    ANONIM_CANCEL = table.Column<int>(type: "int", nullable: true),
                    org_ID_GDPR_KONTRAHENCI = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_GDPR_KONTRAHENCI", x => x.ID_GDPR_KONTRAH);
                });

            migrationBuilder.CreateTable(
                name: "GDPR_KONTRAHENCI_REPREZ",
                columns: table => new
                {
                    ID_GDPR_KONTRAHENCI_REPREZ = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: false),
                    TYTUL = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    NAZWISKO_IMIE = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: false),
                    STANOWISKO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    GRUPA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TEL_KOM = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    FAX = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    EMAIL = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    GG = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    SKYPE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    GIELDA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    ODDZIAL = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    ODDZIAL_ID = table.Column<int>(type: "int", nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    MAILING = table.Column<int>(type: "int", nullable: true),
                    AKTYWNY = table.Column<int>(type: "int", nullable: true),
                    EROD = table.Column<int>(type: "int", nullable: true),
                    POWIADOMIENIE = table.Column<int>(type: "int", nullable: true),
                    PRODUKT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    STATUS_EMISJA = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    PSEUDONIM = table.Column<int>(type: "int", nullable: true),
                    ANONIM = table.Column<int>(type: "int", nullable: true),
                    PSEUDONIM_CANCEL = table.Column<int>(type: "int", nullable: true),
                    ANONIM_CANCEL = table.Column<int>(type: "int", nullable: true),
                    ID_KONTRAHENCI_REPREZ = table.Column<int>(type: "int", nullable: true),
                    GDPR_OBLIVION_ID = table.Column<int>(type: "int", nullable: true),
                    org_ID_GDPR_KONTRAHENCI_REPREZ = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_GDPR_KONTRAHENCI_REPREZ", x => x.ID_GDPR_KONTRAHENCI_REPREZ);
                });

            migrationBuilder.CreateTable(
                name: "GDPR_OBLIVION",
                columns: table => new
                {
                    ID_GDPR_OBLIVION = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    OBLIVION_TYPE_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    SUBJECT_OBJ_ID = table.Column<int>(type: "int", nullable: true),
                    NAME = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    EMAIL = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true),
                    PHONE = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ADDRESS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ZIP = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    CITY = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    COUNTRY = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    PASSPORT = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    IDCARD = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    COMPANY_ID = table.Column<int>(type: "int", nullable: true),
                    COMPANY_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    COMPANY_NAME = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    REFERENCE_OBJ_ID = table.Column<int>(type: "int", nullable: true),
                    REFERENCE_REC_ID = table.Column<int>(type: "int", nullable: true),
                    REFERENCE_REC = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SUB_OBJ_ID = table.Column<int>(type: "int", nullable: true),
                    DATE_FROM = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATE_TO = table.Column<DateTime>(type: "datetime", nullable: true),
                    CANCELED = table.Column<int>(type: "int", nullable: true),
                    DISABLE = table.Column<int>(type: "int", nullable: true),
                    ACTIVE = table.Column<int>(type: "int", nullable: true),
                    ANALYSIS = table.Column<int>(type: "int", nullable: true),
                    org_ID_GDPR_OBLIVION = table.Column<int>(type: "int", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_GDPR_OBLIVION", x => x.ID_GDPR_OBLIVION);
                });

            migrationBuilder.CreateTable(
                name: "GDPR_OBLIVION_POS",
                columns: table => new
                {
                    ID_GDPR_OBLIVION_POS = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    GDPR_OBLIVION_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    OBJ_ID = table.Column<int>(type: "int", nullable: true, comment: "Typ obiektu do zatarcia np. 1 - przesylka, 2 zlecenie"),
                    REC_ID = table.Column<int>(type: "int", nullable: true, comment: "Id obiektu - np. id przesylki"),
                    SUB_OBJ_ID = table.Column<int>(type: "int", nullable: true, comment: "Typ podelementu np. NADAWCA, ODBIORCA, MIEJSCE_WY na przesyłce."),
                    SUBJECT_OBJ_ID = table.Column<int>(type: "int", nullable: true, comment: "Jeśli zacieramy dane i one są onalezione w słowniku np. KONTRAH_REPREZ to tu wstawiamy id obiketu - pracownik, kierowca etc."),
                    SUBJECT_REC_ID = table.Column<int>(type: "int", nullable: true, comment: "Id rekordu w tym słowniku"),
                    GDPR_SUBJECT_OBJ_ID = table.Column<int>(type: "int", nullable: true, comment: "Tu ustawimy typ obiektu który utworzymy w pomocniczej tabeli GPRS - obraz rekordy z tabeli operacyjnej"),
                    GDPR_SUBJECT_REC_ID = table.Column<int>(type: "int", nullable: true, comment: "Tu wprowadzani id rekordu w tej tabeli pomocniczej GDPR (kopia z operacyjnej lub założenie rekordu w tym słowniku jeśli nie było go w operacyjnej"),
                    CANCELED = table.Column<int>(type: "int", nullable: true, comment: "Pozycja oznaczona jako anulowana - będzie usunięta -  nie będzie podlegała obróbce przez ZAMAZANIE"),
                    OBJ_TABLE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REC_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    REC_REFERENCE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REC_INFO = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    REC_DATA_LP = table.Column<int>(type: "int", nullable: true),
                    GDPR_SUBJECT_REC_LP = table.Column<int>(type: "int", nullable: true),
                    GDPR_PERSONS_ID = table.Column<int>(type: "int", nullable: true),
                    org_ID_GDPR_OBLIVION_POS = table.Column<int>(type: "int", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_GDPR_OBLIVION_POS", x => x.ID_GDPR_OBLIVION_POS);
                });

            migrationBuilder.CreateTable(
                name: "GDPR_PERSONS",
                columns: table => new
                {
                    ID_GDPR_PERSONS = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    GDPR_OBLIVION_ID = table.Column<int>(type: "int", nullable: true),
                    NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PHONE = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    EMAIL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    org_ID_GDPR_PERSONS = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_GDPR_PERSONS", x => x.ID_GDPR_PERSONS);
                });

            migrationBuilder.CreateTable(
                name: "GDPR_PROCESSING_REGISTER",
                columns: table => new
                {
                    ID_GDPR_PROCESSING_REGISTER = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    REGISTER_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    ACTIVITY_ID = table.Column<int>(type: "int", nullable: true),
                    ACTIVITY = table.Column<string>(type: "varchar(max)", unicode: false, nullable: true),
                    ORG_UNIT_ID = table.Column<int>(type: "int", nullable: true),
                    ORG_UNIT = table.Column<string>(type: "varchar(max)", unicode: false, nullable: true),
                    PURPOSE_ID = table.Column<int>(type: "int", nullable: true),
                    PURPOSE = table.Column<string>(type: "varchar(max)", unicode: false, nullable: true),
                    CATEGORY_PERSON_ID = table.Column<int>(type: "int", nullable: true),
                    CATEGORY_PERSON = table.Column<string>(type: "varchar(max)", unicode: false, nullable: true),
                    CATEGORY_DATA_ID = table.Column<int>(type: "int", nullable: true),
                    CATEGORY_DATA = table.Column<string>(type: "varchar(max)", unicode: false, nullable: true),
                    LEGAL_BASIS_ID = table.Column<int>(type: "int", nullable: true),
                    LEGAL_BASIS = table.Column<string>(type: "varchar(max)", unicode: false, nullable: true),
                    DATA_SOURCE_ID = table.Column<int>(type: "int", nullable: true),
                    DATA_SOURCE = table.Column<string>(type: "varchar(max)", unicode: false, nullable: true),
                    CATEGORY_DATA_DELETING_DATE_PLANNED_ID = table.Column<int>(type: "int", nullable: true),
                    CATEGORY_DATA_DELETING_DATE_PLANNED = table.Column<string>(type: "varchar(max)", unicode: false, nullable: true),
                    CO_ADMINISTER_CONTACT_DATA_ID = table.Column<int>(type: "int", nullable: true),
                    CO_ADMINISTER_CONTACT_DATA = table.Column<string>(type: "varchar(max)", unicode: false, nullable: true),
                    PROCESSOR_DATA_ID = table.Column<int>(type: "int", nullable: true),
                    PROCESSOR_DATA = table.Column<string>(type: "varchar(max)", unicode: false, nullable: true),
                    CATEGORY_RECIPIENT_ID = table.Column<int>(type: "int", nullable: true),
                    CATEGORY_RECIPIENT = table.Column<string>(type: "varchar(max)", unicode: false, nullable: true),
                    SOFTWARE_NAME_ID = table.Column<int>(type: "int", nullable: true),
                    SOFTWARE_NAME = table.Column<string>(type: "varchar(max)", unicode: false, nullable: true),
                    SECURITY_MEASURES_ID = table.Column<int>(type: "int", nullable: true),
                    SECURITY_MEASURES = table.Column<string>(type: "varchar(max)", unicode: false, nullable: true),
                    DPIA_STORAGE_ID = table.Column<int>(type: "int", nullable: true),
                    DPIA_STORAGE = table.Column<string>(type: "varchar(max)", unicode: false, nullable: true),
                    THIRD_COUNTRY_TRANSFER_ID = table.Column<int>(type: "int", nullable: true),
                    THIRD_COUNTRY_TRANSFER = table.Column<string>(type: "varchar(max)", unicode: false, nullable: true),
                    THIRD_COUNTRY_TRANSFER_SECURITY_MEASURES_ID = table.Column<int>(type: "int", nullable: true),
                    THIRD_COUNTRY_TRANSFER_SECURITY_MEASURES = table.Column<string>(type: "varchar(max)", unicode: false, nullable: true),
                    CANCELED = table.Column<int>(type: "int", nullable: true),
                    STATUS_EMISJA = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_GDPR_PROCESSING_REGISTER", x => x.ID_GDPR_PROCESSING_REGISTER);
                });

            migrationBuilder.CreateTable(
                name: "GDPR_SOURCE",
                columns: table => new
                {
                    ID_GDPR_SOURCE = table.Column<int>(type: "int", nullable: false),
                    CODE = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "CODE of GDPR SOURCE e.g. WMS"),
                    DESCRIPTION = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "DECRIPTION of GDPR SOURCE e.g. from WMS system"),
                    REMARKS = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true, comment: "REMARKS of GDPR SOURCE e.g. source strictly def. in WMS system"),
                    ACTIVE = table.Column<int>(type: "int", nullable: true, comment: "ACTIVE available to use"),
                    SYSTEM = table.Column<int>(type: "int", nullable: true, comment: "SYSTEM defined by system - change not allowed"),
                    DictionaryId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TextId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_GDPR_SOURCE", x => x.ID_GDPR_SOURCE);
                },
                comment: "Źródła danych osobowych");

            migrationBuilder.CreateTable(
                name: "GDPR_UZYTKOWNIK",
                columns: table => new
                {
                    ID_GDPR_UZYTKOWNIK = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SYMBOL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TELEFON = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: true),
                    TEL_KOM = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: true),
                    FAX = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: true),
                    EMAIL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    ID_UZYTKOWNIK = table.Column<int>(type: "int", nullable: true),
                    GDPR_OBLIVION_ID = table.Column<int>(type: "int", nullable: true),
                    PSEUDONIM = table.Column<int>(type: "int", nullable: true),
                    ANONIM = table.Column<int>(type: "int", nullable: true),
                    PSEUDONIM_CANCEL = table.Column<int>(type: "int", nullable: true),
                    ANONIM_CANCEL = table.Column<int>(type: "int", nullable: true),
                    org_ID_GDPR_UZYTKOWNIK = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_GDPR_UZYTKOWNIK", x => x.ID_GDPR_UZYTKOWNIK);
                });

            migrationBuilder.CreateTable(
                name: "GENER",
                columns: table => new
                {
                    ID_GENER = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: false),
                    GENVALUE = table.Column<int>(type: "int", nullable: true),
                    External = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_GENER", x => x.ID_GENER);
                });

            migrationBuilder.CreateTable(
                name: "GeofenceEvent",
                schema: "mob",
                columns: table => new
                {
                    GeofenceEventId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ObjectId = table.Column<int>(type: "int", nullable: true),
                    RecordId = table.Column<int>(type: "int", nullable: true),
                    Detail1 = table.Column<int>(type: "int", nullable: true),
                    Detail2 = table.Column<int>(type: "int", nullable: true),
                    Detail3 = table.Column<int>(type: "int", nullable: true),
                    GeofenceId = table.Column<int>(type: "int", nullable: true),
                    Active = table.Column<int>(type: "int", nullable: true),
                    Sequence = table.Column<int>(type: "int", nullable: true),
                    CreateUserId = table.Column<int>(type: "int", nullable: true),
                    CreateUserName = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    CreateDateTime = table.Column<DateTime>(type: "datetime", nullable: true),
                    ModifyUserId = table.Column<int>(type: "int", nullable: true),
                    ModifyUserName = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ModifyDateTime = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_GeofenceEvent", x => x.GeofenceEventId);
                });

            migrationBuilder.CreateTable(
                name: "GeofenceEventData",
                schema: "mob",
                columns: table => new
                {
                    GeofenceEventDataId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    GeofenceEventId = table.Column<int>(type: "int", nullable: true),
                    DeviceInfo = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    GeofenceEnter = table.Column<int>(type: "int", nullable: true),
                    GeofenceExit = table.Column<int>(type: "int", nullable: true),
                    EventDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Latitude = table.Column<double>(type: "float", nullable: true),
                    Longitude = table.Column<double>(type: "float", nullable: true),
                    Altitude = table.Column<double>(type: "float", nullable: true),
                    Speed = table.Column<double>(type: "float", nullable: true),
                    TrueHeading = table.Column<double>(type: "float", nullable: true),
                    ErrorRadius = table.Column<double>(type: "float", nullable: true),
                    Satellite = table.Column<int>(type: "int", nullable: true),
                    Done = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_GeofenceEventData", x => x.GeofenceEventDataId);
                });

            migrationBuilder.CreateTable(
                name: "Geofencing",
                schema: "geo",
                columns: table => new
                {
                    GeofencingId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    AreaId = table.Column<int>(type: "int", nullable: true),
                    Name = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    Description = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    ObjectTypeId = table.Column<int>(type: "int", nullable: true),
                    ObjectId = table.Column<int>(type: "int", nullable: true),
                    VehicleId = table.Column<int>(type: "int", nullable: true),
                    DriverId = table.Column<int>(type: "int", nullable: true),
                    ServicedByTelematics = table.Column<int>(type: "int", nullable: true, defaultValueSql: "((0))"),
                    Template = table.Column<int>(type: "int", nullable: true, defaultValueSql: "((0))"),
                    CreateUserId = table.Column<int>(type: "int", nullable: true),
                    CreateTime = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    ModifyUserId = table.Column<int>(type: "int", nullable: true),
                    ModifyTime = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__Geofenci__39949861727ECD7A", x => x.GeofencingId);
                });

            migrationBuilder.CreateTable(
                name: "GEOFENCING",
                columns: table => new
                {
                    ID_GEOFENCING = table.Column<int>(type: "int", nullable: false),
                    POI_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    LON = table.Column<double>(type: "float", nullable: true),
                    LAT = table.Column<double>(type: "float", nullable: true),
                    GF_TYPE = table.Column<short>(type: "smallint", nullable: true),
                    GF_ALWAYS_VALID = table.Column<short>(type: "smallint", nullable: true),
                    GF_NAME = table.Column<string>(type: "varchar(140)", unicode: false, maxLength: 140, nullable: true),
                    GF_REGION = table.Column<short>(type: "smallint", nullable: true),
                    GF_RADIUS_X = table.Column<int>(type: "int", nullable: true),
                    GF_RADIUS_Y = table.Column<int>(type: "int", nullable: true),
                    GF_DIR_ENTERING = table.Column<short>(type: "smallint", nullable: true),
                    GF_DIR_LEAVING = table.Column<short>(type: "smallint", nullable: true),
                    GF_MAX_DURATION = table.Column<int>(type: "int", nullable: true),
                    F_SEND_TO_BASE = table.Column<short>(type: "smallint", nullable: true),
                    F_BEEP_TO_DRIVER = table.Column<short>(type: "smallint", nullable: true),
                    F_WARN_TO_DRIVER = table.Column<short>(type: "smallint", nullable: true),
                    WARN_TO_DRIVER = table.Column<string>(type: "varchar(142)", unicode: false, maxLength: 142, nullable: true),
                    DT_CREATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    DT_GF_EVENT = table.Column<DateTime>(type: "datetime", nullable: true),
                    DT_GF_ADD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DT_GF_DEL = table.Column<DateTime>(type: "datetime", nullable: true),
                    DT_TO_SEND = table.Column<DateTime>(type: "datetime", nullable: true),
                    DT_VALIDITY = table.Column<DateTime>(type: "datetime", nullable: true),
                    A_LON = table.Column<double>(type: "float", nullable: true),
                    A_LAT = table.Column<double>(type: "float", nullable: true),
                    B_LON = table.Column<double>(type: "float", nullable: true),
                    B_LAT = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_GEOFENCING", x => x.ID_GEOFENCING);
                },
                comment: "tabela do obsługi geofencingu");

            migrationBuilder.CreateTable(
                name: "GEOFENCING_STAT",
                columns: table => new
                {
                    ID_GEOFENCING_STAT = table.Column<int>(type: "int", nullable: false),
                    ID_GEOFENCING = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ID_TABOR = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ID_EXT = table.Column<int>(type: "int", nullable: true),
                    ID_EXT1 = table.Column<int>(type: "int", nullable: true),
                    GF_READY = table.Column<short>(type: "smallint", nullable: true),
                    GF_INTERNAL = table.Column<short>(type: "smallint", nullable: true),
                    GF_ERROR = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    GF_STAT_ADD = table.Column<short>(type: "smallint", nullable: true),
                    GF_STAT_DEL = table.Column<short>(type: "smallint", nullable: true),
                    DT_GF_ADD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DT_GF_DEL = table.Column<DateTime>(type: "datetime", nullable: true),
                    GF_ENTER_DT = table.Column<DateTime>(type: "datetime", nullable: true),
                    GF_ENTER_LON = table.Column<double>(type: "float", nullable: true),
                    GF_ENTER_LAT = table.Column<double>(type: "float", nullable: true),
                    GF_LEAVE_DT = table.Column<DateTime>(type: "datetime", nullable: true),
                    GF_LEAVE_LON = table.Column<double>(type: "float", nullable: true),
                    GF_LEAVE_LAT = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_GEOFENCING_STAT", x => x.ID_GEOFENCING_STAT);
                },
                comment: "tabela do rejestrowania statusu geofencingu dla pojazdu");

            migrationBuilder.CreateTable(
                name: "GEOFENCING_TABOR",
                columns: table => new
                {
                    ID_GEOFENCING_TABOR = table.Column<int>(type: "int", nullable: false),
                    ID_GEOFENCING = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ID_TABOR = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_GEOFENCING_TABOR", x => x.ID_GEOFENCING_TABOR);
                },
                comment: "tabela do łączenia geofencingu z pojazdami");

            migrationBuilder.CreateTable(
                name: "GeofencingEvent",
                schema: "geo",
                columns: table => new
                {
                    GeofencingEventId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    GeofencingId = table.Column<int>(type: "int", nullable: true),
                    EventTypeId = table.Column<int>(type: "int", nullable: true),
                    ActionTypeId = table.Column<int>(type: "int", nullable: true),
                    Date = table.Column<DateTime>(type: "datetime", nullable: true),
                    Minute = table.Column<int>(type: "int", nullable: true),
                    Active = table.Column<int>(type: "int", nullable: true),
                    ValidFrom = table.Column<DateTime>(type: "datetime", nullable: true),
                    ValidUntil = table.Column<DateTime>(type: "datetime", nullable: true),
                    NumberOfUse = table.Column<int>(type: "int", nullable: true),
                    EventCount = table.Column<int>(type: "int", nullable: true),
                    CreateUserId = table.Column<int>(type: "int", nullable: true),
                    CreateTime = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    ModifyUserId = table.Column<int>(type: "int", nullable: true),
                    ModifyTime = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_GeofencingEvent", x => x.GeofencingEventId);
                });

            migrationBuilder.CreateTable(
                name: "GF_ACTION",
                columns: table => new
                {
                    ID_GF_ACTION = table.Column<int>(type: "int", nullable: false),
                    OBJ_TYP = table.Column<int>(type: "int", nullable: true, comment: "typ obiektu (201-LOG_GF /200-GF_EVENT_DEF /12-ZLECENIA_ZA_WY /11-LISTY_LINIOWE_ZA_WY)"),
                    DESCR = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "opis akcji"),
                    MSG_TOBASE_ID = table.Column<int>(type: "int", nullable: true, comment: "id formatki wiadomości do bazy"),
                    MSG_TOBASE_TXT = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "wiadomość do bazy (Msg_ToBase_ID=0) <gf-send>"),
                    MSG_TODRIVER_ID = table.Column<int>(type: "int", nullable: true, comment: "id formatki wiadomości do kierowcy"),
                    MSG_TODRIVER_TXT = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "wiadomość do kierowcy (Msg_ToDriver_ID=0) <gf-send>"),
                    BEEPTODRIVER = table.Column<short>(type: "smallint", nullable: true, comment: "0/1 - zasygnalizuj kierowcy dźwiękiem <gf-send>"),
                    EXECPROCEDURE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "wykonaj procedurę składowaną"),
                    SQL_CONDITION = table.Column<string>(type: "text", nullable: true, comment: "SQL z warunkiem wysyłki Msg_ToBase (jeśli wynik pusty - nie wysyłaj)")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_GF_ACTION", x => x.ID_GF_ACTION);
                },
                comment: "definicja akcji dla zdarzenia geofencingu");

            migrationBuilder.CreateTable(
                name: "GF_DEF",
                columns: table => new
                {
                    ID_GF_DEF = table.Column<int>(type: "int", nullable: false),
                    OBJ_TYP = table.Column<int>(type: "int", nullable: true, comment: "typ obiektu (11-LISTY_LINIOWE_ZA_WY /12-ZLECENIA_ZA_WY /200-GF_EVENT_DEF)"),
                    GF_NAME = table.Column<string>(type: "varchar(140)", unicode: false, maxLength: 140, nullable: true, comment: "nazwa geofencingu <gf-send>"),
                    GF_DESCR = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "opis definicji geofencingu"),
                    RADIUS = table.Column<int>(type: "int", nullable: true, comment: "promień okręgu w metrach <gf-send>"),
                    ACTION_ENTER_ID = table.Column<int>(type: "int", nullable: true, comment: "id akcji dla wjazdu do strefy"),
                    ACTION_EXIT_ID = table.Column<int>(type: "int", nullable: true, comment: "id akcji dla wyjazdu ze strefy"),
                    ACTION_DURATION_ID = table.Column<int>(type: "int", nullable: true, comment: "id akcji dla przekroczenia czasu pobytu w strefie"),
                    ACTION_ETA_ID = table.Column<int>(type: "int", nullable: true, comment: "id akcji dla ETA (kontrola czasu dojazdu do strefy)"),
                    Task_Type = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "typ zdarzenia za/wy")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_GF_DEF", x => x.ID_GF_DEF);
                },
                comment: "definicja geofencingu");

            migrationBuilder.CreateTable(
                name: "GF_DEF_POI_OBJ",
                columns: table => new
                {
                    ID_GF_DEF_POI_OBJ = table.Column<int>(type: "int", nullable: false),
                    POI_ID = table.Column<int>(type: "int", nullable: true, comment: "id POI (referencja do tabeli MIEJSCA_ZA_ROZLADUNKU)"),
                    OBJ_TYP = table.Column<int>(type: "int", nullable: true, comment: "typ obiektu (11-LISTY_LINIOWE_ZA_WY /12-ZLECENIA_ZA_WY /200-GF_EVENT_DEF)"),
                    GF_DEF_ID = table.Column<int>(type: "int", nullable: true, comment: "id definicji geofencingu (referencja do tabeli GF_DEF)")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_GF_DEF_POI_OBJ", x => x.ID_GF_DEF_POI_OBJ);
                },
                comment: "domyślne definicje GF w POI:MIEJSCA_ZA_ROZLADUNKU dla obiektów różnych typów");

            migrationBuilder.CreateTable(
                name: "GF_EVENT_DEF",
                columns: table => new
                {
                    ID_GF_EVENT_DEF = table.Column<int>(type: "int", nullable: false),
                    GF_DEF_ID = table.Column<int>(type: "int", nullable: true, comment: "id definicji geofencingu (referencja do tabeli GF_DEF)"),
                    POI_ID = table.Column<int>(type: "int", nullable: true, comment: "id POI (referencja do tabeli MIEJSCA_ZA_ROZLADUNKU)"),
                    LON = table.Column<double>(type: "float", nullable: true, comment: "długość geograficzna <gf-send>"),
                    LAT = table.Column<double>(type: "float", nullable: true, comment: "szerokość geograficzna <gf-send>"),
                    MAXDURATION = table.Column<int>(type: "int", nullable: true, comment: "maksymalny czas pobytu w strefie w sekundach <gf-send>"),
                    DESCR = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "opis zdarzenia (np. adres lub nazwa strefy)"),
                    DT_TOSEND = table.Column<DateTime>(type: "datetime", nullable: true, comment: "max. termin próby wysyłki do pojazdu"),
                    DT_VALIDITY = table.Column<DateTime>(type: "datetime", nullable: true, comment: "data ważności geofencingu <gf-send>"),
                    POI = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "opis POI lub GPS (nazwa; adres; kod; miasto; kraj)")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_GF_EVENT_DEF", x => x.ID_GF_EVENT_DEF);
                },
                comment: "(OBJ_TYP=200) definicja zdarzenia geofencingu");

            migrationBuilder.CreateTable(
                name: "GF_SEND_LIST",
                columns: table => new
                {
                    ID_GF_SEND_LIST = table.Column<int>(type: "int", nullable: false),
                    OBJ_TYP = table.Column<int>(type: "int", nullable: true, comment: "typ obiektu (11-LISTY_LINIOWE_ZA_WY /12-ZLECENIA_ZA_WY /200-GF_EVENT_DEF)"),
                    REC_ID = table.Column<int>(type: "int", nullable: true, comment: "id obiektu SPEED (GF_EVENT_DEF_ID = [OBJ_TYP;REC_ID])"),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true, comment: "id monitorowanego pojazdu"),
                    SFM_TERM_ID = table.Column<int>(type: "int", nullable: true, comment: "id terminala, do którego należy wysłać geofencing (-1 - obsługa wewnętrzna)"),
                    ACTION = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true, comment: "akcja/status geofencingu na pojeździe: /N-one - przygotowywanie do wysyłki (lub do przetwarzania gdy SFM_TERM_ID = -1) /S-end - wyślij do terminala pojazdu (po wysyłce: R-eady(OK) lub E-rror(błąd)) /C-ancel - anuluj na terminalu pojazdu (po wysyłce: D-isabled(OK) lub E-rror(błąd)) /R-eady - gotowe po wysyłce lub gotowe do przetwarzania wewnętrznego /D-isabled - nieaktywne po anulowaniu /E-rror - po błędnej akcji Send lub Cancel"),
                    DT_SEND = table.Column<DateTime>(type: "datetime", nullable: true, comment: "data wysyłki geofencingu do terminala"),
                    STAT_SEND = table.Column<short>(type: "smallint", nullable: true, comment: "status wysyłki do terminala (0-brak /10-wysyłka /20-zakończono /99-błąd)"),
                    DT_CANCEL = table.Column<DateTime>(type: "datetime", nullable: true, comment: "data wysyłki anulowania geofencingu na terminalu"),
                    STAT_CANCEL = table.Column<short>(type: "smallint", nullable: true, comment: "status anulowania na terminalu (0-brak /10-wysyłka /20-zakończono /99-błąd)"),
                    ERROR_TXT = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "tekst błędu podczas wysyłki/przetwarzania"),
                    EXT_ID_ENTER = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "id w systemie zewnętrznym - wjazd do obszaru <gf-received>"),
                    EXT_ID_EXIT = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "id w systemie zewnętrznym - wyjazd z obszaru <gf-received>"),
                    EXT_ID_DURATION = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "id w systemie zewnętrznym - przekroczenie czasu pobytu <gf-received>"),
                    DT_DELETE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "data wysyłki anulowania/skasowania geofencingu na terminalu"),
                    STAT_DELETE = table.Column<short>(type: "smallint", nullable: true, comment: "status usunięcia geofencingu (0-brak /30-do anulowania /40-do usunięcia /50-usunięte /99-błąd)"),
                    DT_MODIFY = table.Column<DateTime>(type: "datetime", nullable: true, comment: "data ostatniej modyfikacji rekordu"),
                    SEND_ENTER = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "status wysyłki zdarzenia ENTER (0-brak /10-utworzone /20-wysłane /99-błąd)"),
                    SEND_EXIT = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "status wysyłki zdarzenia EXIT (0-brak /10-utworzone /20-wysłane /99-błąd)"),
                    SEND_DURATION = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "status wysyłki zdarzenia DURATION (0-brak /10-utworzone /20-wysłane /99-błąd)"),
                    CANCEL_ENTER = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "status anulowania zdarzenia ENTER (0-brak /10-zgłoszone /20-anulowane /99-błąd)"),
                    CANCEL_EXIT = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "status anulowania zdarzenia EXIT (0-brak /10-zgłoszone /20-anulowane /99-błąd)"),
                    CANCEL_DURATION = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "status anulowania zdarzenia DURATION (0-brak /10-zgłoszone /20-anulowane /99-błąd)")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_GF_SEND_LIST", x => x.ID_GF_SEND_LIST);
                },
                comment: "lista wysyłki/przetwarzania geofencingu");

            migrationBuilder.CreateTable(
                name: "GIELDA_POJAZDOW",
                columns: table => new
                {
                    ID_GIELDA_POJAZDOW = table.Column<int>(type: "int", nullable: false),
                    ANULOWANY = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy wpis anulowany"),
                    DATA_GODZ = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data/Godz wprowadzenia"),
                    DATA_GODZ_OD = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data/Godz od"),
                    DATA_GODZ_DO = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data/Godz do"),
                    PRZEWOZNIK_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do KONTRAHENCI"),
                    PRZEWOZNIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Przewoźnik"),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do TABOR"),
                    TABOR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Nr rej"),
                    TABOR_NR_B = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Nr boczny"),
                    KIEROWCA1_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do tabeli KIEROWCY"),
                    KIEROWCA1 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Nazwisko imie kierowcy 1"),
                    KIEROWCA1_TEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Telefon do kierowcy 1"),
                    KIEROWCA2_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do tabeli KIEROWCY"),
                    KIEROWCA2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Nazwisko imie kierowcy 2"),
                    KIEROWCA2_TEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Telefon do kierowcy 2"),
                    OBIEKT_TYP = table.Column<int>(type: "int", nullable: true, comment: "Typ źródła danych"),
                    OBIEKT_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do obiektu: ZLECENIA, LISTY_LINIOWE"),
                    OBIEKT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer obiektu"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja wprowadzająca na giełdę"),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dział wprowadzajacy na giełdę"),
                    PRACOWNIK_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do UZYTKOWNICY"),
                    PRACOWNIK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Użytkownik wprowadzajacy na giełdę"),
                    ODESLAC = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy odesłać do lokalizacji wprowadz."),
                    OST_POI_ID = table.Column<int>(type: "int", nullable: true, comment: "ID POI-a"),
                    OST_POI_NAZWA = table.Column<string>(type: "varchar(120)", unicode: false, maxLength: 120, nullable: true, comment: "Nazwa POI-a"),
                    OST_POI_ADRES = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true, comment: "Adres POI-a"),
                    OST_POI_MIASTO = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true, comment: "Miejscowość POI-a"),
                    OST_POI_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Kod pocztowy POI-a"),
                    OST_POI_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Kraj POI-a"),
                    OST_POI_TEL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Telefon do POI-a"),
                    OST_POI_FAX = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Fax do POI-a"),
                    OST_POI_GEO_LONGI = table.Column<double>(type: "float", nullable: true, comment: "GPS - długość"),
                    OST_POI_GEO_LAT = table.Column<double>(type: "float", nullable: true, comment: "GPS - szerokość"),
                    STREFA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Strefa"),
                    UWAGI = table.Column<string>(type: "text", nullable: true, comment: "Uwagi"),
                    REZ = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy rezerwacja wstępna"),
                    REZ_DATA_GODZ = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data/Godz rezerwacji"),
                    REZ_LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja rezerwująca"),
                    REZ_PRACOWNIK_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do UZYTKOWNICY"),
                    REZ_PRACOWNIK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Użytkownik rezerwujący"),
                    REZ_UWAGI = table.Column<string>(type: "text", nullable: true, comment: "Uwagi do rezerwacji"),
                    POBR = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy pobrano"),
                    POBR_DATA_GODZ = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data/Godz pobrania"),
                    POBR_LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja pobierająca"),
                    POBR_PRACOWNIK_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do UZYTKOWNICY"),
                    POBR_PRACOWNIK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Użytkownik pobierajacy"),
                    POBR_UWAGI = table.Column<string>(type: "text", nullable: true, comment: "Uwagi do pobrania"),
                    POBR_OBIEKT_TYP = table.Column<int>(type: "int", nullable: true, comment: "Typ źródła danych na który pobrano"),
                    POBR_OBIEKT_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do obiektu na który pobrano: ZLECENIA, LISTY_LINIOWE"),
                    POBR_OBIEKT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer obiektu na który pobrano"),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    RODZAJ = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Rodzaj: P - pojazd / Z - zlecenie"),
                    NACZEPA_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do TABOR"),
                    NACZEPA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Nr rej"),
                    NACZEPA_NR_B = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Nr boczny"),
                    OST_POI_TYP = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Typ POI-a"),
                    DORAZNY = table.Column<int>(type: "int", nullable: true),
                    UWAGI_DO_POJAZDU = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    WARUNKI_DODATKOWE = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    STATUS = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    ZRODLO = table.Column<int>(type: "int", nullable: true, comment: "null/0 - recznie, 1 - automat"),
                    ADR = table.Column<int>(type: "int", nullable: true, comment: "Czy zlecenie ADR / Kierowca ma upr. ADR"),
                    OST_POI_LOKALIZACJA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Lokalizacja"),
                    DATA_ZA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data/Godz ZA"),
                    DATA_WY = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data/Godz WY"),
                    POCZ_POI_TYP = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Typ POI-a"),
                    POCZ_POI_ID = table.Column<int>(type: "int", nullable: true, comment: "ID POI-a"),
                    POCZ_POI_NAZWA = table.Column<string>(type: "varchar(120)", unicode: false, maxLength: 120, nullable: true, comment: "Nazwa POI-a"),
                    POCZ_POI_ADRES = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true, comment: "Adres POI-a"),
                    POCZ_POI_MIASTO = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true, comment: "Miejscowość POI-a"),
                    POCZ_POI_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Kod pocztowy POI-a"),
                    POCZ_POI_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Kraj POI-a"),
                    POCZ_POI_TEL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Telefon do POI-a"),
                    POCZ_POI_FAX = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Fax do POI-a"),
                    POCZ_POI_GEO_LONGI = table.Column<double>(type: "float", nullable: true, comment: "GPS - długość"),
                    POCZ_POI_GEO_LAT = table.Column<double>(type: "float", nullable: true, comment: "GPS - szerokość"),
                    POCZ_POI_LOKALIZACJA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Lokalizacja"),
                    POCZ_STREFA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Strefa")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_GIELDA_POJAZDOW", x => x.ID_GIELDA_POJAZDOW);
                },
                comment: "Giełda pojazdów");

            migrationBuilder.CreateTable(
                name: "GridLayout",
                columns: table => new
                {
                    GridLayoutId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    UserId = table.Column<int>(type: "int", nullable: true),
                    GridSettingsId = table.Column<int>(type: "int", nullable: true),
                    Name = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    Layout = table.Column<byte[]>(type: "varbinary(max)", nullable: true),
                    DefaultView = table.Column<int>(type: "int", nullable: true),
                    FilteringColumnFilteredItemsList = table.Column<int>(name: "Filtering.ColumnFilteredItemsList", type: "int", nullable: true),
                    SortingClearOnExit = table.Column<int>(name: "Sorting.ClearOnExit", type: "int", nullable: true),
                    FixedBandSeparatorFixedBandSeparatorWidth = table.Column<int>(name: "FixedBandSeparator.FixedBandSeparatorWidth", type: "int", nullable: true),
                    FixedBandSeparatorFixedBandSeparatorColor = table.Column<string>(name: "FixedBandSeparator.FixedBandSeparatorColor", type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    StylesContentEvenStyle = table.Column<int>(name: "Styles.ContentEvenStyle", type: "int", nullable: true),
                    FilterBoxVisible = table.Column<int>(name: "FilterBox.Visible", type: "int", nullable: true),
                    FilterRowVisible = table.Column<int>(name: "FilterRow.Visible", type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_GridLayout", x => x.GridLayoutId);
                });

            migrationBuilder.CreateTable(
                name: "GridLayoutBackup",
                columns: table => new
                {
                    GridLayoutBackupId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    UserId = table.Column<int>(type: "int", nullable: true),
                    GridSettingsId = table.Column<int>(type: "int", nullable: true),
                    Name = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    Version = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    Language = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    Layout = table.Column<byte[]>(type: "varbinary(max)", nullable: true),
                    DefaultView = table.Column<int>(type: "int", nullable: true),
                    FilteringColumnFilteredItemsList = table.Column<int>(name: "Filtering.ColumnFilteredItemsList", type: "int", nullable: true),
                    SortingClearOnExit = table.Column<int>(name: "Sorting.ClearOnExit", type: "int", nullable: true),
                    FixedBandSeparatorFixedBandSeparatorWidth = table.Column<int>(name: "FixedBandSeparator.FixedBandSeparatorWidth", type: "int", nullable: true),
                    FixedBandSeparatorFixedBandSeparatorColor = table.Column<string>(name: "FixedBandSeparator.FixedBandSeparatorColor", type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    StylesContentEvenStyle = table.Column<int>(name: "Styles.ContentEvenStyle", type: "int", nullable: true),
                    FilterBoxVisible = table.Column<int>(name: "FilterBox.Visible", type: "int", nullable: true),
                    FilterRowVisible = table.Column<int>(name: "FilterRow.Visible", type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_GridLayoutBackup", x => x.GridLayoutBackupId);
                });

            migrationBuilder.CreateTable(
                name: "GridSettings",
                columns: table => new
                {
                    GridSettingsId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    WinName = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    ViewName = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    Data = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    Header = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    GlobalSettings = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Active = table.Column<int>(type: "int", nullable: true),
                    Language = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__GridSett__C27517E262F6C176", x => x.GridSettingsId);
                });

            migrationBuilder.CreateTable(
                name: "GridType",
                schema: "app",
                columns: table => new
                {
                    GridTypeId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: false),
                    Hint = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_GridType", x => x.GridTypeId);
                });

            migrationBuilder.CreateTable(
                name: "GRUPY_ANALITYCZNE",
                columns: table => new
                {
                    ID_GRUPY_ANALITYCZNE = table.Column<int>(type: "int", nullable: false),
                    KOD = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Kod"),
                    OPIS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Opis"),
                    DictionaryId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TextId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_GRUPY_ANALITYCZNE", x => x.ID_GRUPY_ANALITYCZNE);
                },
                comment: "Słownik grup analitycznych");

            migrationBuilder.CreateTable(
                name: "GRUPY_LADUNKOW",
                columns: table => new
                {
                    ID_GRUPY_LADUNKOW = table.Column<int>(type: "int", nullable: false),
                    KOD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Kod grupy"),
                    OPIS = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true, comment: "Opis grupy"),
                    PODW_RYZYKO = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy towar podwyższonego ryzyka"),
                    KOSZERNY = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy towar koszerny"),
                    UBEZP = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy dotyczy ubezpieczeń"),
                    DictionaryId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TextId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_GRUPY_LADUNKOW", x => x.ID_GRUPY_LADUNKOW);
                },
                comment: "Słownik grup ładunków");

            migrationBuilder.CreateTable(
                name: "GRUPY_LADUNKOW_PARAMETRY",
                columns: table => new
                {
                    ID_GRUPY_LADUNKOW_PARAMETRY = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    GRUPY_LADUNKOW_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCA_ZA_ROZLADUNKU_ID = table.Column<int>(type: "int", nullable: true),
                    KONTROLA = table.Column<int>(type: "int", nullable: true),
                    WARTOSC = table.Column<double>(type: "float", nullable: true),
                    GRUPA_LADUNKU_PO_ID = table.Column<int>(type: "int", nullable: true),
                    PROCEDURA_MYCIA_PO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_GRUPY_LADUNKOW_PARAMETRY", x => x.ID_GRUPY_LADUNKOW_PARAMETRY);
                },
                comment: "Słownik parametrów dla grup ładunków");

            migrationBuilder.CreateTable(
                name: "GRUPY_NIEOBECNOSCI",
                columns: table => new
                {
                    ID_GRUPY_NIEOBECNOSCI = table.Column<int>(type: "int", nullable: false),
                    KOD = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: false, defaultValueSql: "('000')", comment: "Kod grupy"),
                    OPIS = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Opis grupy"),
                    CZY_PRACA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy nieobecność związana z pracą - wyjazd służbowy"),
                    DictionaryId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TextId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_GRUPY_NIEOBECNOSCI", x => x.ID_GRUPY_NIEOBECNOSCI);
                },
                comment: "Słownik grup nieobecności");

            migrationBuilder.CreateTable(
                name: "HARMONOGRAMY",
                columns: table => new
                {
                    ID_HARMONOGRAMY = table.Column<int>(type: "int", nullable: false),
                    KOD = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    STATUS = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    KLIENT_ID = table.Column<int>(type: "int", nullable: true),
                    KLIENT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    MIEJSCE_TYP = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MIEJSCE_SYMBOL = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    RODZAJ_MIEJSCA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    CENNIK_WG = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    DATA_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    UTW_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    UTW_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    PROC_WYK = table.Column<int>(type: "int", nullable: true),
                    WYGENEROWANY = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE_ADRES = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MIEJSCE_MIASTO = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MIEJSCE_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    MIEJSCE_KRAJ = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    MIEJSCE_NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_HARMONOGRAMY", x => x.ID_HARMONOGRAMY);
                });

            migrationBuilder.CreateTable(
                name: "HARMONOGRAMY_POZ",
                columns: table => new
                {
                    ID_HARMONOGRAMY_POZ = table.Column<int>(type: "int", nullable: false),
                    HARMONOGRAMY_ID = table.Column<int>(type: "int", nullable: true),
                    DZIEN_TYG_NR = table.Column<int>(type: "int", nullable: true),
                    DZIEN_TYG = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    GODZ_WYJAZDU = table.Column<DateTime>(type: "datetime", nullable: true),
                    MAX_CZAS_REJ = table.Column<int>(type: "int", nullable: true),
                    GODZ_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_DO = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_HARMONOGRAMY_POZ", x => x.ID_HARMONOGRAMY_POZ);
                });

            migrationBuilder.CreateTable(
                name: "HELP_TABLE",
                schema: "opti",
                columns: table => new
                {
                    SolverTaskId = table.Column<int>(type: "int", nullable: true),
                    AKT_LOKALIZACJA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    AKT_DZIAL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    AKT_UZYTK_ID = table.Column<int>(type: "int", nullable: true),
                    AKT_ZRODLO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DATA_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    sessionId = table.Column<int>(type: "int", nullable: true),
                    insertDT = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "HISTORIA_KONTROLI_WYKAZ_WL",
                columns: table => new
                {
                    ID_HISTORIA_KONTROLI_WYKAZ_WL = table.Column<int>(type: "int", nullable: false),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Kontrolowany NIP"),
                    RACHUNEK = table.Column<string>(type: "varchar(26)", unicode: false, maxLength: 26, nullable: true, comment: "Kontrolowany r-k"),
                    RACHUNEK_ID = table.Column<int>(type: "int", nullable: true, comment: "Kontrolowany r-k"),
                    OBIEKT_TYP = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: false, defaultValueSql: "('')", comment: "Typ obiektu w kontekście którego dokonana była kontrola"),
                    OBIEKT_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "ID obiektu w kontekście którego dokonana była kontrola"),
                    OBIEKT_NR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Obiekt w kontekście którego dokonana była kontrola"),
                    DATA_KONTR_WYKAZ_WL = table.Column<DateTime>(type: "datetime", nullable: true),
                    WYNIK_KONTR_WYKAZ_WL = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    REQUEST_ID = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    JSON = table.Column<string>(type: "text", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_HISTORIA_KONTROLI_WYKAZ_WL", x => x.ID_HISTORIA_KONTROLI_WYKAZ_WL);
                });

            migrationBuilder.CreateTable(
                name: "History_Tables",
                columns: table => new
                {
                    Id_History_Tables = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Database_Name = table.Column<string>(type: "nvarchar(128)", maxLength: 128, nullable: false),
                    Table_Name = table.Column<string>(type: "nvarchar(128)", maxLength: 128, nullable: false),
                    PK_Column = table.Column<string>(type: "nvarchar(128)", maxLength: 128, nullable: false),
                    After_Insert = table.Column<int>(type: "int", nullable: false, defaultValueSql: "((1))"),
                    After_Update = table.Column<int>(type: "int", nullable: false, defaultValueSql: "((1))"),
                    After_Delete = table.Column<int>(type: "int", nullable: false, defaultValueSql: "((1))"),
                    Enabled = table.Column<int>(type: "int", nullable: false, defaultValueSql: "((1))"),
                    SCHEMA_NAME = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__History___F62A37DE79E3564E", x => x.Id_History_Tables);
                });

            migrationBuilder.CreateTable(
                name: "HubConfiguration",
                schema: "hub",
                columns: table => new
                {
                    HubConfigurationId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    VariableId = table.Column<int>(type: "int", nullable: false),
                    Name = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    Hint = table.Column<string>(type: "nvarchar(500)", maxLength: 500, nullable: true),
                    Value = table.Column<byte[]>(type: "varbinary(max)", nullable: true),
                    DefaultValue = table.Column<byte[]>(type: "varbinary(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_HubConfiguration", x => x.HubConfigurationId);
                });

            migrationBuilder.CreateTable(
                name: "HubGate",
                schema: "hub",
                columns: table => new
                {
                    HubGateId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: false),
                    Hint = table.Column<string>(type: "nvarchar(500)", maxLength: 500, nullable: true),
                    HubGateTypeId = table.Column<int>(type: "int", nullable: false),
                    IconId = table.Column<int>(type: "int", nullable: true),
                    Color = table.Column<int>(type: "int", nullable: true),
                    Barcode = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    LocalizationId = table.Column<int>(type: "int", nullable: false),
                    Order = table.Column<int>(type: "int", nullable: true),
                    DefaultOperationTime = table.Column<int>(type: "int", nullable: true),
                    GateModeId = table.Column<int>(type: "int", nullable: false, defaultValueSql: "((1))")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_HubGate", x => x.HubGateId);
                });

            migrationBuilder.CreateTable(
                name: "HubGateEventType",
                schema: "hub",
                columns: table => new
                {
                    HubGateEventTypeId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: false),
                    Hint = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    TypeId = table.Column<int>(type: "int", nullable: false),
                    IconId = table.Column<int>(type: "int", nullable: true),
                    Color = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_HubGateEventType", x => x.HubGateEventTypeId);
                });

            migrationBuilder.CreateTable(
                name: "HubGateLayout",
                schema: "hub",
                columns: table => new
                {
                    HubGateLayoutId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    UserId = table.Column<int>(type: "int", nullable: false),
                    LocalizationId = table.Column<int>(type: "int", nullable: false),
                    Layout = table.Column<byte[]>(type: "varbinary(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_HubGateLayout", x => x.HubGateLayoutId);
                });

            migrationBuilder.CreateTable(
                name: "HubGateRoute",
                schema: "hub",
                columns: table => new
                {
                    HubGateRouteId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    HubGateId = table.Column<int>(type: "int", nullable: true),
                    RouteWaypoinId = table.Column<int>(type: "int", nullable: false),
                    HubGateEventTypeId = table.Column<int>(type: "int", nullable: true),
                    EventStart = table.Column<DateTime>(type: "datetime", nullable: false),
                    EventStop = table.Column<DateTime>(type: "datetime", nullable: false),
                    EventNote = table.Column<string>(type: "nvarchar(500)", maxLength: 500, nullable: true),
                    CreateUserId = table.Column<int>(type: "int", nullable: true),
                    CreateUserName = table.Column<string>(type: "nvarchar(200)", maxLength: 200, nullable: true),
                    CreateDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    ModifyUserId = table.Column<int>(type: "int", nullable: true),
                    ModifyUserName = table.Column<string>(type: "nvarchar(200)", maxLength: 200, nullable: true),
                    ModifyDate = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_HubGateRoute", x => x.HubGateRouteId);
                });

            migrationBuilder.CreateTable(
                name: "HubGateTimeWindow",
                schema: "hub",
                columns: table => new
                {
                    HubGateTimeWindowId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    HubGateId = table.Column<int>(type: "int", nullable: false),
                    DayNumber = table.Column<int>(type: "int", nullable: true),
                    TimeBegin = table.Column<DateTime>(type: "datetime", nullable: true),
                    TimeEnd = table.Column<DateTime>(type: "datetime", nullable: true),
                    Active = table.Column<int>(type: "int", nullable: true),
                    Color = table.Column<int>(type: "int", nullable: true),
                    HubGateEventTypeId = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_HubGateTimeWindow", x => x.HubGateTimeWindowId);
                });

            migrationBuilder.CreateTable(
                name: "HubGateType",
                schema: "hub",
                columns: table => new
                {
                    HubGateTypeId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: false),
                    Hint = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    Color = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_HubGateType", x => x.HubGateTypeId);
                });

            migrationBuilder.CreateTable(
                name: "HubTeamLeaderAccept",
                schema: "hub",
                columns: table => new
                {
                    HubTeamLeaderAcceptId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    HubGateRouteId = table.Column<int>(type: "int", nullable: false),
                    TeamLeaderId = table.Column<int>(type: "int", nullable: true),
                    TeamLeader = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true),
                    AcceptDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_HubTeamLeaderAccept", x => x.HubTeamLeaderAcceptId);
                });

            migrationBuilder.CreateTable(
                name: "Icon",
                schema: "app",
                columns: table => new
                {
                    IconId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    ImageClass = table.Column<int>(type: "int", nullable: true),
                    Icon = table.Column<byte[]>(type: "image", nullable: true),
                    Width = table.Column<int>(type: "int", nullable: true),
                    Height = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Icon", x => x.IconId);
                });

            migrationBuilder.CreateTable(
                name: "IDOC",
                columns: table => new
                {
                    ID_IDOC = table.Column<int>(type: "int", nullable: false),
                    ID_PRZESYLKI = table.Column<int>(type: "int", nullable: true),
                    DELIVERY_SAP = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    STATUS = table.Column<short>(type: "smallint", nullable: false, defaultValueSql: "('0')"),
                    DT_UTWORZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    INOUT = table.Column<short>(type: "smallint", nullable: true),
                    TYP_KOMUNIKATU = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    NAZWAPLIKU = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    XML = table.Column<string>(type: "text", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_IDOC", x => x.ID_IDOC);
                });

            migrationBuilder.CreateTable(
                name: "ImportFileType",
                schema: "app",
                columns: table => new
                {
                    ImportFileTypeId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    Description = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true),
                    FieldDelimiter = table.Column<string>(type: "nchar(1)", fixedLength: true, maxLength: 1, nullable: true),
                    FileExtension = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true),
                    Visible = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ImportFileType", x => x.ImportFileTypeId);
                });

            migrationBuilder.CreateTable(
                name: "ImportObject",
                schema: "app",
                columns: table => new
                {
                    ImportObjectId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: false),
                    Description = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    MasterObjectId = table.Column<int>(type: "int", nullable: true),
                    ImportProcedure = table.Column<string>(type: "nvarchar(128)", maxLength: 128, nullable: true),
                    Visible = table.Column<int>(type: "int", nullable: true),
                    System = table.Column<int>(type: "int", nullable: true),
                    AppSchemaId = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ImportObject", x => x.ImportObjectId);
                });

            migrationBuilder.CreateTable(
                name: "ImportObjectDefinition",
                schema: "app",
                columns: table => new
                {
                    ImportObjectDefinitionId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ImportObjectId = table.Column<int>(type: "int", nullable: false),
                    Destination = table.Column<string>(type: "nvarchar(128)", maxLength: 128, nullable: false),
                    DestinationField = table.Column<string>(type: "nvarchar(128)", maxLength: 128, nullable: false),
                    Description = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ImportObjectDefinition", x => x.ImportObjectDefinitionId);
                });

            migrationBuilder.CreateTable(
                name: "ImportSchemaDefinition",
                schema: "app",
                columns: table => new
                {
                    ImportSchemaDefinitionId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ImportObjectId = table.Column<int>(type: "int", nullable: false),
                    ImportFileTypeId = table.Column<int>(type: "int", nullable: false),
                    Name = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: false),
                    Description = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    Header = table.Column<int>(type: "int", nullable: true),
                    HeaderLineCount = table.Column<int>(type: "int", nullable: true),
                    Footer = table.Column<int>(type: "int", nullable: true),
                    FooterLineCount = table.Column<int>(type: "int", nullable: true),
                    ImportDirectory = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    ImportFile = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    UpdateRow = table.Column<int>(type: "int", nullable: true),
                    Archive = table.Column<int>(type: "int", nullable: true),
                    ArchiveDirectory = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    ArchiveDatePrefix = table.Column<int>(type: "int", nullable: true),
                    PostImportProcedure = table.Column<string>(type: "nvarchar(128)", maxLength: 128, nullable: true),
                    UserInterface = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ImportSchemaDefinition", x => x.ImportSchemaDefinitionId);
                });

            migrationBuilder.CreateTable(
                name: "ImportSchemaMapping",
                schema: "app",
                columns: table => new
                {
                    ImportSchemaMappingId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ImportSchemaDefinitionId = table.Column<int>(type: "int", nullable: false),
                    SourceFieldId = table.Column<int>(type: "int", nullable: false),
                    ImportObjectDefinitionId = table.Column<int>(type: "int", nullable: false),
                    DefaultValue = table.Column<object>(type: "sql_variant", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ImportSchemaMapping", x => x.ImportSchemaMappingId);
                });

            migrationBuilder.CreateTable(
                name: "INCOTERMS",
                columns: table => new
                {
                    ID_INCOTERMS = table.Column<int>(type: "int", nullable: false),
                    KOD_INCOTERMS = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KLIENT_ID = table.Column<int>(type: "int", nullable: true),
                    KLIENT = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_INCOTERMS", x => x.ID_INCOTERMS);
                });

            migrationBuilder.CreateTable(
                name: "INCOTERMS_POZ",
                columns: table => new
                {
                    ID_INCOTERMS_POZ = table.Column<int>(type: "int", nullable: false),
                    INCOTERMS_ID = table.Column<int>(type: "int", nullable: true),
                    OPIS_ID = table.Column<int>(type: "int", nullable: true),
                    OPIS = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    KIERUNEK = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    STRONA = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    TYP = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    KWOTA = table.Column<double>(type: "float", nullable: true),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_INCOTERMS_POZ", x => x.ID_INCOTERMS_POZ);
                });

            migrationBuilder.CreateTable(
                name: "INI_HIST",
                columns: table => new
                {
                    ID_INI_HIST = table.Column<int>(type: "int", nullable: false),
                    DATA_GODZ_PLIKU = table.Column<DateTime>(type: "datetime", nullable: true),
                    PLIK_INI = table.Column<string>(type: "text", nullable: true),
                    PLIK_BOOT = table.Column<string>(type: "text", nullable: true),
                    PLIK_BOOT_EXT = table.Column<string>(type: "text", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_INI_HIST", x => x.ID_INI_HIST);
                });

            migrationBuilder.CreateTable(
                name: "INSTRUKCJE_DOD",
                columns: table => new
                {
                    ID_INSTRUKCJE_DOD = table.Column<int>(type: "int", nullable: false),
                    KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    OPIS_PL = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    OPIS_DE = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    OPIS_GB = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    WYMAGANY_OPIS = table.Column<int>(type: "int", nullable: true),
                    WYMAGANA_DATA = table.Column<int>(type: "int", nullable: true),
                    OPIS_DATY = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    WYMAGANA_KWOTA = table.Column<int>(type: "int", nullable: true),
                    OPIS_KWOTY = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    COD = table.Column<int>(type: "int", nullable: true),
                    CENNIK = table.Column<int>(type: "int", nullable: true),
                    SYSTEMOWA = table.Column<int>(type: "int", nullable: true),
                    DOTYCZY = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Dotyczy obiektów: 0 - bez przypisania, 1 - DROBN, 2 - FTL"),
                    OPCJONALNA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy instrukcja opcjonalna"),
                    WWW = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy instrukcja widoczna na WWW"),
                    WYMAGANA_ILOSC = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    OPIS_ILOSCI = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    WYMAGANA_JT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    OPIS_JT = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    WYMAGANY_OPIS_DOD = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    OPIS_OPISU_DOD = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    AKTYWNA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    STANDARDOWA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    WYMAGANA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    CENNIK_PODSTAWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    CENNIK_KALKULACJA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    WYMAGANY_CHECK = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    OPIS_CHECK = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    DOT_KLIENTA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DOT_PRZEWOZNIKA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_INSTRUKCJE_DOD", x => x.ID_INSTRUKCJE_DOD);
                });

            migrationBuilder.CreateTable(
                name: "INSTRUKCJE_DOD_KONFIG",
                columns: table => new
                {
                    ID_INSTRUKCJE_DOD_KONFIG = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    TYP = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: false, defaultValueSql: "('')"),
                    INSTRUKCJE_DOD_ID = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    KLIENT_ID = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    KLIENT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TYP_ZLECENIA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    MIEJSCE_ZA_ID = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    MIEJSCE_ZA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WYMAGANA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    STDWYL = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    NSTDWL = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    NSTDWL_DATAOD = table.Column<DateTime>(type: "datetime", nullable: true),
                    NSTDWL_DATADO = table.Column<DateTime>(type: "datetime", nullable: true),
                    CENNIK_PODSTAWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    CENNIK_KALKULACJA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_INSTRUKCJE_DOD_KONFIG", x => x.ID_INSTRUKCJE_DOD_KONFIG);
                });

            migrationBuilder.CreateTable(
                name: "Interval",
                schema: "app",
                columns: table => new
                {
                    IntervalId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    Description = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Interval", x => x.IntervalId);
                });

            migrationBuilder.CreateTable(
                name: "InventorySheet",
                schema: "scan",
                columns: table => new
                {
                    InventorySheetId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    InventoryNumber = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true),
                    InventoryStatusId = table.Column<int>(type: "int", nullable: false),
                    InventoryYear = table.Column<int>(type: "int", nullable: true),
                    InventoryMonth = table.Column<int>(type: "int", nullable: true),
                    StartDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    FinishDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    LocalizationId = table.Column<int>(type: "int", nullable: true),
                    DepartmentId = table.Column<int>(type: "int", nullable: true),
                    CreateUserId = table.Column<int>(type: "int", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    EditUserId = table.Column<int>(type: "int", nullable: true),
                    EditUser = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true),
                    EditDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_InventorySheet", x => x.InventorySheetId);
                });

            migrationBuilder.CreateTable(
                name: "InventorySheetPosition",
                schema: "scan",
                columns: table => new
                {
                    InventorySheetPositionId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    InventorySheetId = table.Column<int>(type: "int", nullable: false),
                    ShipmentId = table.Column<int>(type: "int", nullable: false),
                    PackageId = table.Column<int>(type: "int", nullable: false),
                    Package = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true),
                    Scan = table.Column<int>(type: "int", nullable: false),
                    Stock = table.Column<int>(type: "int", nullable: false),
                    ScanUserId = table.Column<int>(type: "int", nullable: false),
                    ScanUser = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: false),
                    ScanDate = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_InventorySheetPosition", x => x.InventorySheetPositionId);
                });

            migrationBuilder.CreateTable(
                name: "InventoryStatus",
                schema: "scan",
                columns: table => new
                {
                    InventoryStatusId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: false),
                    Code = table.Column<string>(type: "nvarchar(10)", maxLength: 10, nullable: true),
                    Description = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    Color = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_InventoryStatus", x => x.InventoryStatusId);
                });

            migrationBuilder.CreateTable(
                name: "Kabotaze",
                schema: "opti",
                columns: table => new
                {
                    id = table.Column<long>(type: "bigint", nullable: true),
                    SolverTaskId = table.Column<int>(type: "int", nullable: true),
                    SessionId = table.Column<int>(type: "int", nullable: true),
                    ID_TABORU = table.Column<int>(type: "int", nullable: true),
                    LOKALIZACJA_KRAJ = table.Column<string>(type: "nvarchar(255)", maxLength: 255, nullable: true),
                    ID_ZLECENIA = table.Column<int>(type: "int", nullable: false),
                    PLAN_DATA_ZAL = table.Column<DateTime>(type: "datetime", nullable: true),
                    KRAJ_ZA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KRAJ_WY = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    Kabotaz = table.Column<int>(type: "int", nullable: true),
                    WjazdDonastępnegoKrajuNaPusto = table.Column<int>(type: "int", nullable: true),
                    KabotazNaPusto = table.Column<int>(type: "int", nullable: true),
                    IloscKabotazy = table.Column<int>(type: "int", nullable: true),
                    Pomin = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "KALENDARZ",
                columns: table => new
                {
                    ID_KALENDARZ = table.Column<int>(type: "int", nullable: false),
                    KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Symbol kraju"),
                    TYP = table.Column<int>(type: "int", nullable: true, comment: "Typ dnia 0 - roboczy, 1 - Wolny, 2 - Niedziela, 3 - Swieto"),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data"),
                    ROK = table.Column<int>(type: "int", nullable: true, comment: "Numer roku"),
                    MIESIAC = table.Column<int>(type: "int", nullable: true, comment: "Numer miesiaca"),
                    DZIEN = table.Column<int>(type: "int", nullable: true, comment: "Numer dnia w miesiacu"),
                    TYDZIEN = table.Column<int>(type: "int", nullable: true, comment: "Numer tygodnia"),
                    DZIEN_TYGODNIA = table.Column<int>(type: "int", nullable: true, comment: "Numer dnia tygodnia 1 - Poniedzialek, ..., 7 - Niedziela"),
                    DZIEN_ROKU = table.Column<int>(type: "int", nullable: true, comment: "Numer dnia w roku"),
                    OPIS = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Nazwa uzytkownika tworzacego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia rekordu"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Czas utworzenia rekordu"),
                    CREATE_USER_ID = table.Column<int>(type: "int", nullable: true, comment: "Id uzytkownika tworzacego rekord"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa uzytkownika tworzacego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji rekordu"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Czas ostatniej modyfikacji rekordu"),
                    MODIFY_USER_ID = table.Column<int>(type: "int", nullable: true, comment: "Id uzytkownika modyfikujacego rekord"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa uzytkownika modyfikujacego rekord"),
                    WYJATEK = table.Column<int>(type: "int", nullable: true, comment: "Wyjątek"),
                    KOD_STREFA_ID = table.Column<int>(type: "int", nullable: true, comment: "Strefa kodowa dla wyjątku"),
                    TrafficLimit = table.Column<int>(type: "int", nullable: true),
                    TrafficLimitFrom = table.Column<DateTime>(type: "datetime", nullable: true),
                    TrafficLimitTo = table.Column<DateTime>(type: "datetime", nullable: true),
                    TrafficLimit2From = table.Column<DateTime>(type: "datetime", nullable: true),
                    TrafficLimit2To = table.Column<DateTime>(type: "datetime", nullable: true),
                    TrafficLimitProvince = table.Column<int>(type: "int", nullable: true),
                    TrafficLimitProvinceList = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TrafficLimitProvince2 = table.Column<int>(type: "int", nullable: true),
                    TrafficLimitProvince2List = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TrafficLimitType = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KALENDARZ", x => x.ID_KALENDARZ);
                },
                comment: "Lista dni w roku z infomracja jaki jest to dzien");

            migrationBuilder.CreateTable(
                name: "KALK_STAWKI_AIR",
                columns: table => new
                {
                    ID_KALK_STAWKI_AIR = table.Column<int>(type: "int", nullable: false),
                    PRZESYLKI_AIR_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do przesyłki - tab: PRZESYLKI_AIR"),
                    GRUPA = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    WYBRANA = table.Column<int>(type: "int", nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    KLIENT_ID = table.Column<int>(type: "int", nullable: true),
                    OPIS_ID = table.Column<int>(type: "int", nullable: true),
                    OPIS_DOD = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    ILOSC = table.Column<double>(type: "float", nullable: true),
                    JM = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    CENA_JEDN = table.Column<double>(type: "float", nullable: true),
                    NETTO = table.Column<double>(type: "float", nullable: true),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    INFO = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KALK_STAWKI_AIR", x => x.ID_KALK_STAWKI_AIR);
                });

            migrationBuilder.CreateTable(
                name: "KALK_STAWKI_LTL",
                columns: table => new
                {
                    ID_KALK_STAWKI_LTL = table.Column<int>(type: "int", nullable: false),
                    PRZESYLKI_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do przesyłki - tab: PRZESYLKI"),
                    GRUPA = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    WYBRANA = table.Column<int>(type: "int", nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    KLIENT_ID = table.Column<int>(type: "int", nullable: true),
                    OPIS_ID = table.Column<int>(type: "int", nullable: true),
                    OPIS_DOD = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    ILOSC = table.Column<double>(type: "float", nullable: true),
                    JM = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    CENA_JEDN = table.Column<double>(type: "float", nullable: true),
                    NETTO = table.Column<double>(type: "float", nullable: true),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    INFO = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    CENNIK_INFO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PACZKI_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KALK_STAWKI_LTL", x => x.ID_KALK_STAWKI_LTL);
                });

            migrationBuilder.CreateTable(
                name: "KALKULACJE",
                columns: table => new
                {
                    ID_KALKULACJE = table.Column<int>(type: "int", nullable: false),
                    DOTYCZY = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    OBIEKT_ID = table.Column<int>(type: "int", nullable: true),
                    TYP = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    OPIS_ID = table.Column<int>(type: "int", nullable: true),
                    OPIS = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    CENNIK_ID = table.Column<int>(type: "int", nullable: true),
                    CENNIK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KLIENT_ID = table.Column<int>(type: "int", nullable: true),
                    KLIENT = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    NETTO_K = table.Column<double>(type: "float", nullable: true),
                    VAT_ID = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    STAWKA_VAT = table.Column<double>(type: "float", nullable: true),
                    FAKTURA_ID = table.Column<int>(type: "int", nullable: true),
                    FAKTURA = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    OPIS_DOD = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    NETTO_F = table.Column<double>(type: "float", nullable: true),
                    WALUTA_F = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    DO_ROZLICZENIA = table.Column<int>(type: "int", nullable: true),
                    TYLKO_RELACJA = table.Column<int>(type: "int", nullable: true),
                    LISTY_LINIOWE_ID = table.Column<int>(type: "int", nullable: true),
                    COD = table.Column<int>(type: "int", nullable: true),
                    UBEZP = table.Column<int>(type: "int", nullable: true),
                    SMS = table.Column<int>(type: "int", nullable: true),
                    OPLATA = table.Column<int>(type: "int", nullable: true),
                    TRANSPORT = table.Column<int>(type: "int", nullable: true),
                    OPIS_KOD = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    GOT_DO_FV = table.Column<int>(type: "int", nullable: true),
                    RM = table.Column<int>(type: "int", nullable: true),
                    PROMY_ID = table.Column<int>(type: "int", nullable: true),
                    RO = table.Column<int>(type: "int", nullable: true),
                    WPROW_CZAS = table.Column<DateTime>(type: "datetime", nullable: true),
                    WPROW_KTO = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    WPROW_LOK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    AKCEPT = table.Column<int>(type: "int", nullable: true),
                    AKCEPT_CZAS = table.Column<DateTime>(type: "datetime", nullable: true),
                    AKCEPT_KTO = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    AKCEPT_LOK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    ILOSC = table.Column<double>(type: "float", nullable: true),
                    CENA_JEDN = table.Column<double>(type: "float", nullable: true),
                    WALUTA_FV = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KURS_WG_DATY = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    TYP_TAB = table.Column<int>(type: "int", nullable: true),
                    TYP_KURS = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    KURS_WYM = table.Column<double>(type: "float", nullable: true),
                    KOR_DO_ZERA = table.Column<short>(type: "smallint", nullable: true),
                    RKTNP = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy pozycja pochodzi z RKTNP (Rozliczenie Kosztów Trasy Na Przesyłki)"),
                    RKTNP_KALK_TRASY_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kalulacji na trasie (używane w RKTNP)"),
                    RKTNP_FV_POZ_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do pozycji faktury (używane w RKTNP)"),
                    RKTNP_RW_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do RW (używane w RKTNP)"),
                    AKCEPT_UWAGI = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    JAK_ROZL = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "FV/NO/RW"),
                    RABAT = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')"),
                    RABAT_WARTOSC = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')"),
                    KONTENERY_ID = table.Column<int>(type: "int", nullable: true),
                    KONTENERY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    WPROW_DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    AKCEPT_DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    JM = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TYP_OPLATY = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Kody typów opłat stosowane w polu 47 formularza SAD"),
                    KONTENERY_TYP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Typ kontenera"),
                    CENNIK_INFO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PACZKI_ID = table.Column<int>(type: "int", nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    RKTNP_PROMY_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do identyfikacji promu (używane w RKTNP)"),
                    KATEGORIA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    MARZA_WART = table.Column<double>(type: "float", nullable: true),
                    MARZA_TYP = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KALKULACJE", x => x.ID_KALKULACJE);
                });

            migrationBuilder.CreateTable(
                name: "KARNETY_TIR",
                columns: table => new
                {
                    ID_KARNETY_TIR = table.Column<int>(type: "int", nullable: false),
                    NR_KARNETU = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TYP_KARNETU = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DATA_WAZNOSCI = table.Column<DateTime>(type: "datetime", nullable: true),
                    WARTOSC_NETTO = table.Column<double>(type: "float", nullable: true),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    VAT_ID = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    VAT_STAWKA = table.Column<double>(type: "float", nullable: true),
                    FAKTURA_ID = table.Column<int>(type: "int", nullable: true),
                    FAKTURA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    WYJAZD_ID = table.Column<int>(type: "int", nullable: true),
                    WYJAZD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZLECENIE_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KIEROWCA_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    WYDANY_PRZEZ_ID = table.Column<int>(type: "int", nullable: true),
                    WYDANY_PRZEZ = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DATA_WYDANIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZWROT = table.Column<int>(type: "int", nullable: true),
                    DATA_ZWROTU = table.Column<DateTime>(type: "datetime", nullable: true),
                    ROZLICZONO = table.Column<int>(type: "int", nullable: true),
                    DATA_ROZLICZENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    NR_KARNETU_SYMBOL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    TABOR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TRASA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KARNETY_TIR", x => x.ID_KARNETY_TIR);
                });

            migrationBuilder.CreateTable(
                name: "KARTA_ODPADU",
                columns: table => new
                {
                    ID_KARTA_ODPADU = table.Column<int>(type: "int", nullable: false),
                    TYP = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ROK = table.Column<int>(type: "int", nullable: true),
                    MIESIAC = table.Column<int>(type: "int", nullable: true),
                    NUMER_KARTY = table.Column<int>(type: "int", nullable: true),
                    NUMER_KARTY_WG_KLIENTA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    ID_KLIENT = table.Column<int>(type: "int", nullable: true),
                    KLIENT_SYMBOL = table.Column<string>(type: "varchar(35)", unicode: false, maxLength: 35, nullable: true),
                    KLIENT_NAME = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KLIENT_REGON = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true),
                    KOD_ODPADU = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    RODZAJ_ODPADU = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KARTA_ODPADU", x => x.ID_KARTA_ODPADU);
                });

            migrationBuilder.CreateTable(
                name: "KARTA_ODPADU_POZ",
                columns: table => new
                {
                    ID_KARTA_ODPADU_POZ = table.Column<int>(type: "int", nullable: false),
                    ID_KARTA_ODPADU = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    MASA = table.Column<double>(type: "float", nullable: true),
                    NR_REJESTRACYJNY = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KARTA_ODPADU_POZ", x => x.ID_KARTA_ODPADU_POZ);
                });

            migrationBuilder.CreateTable(
                name: "KARTY",
                columns: table => new
                {
                    ID_KARTY = table.Column<int>(type: "int", nullable: false),
                    LP = table.Column<int>(type: "int", nullable: true, comment: "Lp"),
                    TYP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Symbol karty z tabeli KARTY_WYDAWCY"),
                    NUMER = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer karty"),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do pojazdu - tab: TABOR"),
                    TABOR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Nr rejestracyjny pojazdu"),
                    DATA_WAZNOSCI_OD = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ważności od"),
                    DATA_WAZNOSCI_DO = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ważności do"),
                    STATUS = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "Status karty: AK-Aktywna, PT-Po terminie ważności, ZG-Zagubiona, ZN-Zniszczona, ZS-Zastrzeżona, TN-Tymczasowo nieuzywana"),
                    LIMIT = table.Column<double>(type: "float", nullable: true, comment: "Limit gotówkowy"),
                    UWAGI = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Dowolne uwagi do karty"),
                    KIEROWCA_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kierowcy - tab: KIEROWCY"),
                    KIEROWCA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwisko i imię kierowcy"),
                    PIN = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "*pole nie używane*"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja"),
                    LIMIT_PALIWA = table.Column<double>(type: "float", nullable: true, comment: "Limit paliwa"),
                    NA_OKAZICIELA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy karta na okaziciela"),
                    PRZYDZIELANA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy karta przydzielana do kierowców")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KARTY", x => x.ID_KARTY);
                },
                comment: "Karty paliwowe zarejestrowane w systemie");

            migrationBuilder.CreateTable(
                name: "KARTY_CENY",
                columns: table => new
                {
                    ID_KARTY_CENY = table.Column<int>(type: "int", nullable: false),
                    KARTY_WYDAWCY_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do wydawcy karty - tab: KARTY_WYDAWCY"),
                    DATA_OD = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Cena ważna od dnia"),
                    CENA = table.Column<double>(type: "float", nullable: true, comment: "Cena za 1 litr"),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Waluta")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KARTY_CENY", x => x.ID_KARTY_CENY);
                },
                comment: "Definicje własnych cen paliwa dla kart paliwowych");

            migrationBuilder.CreateTable(
                name: "KARTY_PLIKI",
                columns: table => new
                {
                    ID_KARTY_PLIKI = table.Column<int>(type: "int", nullable: false),
                    DATA_WCZYTANIA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data wczytania pliku z bilingiem"),
                    CZAS_WCZYTANIA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina wczytania pliku z bilingiem"),
                    NAZWA_PLIKU = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Nazwa wczytanego pliku"),
                    UZYTKOWNIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Kto wczytał"),
                    ILOSC_OPERACJI = table.Column<int>(type: "int", nullable: true, comment: "Ilość operacji w pliku"),
                    TYP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Typ pliku"),
                    UWAGI = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Dowolne uwagi do pliku"),
                    F_FAKTURA_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do faktury kosztowej - tab: FAKTURY"),
                    F_FAKTURA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Numer faktury kosztowej"),
                    F_KONTRAH_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kontrahenta z faktury - tab: KONTRAHENCI"),
                    F_KONTRAH = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Symbol kontrahenta"),
                    F_DATA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data z faktury kosztowej"),
                    F_WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Waluta z faktury kosztowej"),
                    F_NETTO = table.Column<double>(type: "float", nullable: true, comment: "Kwota netto z faktury kosztowej"),
                    F_VAT = table.Column<double>(type: "float", nullable: true, comment: "Kwota VAT z faktury kosztowej"),
                    F_BRUTTO = table.Column<double>(type: "float", nullable: true, comment: "Kwota brutto z faktury kosztowej"),
                    F_NETTO_PLN = table.Column<double>(type: "float", nullable: true, comment: "Kwota netto w PLN z faktury kosztowej"),
                    F_VAT_PLN = table.Column<double>(type: "float", nullable: true, comment: "Kwota VAT w PLN z faktury kosztowej"),
                    F_BRUTTO_PLN = table.Column<double>(type: "float", nullable: true, comment: "Kwota brutto w PLN z faktury kosztowej"),
                    SUMA_ILOSCI = table.Column<double>(type: "float", nullable: true, comment: "Łączna ilość w pliku"),
                    SUMA_POZ_NETTO = table.Column<double>(type: "float", nullable: true, comment: "Łączna wartość netto w pliku"),
                    SUMA_POZ_VAT = table.Column<double>(type: "float", nullable: true, comment: "Łączna wartość VAT w pliku"),
                    SUMA_POZ_BRUTTO = table.Column<double>(type: "float", nullable: true, comment: "Łączna wartość brutto w pliku"),
                    FV_TR = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy suma z FV = suma z transakcji"),
                    STAN = table.Column<short>(type: "smallint", nullable: true, comment: "Stan pliku: 0 - otwarty, 1 - zamkniety"),
                    F_RABAT_NETTO_PLN = table.Column<double>(type: "float", nullable: true, comment: "Rabat z faktury - netto w PLN"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja wczytania pliku"),
                    W_MAG_WYDANIA_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do WZ  z warsztatu")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KARTY_PLIKI", x => x.ID_KARTY_PLIKI);
                },
                comment: "Nagłówek pliku z transakcjami kart paliwowych");

            migrationBuilder.CreateTable(
                name: "KARTY_PRZYDZIAL",
                columns: table => new
                {
                    ID_KARTY_PRZYDZIAL = table.Column<int>(type: "int", nullable: false),
                    KARTY_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do karty - tab: KARTY"),
                    DATA_GODZ_OD = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data/Godz od"),
                    DATA_GODZ_DO = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data/Godz do"),
                    KIEROWCA_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kierowcy - tab: KIEROWCY"),
                    KIEROWCA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwisko i imię kierowcy"),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do pojazdu - tab: TABOR"),
                    TABOR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Nr rejestracyjny pojazdu"),
                    UWAGI = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Dowolne uwagi do przycdziału karty"),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KARTY_PRZYDZIAL", x => x.ID_KARTY_PRZYDZIAL);
                },
                comment: "Przydział kart na okaziciela");

            migrationBuilder.CreateTable(
                name: "KARTY_ROZL_FZ",
                columns: table => new
                {
                    ID_KARTY_ROZL_FZ = table.Column<int>(type: "int", nullable: false),
                    FAKTURA_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do faktury zbiorczej - tab: FAKTURY"),
                    FAKTURA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer faktury"),
                    KARTA_TYP = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Typ karty"),
                    DATA_OD = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data poczatkowa okresu"),
                    DATA_DO = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data końcowa okresu"),
                    STATUS = table.Column<int>(type: "int", nullable: true, comment: "Status rozliczenia: 0 - utworzone, 1 - w trakcie uzgadniania, 2- zgodne, 3 - niezgodne"),
                    UWAGI = table.Column<string>(type: "text", nullable: true, comment: "Dowolne uwagi do rozliczenia")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KARTY_ROZL_FZ", x => x.ID_KARTY_ROZL_FZ);
                },
                comment: "Nagłówke rozliczenia faktur zbiorczych");

            migrationBuilder.CreateTable(
                name: "KARTY_ROZL_FZ_POZ",
                columns: table => new
                {
                    ID_KARTY_ROZL_FZ_POZ = table.Column<int>(type: "int", nullable: false),
                    KARTY_ROZL_FZ_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do nagłówka rozliczenia - tab: KARTY_ROZL_FZ"),
                    WZ_ID = table.Column<int>(type: "int", nullable: true, comment: "Identyfikator WZ (dowolny identyfikator klienta)"),
                    STATUS = table.Column<int>(type: "int", nullable: true, comment: "Status rozl: 0- zgodne, 1 - niezgodna kwota, 2 - niezgodna ilość, 3 - niezgodna data")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KARTY_ROZL_FZ_POZ", x => x.ID_KARTY_ROZL_FZ_POZ);
                },
                comment: "Pozycje rozliczenia faktur zbiorczych");

            migrationBuilder.CreateTable(
                name: "KARTY_TRANSAKCJE",
                columns: table => new
                {
                    ID_KARTY_TRANSAKCJE = table.Column<int>(type: "int", nullable: false),
                    KARTA_PLIKI_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do nagłówka pliku - tab: KARTA_PLIKI"),
                    DATA_TRANSAKCJI = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data transakcji"),
                    CZAS_TRANSAKCJI = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godz. transakcji"),
                    ID_TRANSAKCJI = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Identyfikator transakcji"),
                    OPIS_TRANSAKCJI = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Opis transakcji"),
                    KARTA_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do karty paliwowej - tab: KARTY"),
                    KARTA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer karty paliwowej"),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do pojazdu - tab: TABOR"),
                    TABOR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer rejestracyjny pojazdu"),
                    WYJAZD_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do polecenia wyjazdu - tab: WYJAZDY"),
                    WYJAZD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer polecenia wyjazdu"),
                    DELEGACJA_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do delegacji pracownika - tab: DELEGACJE"),
                    DELEGACJA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer delegacji pracownika"),
                    RODZAJ_TRANS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Rodzaj transakcji"),
                    RODZ_KOSZTOW = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Rodzaj kosztów"),
                    KRAJ_KOSZTOW = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "Kraj kosztów"),
                    ILOSC = table.Column<double>(type: "float", nullable: true, comment: "Ilość transakcji"),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Waluta transakcji"),
                    KWOTA_W_WAL_BEZ_UP = table.Column<double>(type: "float", nullable: true, comment: "Kwota w walucie bez upustu"),
                    KWOTA_W_WAL = table.Column<double>(type: "float", nullable: true, comment: "Kwota w walucie"),
                    KWOTA_W_PLN_BEZ_UP = table.Column<double>(type: "float", nullable: true, comment: "Kwota w PLN bez upustu"),
                    KWOTA_W_PLN = table.Column<double>(type: "float", nullable: true, comment: "Kwota w PLN"),
                    STAWKA_VAT = table.Column<double>(type: "float", nullable: true, comment: "Stawka VAT dla transakcji"),
                    KWOTA_VAT = table.Column<double>(type: "float", nullable: true, comment: "Kwota VAT transakcji"),
                    KWOTA_NETTO_BEZ_UP = table.Column<double>(type: "float", nullable: true, comment: "Kwota netto bez upustu"),
                    KWOTA_NETTO = table.Column<double>(type: "float", nullable: true, comment: "Kwota netto transakcji"),
                    STATUS = table.Column<int>(type: "int", nullable: true, comment: "Status transakcji"),
                    FAKTURA_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do faktury dekretujacej - tab: FAKTURY"),
                    FAKTURA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer faktury dekretującej"),
                    DEKRET = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer dekretu"),
                    LICZNIK = table.Column<double>(type: "float", nullable: true, comment: "Stan licznika pojazdu"),
                    PLIK_NR_FAKTURY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer faktury z pliku"),
                    PLIK_DATA_FAKTURY = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data faktury z pliku"),
                    FULL_TANK = table.Column<int>(type: "int", nullable: true, comment: "Znacznik, czy tankowanie do pełna"),
                    TABOR_NR_B = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer boczny pojazdu"),
                    KWOTA_ORG = table.Column<double>(type: "float", nullable: true, comment: "Kwota oryginalna"),
                    WALUTA_ORG = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Waluta oryginalna"),
                    KWOTA_BRUTTO = table.Column<double>(type: "float", nullable: true, comment: "Kwota brutto transakcji"),
                    ZLECENIA_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do zlecenia - tab: ZLECENIA"),
                    ZLECENIA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer zlecenia"),
                    VAT_ID = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Stawka VAT"),
                    LISTY_LINIOWE_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do trasy - tab: LISTY_LINIOWE"),
                    LISTY_LINIOWE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer trasy"),
                    W_MAG_WYDANIA_POZ_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do pozycji WZ z warsztatu"),
                    TABOR_ORG = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer rejestracyjny pojazdu - pliku"),
                    SFM_COSTS_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do transakcji GPS"),
                    NR_STACJI = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer stacji"),
                    REFAKTURY_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do refaktury"),
                    REFAKTURY_POZ_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do pozycji refaktury"),
                    EF_KARTY_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do delegacji pracownika - tab: EF_KARTY"),
                    EF_KARTY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer KE"),
                    NR_SPED = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer własny")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KARTY_TRANSAKCJE", x => x.ID_KARTY_TRANSAKCJE);
                },
                comment: "Pozycje pliku z transakcjami kart paliwowych");

            migrationBuilder.CreateTable(
                name: "KARTY_TYPY_OPER",
                columns: table => new
                {
                    ID_KARTY_TYPY_OPER = table.Column<int>(type: "int", nullable: false),
                    KARTY_WYDAWCY_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do wydawcy karty - tab: KARTY_WYDAWCY"),
                    KOD_TYPU_OPERACJI = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Kod operacji dostawcy"),
                    RODZ_KOSZTOW = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true, comment: "Rodzaj kosztów"),
                    RODZ_KOSZTOW_EXT = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "Dodatkowe opcje rodzaju kosztów")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KARTY_TYPY_OPER", x => x.ID_KARTY_TYPY_OPER);
                },
                comment: "Typy operacji w plikach od dostawców");

            migrationBuilder.CreateTable(
                name: "KARTY_WYDAWCY",
                columns: table => new
                {
                    ID_KARTY_WYDAWCY = table.Column<int>(type: "int", nullable: false),
                    SYMBOL = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Symbol wydawcy kart"),
                    OPIS = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Opis wydawcy"),
                    KONTRAHENT_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kontrahenta - tab: KONTRAHENCI"),
                    KONTRAHENT = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Symbol kontrahenta"),
                    TYP_LACZENIA_1 = table.Column<int>(type: "int", nullable: true, comment: "Tryb wiązania trans. - wg. typu, nr karty, daty, waluty oraz kwoty brutto"),
                    TYP_LACZENIA_2 = table.Column<int>(type: "int", nullable: true, comment: "Tryb wiązania trans. - wg. typu, nr karty, daty oraz ilości"),
                    TYP_LACZENIA_3 = table.Column<int>(type: "int", nullable: true, comment: "Tryb wiązania trans. - wg. typu, nr karty, daty, waluty oraz kwoty brutto przed rabatem"),
                    LICZ_Z_CENNIKA_1 = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy stosować cennik przy recznej rejestracji"),
                    LICZ_Z_CENNIKA_2 = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy stosować cennik przy wczytywaniu z pliku"),
                    WCZYTUJ_VAT = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy wczytywac VAT z pliku"),
                    DOMYSLNY_VAT = table.Column<double>(type: "float", nullable: true, comment: "Domyślna stawka VAT"),
                    DOMYSLNY_RODZ_KOSZTOW = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Domyślny rodzaj kosztów"),
                    FULL_TANK = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy zaznaczać zawsze tankowanie do pełna"),
                    AKTUALIZUJ_KWOTE = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy aktualizować kwotę na podstawie pliku (dotyczy wiąz. trans. z dokum. wprowadz. ręcznie)"),
                    AKTYWNA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy aktywna"),
                    SPR_DUPL = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy sprawdzać duplikaty"),
                    BEZ_GODZ = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy nie uwzgledniać GODZ w korzanieu transakcji ze zlec, PW etc"),
                    KURS_Z_POWIAZ_FV = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy pobierać kurs z powiązanej FV"),
                    TYP_LACZENIA_2_ZAOKR = table.Column<int>(type: "int", nullable: true, comment: "Tryb zaokrąglania 0 - brak, 1 - w góre, 2 - w dół, 3 - obcinaj końcówke"),
                    SZUKAJ_OTW_PW = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy szukac otwartych PW jak nie znajdzie zamkniętego"),
                    TYP_LACZENIA_RK = table.Column<int>(type: "int", nullable: true, comment: "Tryb wiązania trans. - wg. rodzaju kosztów")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KARTY_WYDAWCY", x => x.ID_KARTY_WYDAWCY);
                },
                comment: "Wystawcy plików z operacjami kartowymi");

            migrationBuilder.CreateTable(
                name: "KASA_BANK_DO_FK",
                columns: table => new
                {
                    ID_KASA_BANK_DO_FK = table.Column<int>(type: "int", nullable: false),
                    TYP = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    ROK = table.Column<int>(type: "int", nullable: true),
                    MIESIAC = table.Column<int>(type: "int", nullable: true),
                    NR_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    ZAKRES = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    RAPORT_ID = table.Column<int>(type: "int", nullable: true),
                    RAPORT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DATA_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    ILOSC_DOK = table.Column<int>(type: "int", nullable: true),
                    UZYTKOWNIK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DATA_GEN = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_GEN = table.Column<DateTime>(type: "datetime", nullable: true),
                    FORMAT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KASA_BANK_DO_FK", x => x.ID_KASA_BANK_DO_FK);
                });

            migrationBuilder.CreateTable(
                name: "KASY",
                columns: table => new
                {
                    ID_KASY = table.Column<int>(type: "int", nullable: false),
                    SYMBOL = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    NAZWA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KASJER_ID = table.Column<int>(type: "int", nullable: true),
                    KASJER = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KONTO_KSIEG = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KONTO_ZASILEN = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KONTO_ODPROWADZEN = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    WYROZNIK = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    LICZNIK_RK = table.Column<int>(type: "int", nullable: true),
                    LICZNIK_OPER_KP = table.Column<int>(type: "int", nullable: true),
                    LICZNIK_OPER_KW = table.Column<int>(type: "int", nullable: true),
                    POMIN_SPEC_PRZY_Z = table.Column<int>(type: "int", nullable: true),
                    EMAIL_INFO = table.Column<string>(type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    BLOKADA_ZEROWEGO_SALDA = table.Column<int>(type: "int", nullable: true),
                    ILE_MAX_RK_DZIENNIE = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KASY", x => x.ID_KASY);
                });

            migrationBuilder.CreateTable(
                name: "KAT_LISTOW_LINIOWYCH",
                columns: table => new
                {
                    ID_KAT_LISTOW_LINIOWYCH = table.Column<int>(type: "int", nullable: false),
                    KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true),
                    OPIS_DOD = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true),
                    OPIS_DOD2 = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPIS_DOD3 = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KAT_LISTOW_LINIOWYCH", x => x.ID_KAT_LISTOW_LINIOWYCH);
                });

            migrationBuilder.CreateTable(
                name: "KAT_PRZESYLEK",
                columns: table => new
                {
                    ID_KAT_PRZESYLEK = table.Column<int>(type: "int", nullable: false),
                    KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true),
                    DO_PLANOWANIA = table.Column<int>(type: "int", nullable: true),
                    OPIS_DOD = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true),
                    OPIS_DOD2 = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPIS_DOD3 = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    IS_COD = table.Column<int>(type: "int", nullable: true),
                    IS_BLACK_SQUARE = table.Column<int>(type: "int", nullable: true),
                    UPS_SERVICE_TYPE = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    DictionaryId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TextId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KAT_PRZESYLEK", x => x.ID_KAT_PRZESYLEK);
                });

            migrationBuilder.CreateTable(
                name: "KATEGORIE",
                columns: table => new
                {
                    ID_KATEGORIE = table.Column<int>(type: "int", nullable: false),
                    TYP = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: false, comment: "Typ kategorii KO - kontrahenci, KI - kierowcy, TA - tabor"),
                    NAZWA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: false, comment: "Nazwa kategorii"),
                    OPIS = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true, comment: "Opis kategorii"),
                    AKTYWNA = table.Column<int>(type: "int", nullable: false, comment: "Flaga, czy aktywna"),
                    DictionaryId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TextId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KATEGORIE", x => x.ID_KATEGORIE);
                },
                comment: "Słownik kategorii");

            migrationBuilder.CreateTable(
                name: "KIEROWCY",
                columns: table => new
                {
                    ID_KIEROWCY = table.Column<int>(type: "int", nullable: false),
                    SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    STANOWISKO = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    KIEROWCA = table.Column<int>(type: "int", nullable: true),
                    NAZWISKO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    IMIE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    AKTYWNY = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TELEFON = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    TELEFON_KOM = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    EMAIL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DATA_ZATRUDNIENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_ZWOLNIENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    PESEL = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    NUMER_DOWODU = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    ADRES = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    MIASTO = table.Column<string>(type: "varchar(80)", unicode: false, maxLength: 80, nullable: true),
                    DATA_UR = table.Column<DateTime>(type: "datetime", nullable: true),
                    MIEJSCE_UR = table.Column<string>(type: "varchar(80)", unicode: false, maxLength: 80, nullable: true),
                    KLIENT_ID = table.Column<int>(type: "int", nullable: true),
                    FORMA_ZATRUDNIENIA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    UMOWA = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    PLACA_PODSTAWOWA = table.Column<double>(type: "float", nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KONTO_FK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KONTO_FK_2 = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ZAGRANICA = table.Column<int>(type: "int", nullable: true),
                    UZYTKOWNIK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    UZYTKOWNIK_ID = table.Column<int>(type: "int", nullable: true),
                    PROG_FRACHT = table.Column<double>(type: "float", nullable: true),
                    PROWIZJA = table.Column<double>(type: "float", nullable: true),
                    PROWIZJA_MIN = table.Column<double>(type: "float", nullable: true),
                    TEL_SL_OPERATOR = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TEL_SL_TARYFA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    TEL_SL_ROAMING = table.Column<int>(type: "int", nullable: true),
                    TEL_SL_UM_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    TEL_SL_UM_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    TEL_SL_HASLO = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TEL_SLUZBOWY = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    TEL_MODEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TEL_TYP = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TEL_NR_SER = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PIN = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    PUK1 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    PUK2 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    SPEDYTOR = table.Column<int>(type: "int", nullable: true),
                    SFM_STATUS = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    SFM_TRA_ID = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    E_TACHO_NUMER = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    E_TACHO_DATA_WAZNOSCI = table.Column<DateTime>(type: "datetime", nullable: true),
                    SFM_TRA_SYS_ID = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    OBCY = table.Column<int>(type: "int", nullable: true),
                    DYSPOZYTOR = table.Column<int>(type: "int", nullable: true),
                    ZATRUDNIONY_W = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ZATRUDNIONY_W_ID = table.Column<int>(type: "int", nullable: true),
                    STAWKA_ZA_KM = table.Column<double>(type: "float", nullable: true),
                    PROWIZJA_I = table.Column<double>(type: "float", nullable: true),
                    PROWIZJA_II = table.Column<double>(type: "float", nullable: true),
                    PROWIZJA_UMZL = table.Column<double>(type: "float", nullable: true),
                    NUMER_DOWODU_WYD = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    NUMER_DOWODU_WAZN = table.Column<DateTime>(type: "datetime", nullable: true),
                    PASZPORT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PASZPORT_WAZN = table.Column<DateTime>(type: "datetime", nullable: true),
                    PROG_FRACHT_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    PRAWO_JAZDY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PRAWO_JAZDY_KAT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PRAWO_JAZDY_WAZN = table.Column<DateTime>(type: "datetime", nullable: true),
                    SWIAD_KWALIF = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    UCZEN = table.Column<int>(type: "int", nullable: true),
                    WYNAGR_SCHEMAT_ID = table.Column<int>(type: "int", nullable: true),
                    WYNAGR_SCHEMAT = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPT_1 = table.Column<byte[]>(type: "image", nullable: true),
                    OPT_2 = table.Column<byte[]>(type: "image", nullable: true),
                    BADANIE_LEK_DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    BADANIE_LEK_WAZN = table.Column<DateTime>(type: "datetime", nullable: true),
                    BADANIE_PSYCH_DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    BADANIE_PSYCH_WAZN = table.Column<DateTime>(type: "datetime", nullable: true),
                    KURS_PRZEWOZ_RZECZY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KURS_PRZEWOZ_RZECZY_WAZN = table.Column<DateTime>(type: "datetime", nullable: true),
                    KURS_PRZEWOZ_OSOB = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KURS_PRZEWOZ_OSOB_WAZN = table.Column<DateTime>(type: "datetime", nullable: true),
                    PDA_USER = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    PDA_PASS = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true),
                    KOD_POCZTOWY = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    DO_KIEDY_BYL_UCZEN = table.Column<DateTime>(type: "datetime", nullable: true),
                    INFO_DLA_OPERATORA = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true),
                    SWIAD_KWALIF_WAZN = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZDJECIE = table.Column<byte[]>(type: "image", nullable: true),
                    SA_UWAGI = table.Column<int>(type: "int", nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    OBCY_UMOWA = table.Column<int>(type: "int", nullable: true),
                    TEL_SLUZBOWY2 = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KONTO_FK_3 = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ADR = table.Column<int>(type: "int", nullable: true),
                    KLASY_ADR = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    E_TACHO_LAST_READ = table.Column<DateTime>(type: "datetime", nullable: true),
                    KOD_KRESKOWY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KIEROWCY_GRUPY_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCY_GRUPY = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    ADR_CYSTERNA = table.Column<int>(type: "int", nullable: true),
                    KONTO = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    ZAKAZ_COD = table.Column<int>(type: "int", nullable: true),
                    E_TACHO_KRAJ = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    INELO_UPDATE = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "czy modyfikacja z INELO"),
                    HACCP = table.Column<int>(type: "int", nullable: true),
                    KRAJ = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    MOBILE_ACTIVE = table.Column<int>(type: "int", nullable: true),
                    ADR_WAZN = table.Column<DateTime>(type: "datetime", nullable: true),
                    MOBILE_PASS_HASH = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    MOBILE_PROFILE = table.Column<int>(type: "int", nullable: true),
                    Password = table.Column<byte[]>(type: "varbinary(max)", nullable: true),
                    MOBILE_PASSWORD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ILE_DNI_PRACY_C = table.Column<int>(type: "int", nullable: true),
                    Heartbeat = table.Column<int>(type: "int", nullable: true),
                    Locked = table.Column<int>(type: "int", nullable: true),
                    ErrorCount = table.Column<int>(type: "int", nullable: true),
                    STATUS_EMISJA = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    WL_WYNAGR = table.Column<int>(type: "int", nullable: true),
                    MOBILE_PASS_RESET_KEY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    MOBILE_PASS_RESET_INFO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_LOKALIZATORA_GPS = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    MOBILE_MODULE = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KONTO_ID = table.Column<int>(type: "int", nullable: true),
                    REJON = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DRIVER_KEY = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Indywidualny klucz kierowcy podawany przez Przewoźnika w przypadku korzystania z aplikacji mobilnej SENT-OIL"),
                    KOD_KRESKOWY_EXT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OBYWATELSTWO = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    ForcePasswordReset = table.Column<int>(type: "int", nullable: true),
                    DT_HASLO = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_ZJAZDU = table.Column<DateTime>(type: "datetime", nullable: true),
                    LastRequest = table.Column<DateTime>(type: "datetime", nullable: true),
                    LastResponse = table.Column<DateTime>(type: "datetime", nullable: true),
                    STATUS = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Status"),
                    SLOT_1 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Status - SLOT 1"),
                    SLOT_2 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Status - SLOT 2"),
                    SLOT_3 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Status - SLOT 3"),
                    SLOT_4 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Status - SLOT 4"),
                    SLOT_5 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Status - SLOT 5")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KIEROWCY", x => x.ID_KIEROWCY);
                });

            migrationBuilder.CreateTable(
                name: "KIEROWCY_EXT",
                columns: table => new
                {
                    ID_KIEROWCY = table.Column<int>(type: "int", nullable: false),
                    T_DT_STAN_NA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas obliczeń"),
                    T_DT_OST_ODP_TYG = table.Column<DateTime>(type: "datetime", nullable: true, comment: "ostatni odpoczynek tygodniowy"),
                    T_DT_OST_ODP_D = table.Column<DateTime>(type: "datetime", nullable: true, comment: "ostatni odpoczynek dzienny"),
                    T_JAZDA_2_TYG = table.Column<double>(type: "float", nullable: true, comment: "liczba godzin jazdy za ost. 2 tyg."),
                    T_JAZDA_TYG = table.Column<double>(type: "float", nullable: true, comment: "liczba godzin jazdy za ost. tydzień"),
                    T_JAZDA_D = table.Column<double>(type: "float", nullable: true, comment: "liczba godzin jazdy w bieżącym dniu"),
                    T_DT_OST_PRACY = table.Column<DateTime>(type: "datetime", nullable: true, comment: "ostatnia aktywność różna od odpoczynku"),
                    T_ODP_TYG_SKROCONY = table.Column<short>(type: "smallint", nullable: true, comment: "(0/1) czy ostatni odpoczynek tygodniowy był skrócony"),
                    T_TACHO_STAT = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "status TACHO"),
                    T_TACHO_DT = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas statusu TACHO"),
                    T_DT_POCZ_DOBY = table.Column<DateTime>(type: "datetime", nullable: true, comment: "początek ostatniej doby"),
                    T_MOZE_JECHAC_D = table.Column<double>(type: "float", nullable: true, comment: "liczba godzin pozostałej jazdy w bieżącym dniu"),
                    T_MOZE_JECHAC_TYG = table.Column<double>(type: "float", nullable: true, comment: "liczba godzin pozostałej jazdy w bieżącym tygodniu"),
                    T_NAST_ODP_TYG = table.Column<double>(type: "float", nullable: true, comment: "liczba godzin do następnego odpoczynku tygodniowego"),
                    T_REKOMP_ILE = table.Column<double>(type: "float", nullable: true, comment: "liczba godzin pierwszej nieodebranej rekompensaty"),
                    T_REKOMP_DO_KIEDY = table.Column<DateTime>(type: "datetime", nullable: true, comment: "do kiedy należy odebrać pierwszą nieodebraną rekompensatę"),
                    T_PRACA_D = table.Column<double>(type: "float", nullable: true, comment: "liczba godzin pracy w bieżącym dniu"),
                    T_DYZUR_D = table.Column<double>(type: "float", nullable: true, comment: "liczba godzin dyżuru w bieżącym dniu"),
                    T_WYDLUZONE_JAZDY = table.Column<int>(type: "int", nullable: true, comment: "liczba wydłużonych jazd"),
                    T_SKROCONE_ODP = table.Column<int>(type: "int", nullable: true, comment: "liczba skróconych odpoczynków"),
                    T_POZOSTALE_JAZDY_10H = table.Column<int>(type: "int", nullable: true, comment: "liczba pozostałych wydłużonych jazd (10h)"),
                    T_POZOSTALE_ODP_9H = table.Column<int>(type: "int", nullable: true, comment: "liczba pozostałych skróconych odpoczynków"),
                    T_MOZE_PRACOWAC_D = table.Column<double>(type: "float", nullable: true, comment: "liczba godzin pozostałej pracy w bieżącym dniu"),
                    T_DT_NAST_ODP_D = table.Column<DateTime>(type: "datetime", nullable: true, comment: "początek następnego odpoczynku dziennego"),
                    Statistics = table.Column<string>(type: "xml", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KIEROWCY_EXT", x => x.ID_KIEROWCY);
                });

            migrationBuilder.CreateTable(
                name: "KIEROWCY_GRUPY",
                columns: table => new
                {
                    ID_KIEROWCY_GRUPY = table.Column<int>(type: "int", nullable: false),
                    NAZWA = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true),
                    KONTO_FK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DictionaryId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TextId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KIEROWCY_GRUPY", x => x.ID_KIEROWCY_GRUPY);
                });

            migrationBuilder.CreateTable(
                name: "KIEROWCY_GRUPY_HIST",
                columns: table => new
                {
                    ID_KIEROWCY_GRUPY_HIST = table.Column<int>(type: "int", nullable: false),
                    KIEROWCY_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCY_GRUPY_ID = table.Column<int>(type: "int", nullable: true),
                    DATA_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_OD = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KIEROWCY_GRUPY_HIST", x => x.ID_KIEROWCY_GRUPY_HIST);
                });

            migrationBuilder.CreateTable(
                name: "KIEROWCY_HIST_ZATR",
                columns: table => new
                {
                    ID_KIEROWCY_HIST_ZATR = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    KIEROWCY_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    DATA_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    FORMA_ZATRUDNIENIA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    UMOWA = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    ZATRUDNIONY_W = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ZATRUDNIONY_W_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KIEROWCY_HIST_ZATR", x => x.ID_KIEROWCY_HIST_ZATR);
                });

            migrationBuilder.CreateTable(
                name: "KIEROWCY_MIES",
                columns: table => new
                {
                    ID_KIEROWCY_MIES = table.Column<int>(type: "int", nullable: false),
                    ROK = table.Column<int>(type: "int", nullable: true),
                    MIESIAC = table.Column<int>(type: "int", nullable: true),
                    PENSJA_PODST = table.Column<double>(type: "float", nullable: true),
                    KM_STAWKA = table.Column<double>(type: "float", nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    SUMA_PODST = table.Column<double>(type: "float", nullable: true),
                    SUMA = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KIEROWCY_MIES", x => x.ID_KIEROWCY_MIES);
                });

            migrationBuilder.CreateTable(
                name: "KIEROWCY_MIES_ROZL",
                columns: table => new
                {
                    ID_KIEROWCY_MIES_ROZL = table.Column<int>(type: "int", nullable: false),
                    KIEROWCY_MIES_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PENSJA_PODST = table.Column<double>(type: "float", nullable: true),
                    KM_STAWKA = table.Column<double>(type: "float", nullable: true),
                    KM = table.Column<double>(type: "float", nullable: true),
                    PENSJA_KM = table.Column<double>(type: "float", nullable: true),
                    PREMIA_1_TYP = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    PREMIA_1_PROC = table.Column<double>(type: "float", nullable: true),
                    PREMIA_1 = table.Column<double>(type: "float", nullable: true),
                    PREMIA_2_TYP = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    PREMIA_2_PROC = table.Column<double>(type: "float", nullable: true),
                    PREMIA_2 = table.Column<double>(type: "float", nullable: true),
                    PREMIA_3_TYP = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    PREMIA_3_PROC = table.Column<double>(type: "float", nullable: true),
                    PREMIA_3 = table.Column<double>(type: "float", nullable: true),
                    PREMIA_4_TYP = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    PREMIA_4_PROC = table.Column<double>(type: "float", nullable: true),
                    PREMIA_4 = table.Column<double>(type: "float", nullable: true),
                    ODLICZENIA = table.Column<double>(type: "float", nullable: true),
                    PENSJA = table.Column<double>(type: "float", nullable: true),
                    ROZLICZONO = table.Column<int>(type: "int", nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WYPLACONO = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KIEROWCY_MIES_ROZL", x => x.ID_KIEROWCY_MIES_ROZL);
                });

            migrationBuilder.CreateTable(
                name: "KIEROWCY_MIES_ROZL_ODL",
                columns: table => new
                {
                    ID_KIEROWCY_MIES_ROZL_ODL = table.Column<int>(type: "int", nullable: false),
                    KIEROWCY_MIES_ROZL_ID = table.Column<int>(type: "int", nullable: true),
                    TYTUL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KWOTA = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KIEROWCY_MIES_ROZL_ODL", x => x.ID_KIEROWCY_MIES_ROZL_ODL);
                });

            migrationBuilder.CreateTable(
                name: "KIEROWCY_UWAGI",
                columns: table => new
                {
                    ID_KIEROWCY_UWAGI = table.Column<int>(type: "int", nullable: false),
                    KIEROWCA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KIEROWCA_ID = table.Column<int>(type: "int", nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZRODLO = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TYP = table.Column<int>(type: "int", nullable: true),
                    INFO = table.Column<string>(type: "text", nullable: true),
                    SAMOCHOD_ID = table.Column<int>(type: "int", nullable: true),
                    SAMOCHOD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    WYJAZD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    WYJAZD_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZLECENIE_ID = table.Column<int>(type: "int", nullable: true),
                    RODZAJ = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    LISTY_LINIOWE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    LISTY_LINIOWE_ID = table.Column<int>(type: "int", nullable: true),
                    ZAMKNIETY = table.Column<int>(type: "int", nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    ZAMKNIETY_USER_ID = table.Column<int>(type: "int", nullable: true),
                    ZAMKNIETY_USER = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ZAMKNIETY_DT = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZAMKNIETY_UWAGI = table.Column<string>(type: "varchar(250)", unicode: false, maxLength: 250, nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KIEROWCY_UWAGI", x => x.ID_KIEROWCY_UWAGI);
                });

            migrationBuilder.CreateTable(
                name: "KIEROWCY_UWAGI_RODZ",
                columns: table => new
                {
                    ID_KIEROWCY_UWAGI_RODZ = table.Column<int>(type: "int", nullable: false),
                    RODZAJ = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TYP = table.Column<int>(type: "int", nullable: true),
                    DictionaryId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TextId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KIEROWCY_UWAGI_RODZ", x => x.ID_KIEROWCY_UWAGI_RODZ);
                });

            migrationBuilder.CreateTable(
                name: "KIEROWCY_WYNAGR",
                columns: table => new
                {
                    ID_KIEROWCY_WYNAGR = table.Column<int>(type: "int", nullable: false),
                    KIEROWCY_ID = table.Column<int>(type: "int", nullable: true),
                    ROK = table.Column<int>(type: "int", nullable: true),
                    MIESIAC = table.Column<int>(type: "int", nullable: true),
                    PLACA_PODSTAWOWA = table.Column<double>(type: "float", nullable: true),
                    STALY_DOD_1 = table.Column<double>(type: "float", nullable: true),
                    STALY_DOD_1_N = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    STALY_DOD_2 = table.Column<double>(type: "float", nullable: true),
                    STALY_DOD_2_N = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    STALY_DOD_3 = table.Column<double>(type: "float", nullable: true),
                    STALY_DOD_3_N = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    STALY_DOD_4 = table.Column<double>(type: "float", nullable: true),
                    STALY_DOD_4_N = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    STALY_DOD_5 = table.Column<double>(type: "float", nullable: true),
                    STALY_DOD_5_N = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    STALY_DOD_6 = table.Column<double>(type: "float", nullable: true),
                    STALY_DOD_6_N = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    STALY_DOD_7 = table.Column<double>(type: "float", nullable: true),
                    STALY_DOD_7_N = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    STALY_DOD_8 = table.Column<double>(type: "float", nullable: true),
                    STALY_DOD_8_N = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    STALY_DOD_9 = table.Column<double>(type: "float", nullable: true),
                    STALY_DOD_9_N = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    STALY_DOD_10 = table.Column<double>(type: "float", nullable: true),
                    STALY_DOD_10_N = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PROG_1 = table.Column<double>(type: "float", nullable: true),
                    STAWKA_ZA_KM = table.Column<double>(type: "float", nullable: true),
                    STAWKA_ZA_KM_ZAGR = table.Column<double>(type: "float", nullable: true),
                    STAWKA_ZA_KM_P = table.Column<double>(type: "float", nullable: true),
                    STAWKA_ZA_KM_ZAGR_P = table.Column<double>(type: "float", nullable: true),
                    PROG_2 = table.Column<double>(type: "float", nullable: true),
                    STAWKA_ZA_KM_2 = table.Column<double>(type: "float", nullable: true),
                    STAWKA_ZA_KM_ZAGR_2 = table.Column<double>(type: "float", nullable: true),
                    STAWKA_ZA_KM_P_2 = table.Column<double>(type: "float", nullable: true),
                    STAWKA_ZA_KM_ZAGR_P_2 = table.Column<double>(type: "float", nullable: true),
                    PROG_3 = table.Column<double>(type: "float", nullable: true),
                    STAWKA_ZA_KM_3 = table.Column<double>(type: "float", nullable: true),
                    STAWKA_ZA_KM_ZAGR_3 = table.Column<double>(type: "float", nullable: true),
                    STAWKA_ZA_KM_P_3 = table.Column<double>(type: "float", nullable: true),
                    STAWKA_ZA_KM_ZAGR_P_3 = table.Column<double>(type: "float", nullable: true),
                    STAWKA_ZA_MZW = table.Column<double>(type: "float", nullable: true),
                    STAWKA_ZA_MZW_ZAGR = table.Column<double>(type: "float", nullable: true),
                    PROWIZJA = table.Column<double>(type: "float", nullable: true),
                    PROWIZJA_I = table.Column<double>(type: "float", nullable: true),
                    PROWIZJA_II = table.Column<double>(type: "float", nullable: true),
                    PROWIZJA_MIN = table.Column<double>(type: "float", nullable: true),
                    PROWIZJA_UMZL = table.Column<double>(type: "float", nullable: true),
                    PROG_KM_PREMIA = table.Column<double>(type: "float", nullable: true),
                    MIN_UDZ_LAD_PREMIA = table.Column<double>(type: "float", nullable: true),
                    STAWKA_ZA_KM_PREMIA = table.Column<double>(type: "float", nullable: true),
                    DATA_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    PROW_PROG_1 = table.Column<double>(type: "float", nullable: true),
                    PROW_PROG_2 = table.Column<double>(type: "float", nullable: true),
                    PROWIZJA_2 = table.Column<double>(type: "float", nullable: true),
                    PROWIZJA_I_2 = table.Column<double>(type: "float", nullable: true),
                    PROWIZJA_II_2 = table.Column<double>(type: "float", nullable: true),
                    PROW_PROG_3 = table.Column<double>(type: "float", nullable: true),
                    PROWIZJA_3 = table.Column<double>(type: "float", nullable: true),
                    PROWIZJA_I_3 = table.Column<double>(type: "float", nullable: true),
                    PROWIZJA_II_3 = table.Column<double>(type: "float", nullable: true),
                    PROG_KM_PREMIA_II = table.Column<double>(type: "float", nullable: true),
                    MIN_UDZ_LAD_PREMIA_II = table.Column<double>(type: "float", nullable: true),
                    STAWKA_ZA_KM_PREMIA_II = table.Column<double>(type: "float", nullable: true),
                    STAWKA_ZA_KM_ADR = table.Column<double>(type: "float", nullable: true),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KIEROWCY_WYNAGR", x => x.ID_KIEROWCY_WYNAGR);
                });

            migrationBuilder.CreateTable(
                name: "KIEROWCY_WYNAGR_SZABLON",
                columns: table => new
                {
                    ID_KIEROWCY_WYNAGR_SZABLON = table.Column<int>(type: "int", nullable: false),
                    NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PLACA_PODSTAWOWA = table.Column<double>(type: "float", nullable: true),
                    STALY_DOD_1 = table.Column<double>(type: "float", nullable: true),
                    STALY_DOD_1_N = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    STALY_DOD_2 = table.Column<double>(type: "float", nullable: true),
                    STALY_DOD_2_N = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    STALY_DOD_3 = table.Column<double>(type: "float", nullable: true),
                    STALY_DOD_3_N = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    STALY_DOD_4 = table.Column<double>(type: "float", nullable: true),
                    STALY_DOD_4_N = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    STALY_DOD_5 = table.Column<double>(type: "float", nullable: true),
                    STALY_DOD_5_N = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    STALY_DOD_6 = table.Column<double>(type: "float", nullable: true),
                    STALY_DOD_6_N = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    STALY_DOD_7 = table.Column<double>(type: "float", nullable: true),
                    STALY_DOD_7_N = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    STALY_DOD_8 = table.Column<double>(type: "float", nullable: true),
                    STALY_DOD_8_N = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    STALY_DOD_9 = table.Column<double>(type: "float", nullable: true),
                    STALY_DOD_9_N = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    STALY_DOD_10 = table.Column<double>(type: "float", nullable: true),
                    STALY_DOD_10_N = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PROG_1 = table.Column<double>(type: "float", nullable: true),
                    STAWKA_ZA_KM = table.Column<double>(type: "float", nullable: true),
                    STAWKA_ZA_KM_ZAGR = table.Column<double>(type: "float", nullable: true),
                    STAWKA_ZA_KM_P = table.Column<double>(type: "float", nullable: true),
                    STAWKA_ZA_KM_ZAGR_P = table.Column<double>(type: "float", nullable: true),
                    PROG_2 = table.Column<double>(type: "float", nullable: true),
                    STAWKA_ZA_KM_2 = table.Column<double>(type: "float", nullable: true),
                    STAWKA_ZA_KM_ZAGR_2 = table.Column<double>(type: "float", nullable: true),
                    STAWKA_ZA_KM_P_2 = table.Column<double>(type: "float", nullable: true),
                    STAWKA_ZA_KM_ZAGR_P_2 = table.Column<double>(type: "float", nullable: true),
                    PROG_3 = table.Column<double>(type: "float", nullable: true),
                    STAWKA_ZA_KM_3 = table.Column<double>(type: "float", nullable: true),
                    STAWKA_ZA_KM_ZAGR_3 = table.Column<double>(type: "float", nullable: true),
                    STAWKA_ZA_KM_P_3 = table.Column<double>(type: "float", nullable: true),
                    STAWKA_ZA_KM_ZAGR_P_3 = table.Column<double>(type: "float", nullable: true),
                    STAWKA_ZA_MZW = table.Column<double>(type: "float", nullable: true),
                    STAWKA_ZA_MZW_ZAGR = table.Column<double>(type: "float", nullable: true),
                    PROWIZJA = table.Column<double>(type: "float", nullable: true),
                    PROWIZJA_I = table.Column<double>(type: "float", nullable: true),
                    PROWIZJA_II = table.Column<double>(type: "float", nullable: true),
                    PROWIZJA_MIN = table.Column<double>(type: "float", nullable: true),
                    PROWIZJA_UMZL = table.Column<double>(type: "float", nullable: true),
                    PROG_KM_PREMIA = table.Column<double>(type: "float", nullable: true),
                    MIN_UDZ_LAD_PREMIA = table.Column<double>(type: "float", nullable: true),
                    STAWKA_ZA_KM_PREMIA = table.Column<double>(type: "float", nullable: true),
                    PROW_PROG_1 = table.Column<double>(type: "float", nullable: true),
                    PROW_PROG_2 = table.Column<double>(type: "float", nullable: true),
                    PROWIZJA_2 = table.Column<double>(type: "float", nullable: true),
                    PROWIZJA_I_2 = table.Column<double>(type: "float", nullable: true),
                    PROWIZJA_II_2 = table.Column<double>(type: "float", nullable: true),
                    PROW_PROG_3 = table.Column<double>(type: "float", nullable: true),
                    PROWIZJA_3 = table.Column<double>(type: "float", nullable: true),
                    PROWIZJA_I_3 = table.Column<double>(type: "float", nullable: true),
                    PROWIZJA_II_3 = table.Column<double>(type: "float", nullable: true),
                    PROG_KM_PREMIA_II = table.Column<double>(type: "float", nullable: true),
                    MIN_UDZ_LAD_PREMIA_II = table.Column<double>(type: "float", nullable: true),
                    STAWKA_ZA_KM_PREMIA_II = table.Column<double>(type: "float", nullable: true),
                    STAWKA_ZA_KM_ADR = table.Column<double>(type: "float", nullable: true),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KIEROWCY_WYNAGR_SZABLON", x => x.ID_KIEROWCY_WYNAGR_SZABLON);
                });

            migrationBuilder.CreateTable(
                name: "KIEROWCY_WYPOS_SZABLON",
                columns: table => new
                {
                    ID_KIEROWCY_WYPOS_SZABLON = table.Column<int>(type: "int", nullable: false),
                    NAZWA_SZABLONU = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KIEROWCY_WYPOS_SZABLON", x => x.ID_KIEROWCY_WYPOS_SZABLON);
                });

            migrationBuilder.CreateTable(
                name: "KIEROWCY_WYPOS_SZABLON_POZ",
                columns: table => new
                {
                    ID_KIEROWCY_WYPOS_SZABLON_POZ = table.Column<int>(type: "int", nullable: false),
                    KIEROWCY_WYPOS_SZABLON_ID = table.Column<int>(type: "int", nullable: true),
                    NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    ILOSC = table.Column<int>(type: "int", nullable: true),
                    WARTOSC = table.Column<double>(type: "float", nullable: true),
                    WARTOSC_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KIEROWCY_WYPOS_SZABLON_POZ", x => x.ID_KIEROWCY_WYPOS_SZABLON_POZ);
                });

            migrationBuilder.CreateTable(
                name: "KIEROWCY_WYPOSAZENIE",
                columns: table => new
                {
                    ID_KIEROWCY_WYPOSAZENIE = table.Column<int>(type: "int", nullable: false),
                    KIEROWCY_ID = table.Column<int>(type: "int", nullable: false),
                    NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    ILOSC = table.Column<int>(type: "int", nullable: true),
                    DATA_POBRANIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_ZDANIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    WARTOSC = table.Column<double>(type: "float", nullable: true),
                    WARTOSC_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    ARCH = table.Column<int>(type: "int", nullable: true),
                    DATA_ARCH = table.Column<DateTime>(type: "datetime", nullable: true),
                    W_MAG_WYDANIA_POZ_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KIEROWCY_WYPOSAZENIE", x => x.ID_KIEROWCY_WYPOSAZENIE);
                });

            migrationBuilder.CreateTable(
                name: "KIEROWCY_ZAKAZY",
                columns: table => new
                {
                    ID_KIEROWCY_ZAKAZY = table.Column<int>(type: "int", nullable: false),
                    KIEROWCY_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    OBIEKT_TYP = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: false, defaultValueSql: "('')"),
                    OBIEKT_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    DATA_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_DO = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KIEROWCY_ZAKAZY", x => x.ID_KIEROWCY_ZAKAZY);
                });

            migrationBuilder.CreateTable(
                name: "KIERUNKI",
                columns: table => new
                {
                    ID_KIERUNKI = table.Column<int>(type: "int", nullable: false),
                    KOD = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Kod kierunku np. IMP, EXP etc"),
                    OPIS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Opis kierunku"),
                    SYMBOL_LICZNIKI = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Symbol na potrzeby liczników systemowych"),
                    WIDOCZNY = table.Column<short>(type: "smallint", nullable: true),
                    SYMBOL_FK = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    DictionaryId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TextId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KIERUNKI", x => x.ID_KIERUNKI);
                },
                comment: "Słownik kierunków");

            migrationBuilder.CreateTable(
                name: "KIR",
                columns: table => new
                {
                    NUMER = table.Column<int>(type: "int", nullable: false, comment: "Numer banku (8 cyfr - numer rozliczeniowy banku)"),
                    NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa banku/oddziału"),
                    ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Adres banku/oddziału")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KIR", x => x.NUMER);
                },
                comment: "Słownik banków - tabela KIR (Krajowa Izba Rozliczenowa)");

            migrationBuilder.CreateTable(
                name: "KOD_STREFA",
                columns: table => new
                {
                    ID_KOD_STREFA = table.Column<int>(type: "int", nullable: false),
                    NAZWA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Nazwa schemtau"),
                    OPIS = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true, comment: "Opis"),
                    STRUKTURA_SIECI = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy schemat dotyczy struktury sieci"),
                    CENNIK = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy schemat dotyczy cennika"),
                    TYP = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true, comment: "Typ schematu: P - dla podjęć, D - dla doreczeń"),
                    GIELDA_POJAZDOW = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy schemat dotyczy giełdy"),
                    CLENIE = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy schemat dotyczy odpraw celnych"),
                    DATA_OD = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data początkowa okresu ważności"),
                    DATA_DO = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data końcowa okresu ważności"),
                    KALENDARZ = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy schemat dotyczy tabeli kalendarza")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KOD_STREFA", x => x.ID_KOD_STREFA);
                },
                comment: "Schemat stref kodowych");

            migrationBuilder.CreateTable(
                name: "KOD_STREFA_POZ",
                columns: table => new
                {
                    ID_KOD_STREFA_POZ = table.Column<int>(type: "int", nullable: false),
                    KOD_STREFA_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do schematu - tab: KOD_STREFA"),
                    KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Nazwa schemtau"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja"),
                    STREFA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Strefa"),
                    KRAJ = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, defaultValueSql: "('PL')", comment: "Kraj"),
                    ZAL_GODZ_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZAL_GODZ_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    ROZ_GODZ_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    ROZ_GODZ_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    DOSTAWY_NA_GODZ_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DOSTAWY_NA_GODZ_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_GRANICZNA = table.Column<DateTime>(type: "datetime", nullable: true),
                    MAX_DNI_OPOZNIENIA = table.Column<int>(type: "int", nullable: true),
                    PODSTREFA1 = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    PODSTREFA2 = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    PODSTREFA3 = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    GLOWNE_MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    GMINA = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    GMINA2 = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    REJON = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    TYP_AGLOMERACJI = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    STREFA_ODLEGLOSCI = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    ODLEGLOSC_OD_HUB = table.Column<double>(type: "float", nullable: true),
                    PARTNER_ID = table.Column<int>(type: "int", nullable: true),
                    PARTNER = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SEKWENCJA = table.Column<int>(type: "int", nullable: true),
                    LON = table.Column<double>(type: "float", nullable: true, comment: "GPS - długość"),
                    LAT = table.Column<double>(type: "float", nullable: true, comment: "GPS - szerokość"),
                    ZIP = table.Column<int>(type: "int", nullable: true, comment: "Numeryczna postac kodu"),
                    ODLEGLOSC_DO_HUB_NADRZ = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KOD_STREFA_POZ", x => x.ID_KOD_STREFA_POZ);
                },
                comment: "Pozycje schematu stref kodowych - detal do KOD_STREFA");

            migrationBuilder.CreateTable(
                name: "KODY_KRESKOWE_DOK",
                columns: table => new
                {
                    ID_KODY_KRESKOWE_DOK = table.Column<int>(type: "int", nullable: false),
                    OBIEKT_TYP = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Typ obiektu wg tabeli KS_POCZT_DOKUM + #KOP# (koperta)"),
                    OBIEKT_ID = table.Column<int>(type: "int", nullable: true, comment: "Identyfikator obiektu systemowego")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KODY_KRESKOWE_DOK", x => x.ID_KODY_KRESKOWE_DOK);
                },
                comment: "Mapowanie kodu kreskowego do identyfikatora systemowego");

            migrationBuilder.CreateTable(
                name: "KODY_NIEOBECNOSCI",
                columns: table => new
                {
                    ID_KODY_NIEOBECNOSCI = table.Column<int>(type: "int", nullable: false),
                    KOD = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: false, defaultValueSql: "('000')", comment: "Kod nieobecności"),
                    OPIS = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Opis nieobecności"),
                    CZY_PRACA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy nieobecność związana z pracą - wyjazd służbowy"),
                    STANDARD = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy kod standardowy"),
                    GRUPA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: false, defaultValueSql: "('000')", comment: "Grupa nieobecności - tab: GRUPY_NIEOBECNOSCI"),
                    KOLOR = table.Column<int>(type: "int", nullable: true, comment: "Kolor na planerze urlopów"),
                    DictionaryId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TextId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KODY_NIEOBECNOSCI", x => x.ID_KODY_NIEOBECNOSCI);
                },
                comment: "Słownik kodów nieobecności");

            migrationBuilder.CreateTable(
                name: "KODY_US",
                columns: table => new
                {
                    ID_KODY_US = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SYMBOL = table.Column<string>(type: "varchar(4)", unicode: false, maxLength: 4, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KODY_US", x => x.ID_KODY_US);
                },
                comment: "Kody urzędów skarbowych");

            migrationBuilder.CreateTable(
                name: "KOLEJE",
                columns: table => new
                {
                    ID_KOLEJE = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: false, defaultValueSql: "('')"),
                    OPIS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KOLEJE", x => x.ID_KOLEJE);
                });

            migrationBuilder.CreateTable(
                name: "KOLEJKA_WYDRUKOW",
                columns: table => new
                {
                    ID_KOLEJKA_WYDRUKOW = table.Column<int>(type: "int", nullable: false),
                    SERWER_ID = table.Column<int>(type: "int", nullable: true, comment: "Nr serwera"),
                    STOP = table.Column<int>(type: "int", nullable: true, comment: "Flaga wstrzymania wydruku"),
                    UZYTKOWNIK_ID = table.Column<int>(type: "int", nullable: false, comment: "Relacja do użytkownika"),
                    UZYTKOWNIK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Symbol użytkownika"),
                    DATA_GODZ = table.Column<DateTime>(type: "datetime", nullable: false, comment: "Data/Godz"),
                    KOD_WYDRUKU = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: false, comment: "Kod wydruku - LP - list przewozowy"),
                    PRZESYLKI_ID = table.Column<int>(type: "int", nullable: false, comment: "Relacja do przesyłki"),
                    PRZESYLKI = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Numer przesyłki"),
                    LISTY_LINIOWE_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do trasy"),
                    LISTY_LINIOWE = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Numer trasy"),
                    WYDRUK_DT = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data/Godz wydruku"),
                    WYDRUK_OK = table.Column<int>(type: "int", nullable: false, comment: "Flaga, czy wydrukowany"),
                    CZY_SKAN = table.Column<int>(type: "int", nullable: false, comment: "Flaga, czy skanować"),
                    SKAN_DT = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data/Godz skanu"),
                    SKAN_OK = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy zeskanowany"),
                    CZY_ETYKIETY = table.Column<int>(type: "int", nullable: false, comment: "Flaga, czy drukować etykiety"),
                    ETYKIETY_OK = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy etykiety wydrukowane"),
                    ETYKIETY_DT = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data/Godz wydruku etykiet"),
                    KOD_KRESKOWY = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Zeskanowany numer"),
                    SKAN_LP_DO_POLA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "W jakie pole wskanowywać numer")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KOLEJKA_WYDRUKOW", x => x.ID_KOLEJKA_WYDRUKOW);
                },
                comment: "Kolejka wydruków w trybie serwerowym");

            migrationBuilder.CreateTable(
                name: "KOMPENSATY",
                columns: table => new
                {
                    ID_KOMPENSATY = table.Column<int>(type: "int", nullable: false),
                    NUMER = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NUMER_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    NUMER_ROK = table.Column<int>(type: "int", nullable: true),
                    NUMER_MIES = table.Column<int>(type: "int", nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    STATUS = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    KLIENT_ID = table.Column<int>(type: "int", nullable: true),
                    KLIENT_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KLIENT_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KLIENT_ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KLIENT_MIASTO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KLIENT_KOD = table.Column<string>(type: "varchar(6)", unicode: false, maxLength: 6, nullable: true),
                    KLIENT_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KLIENT_NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    NAGLOWEK = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true),
                    STOPKA = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true),
                    DO_ROZLICZENIA = table.Column<double>(type: "float", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    TYLKO_LOK_AKT = table.Column<int>(type: "int", nullable: true),
                    ROWNIEZ_WARSZTAT = table.Column<int>(type: "int", nullable: true),
                    WALUTA_DOK = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    TAB_KURS_ID = table.Column<int>(type: "int", nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KOMPENSATY", x => x.ID_KOMPENSATY);
                });

            migrationBuilder.CreateTable(
                name: "KOMPENSATY_POZ",
                columns: table => new
                {
                    ID_KOMPENSATY_POZ = table.Column<int>(type: "int", nullable: false),
                    KOMPENSATY_ID = table.Column<int>(type: "int", nullable: true),
                    TYP = table.Column<int>(type: "int", nullable: true),
                    FAKTURA_ID = table.Column<int>(type: "int", nullable: true),
                    FAKTURA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DNI_PO = table.Column<int>(type: "int", nullable: true),
                    DATA_PLATNOSCI = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    KWOTA = table.Column<double>(type: "float", nullable: true),
                    RODZ = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    VAT_W_PLN = table.Column<int>(type: "int", nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KURS = table.Column<double>(type: "float", nullable: true),
                    KWOTA_W_WAL_KOMP = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KOMPENSATY_POZ", x => x.ID_KOMPENSATY_POZ);
                });

            migrationBuilder.CreateTable(
                name: "KOMUNIKACJA_FK",
                columns: table => new
                {
                    ID_KOMUNIKACJA_FK = table.Column<int>(type: "int", nullable: false),
                    KIERUNEK = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    ROK = table.Column<int>(type: "int", nullable: true),
                    MIESIAC = table.Column<int>(type: "int", nullable: true),
                    RODZAJ_ZAKRESU = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    NUMER_OD = table.Column<int>(type: "int", nullable: true),
                    NUMER_DO = table.Column<int>(type: "int", nullable: true),
                    RODZAJ = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    NR_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ILOSC_DOK = table.Column<int>(type: "int", nullable: true),
                    UZYTKOWNIK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DATA_GEN = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_GEN = table.Column<DateTime>(type: "datetime", nullable: true),
                    FORMAT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NAZWA_PLIKU = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    P_NR_SPRZEDAZY = table.Column<int>(type: "int", nullable: true),
                    O_NR_SPRZEDAZY = table.Column<int>(type: "int", nullable: true),
                    SORT_WG = table.Column<int>(type: "int", nullable: true),
                    SORT_KIER = table.Column<int>(type: "int", nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    LISTA_FAKTUR = table.Column<string>(type: "text", nullable: true),
                    DATA_KSIEGOWANIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    TYLKO_SPEED = table.Column<int>(type: "int", nullable: true),
                    TYLKO_WARSZTAT = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KOMUNIKACJA_FK", x => x.ID_KOMUNIKACJA_FK);
                });

            migrationBuilder.CreateTable(
                name: "KONTENERY",
                columns: table => new
                {
                    ID_KONTENERY = table.Column<int>(type: "int", nullable: false),
                    K_NUMBER = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "* nie używać *"),
                    K_TYPE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "* nie używać *"),
                    K_SIZE = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "* nie używać *"),
                    K_STEAM_CO = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "* nie używać *"),
                    K_VESSEL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "* nie używać *"),
                    K_DEST_PORT = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "* nie używać *"),
                    K_DEST = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "* nie używać *"),
                    K_SERIAL_NO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "* nie używać *"),
                    K_BOOK_NO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "* nie używać *"),
                    K_VOYAGE_NO = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "* nie używać *"),
                    K_SEAL_NO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "* nie używać *"),
                    K_ITEMS = table.Column<double>(type: "float", nullable: true, comment: "* nie używać *"),
                    K_WEIGHT_LBS = table.Column<double>(type: "float", nullable: true, comment: "* nie używać *"),
                    K_WEIGHT_KG = table.Column<double>(type: "float", nullable: true, comment: "* nie używać *"),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy są załączniki"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja"),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dział"),
                    STATUS = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Status"),
                    DATA_PODJECIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_ZWOLNIENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_ZWROTU = table.Column<DateTime>(type: "datetime", nullable: true),
                    MIEJSCE_POD_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE_POD = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    MIEJSCE_ZWR_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE_ZWR = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    TYP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Typ kontenera"),
                    NUMER = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Numer kontenera"),
                    OPIS_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do opisu opakowania - tab: OPISY_TOWAROW"),
                    OPIS = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true, comment: "Opis towaru"),
                    OPAKOWANIE_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do opakowania - tab: OPAKOWANIA"),
                    KOD_OPAK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Kod opakowania"),
                    OPAKOWANIE = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Symbol opakowania"),
                    ILOSC = table.Column<double>(type: "float", nullable: true, comment: "Ilość towaru w kontenerze"),
                    WAGA = table.Column<double>(type: "float", nullable: true, comment: "Waga towaru w kontenerze"),
                    OBJ = table.Column<double>(type: "float", nullable: true, comment: "Obj towaru w kontenerze"),
                    NUMER_HBL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer HBL"),
                    NUMER_MBL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "NUmer MBL"),
                    NUMER_PLOMBY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer plomby"),
                    NUMER_DEKLARACJI = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer deklaracji"),
                    TEU = table.Column<double>(type: "float", nullable: true, comment: "Ilość TEU"),
                    OPISUJACY_ID = table.Column<int>(type: "int", nullable: true),
                    OPISUJACY = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DEMURRAGE = table.Column<int>(type: "int", nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true),
                    REF_1 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Ref 1"),
                    REF_2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Ref 2"),
                    REF_3 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Ref 3"),
                    REF_4 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Ref 4"),
                    REF_5 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Ref 5"),
                    DETENTION = table.Column<int>(type: "int", nullable: true),
                    DATA_DOST_ODB = table.Column<DateTime>(type: "datetime", nullable: true),
                    TEMP_MIN = table.Column<double>(type: "float", nullable: true, comment: "Temperatura od"),
                    TEMP_MAX = table.Column<double>(type: "float", nullable: true, comment: "Temperatura do"),
                    NUMER_PLOMBY2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer plomby"),
                    NUMER_PLOMBY3 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer plomby"),
                    MIX_D_D = table.Column<int>(type: "int", nullable: true),
                    DATA_GATE_IN = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_ROZLADUNKU = table.Column<DateTime>(type: "datetime", nullable: true),
                    LADUNEK_LP = table.Column<int>(type: "int", nullable: true),
                    WAGA_VGM = table.Column<double>(type: "float", nullable: true, comment: "Waga towaru w kontenerze"),
                    WAGA_TARA = table.Column<double>(type: "float", nullable: true, comment: "Waga towaru w kontenerze"),
                    STAN_POD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    STAN_ZWR = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    RAIL_TYPE = table.Column<int>(type: "int", nullable: true),
                    TYPY_WAGONOW_ID = table.Column<int>(type: "int", nullable: true),
                    OPERATOR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NHM = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    FUMIGACJA = table.Column<int>(type: "int", nullable: true),
                    RAMPA_FITOSAN = table.Column<int>(type: "int", nullable: true),
                    PRYWATNY = table.Column<int>(type: "int", nullable: true),
                    OPERATOR_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KONTENERY", x => x.ID_KONTENERY);
                });

            migrationBuilder.CreateTable(
                name: "KONTENERY_LAD",
                columns: table => new
                {
                    ID_KONTENERY_LAD = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    KONTENERY_ID = table.Column<int>(type: "int", nullable: true),
                    LADUNEK_LP = table.Column<int>(type: "int", nullable: true),
                    OPIS_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do opisu opakowania - tab: OPISY_TOWAROW"),
                    OPIS = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true, comment: "Opis towaru"),
                    OPAKOWANIE_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do opakowania - tab: OPAKOWANIA"),
                    KOD_OPAK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Kod opakowania"),
                    OPAKOWANIE = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Symbol opakowania"),
                    ILOSC = table.Column<double>(type: "float", nullable: true, comment: "Ilość towaru w kontenerze"),
                    WAGA = table.Column<double>(type: "float", nullable: true, comment: "Waga towaru w kontenerze"),
                    OBJ = table.Column<double>(type: "float", nullable: true, comment: "Obj towaru w kontenerze"),
                    REF_1 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    MODEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    INDEKS = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_3 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KONTENERY_LAD", x => x.ID_KONTENERY_LAD);
                });

            migrationBuilder.CreateTable(
                name: "KONTENERY_RAIL_LAD",
                columns: table => new
                {
                    ID_KONTENERY_RAIL_LAD = table.Column<int>(type: "int", nullable: false),
                    ZLECENIA_RAIL_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do zlecenia, tab: ZLECENIA_RAIL_ID"),
                    KONTENERY_ID = table.Column<int>(type: "int", nullable: true),
                    LADUNEK_LP = table.Column<int>(type: "int", nullable: true),
                    OPIS_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do opisu opakowania - tab: OPISY_TOWAROW"),
                    OPIS = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true, comment: "Opis towaru"),
                    OPAKOWANIE_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do opakowania - tab: OPAKOWANIA"),
                    KOD_OPAK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Kod opakowania"),
                    OPAKOWANIE = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Symbol opakowania"),
                    ILOSC = table.Column<double>(type: "float", nullable: true, comment: "Ilość towaru w kontenerze"),
                    WAGA = table.Column<double>(type: "float", nullable: true, comment: "Waga towaru w kontenerze"),
                    OBJ = table.Column<double>(type: "float", nullable: true, comment: "Obj towaru w kontenerze"),
                    REF_1 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_3 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    MODEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    INDEKS = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NHM = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KONTENERY_RAIL_LAD", x => x.ID_KONTENERY_RAIL_LAD);
                });

            migrationBuilder.CreateTable(
                name: "KONTENERY_WYM_TABORU",
                columns: table => new
                {
                    ID_KONTENERY_WYM_TABORU = table.Column<int>(type: "int", nullable: false),
                    KONTENERY_ID = table.Column<int>(type: "int", nullable: true),
                    TYP = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "WYM.WYP, TYP.ZAB, SP.LAD"),
                    NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    ILOSC = table.Column<int>(type: "int", nullable: true),
                    ZAMIENNIK = table.Column<int>(type: "int", nullable: true),
                    NIE_BLOKUJ = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KONTENERY_WYM_TABORU", x => x.ID_KONTENERY_WYM_TABORU);
                });

            migrationBuilder.CreateTable(
                name: "KONTENERY_ZLECENIA",
                columns: table => new
                {
                    ID_KONTENERY_ZLECENIA = table.Column<int>(type: "int", nullable: false),
                    KONTENERY_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIA_TYP = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    ZLECENIA_ID = table.Column<int>(type: "int", nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KONTENERY_ZLECENIA", x => x.ID_KONTENERY_ZLECENIA);
                });

            migrationBuilder.CreateTable(
                name: "KONTRAH_AIR_AWB",
                columns: table => new
                {
                    ID_KONTRAH_AIR_AWB = table.Column<int>(type: "int", nullable: false),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Relacja do kontrahenta - tab: KONTRAHENCI"),
                    NR_KOLEJNY = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Numer kolejny"),
                    NR = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: false, defaultValueSql: "('')"),
                    STATUS = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "0 - wolny, 1 - użyty, 98 - zwrócony, 99 - anulowany"),
                    LISTY_LINIOWE_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do trasy lotniczej - tab: LISTY_LINIOWE"),
                    RECZNIE = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Dopisany recznie")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KONTRAH_AIR_AWB", x => x.ID_KONTRAH_AIR_AWB);
                },
                comment: "Rezerwacja numerów AWB dla modułu lotniczego");

            migrationBuilder.CreateTable(
                name: "KONTRAH_KRAJE_DO",
                columns: table => new
                {
                    ID_KONTRAH_KRAJE_DO = table.Column<int>(type: "int", nullable: false),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: false, comment: "Relacja do kontrahenta - tab: KONTRAHENCI"),
                    KRAJ = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "Symbol kraju"),
                    NAZWA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Nazwa kraju słownie")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KONTRAH_KRAJE_DO", x => x.ID_KONTRAH_KRAJE_DO);
                },
                comment: "Do jakich krajów kontrahent zleca ładunki");

            migrationBuilder.CreateTable(
                name: "KONTRAH_KRAJE_Z",
                columns: table => new
                {
                    ID_KONTRAH_KRAJE_Z = table.Column<int>(type: "int", nullable: false),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: false, comment: "Relacja do kontrahenta - tab: KONTRAHENCI"),
                    KRAJ = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "Symbol kraju"),
                    NAZWA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Nazwa kraju słownie")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KONTRAH_KRAJE_Z", x => x.ID_KONTRAH_KRAJE_Z);
                },
                comment: "Z jakich krajów kontrahent zleca ładunki");

            migrationBuilder.CreateTable(
                name: "KONTRAH_LADUNKI",
                columns: table => new
                {
                    ID_KONTRAH_LADUNKI = table.Column<int>(type: "int", nullable: false),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: false, comment: "Relacja do kontrahenta - tab: KONTRAHENCI"),
                    OPISY_TOWAROW_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do tabeli ładunków - tab: OPISY_TOWAROW"),
                    OPISY_TOWAROW = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true, comment: "Nazwa towaru")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KONTRAH_LADUNKI", x => x.ID_KONTRAH_LADUNKI);
                },
                comment: "Jakie ładunki kontrahent zleca");

            migrationBuilder.CreateTable(
                name: "KONTRAH_OGR_LAD",
                columns: table => new
                {
                    ID_KONTRAH_OGR_LAD = table.Column<int>(type: "int", nullable: false),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: false, comment: "Relacja do kontrahenta - tab: KONTRAHENCI"),
                    GRUPY_LADUNKOW_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do grupy ładunków - tab: GRUPY_LADUNKOW"),
                    GRUPY_LADUNKOW = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Nazwa grupy ładunków"),
                    ALGORYTM = table.Column<int>(type: "int", nullable: true, comment: "Algorytm, wg którego jest dokonywana kontrola ograniczeń ładunków")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KONTRAH_OGR_LAD", x => x.ID_KONTRAH_OGR_LAD);
                },
                comment: "Ograniczenia ładunków dla kontrahenta");

            migrationBuilder.CreateTable(
                name: "KONTRAH_OGR_LAD_POZ",
                columns: table => new
                {
                    ID_KONTRAH_OGR_LAD_POZ = table.Column<int>(type: "int", nullable: false),
                    KONTRAH_OGR_LAD_ID = table.Column<int>(type: "int", nullable: false, comment: "Relacja do nagłówka ograniczeń - tab: KONTRAH_OGR_LAD"),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: false, comment: "Relacja do kontrahenta - tab: KONTRAHENCI"),
                    GRUPY_LADUNKOW_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do grupy ładunków - tab: GRUPY_LADUNKOW"),
                    GRUPY_LADUNKOW = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Nazwa grupy ładunków")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KONTRAH_OGR_LAD_POZ", x => x.ID_KONTRAH_OGR_LAD_POZ);
                },
                comment: "Ograniczenia ładunków dla kontrahenta - pozycje");

            migrationBuilder.CreateTable(
                name: "KONTRAH_POWIADOMIENIA",
                columns: table => new
                {
                    ID_KONTRAH_POWIADOMIENIA = table.Column<int>(type: "int", nullable: false),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Relacja do kontrahenta - tab: KONTRAHENCI"),
                    OBJ_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Relacja do kontrahenta - tab: OBJECT"),
                    KTO = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Do kogo np. ZLEC, NAD, ODB, PLATN, PARTN, INNY"),
                    TYP = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true, comment: "Typ powiadomienia np. SMS, EMAIL etc"),
                    CO_WYZWALA = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true, comment: "Statusy wyzwalające zapisane jako ciąg rozdzielany ;"),
                    EMAIL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true, comment: "Adres email na jaki zostanie wysłane powiadomienie"),
                    KRAJ = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "Symbol kraju"),
                    TEL_PREFIX = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Prefix telefonu"),
                    TEL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nr telefonu"),
                    TRESC = table.Column<string>(type: "varchar(600)", unicode: false, maxLength: 600, nullable: true, comment: "Treść komunikatu"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dotyczy lokalizacji"),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dotyczy działu")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KONTRAH_POWIADOMIENIA", x => x.ID_KONTRAH_POWIADOMIENIA);
                });

            migrationBuilder.CreateTable(
                name: "KONTRAH_SEGMENT",
                columns: table => new
                {
                    ID_KONTRAH_SEGMENT = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: true),
                    DICTIONARY_VALUES_ID = table.Column<int>(type: "int", nullable: true),
                    PROCENT_UDZIALU = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KONTRAH_SEGMENT", x => x.ID_KONTRAH_SEGMENT);
                },
                comment: "Segmenty działalności");

            migrationBuilder.CreateTable(
                name: "KONTRAH_TOWARY",
                columns: table => new
                {
                    ID_KONTRAH_TOWARY = table.Column<int>(type: "int", nullable: false),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Relacja do kontrahenta - tab: KONTRAHENCI"),
                    OPISY_TOWARU_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Relacja do towaru - tab: OPISY_TOWAROW"),
                    SYMBOL = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KONTRAH_TOWARY", x => x.ID_KONTRAH_TOWARY);
                });

            migrationBuilder.CreateTable(
                name: "KONTRAH_TYP_REPREZ",
                columns: table => new
                {
                    ID_KONTRAH_TYP_REPREZ = table.Column<int>(type: "int", nullable: false),
                    KIND = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Typ opiekuna OH, OB"),
                    NAZWA = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true, comment: "Nazwa typu reprezentanta")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KONTRAH_TYP_REPREZ", x => x.ID_KONTRAH_TYP_REPREZ);
                },
                comment: "Typy reprezentantów");

            migrationBuilder.CreateTable(
                name: "KONTRAH_WOLUMENY_OKR",
                columns: table => new
                {
                    ID_KONTRAH_WOLUMENY_OKR = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: true),
                    AKTYWNY = table.Column<int>(type: "int", nullable: true),
                    RODZAJ = table.Column<int>(type: "int", nullable: true),
                    TYP = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KONTRAH_WOLUMENY_OKR", x => x.ID_KONTRAH_WOLUMENY_OKR);
                },
                comment: "Wolumenty okresowe");

            migrationBuilder.CreateTable(
                name: "KONTRAH_WOLUMENY_OKR_POZ",
                columns: table => new
                {
                    ID_KONTRAH_WOLUMENY_OKR_POZ = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    KONTRAH_WOLUMENY_OKR_ID = table.Column<int>(type: "int", nullable: true),
                    OKRES = table.Column<int>(type: "int", nullable: true),
                    WARTOSC = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KONTRAH_WOLUMENY_OKR_POZ", x => x.ID_KONTRAH_WOLUMENY_OKR_POZ);
                },
                comment: "Wolumenty okresowe - pozycje");

            migrationBuilder.CreateTable(
                name: "KONTRAH_WYM_TABORU",
                columns: table => new
                {
                    ID_KONTRAH_WYM_TABORU = table.Column<int>(type: "int", nullable: false),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: false, comment: "Relacja do kontrahenta - tab: KONTRAHENCI"),
                    WYM_TABORU = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Opis wymagań taboru")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KONTRAH_WYM_TABORU", x => x.ID_KONTRAH_WYM_TABORU);
                },
                comment: "Słownik wymagań taboru dla kontrahenta");

            migrationBuilder.CreateTable(
                name: "KONTRAHENCI",
                columns: table => new
                {
                    ID_KONTRAH = table.Column<int>(type: "int", nullable: false),
                    AKTYWNY = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy kontrahent jest aktywny"),
                    SYGNATURA = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "*pole nie używane*"),
                    RODZ_KON = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "*pole nie używane*"),
                    TYP_KONTR = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Typ kontrahenta - mapa bitowa"),
                    GRUPA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Kod grupy"),
                    OPCJE_KONTR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Dodatkowe opcje kontrahenta - mapa bitowa"),
                    NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Nazwa kontrahenta"),
                    ULICA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Adres (ulica i numery)"),
                    NR_DOM = table.Column<string>(type: "varchar(6)", unicode: false, maxLength: 6, nullable: true, comment: "*pole nie używane*"),
                    NR_LOK = table.Column<string>(type: "varchar(4)", unicode: false, maxLength: 4, nullable: true, comment: "*pole nie używane*"),
                    MIEJSCOWOSC = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Miejscowość"),
                    KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Kod pocztowy"),
                    POCZTA = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true, comment: "Poczta"),
                    KRAJ = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: true, comment: "Kraj"),
                    NAZWA_K = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Adr. koresp. - Nazwa"),
                    ULICA_K = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Adr. koresp. - Adres (ulica i numery)"),
                    NR_DOM_K = table.Column<string>(type: "varchar(6)", unicode: false, maxLength: 6, nullable: true, comment: "*pole nie używane*"),
                    NR_LOK_K = table.Column<string>(type: "varchar(4)", unicode: false, maxLength: 4, nullable: true, comment: "*pole nie używane*"),
                    MIEJSCOWOSC_K = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Adr. koresp. - Miejscowość"),
                    KOD_K = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Adr. koresp. - Kod pocztowy"),
                    POCZTA_K = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true, comment: "Adr. koresp. - Poczta"),
                    KRAJ_K = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: true, comment: "Adr. koresp. - Kraj"),
                    REGON = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Numer REGON"),
                    PESEL = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Numer PESEL"),
                    NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Numer NIP"),
                    NIP2 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Numer NIP 2"),
                    NIP_CZYSTY = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Numer NIP - bez znaków rozdzielających"),
                    BANK_NAZWA = table.Column<string>(type: "varchar(80)", unicode: false, maxLength: 80, nullable: true, comment: "*pole nie używane*"),
                    BANK_KONTO = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true, comment: "*pole nie używane*"),
                    OSOBAFIN1 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "*pole nie używane*"),
                    OSOBAFIN2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "*pole nie używane*"),
                    OSZGLASZ = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "*pole nie używane*"),
                    NRWPISU = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "*pole nie używane*"),
                    DATAWPISU = table.Column<DateTime>(type: "datetime", nullable: true, comment: "*pole nie używane*"),
                    ID_KLIENT = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "*pole nie używane*"),
                    ID_PLIK = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "*pole nie używane*"),
                    SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Symbol kontrahenta"),
                    PREFIX_NIP = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "Prefix NIP - symbol kraju"),
                    WALUTA_ROZLICZEN = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Waluta rozliczeń z kontrahentem"),
                    WALUTA_FRACHTU = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Waluta w jakiej podawany jest fracht na zleceniach"),
                    FORMA_PLATNOSCI = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Sprzedaż - Domyślna forma płatności"),
                    TERMIN_PLATNOSCI = table.Column<int>(type: "int", nullable: true, comment: "Sprzedaż - Domyślny termin płatności"),
                    FORMA_PLATNOSCI_DOST = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Zakup - Domyślna forma płatności"),
                    TERMIN_PLATNOSCI_DOST = table.Column<int>(type: "int", nullable: true, comment: "Zakup - Domyślny termin płatności"),
                    ROZB_KOSZTY = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true, comment: "*pole nie używane*"),
                    FV_PRO_FORMA = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true, comment: "*pole nie używane*"),
                    JEST_OSW = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true, comment: "*pole nie używane*"),
                    OSWIADCZENIE = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true, comment: "*pole nie używane*"),
                    INFO_DLA_OPERATORA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Informacja dla operatora - pojawia sie zawsze w momencie wybrania klienta na zlecenie, fakture etc."),
                    UWAGI = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Dowolne uwagi do klienta"),
                    UWAGI_NA_FV = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true, comment: "Uwagi drukowane na fakturach"),
                    TELEFON1 = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true, comment: "Numer telefonu do siedziby klienta 1"),
                    TELEFON2 = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true, comment: "Numer telefonu do siedziby klienta 2"),
                    FAX = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true, comment: "Numer faksu do siedziby klienta"),
                    EMAIL = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true, comment: "Główny adres email"),
                    OSOBA_KONTAKT = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true, comment: "Osoba kontaktowa"),
                    WWW = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true, comment: "Adres strony WWW"),
                    JEZYK_FAKTURY = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, defaultValueSql: "('PL')", comment: "Domyślny język dla wystawianych faktur"),
                    MAX_DLUG = table.Column<double>(type: "float", nullable: true, comment: "Kwota maksymalnego zadłużenia przeteminowanego klienta"),
                    MAX_PRZETERM = table.Column<double>(type: "float", nullable: true, comment: "Maksymalna ilość dni po terminie"),
                    CENNIK_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do cennika - dostawa drobnicowa - tab: CENNIKI"),
                    CENNIK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa cennika - dostawa drobnicowa"),
                    CENNIK_FTL_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do cennika - zleceniodawca FTL - tab: CENNIKI"),
                    CENNIK_FTL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa cennika - zleceniodawca FTL"),
                    CENNIK_FTL_P_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do cennika - przewoźnik FTL - tab: CENNIKI"),
                    CENNIK_FTL_P = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa cennika - przewoźnik FTL"),
                    KURS_WG = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Sprzedaż - Wg jakiej daty dobierac kurs waluty"),
                    KURS_Z_DNIA_P = table.Column<int>(type: "int", nullable: true, comment: "Sprzedaż - Flaga, czy kurs z dnia poprzedzajacego"),
                    TYP_KURS_K = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "Sprzedaż - Typ kursy: SR,KU,SP"),
                    TYP_KURS_P = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "Zakup - Typ kursy: SR,KU,SP"),
                    STD_UPUST = table.Column<double>(type: "float", nullable: true, comment: "Standardowy upust dla klienta"),
                    SZABL_OPISU_POZ_FAKT = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Szablon opisu pozycji faktu klienta"),
                    ETYK_OPISU_POZ_FAKT = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true, comment: "Etykiety na potrzeby generatora opisu faktur klienta"),
                    DATA_OCP = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ważnosci ubezpieczenia OC przewoźnika"),
                    WARTOSC_OCP = table.Column<double>(type: "float", nullable: true, comment: "Wartość ubezpieczenia OC przewoźnika"),
                    WARTOSC_OCP_WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Waluta wartości ubezpieczenia OC przewoźnika"),
                    DATA_OCP_BLOKADA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy jest blokada ubezpieczenia OC spedytora"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja"),
                    DOTYCZY_LOKALIZACJI = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Rejestrowanie dokumentów na inną lokalizację niz lokalizacja kontrahenta"),
                    OPIEKUN_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do opiekuna klienta - tab: UZYTKOWNIK"),
                    OPIEKUN = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Symbol opiekuna klienta"),
                    KONTO_FK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Konto księgowe 1"),
                    KONTO_FK_2 = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Konto księgowe 2"),
                    EXP_FK_DATA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data eksportu do systemu FK"),
                    EXP_FK = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy kontrahent wyeksportowany do systemu FK"),
                    EXP_FK_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do pliku eksportu do FK - tab: KOMUNIKACJA_FK"),
                    KONTO_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do domyślnego konta bankowego do faktur - tab: KONTRAHENCI_KONTA"),
                    KONTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer domyślnego konta bankowego do faktur"),
                    IBAN = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy numer domyślnego konta w formacie IBAN"),
                    WYDRUK_ODEBRAL = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true, comment: "Osoba odbierająca wydruk faktury"),
                    L_ORG = table.Column<int>(type: "int", nullable: true, comment: "Domyślna liczba oryginałów faktur"),
                    L_KOP = table.Column<int>(type: "int", nullable: true, comment: "Domyślna liczba kopii faktur"),
                    GEO_LONGI = table.Column<double>(type: "float", nullable: true, comment: "GPS - długość"),
                    GEO_LAT = table.Column<double>(type: "float", nullable: true, comment: "GPS - szerokość"),
                    EMAIL_SPEEDA = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true, comment: "Adres e-mail powiazany z modułem EI"),
                    UZYWA_SPEEDA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy kontrahent używa systemu SPEED"),
                    ZWERYFIKOWANY = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy kontrahent został zweryfikowany"),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true, comment: "Liczba załączników"),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    MAX_DLUG_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Waluta maksymalnego zadłużenia przeteminowanego klienta"),
                    DOD_OPIS_NAGL = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Numer KRS"),
                    KURS_WG_P = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Zakup - Wg jakiej daty dobierac kurs waluty"),
                    KURS_Z_DNIA_P_P = table.Column<int>(type: "int", nullable: true, comment: "Zakup - Flaga, czy kurs z dnia poprzedzajacego"),
                    DOD_OPIS_NAGL2 = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Kapitał zakładowy"),
                    GG = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Numer komunikatora GG"),
                    SKYPE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer komunikatora SKYPE"),
                    WOJEWODZTWO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Województwo"),
                    WOJEWODZTWO_K = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Adr. koresp. - Województwo"),
                    PREF_KONTAKT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Opis preferowanego sposobu kontaktu"),
                    ZGODA_NA_PRZETWARZANIE = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy jest zgoda na przetwarzanie danych osobowych"),
                    ZGODA_NA_PRZETWARZANIE_MARKET = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy jest zgoda na przetwarzanie w celach marketingowych"),
                    ZGODA_NA_OTRZ_EMAIL = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy jest zgoda na przesyłanie e-maili"),
                    SPOSOB_POZYSKANIA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Opis sposobu pozyskania klienta"),
                    MAX_DLUG_CALK = table.Column<double>(type: "float", nullable: true, comment: "Kwota maksymalnego zadłużenia całkowitego klienta"),
                    MAX_DLUG_CALK_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Waluta maksymalnego zadłużenia całkowitego klienta"),
                    USTALONA_WPLATA = table.Column<double>(type: "float", nullable: true, comment: "Kwota ustalonej wpłaty"),
                    USTALONA_WPLATA_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Waluta ustalonej wpłaty"),
                    USTALONA_WPLATA_WAZNOSC = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ważności ustalonej wpłaty"),
                    V_KURS_WG = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Sprzedaż VAT - Wg jakiej daty dobierac kurs waluty"),
                    V_KURS_Z_DNIA_P = table.Column<int>(type: "int", nullable: true, comment: "Sprzedaż VAT - Flaga, czy kurs z dnia poprzedzajacego"),
                    V_KURS_WG_P = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Zakup VAT - Wg jakiej daty dobierac kurs waluty"),
                    V_KURS_Z_DNIA_P_P = table.Column<int>(type: "int", nullable: true, comment: "Zakup VAT - Flaga, czy kurs z dnia poprzedzajacego"),
                    V_TYP_KURS_K = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "Sprzedaż VAT - Typ kursy: SR,KU,SP"),
                    V_TYP_KURS_P = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "Zakup VAT - Typ kursy: SR,KU,SP"),
                    GRUPA_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do grupy kontrahenta - tab: KONTRAHENCI_GRUPY"),
                    TERMIN_PLATNOSCI_OD = table.Column<int>(type: "int", nullable: true, comment: "Sprzedaż - Sposób wyliczania daty płatności: 0-od daty wyst, 1-od daty sprzed"),
                    TERMIN_PLATNOSCI_DOST_OD = table.Column<int>(type: "int", nullable: true, comment: "Zakup - Sposób wyliczania daty płatności: 0-od daty wyst, 1-od daty sprzed"),
                    CENNIK_P_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do cennika - podjęcie drobnicowe - tab: CENNIKI"),
                    CENNIK_P = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa cennika - podjęcie drobnicowe"),
                    STD_PROWIZJA_SPEDYCYJNA = table.Column<double>(type: "float", nullable: true, comment: "Standardowa prowizja spedycyjna dla klienta"),
                    PLATNIK_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do płatnika - tab: KONTRAHENCI"),
                    PLATNIK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Symbol płatnika"),
                    SZKODA_MIN_WARTOSC = table.Column<double>(type: "float", nullable: true, comment: "Minimalna wartość szkody - dla modułu UBEZPIECZEŃ"),
                    SZKODA_MIN_WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Waluta minimalnej wartości szkody - dla modułu UBEZPIECZEŃ"),
                    SAMOLIKWIDACJA_WARTOSC = table.Column<double>(type: "float", nullable: true, comment: "Wartość samolikwidacji szkody - dla modułu UBEZPIECZEŃ"),
                    SAMOLIKWIDACJA_WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Waluta wartości samolikwidacji - dla modułu UBEZPIECZEŃ"),
                    MAX_DLUG_ZLEC = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy liczyć zadłużenie również z niezafakturowanych zleceń"),
                    LICENCJA_NR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer licencji przewoźnika"),
                    LICENCJA_WAZNOSC = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ważności licencji przewoźnika"),
                    LICENCJA_BLOKADA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy jest blokada licencji przewoźnika"),
                    ZABLOKOWANY = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy kontrahent jest zablokowany"),
                    ZABLOKOWANY_PRZEZ = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Kto zablokował kontrahenta"),
                    DZIAL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Dział"),
                    OCP_NR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer polisy ubezpieczenia przewoźnika"),
                    OCP_UBEZP = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Numer polisy ubezpieczenia przewoźnika"),
                    OCP_UBEZP_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do ubezpieczenia przewoźnika - tab: POLISY"),
                    OCP_KRAJ = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy ubezpieczenie OC przewoźnika obejmuje kraj"),
                    OCP_ZAGR = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy ubezpieczenie OC przewoźnika obejmuje zagranicę"),
                    OCP_UWAGI = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true, comment: "Uwagi do ubezpieczenia OC przewoźnika"),
                    SPEDYTOR = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy przewoźnik jest również spedycją"),
                    OCS_NR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer polisy ubezpieczenia spedytora"),
                    OCS_UBEZP = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Numer polisy ubezpieczenia spedytora"),
                    OCS_UBEZP_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do ubezpieczenia spedytora - tab: POLISY"),
                    DATA_OCS = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ważnosci ubezpieczenia OC spedytora"),
                    WARTOSC_OCS = table.Column<double>(type: "float", nullable: true, comment: "Wartość ubezpieczenia OC spedytora"),
                    WARTOSC_OCS_WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Waluta wartości ubezpieczenia OC spedytora"),
                    DATA_OCS_BLOKADA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy jest blokada ubezpieczenia OC spedytora"),
                    OCS_KRAJ = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy ubezpieczenie OC spedytora obejmuje kraj"),
                    OCS_ZAGR = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy ubezpieczenie OC spedytora obejmuje zagranicę"),
                    OCS_UWAGI = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true, comment: "Uwagi do ubezpieczenia OC spedytora"),
                    LICENCJA_KRAJ = table.Column<int>(type: "int", nullable: true, comment: "<nieużywane>"),
                    LICENCJA_ZAGR = table.Column<int>(type: "int", nullable: true, comment: "<nieużywane>"),
                    SYMBOL_EX = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Symbol klienta w systemie zewnetrznym 1"),
                    PLATNIK_ODB_FV = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy płatnik jest odbiorcą faktury"),
                    SYMBOL_W_SIECI = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Symbol klienta w sieci"),
                    SYMBOL_EX_2 = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Symbol klienta w systemie zewnetrznym 2"),
                    SYST_WYM_DANYCH_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do systemów wymiany danych - tab: SYST_WYM_DANYCH"),
                    SYST_WYM_DANYCH = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Symbol systemu wymiany danych"),
                    CENNIK_I_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do cennika - inne drobnicowe - tab: CENNIKI"),
                    CENNIK_I = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa cennika - inne drobnicowe"),
                    SYMBOL_EX_3 = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Symbol klienta w systemie zewnetrznym 3"),
                    SP_WYLICZ_WAGI_OBL = table.Column<int>(type: "int", nullable: true, comment: "Flaga, jak wyliczać wagę obliczeniową dla przesyłek drobnicowych"),
                    REJON = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Rejon kraju"),
                    CENNIK_MARZA = table.Column<double>(type: "float", nullable: true, comment: "Wartosć marży dodawanej do ceny wyliczonej z cennika - dostawa drobnicowa"),
                    CENNIK_P_MARZA = table.Column<double>(type: "float", nullable: true, comment: "Wartosć marży dodawanej do ceny wyliczonej z cennika - podjęcie drobnicowe"),
                    CENNIK_I_MARZA = table.Column<double>(type: "float", nullable: true, comment: "Wartosć marży dodawanej do ceny wyliczonej z cennika - inne drobnicowe"),
                    UMOWA_NR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer umowy z kontrahentem"),
                    UMOWA_OD = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Ważność umowy od"),
                    UMOWA_DO = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Ważność umowy do"),
                    UMOWA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy jest umowa z kontrahentem"),
                    ZGODA_NA_WYST_FAKTUR = table.Column<int>(type: "int", nullable: true, comment: "Zgoda na wystawianie faktur w imieniu kontrahenta"),
                    DATA_WERYFIKACJI = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej weryfikacji"),
                    SCALAJ_ODCINKI = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy scalać odcinki na fakturach dla zlecenń FTL"),
                    DODATKI_PALIWOWE = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy dodawać dodatki paliwowe"),
                    MI_DR_LOK_NADZ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('1')", comment: "EI - Flaga, jak wczytywać lok. nazdorującą (0-z pliku, 1-z bieżącej, 2-inna)"),
                    MI_DR_LOK_NADZ_INNA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "EI - Inna lokalizacja nazdorująca"),
                    MI_DR_LOK_WEJ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('1')", comment: "EI - Flaga, jak wczytywać lok. wyjścia (0-z pliku, 1-z bieżącej, 2-inna)"),
                    MI_DR_LOK_WEJ_INNA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "EI - Inna lokalizacja wejścia"),
                    MI_DR_LOK_WYJ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('1')", comment: "EI - Flaga, jak wczytywać lok. wejścia (0-z pliku, 1-z bieżącej, 2-inna)"),
                    MI_DR_LOK_WYJ_INNA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "EI - Inna lokalizacja wyjścia"),
                    MI_DR_PRZELICZ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('1')", comment: "EI - Flaga, czy przeliczać przesyłkę po wczytaniu"),
                    WAZNOSC_KRS = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ważności KRS"),
                    MIEJSCA_ZA_WY_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do POI - tab: MIEJSCA_ZA_ROZLADUNKU"),
                    MI_ZLEC = table.Column<int>(type: "int", nullable: true, comment: "EI - Flaga, czy ustawić na sztywno zleceniodawcę na przesyłkach wczytywanych"),
                    MI_ZLECENIODAWCA_ID = table.Column<int>(type: "int", nullable: true, comment: "EI - Relacja do zlecenodawcy - tab: KONTRAHENCI"),
                    MI_ZLECENIODAWCA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "EI - Symbol zleceniodawcy"),
                    MI_DR_BEZ_TAB_LOK = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "EI - Flaga, czy przenosić tablice lokalizacji"),
                    MI_DR_NR_ZEWN = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "EI - Flaga, jak wczytywać nr zewnętrzny (0-nr źródłowy speed-a, 1-nr zlec. kl)"),
                    MI_DR_PARTNER = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('1')", comment: "EI - Flaga, jak wczytywać partnera (0-z pliku, 1-inny)"),
                    MI_DR_PARTNER_INNY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "EI - Relacja do innego partnera - tab: KONTRAHENCI"),
                    MI_DR_PARTNER_INNY_ID = table.Column<int>(type: "int", nullable: true, comment: "EI - Symbol innego partnera"),
                    MI_KONTROLA_DUPLIKATOW = table.Column<int>(type: "int", nullable: true, comment: "EI - Flaga, czy kontrolowaćduplikaty"),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kontrahenta powiazanego/nadrzędnego - tab: KONTRAHENCI"),
                    UWAGI_NA_ZLEC = table.Column<string>(type: "text", nullable: true, comment: "Uwagi drukowane na zleceniach"),
                    ZABLOKOWANY_DNIA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data/Godz zablokowania"),
                    ADRES_MAPA_WWW = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true, comment: "Adres www do mapy internetowej"),
                    LICENCJA_ZAGR_NR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer licencji zagr. przewoźnika"),
                    LICENCJA_ZAGR_WAZNOSC = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ważności licencji zagr. przewoźnika"),
                    LICENCJA_ZAGR_BLOKADA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy jest blokada licencji zagr. przewoźnika"),
                    BEZ_AKT_POI = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy wyłączyc aktualizacje POI-a automatycznego"),
                    TYP_TAB_K = table.Column<int>(type: "int", nullable: true, comment: "Sprzedaż - Typ tabeli: 0 - NBP, ..."),
                    TYP_TAB_P = table.Column<int>(type: "int", nullable: true, comment: "Zakup - Typ tabeli: 0 - NBP, ..."),
                    V_TYP_TAB_K = table.Column<int>(type: "int", nullable: true, comment: "Sprzedaż VAT - Typ tabeli: 0 - NBP, ..."),
                    V_TYP_TAB_P = table.Column<int>(type: "int", nullable: true, comment: "Zakup VAT- Typ tabeli: 0 - NBP, ..."),
                    CENNIK_K_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do cennika - koszty trasy - tab: CENNIKI_SQL"),
                    CENNIK_K = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa cennika - koszty trasy"),
                    WALUTA_ROZLICZEN_PROM = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Waluta rozliczeń z kontrahentem - promy"),
                    FORMA_PLATNOSCI_PROM = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Sprz. prom - Domyślna forma płatności"),
                    TERMIN_PLATNOSCI_PROM = table.Column<int>(type: "int", nullable: true, comment: "Sprz. prom - Domyślny termin płatności"),
                    TERMIN_PLATNOSCI_PROM_OD = table.Column<int>(type: "int", nullable: true, comment: "Sprz. prom - Sposób wyliczania daty płatności: 0-od daty wyst, 1-od daty sprzed"),
                    KURS_WG_PROM = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Sprzedaż promów - Wg jakiej daty dobierac kurs waluty"),
                    KURS_Z_DNIA_P_PROM = table.Column<int>(type: "int", nullable: true, comment: "Sprzedaż promów - Flaga, czy kurs z dnia poprzedzajacego"),
                    TYP_KURS_PROM = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "Sprzedaż promów - Typ kursy: SR,KU,SP"),
                    TYP_TAB_PROM = table.Column<int>(type: "int", nullable: true, comment: "Sprzedaż promów - Typ tabeli: 0 - NBP, ..."),
                    V_KURS_WG_PROM = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Sprzedaż promów VAT - Wg jakiej daty dobierac kurs waluty"),
                    V_KURS_Z_DNIA_P_PROM = table.Column<int>(type: "int", nullable: true, comment: "Sprzedaż promów VAT - Flaga, czy kurs z dnia poprzedzajacego"),
                    V_TYP_TAB_PROM = table.Column<int>(type: "int", nullable: true, comment: "Sprzedaż promów VAT - Typ tabeli: 0 - NBP, ..."),
                    V_TYP_KURS_PROM = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "Sprzedaż promów VAT - Typ kursy: SR,KU,SP"),
                    OSTRZ_OC = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy ostrzegac o końcu OC na X dni przed"),
                    OSTRZ_OC_DNI = table.Column<int>(type: "int", nullable: true, comment: "Ilość dni ostrzegania o końcu OC"),
                    OPIEKUN_HANDL_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do opiekuna handlowego klienta - tab: UZYTKOWNIK"),
                    OPIEKUN_HANDL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Symbol opiekuna handlowego klienta"),
                    E_FAKTURY = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy wysyłać eFaktury"),
                    CENNIK_KM_WG = table.Column<int>(type: "int", nullable: true, comment: "Licz cennik km wg km ładownych albo całkowitych"),
                    OS_FIZ_NPD = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy kontrahent jest osobą fizyczną nie prowadzącą działalności"),
                    CENNIK_PROM_K_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do cennika - koszty promu - tab: CENNIKI_SQL"),
                    CENNIK_PROM_K = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa cennika - koszty promu"),
                    CENNIK_PROM_P_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do cennika - sprzedaż promu - tab: CENNIKI_SQL"),
                    CENNIK_PROM_P = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa cennika - sprzedaż promu"),
                    SPEDYTOR_BEZ_FLOTY = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy przewoźnik nie ma włąsnej floty"),
                    DODATKI_PALIWOWE_DO_FR = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy dodawać dodatki paliwowe do frachtu"),
                    SUB_GENER = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga czy subkonto z generatora"),
                    SUBKONTO_MNEMONIC_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do definicji subkont - tab: SUBKONTO_MNEMONIC"),
                    TERMINARZ_DELTA = table.Column<int>(type: "int", nullable: true, comment: "Delta dla terminarza"),
                    TERMINARZ_DELTA_DOK = table.Column<int>(type: "int", nullable: true, comment: "Delta dla terminarza dla dokumentów"),
                    CENNIK_SP_P = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Nazwa cennika SQL - przychod"),
                    CENNIK_SP_K = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Nazwa cennika SQL - koszty"),
                    STD_STAWKA_UBEZP = table.Column<double>(type: "float", nullable: true, comment: "Standardowa stawka za ubezpoieczenie w promilach"),
                    WYSTAWIA_NASZE_FV = table.Column<int>(type: "int", nullable: true, comment: "Wystawianie faktur w naszym imieniu"),
                    E_FAKTURY_EMAIL = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true, comment: "Adres mailowy do eFaktur"),
                    DUPLIKATY_NIP = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy są duplikaty po NIP"),
                    DUPLIKATY_SYM = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy są duplikaty po SYMBOL-u"),
                    DUPLIKATY_NADRZ = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy nadrżedny dla duplikatów"),
                    UWAGI_DLA_DYSP = table.Column<string>(type: "text", nullable: true, comment: "Uwagi dla dyspozytora"),
                    RODZ_PRZEW_ID = table.Column<int>(type: "int", nullable: true, comment: "Rodzaj przewoźnika - relacja do tab. : RODZ_PRZEW"),
                    RODZ_PRZEW = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Rodzaj przewoźnika"),
                    ROZL_PRZEW_SP = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Nazwa procedury BD do tworzenia rozliczeń przewoźnika"),
                    ROZL_PRZEW_TYP = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Co jaki czas nastepuje auto rozl. przewoźnika"),
                    ROZL_PRZEW_CYKL = table.Column<int>(type: "int", nullable: true, comment: "Cykl, w jakim następuje auto rozl. przewoźnika"),
                    JEZYK = table.Column<int>(type: "int", nullable: true),
                    ESPEED = table.Column<int>(type: "int", nullable: true, comment: "Dostęp do e-SPEED"),
                    TERMIN_PLATNOSCI_OD_KMIE = table.Column<int>(type: "int", nullable: true, comment: "Sprzedaż - Sposób wyliczania daty płatności: od końca miesiąca wzgl daty z TERMIN_PLATNOSCI_OD"),
                    TERMIN_PLATNOSCI_DOST_OD_KMIE = table.Column<int>(type: "int", nullable: true, comment: "Zakup - Sposób wyliczania daty płatności: od końca miesiąca wzgl daty z TERMIN_PLATNOSCI_DOST_OD"),
                    TERMIN_PLATNOSCI_PROM_OD_KMIE = table.Column<int>(type: "int", nullable: true, comment: "Sprz. prom - Sposób wyliczania daty płatności: od końca miesiąca wzgl daty z TERMIN_PLATNOSCI_PROM_OD"),
                    LICENCJA_DATA_WYD = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data wydania licencji przewoźnika"),
                    LICENCJA_ZAGR_DATA_WYD = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data wydania licencji zagr. przewoźnika"),
                    JEZYK_KOMUNIKACJI = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Język komunikacji"),
                    STATUS = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Status kontrahenta"),
                    SLOT_1 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Status kontrahenta - SLOT 1"),
                    SLOT_2 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Status kontrahenta - SLOT 2"),
                    SLOT_3 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Status kontrahenta - SLOT 3"),
                    SLOT_4 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Status kontrahenta - SLOT 4"),
                    SLOT_5 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Status kontrahenta - SLOT 5"),
                    COD_ZGODA = table.Column<int>(type: "int", nullable: true, comment: "Zleceniodawca - COD - zgoda"),
                    COD_FORMA_PLATN = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Zleceniodawca - COD - forma zwrotu"),
                    COD_TERMIN = table.Column<int>(type: "int", nullable: true, comment: "Zleceniodawca - COD - terin zwrotu"),
                    OPAK_ZWR_ZGODA = table.Column<int>(type: "int", nullable: true, comment: "Zleceniodawca - Opak. zwrotne - zgoda"),
                    ADR_ZGODA = table.Column<int>(type: "int", nullable: true, comment: "Zleceniodawca - Opak. zwrotne - zgoda"),
                    VIP = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy VIP"),
                    SKONTO_P = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy przewoxnik posiada możliwosć SKONTA"),
                    PREFAKTURA_SP = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa procedury generującej PREIFAKTURA"),
                    PREFAKTURA_DELTA = table.Column<int>(type: "int", nullable: true, comment: "Co jaki okres ma być generowany PREFAKTURA"),
                    PREFAKTURA_PERIOD = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true, comment: "Typ okresu co jaki ma być generowany PREFAKTURA"),
                    PREFAKTURA_START = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Start PREFAKTURA od dnia/godz"),
                    WALUTA_ROZLICZEN_KOSZTY = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Waluta rozliczeń z kontrahentem - koszty"),
                    WALUTA_FRACHTU_KOSZTY = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Waluta w jakiej podawany jest fracht na zleceniach - koszty"),
                    ROD_SKAN = table.Column<int>(type: "int", nullable: true, comment: "ROD - jako skany"),
                    FAKTOR_NR = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Numer kontrahenta u faktora"),
                    FAKTOR = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Symbol kontrahenta-faktora"),
                    FAKTOR_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kontrahenta-faktora - tab: KONTRAHENCI"),
                    COD_ZGODA_P = table.Column<int>(type: "int", nullable: true, comment: "Przewoźnik - COD - zgoda"),
                    COD_LIMIT_NA_TRASE_P = table.Column<double>(type: "float", nullable: true, comment: "Przewoźnik - COD - limit w PLN"),
                    COD_ROZL_OKRESOWE_P = table.Column<int>(type: "int", nullable: true, comment: "Przewoźnik - COD - rozl. okresowe SID"),
                    COD_CZY_GODZ_ROZL_KIER_P = table.Column<int>(type: "int", nullable: true, comment: "Przewoźnik - COD - czy godz rozl kierowca po doreczeniu"),
                    COD_GODZ_ROZL_KIER_P = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Przewoźnik - COD - godz rozl kierowca po doreczeniu"),
                    COD_CZY_DNI_BLOK_NIEROZL_P = table.Column<int>(type: "int", nullable: true, comment: "Przewoźnik - COD - czy blok. po X dniach, gdy nierozl kier."),
                    COD_DNI_BLOK_NIEROZL_P = table.Column<int>(type: "int", nullable: true, comment: "Przewoźnik - COD - blok. po X dniach, gdy nierozl kier."),
                    COD_CZY_DNI_NOTA_NIEROZL_P = table.Column<int>(type: "int", nullable: true, comment: "Przewoźnik - COD - czy auto nota po X dniach, gdy nierozl kier."),
                    COD_DNI_NOTA_NIEROZL_P = table.Column<int>(type: "int", nullable: true, comment: "Przewoźnik - COD - auto nota po X dniach, gdy nierozl kier."),
                    DEMURRAGE = table.Column<int>(type: "int", nullable: true),
                    DETENTION = table.Column<int>(type: "int", nullable: true),
                    COD_DNI_ROZL_KIER_P = table.Column<int>(type: "int", nullable: true, comment: "Przewoźnik - COD - ilosć dni"),
                    WA_RABAT_TOW = table.Column<double>(type: "float", nullable: true, comment: "Warsztat - rabat na towary"),
                    WA_RABAT_USL = table.Column<double>(type: "float", nullable: true, comment: "Warsztat - rabat na usługi"),
                    DROBN_FAKT_ZB = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, jak fakturowac drobnicowe przesyłki zbiuorcze"),
                    USTALONE_MAX_PRZETERM = table.Column<double>(type: "float", nullable: true, comment: "Korekta - maksymalna ilość dni po terminie"),
                    USTALONE_MAX_PRZETERM_WAZNOSC = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ważności korekty max dni"),
                    LIC_DO_3_5_T = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy flota do 3.5 T"),
                    ODROCZONY_VAT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy odroczony VAT"),
                    ROD_SKAN_DOSTAWA = table.Column<int>(type: "int", nullable: true, comment: "ROD - jako skany - jak dostarczać"),
                    ROD_ZWROT_DO_ID = table.Column<int>(type: "int", nullable: true, comment: "ROD - do kogo zwrot"),
                    ROD_ZWROT_DO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "ROD - do kogo zwrot"),
                    ROD_SZUFLADA_ID = table.Column<int>(type: "int", nullable: true, comment: "ROD - oznaczenie szuflady na dokumenty"),
                    ROD_SZUFLADA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "ROD - oznaczenie szuflady na dokumenty"),
                    METODA_KASOWA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    STD_STAWKA_UBEZP_AIR = table.Column<double>(type: "float", nullable: true, comment: "Standardowa stawka za ubezpoieczenie w promilach - AIR"),
                    STD_STAWKA_UBEZP_SEA = table.Column<double>(type: "float", nullable: true, comment: "Standardowa stawka za ubezpoieczenie w promilach - SEA"),
                    UMOWA_NR_ZLEC = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer umowy z kontrahentem"),
                    UMOWA_OD_ZLEC = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Ważność umowy od"),
                    UMOWA_DO_ZLEC = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Ważność umowy do"),
                    UMOWA_ZLEC = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy jest umowa z kontrahentem"),
                    COD_MAX_KWOTA = table.Column<double>(type: "float", nullable: true, comment: "Zleceniodawca - COD - max COD"),
                    ROD_TYP_ZLECENIA = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "ROD - typ przesyłki zwrotnej"),
                    MIX_DD = table.Column<int>(type: "int", nullable: true),
                    POTENCJALNY = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    AIR_IATA_CODE = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    AIR_ACCOUNT_NO = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    AIR_IATA_CARRIER_CODE = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    AIR_AWB_PREFIX = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    SEA_SCAC_CODE = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    FORMA_PLATNOSCI_CLO = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Sprzedaż - Domyślna forma płatności"),
                    TERMIN_PLATNOSCI_CLO = table.Column<int>(type: "int", nullable: true, comment: "Sprzedaż - Domyślny termin płatności"),
                    TERMIN_PLATNOSCI_CLO_OD = table.Column<int>(type: "int", nullable: true, comment: "Sprzedaż - Sposób wyliczania daty płatności: 0-od daty wyst, 1-od daty sprzed"),
                    WWW_UBEZPIECZYCIELA = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true, comment: "Adres strony WWW ubezpieczyciela"),
                    OPIEKUN_REKLAM_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do odpowiedzialnego za realizację reklamacji"),
                    OPIEKUN_REKLAM = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Symbol odpowiedzialnego za realizację reklamacji"),
                    MI_VER = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('1')", comment: "EI - Wersja interfejsu"),
                    EMI_ORG_ID = table.Column<int>(type: "int", nullable: true),
                    KOMUNIKACJA_INFO = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true, comment: "Informacja z systemu wymiany danych"),
                    UBEZP_MIN_WART = table.Column<double>(type: "float", nullable: true, comment: "Ubezpieczyciel - min. wart ubezp."),
                    UBEZP_MIN_WART_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Ubezpieczyciel - min. wart ubezp. - waluta"),
                    VAT_W_PLN = table.Column<int>(type: "int", nullable: true),
                    VAT_W_PLN_KOSZTY = table.Column<int>(type: "int", nullable: true),
                    TERMINARZ_NMIES = table.Column<int>(type: "int", nullable: true),
                    TERMINARZ_NMIES_D = table.Column<int>(type: "int", nullable: true),
                    OPAK_ZWR_ZGODA_FTL = table.Column<int>(type: "int", nullable: true, comment: "Zleceniodawca - Opak. zwrotne - zgoda - FTL"),
                    BEZ_PROPAGACJI_POWIAD = table.Column<int>(type: "int", nullable: true),
                    POWIAT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    GMINA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DATA_WAZNOSCI_WERYFIKACJI = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ważności weryfikacji"),
                    ADR_ZGODA_P = table.Column<int>(type: "int", nullable: true, comment: "Przewoźnik - ADR - zgoda"),
                    KONTO_FK_3 = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Konto księgowe 3"),
                    SENT = table.Column<int>(type: "int", nullable: true, comment: "Zleceniodawca - SENT - zgoda"),
                    UMOWA_RODO = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy jest umowa RODO z kontrahentem"),
                    STATUS_EMISJA = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    WeightConversionId = table.Column<int>(type: "int", nullable: true),
                    SplitPayment = table.Column<int>(type: "int", nullable: true),
                    NumberOfLicense = table.Column<string>(type: "varchar(70)", unicode: false, maxLength: 70, nullable: true, comment: "Nr zezwolenia albo pozwolenia uprawniającego do obrotu produktami leczniczymi"),
                    AuthorityName = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true, comment: "Nazwa organu wydającego zezwolenie albo pozwolenie uprawniające do obrotu produktami leczniczymi"),
                    TERMIN_PLATNOSCI_DNI_ROB = table.Column<int>(type: "int", nullable: true, comment: "Sprzedaż - Sposób wyliczania daty płatności: wg dni roboczych"),
                    TERMIN_PLATNOSCI_DOST_DNI_ROB = table.Column<int>(type: "int", nullable: true, comment: "Zakup - Sposób wyliczania daty płatności: wg dni roboczych"),
                    TERMIN_PLATNOSCI_PROM_DNI_ROB = table.Column<int>(type: "int", nullable: true, comment: "Sprz. prom - Sposób wyliczania daty płatności: wg dni roboczych"),
                    MAX_DLUG_WAZNOSC = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ważności maksymalnego zadłużenia"),
                    ViesGusState = table.Column<int>(type: "int", nullable: true),
                    ViesGusStateDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    VetPermit = table.Column<int>(type: "int", nullable: true, comment: "Czy jest zezwolenie weterynaryjne"),
                    VetPermitAuthorityName = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true, comment: "Organ wystawiający zezwolenie weterynaryjne"),
                    VetPermitNumber = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Nr zezwolenia weterynaryjnego"),
                    SKONTO_DISABLED = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy SKONTO wyłączone"),
                    DATA_KONTR_WYKAZ_WL = table.Column<DateTime>(type: "datetime", nullable: true),
                    WYNIK_KONTR_WYKAZ_WL = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    REQUEST_ID = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    SEZONOWY = table.Column<int>(type: "int", nullable: true, comment: "Czy kontrahent sezonowy"),
                    SEZON_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do zdefiniowanego sezonu"),
                    SEZON = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Nazwa zdefiniowanego sezonu"),
                    MAX_DLUG_NA_ODDZIAL_WL = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy zadłuzenie definiujemy i liczymy per oddział własny"),
                    FAKTOR_BEZ_NOT = table.Column<int>(type: "int", nullable: true, comment: "Faktoring nie dotyczy not księgowych"),
                    BDO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Nr BDO - gospodarka odpadami"),
                    ViesGusRequestId = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    SR_WAGA_PAL = table.Column<double>(type: "float", nullable: true),
                    SR_ILOSC_PAL = table.Column<double>(type: "float", nullable: true),
                    BRANZA = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true),
                    TYP_USLUGI = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true),
                    EORI = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DisableETA = table.Column<int>(type: "int", nullable: true, comment: "Wyłączenie analizy ETA"),
                    UBEZPIECZYCIEL_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do ubezpieczyciela należności - tab: KONTRAHENCI"),
                    UBEZPIECZYCIEL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Symbol ubezpieczyciela należności")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KONTRAHENCI", x => x.ID_KONTRAH);
                },
                comment: "Rejestr kontrahentów");

            migrationBuilder.CreateTable(
                name: "KONTRAHENCI_BLOKADY",
                columns: table => new
                {
                    ID_KONTRAHENCI_BLOKADY = table.Column<int>(type: "int", nullable: false),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: false, comment: "Relacja do kontrahenta - tab: KONTRAHENCI"),
                    UZYTKOWNIK = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: false),
                    UZYTKOWNIK_ID = table.Column<int>(type: "int", nullable: false),
                    TYP = table.Column<int>(type: "int", nullable: false, comment: "1 - blokada, 0 - odblokowanie"),
                    CZAS_ZDARZENIA = table.Column<DateTime>(type: "datetime", nullable: false, comment: "Data/Godz zablokowania/odblokowania"),
                    POWOD = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KONTRAHENCI_BLOKADY", x => x.ID_KONTRAHENCI_BLOKADY);
                },
                comment: "Historia blokad kontrahentów");

            migrationBuilder.CreateTable(
                name: "KONTRAHENCI_CENNIKI",
                columns: table => new
                {
                    ID_KONTRAHENCI_CENNIKI = table.Column<int>(type: "int", nullable: false),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kontrahenta - tab: KONTRAHENCI"),
                    TYP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Typ cennika KM-kilometrowy, T - tonowy"),
                    DATA_OD = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ważności od"),
                    STAWKA = table.Column<double>(type: "float", nullable: true, comment: "Stawka")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KONTRAHENCI_CENNIKI", x => x.ID_KONTRAHENCI_CENNIKI);
                },
                comment: "Cenniki kontrahenta");

            migrationBuilder.CreateTable(
                name: "KONTRAHENCI_CENNIKI_DEF",
                columns: table => new
                {
                    ID_KONTRAHENCI_CENNIKI_DEF = table.Column<int>(type: "int", nullable: false),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kontrahenta - tab: KONTRAHENCI"),
                    TYP = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "Typ cennika [P]rzychów, [K]oszt"),
                    DOTYCZY = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "Dotyczy obiektów typu [P]przesyłki, [Z]zlecenia, [T]tasy, [PR]omy"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dotyczy lokalizacji lub *"),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dotyczy działu lub *"),
                    POZIOM = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true, comment: "[N]agłówek przesyłki, pozycja [K]alkulacji"),
                    KIERUNEK = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true, comment: "Kierunek [P]odjecia, [D]ostawy, [I]nne"),
                    MARZA = table.Column<double>(type: "float", nullable: true, comment: "Marża"),
                    CENNIK_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do cennika - dostawa drobnicowa - tab: CENNIKI lub CENNIKI_SQL"),
                    CENNIK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa cennika/procedury SQL"),
                    ODDZIAL = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true, comment: "Dotyczy oddziału klienta lub *"),
                    ODDZIAL_ID = table.Column<int>(type: "int", nullable: true, comment: "Oddział ID")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KONTRAHENCI_CENNIKI_DEF", x => x.ID_KONTRAHENCI_CENNIKI_DEF);
                },
                comment: "Definicje cenniki kontrahenta");

            migrationBuilder.CreateTable(
                name: "KONTRAHENCI_CRM",
                columns: table => new
                {
                    ID_KONTRAHENCI_CRM = table.Column<int>(type: "int", nullable: false),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: false, comment: "Relacja do kontrahenta - tab: KONTRAHENCI"),
                    KONT_UZYTKOWNIK_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika odpowiedzialnego - tab: UZYTKOWNIK"),
                    KONT_UZYTKOWNIK = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true, comment: "Symbol użytkownika odpowiedzialnego"),
                    KONT_DATA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data kontaktu"),
                    KONT_GODZ = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina kontaktu"),
                    KONT_OSOBA = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true, comment: "Z kim kontakt"),
                    KONT_CEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Cel kontaktu - słownik: TEKSTY_CRM"),
                    STATUS = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Status kontaktu"),
                    NAST_KONT_DATA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data następnego kontaktu"),
                    NAST_KONT_GODZ = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godz następnego kontaktu"),
                    NAST_KONT_OSOBA = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true, comment: "Z kim następny kontakt"),
                    NAST_KONT_CEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Cel następnego kontaktu"),
                    UWAGI = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Dowolne uwagi"),
                    OBJ_TYP = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "Typ obiektu, którego dotyczy kontakt"),
                    OBJ_ID = table.Column<int>(type: "int", nullable: true, comment: "Identyfikatro systemowy obiektu"),
                    OBJ_NR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer obiektu w systemie"),
                    TECZKA_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do teczki - tab: TECZKI"),
                    TECZKA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer teczki"),
                    KONT_FORMA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Forma kontaktu"),
                    KONT_EMAIL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Adres e-mail"),
                    KONT_TEL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Telefon"),
                    NAST_KONT_FORMA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Forma następnego kontaktu"),
                    NAST_KONT_EMAIL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Adres następnego kontaktu"),
                    NAST_KONT_TEL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Telefon następnego kontaktu"),
                    TRESC = table.Column<string>(type: "text", nullable: true, comment: "Treść wiadomości"),
                    NR_CRM = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Numer kontaktu"),
                    NR_CRM_KOLEJNY = table.Column<int>(type: "int", nullable: true, comment: "Numer kontaktu - nr kolejny"),
                    NR_CRM_MIES = table.Column<int>(type: "int", nullable: true, comment: "Numer kontaktu - miesiąc"),
                    NR_CRM_ROK = table.Column<int>(type: "int", nullable: true, comment: "Numer kontaktu - rok"),
                    KONT_STRONA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Kto zainicjował kontakt"),
                    KONTRAH_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Symbol kontrahenta"),
                    KONTRAH_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Nazwa kontrahenta"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja"),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dział"),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true, comment: "Ilość załączników"),
                    KONT_CZAS_TRWANIA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Czas trwania kontaktu"),
                    KONT_TYP = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Typ kontaktu"),
                    KONT_PODTYP = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Podtyp kontaktu"),
                    TRESC_DOD = table.Column<string>(type: "text", nullable: true, comment: "Treść wiadomości"),
                    KONTYNUACJA_CRM_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do poprzedniej wiadomosci CRM w wątku"),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    KONT_CEL_ID = table.Column<int>(type: "int", nullable: true),
                    NAST_KONT_CEL_ID = table.Column<int>(type: "int", nullable: true),
                    KONT_EMAIL_DW = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Adres e-mail DW"),
                    PRIORYTET = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Priorytet"),
                    TRESC_RTF = table.Column<string>(type: "text", nullable: true, comment: "Treść wiadomości RTF"),
                    TRESC_HTML = table.Column<string>(type: "text", nullable: true, comment: "Treść wiadomości HTML"),
                    STATUS_EMISJA = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "Status emisji"),
                    WATEK_CRM_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do pierwszej wiadomosci CRM w wątku")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KONTRAHENCI_CRM", x => x.ID_KONTRAHENCI_CRM);
                },
                comment: "Rejestr kontaktów z kontrahentem - CRM");

            migrationBuilder.CreateTable(
                name: "KONTRAHENCI_CYKLE_FV",
                columns: table => new
                {
                    ID_KONTRAHENCI_CYKLE_FV = table.Column<int>(type: "int", nullable: false),
                    NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    INTERWAL = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    PRZYROST = table.Column<int>(type: "int", nullable: true),
                    WIDOCZNY = table.Column<int>(type: "int", nullable: true),
                    SYMBOL = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    POCZATEK = table.Column<int>(type: "int", nullable: true),
                    OST_D_ROB = table.Column<int>(type: "int", nullable: true),
                    DictionaryId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TextId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KONTRAHENCI_CYKLE_FV", x => x.ID_KONTRAHENCI_CYKLE_FV);
                });

            migrationBuilder.CreateTable(
                name: "KONTRAHENCI_DOKUMENTY",
                columns: table => new
                {
                    ID_KONTRAHENCI_DOKUMENTY = table.Column<int>(type: "int", nullable: false),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kontrahenta - tab: KONTRAHENCI"),
                    LP = table.Column<int>(type: "int", nullable: true, comment: "Lp"),
                    KOD = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Kod dokumentu"),
                    OPIS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Opis"),
                    WYMAGANY = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy wymagany"),
                    GRUPA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Grupa dokumentu"),
                    STATUS = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Status dokumentu"),
                    ROD = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy ROD"),
                    ROD_DO = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Do kogo zwrot ROD"),
                    EROD = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy eROD"),
                    DOMYSLNY = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy domyślny")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KONTRAHENCI_DOKUMENTY", x => x.ID_KONTRAHENCI_DOKUMENTY);
                },
                comment: "Wymagane dokumenty do zleceń kontrahenta");

            migrationBuilder.CreateTable(
                name: "KONTRAHENCI_FINANSE",
                columns: table => new
                {
                    ID_KONTRAHENCI_FINANSE = table.Column<int>(type: "int", nullable: false),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Relacja do kontrahenta - tab: KONTRAHENCI"),
                    SYSTEMOWY = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Flaga, czy systemowy"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dotyczy lokalizacji lub *"),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dotyczy działu lub *"),
                    WALUTA_ROZLICZEN = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Waluta rozliczeń z kontrahentem"),
                    WALUTA_ROZLICZEN_KOSZTY = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Waluta rozliczeń z kontrahentem - koszty"),
                    WALUTA_ROZLICZEN_PROM = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Waluta rozliczeń z kontrahentem - promy"),
                    WALUTA_FRACHTU = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Waluta w jakiej podawany jest fracht na zleceniach"),
                    WALUTA_FRACHTU_KOSZTY = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Waluta w jakiej podawany jest fracht na zleceniach - koszty"),
                    FORMA_PLATNOSCI = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Sprzedaż - Domyślna forma płatności"),
                    TERMIN_PLATNOSCI = table.Column<int>(type: "int", nullable: true, comment: "Sprzedaż - Domyślny termin płatności"),
                    TERMIN_PLATNOSCI_OD = table.Column<int>(type: "int", nullable: true, comment: "Sprzedaż - Sposób wyliczania daty płatności: 0-od daty wyst, 1-od daty sprzed"),
                    TERMIN_PLATNOSCI_OD_KMIE = table.Column<int>(type: "int", nullable: true, comment: "Sprzedaż - Sposób wyliczania daty płatności: od końca miesiąca wzgl daty z TERMIN_PLATNOSCI_OD"),
                    FORMA_PLATNOSCI_DOST = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Zakup - Domyślna forma płatności"),
                    TERMIN_PLATNOSCI_DOST = table.Column<int>(type: "int", nullable: true, comment: "Zakup - Domyślny termin płatności"),
                    TERMIN_PLATNOSCI_DOST_OD = table.Column<int>(type: "int", nullable: true, comment: "Zakup - Sposób wyliczania daty płatności: 0-od daty wyst, 1-od daty sprzed"),
                    TERMIN_PLATNOSCI_DOST_OD_KMIE = table.Column<int>(type: "int", nullable: true, comment: "Zakup - Sposób wyliczania daty płatności: od końca miesiąca wzgl daty z TERMIN_PLATNOSCI_DOST_OD"),
                    FORMA_PLATNOSCI_PROM = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Sprz. prom - Domyślna forma płatności"),
                    TERMIN_PLATNOSCI_PROM = table.Column<int>(type: "int", nullable: true, comment: "Sprz. prom - Domyślny termin płatności"),
                    TERMIN_PLATNOSCI_PROM_OD = table.Column<int>(type: "int", nullable: true, comment: "Sprz. prom - Sposób wyliczania daty płatności: 0-od daty wyst, 1-od daty sprzed"),
                    TERMIN_PLATNOSCI_PROM_OD_KMIE = table.Column<int>(type: "int", nullable: true, comment: "Sprz. prom - Sposób wyliczania daty płatności: od końca miesiąca wzgl daty z TERMIN_PLATNOSCI_PROM_OD"),
                    KURS_WG = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Sprzedaż - Wg jakiej daty dobierac kurs waluty"),
                    KURS_Z_DNIA_P = table.Column<int>(type: "int", nullable: true, comment: "Sprzedaż - Flaga, czy kurs z dnia poprzedzajacego"),
                    TYP_KURS_K = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "Sprzedaż - Typ kursy: SR,KU,SP"),
                    TYP_TAB_K = table.Column<int>(type: "int", nullable: true, comment: "Sprzedaż - Typ tabeli: 0 - NBP, ..."),
                    KURS_WG_P = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Zakup - Wg jakiej daty dobierac kurs waluty"),
                    KURS_Z_DNIA_P_P = table.Column<int>(type: "int", nullable: true, comment: "Zakup - Flaga, czy kurs z dnia poprzedzajacego"),
                    TYP_KURS_P = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "Zakup - Typ kursy: SR,KU,SP"),
                    TYP_TAB_P = table.Column<int>(type: "int", nullable: true, comment: "Zakup - Typ tabeli: 0 - NBP, ..."),
                    KURS_WG_PROM = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Sprzedaż promów - Wg jakiej daty dobierac kurs waluty"),
                    KURS_Z_DNIA_P_PROM = table.Column<int>(type: "int", nullable: true, comment: "Sprzedaż promów - Flaga, czy kurs z dnia poprzedzajacego"),
                    TYP_KURS_PROM = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "Sprzedaż promów - Typ kursy: SR,KU,SP"),
                    TYP_TAB_PROM = table.Column<int>(type: "int", nullable: true, comment: "Sprzedaż promów - Typ tabeli: 0 - NBP, ..."),
                    V_KURS_WG = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Sprzedaż VAT - Wg jakiej daty dobierac kurs waluty"),
                    V_KURS_Z_DNIA_P = table.Column<int>(type: "int", nullable: true, comment: "Sprzedaż VAT - Flaga, czy kurs z dnia poprzedzajacego"),
                    V_TYP_TAB_K = table.Column<int>(type: "int", nullable: true, comment: "Sprzedaż VAT - Typ tabeli: 0 - NBP, ..."),
                    V_TYP_KURS_K = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "Sprzedaż VAT - Typ kursy: SR,KU,SP"),
                    V_KURS_WG_P = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Zakup VAT - Wg jakiej daty dobierac kurs waluty"),
                    V_KURS_Z_DNIA_P_P = table.Column<int>(type: "int", nullable: true, comment: "Zakup VAT - Flaga, czy kurs z dnia poprzedzajacego"),
                    V_TYP_KURS_P = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "Zakup VAT - Typ kursy: SR,KU,SP"),
                    V_TYP_TAB_P = table.Column<int>(type: "int", nullable: true, comment: "Zakup VAT- Typ tabeli: 0 - NBP, ..."),
                    V_KURS_WG_PROM = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Sprzedaż promów VAT - Wg jakiej daty dobierac kurs waluty"),
                    V_KURS_Z_DNIA_P_PROM = table.Column<int>(type: "int", nullable: true, comment: "Sprzedaż promów VAT - Flaga, czy kurs z dnia poprzedzajacego"),
                    V_TYP_TAB_PROM = table.Column<int>(type: "int", nullable: true, comment: "Sprzedaż promów VAT - Typ tabeli: 0 - NBP, ..."),
                    V_TYP_KURS_PROM = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "Sprzedaż promów VAT - Typ kursy: SR,KU,SP"),
                    METODA_KASOWA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    KONTO_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do domyślnego konta bankowego do faktur - tab: KONTRAHENCI_KONTA"),
                    KONTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer domyślnego konta bankowego do faktur"),
                    IBAN = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy numer domyślnego konta w formacie IBAN"),
                    SUB_GENER = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga czy subkonto z generatora"),
                    WYDRUK_ODEBRAL = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true, comment: "Osoba odbierająca wydruk faktury"),
                    L_ORG = table.Column<int>(type: "int", nullable: true, comment: "Domyślna liczba oryginałów faktur"),
                    L_KOP = table.Column<int>(type: "int", nullable: true, comment: "Domyślna liczba kopii faktur"),
                    PLATNIK_ODB_FV = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy płatnik jest odbiorcą faktury"),
                    PLATNIK_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do płatnika - tab: KONTRAHENCI"),
                    PLATNIK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Symbol płatnika"),
                    JEZYK_FAKTURY = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, defaultValueSql: "('PL')", comment: "Domyślny język dla wystawianych faktur"),
                    AUTOFV_START = table.Column<DateTime>(type: "datetime", nullable: true),
                    AUTOFV_STOP = table.Column<DateTime>(type: "datetime", nullable: true),
                    AUTOFV_LASTRUN = table.Column<DateTime>(type: "datetime", nullable: true),
                    KONTRAHENCI_ZASADY_FV_ID = table.Column<int>(type: "int", nullable: true),
                    KONTRAHENCI_CYKLE_FV_ID = table.Column<int>(type: "int", nullable: true),
                    ZABLOKOWANY = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy kontrahent jest zablokowany"),
                    DODATKI_PALIWOWE = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy dodawać dodatki paliwowe"),
                    DODATKI_PALIWOWE_DO_FR = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy dodawać dodatki paliwowe do frachtu"),
                    AUTOFV_ACTIVE = table.Column<int>(type: "int", nullable: true),
                    KONTRAHENCI_KRYTERIUM_FV_ID = table.Column<int>(type: "int", nullable: true),
                    FORMA_PLATNOSCI_CLO = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Sprzedaż - Domyślna forma płatności"),
                    TERMIN_PLATNOSCI_CLO = table.Column<int>(type: "int", nullable: true, comment: "Sprzedaż - Domyślny termin płatności"),
                    TERMIN_PLATNOSCI_CLO_OD = table.Column<int>(type: "int", nullable: true, comment: "Sprzedaż - Sposób wyliczania daty płatności: 0-od daty wyst, 1-od daty sprzed"),
                    SPEC_FV_ZA_WY = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy do spec. FV brac ZA/WY czy NAD/ODB"),
                    VAT_W_PLN = table.Column<int>(type: "int", nullable: true),
                    VAT_W_PLN_KOSZTY = table.Column<int>(type: "int", nullable: true),
                    AUTOFV_GETOLDER = table.Column<int>(type: "int", nullable: true),
                    AUTOFV_EMISJA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    AUTOFV_DATA_ROZL_DOK = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, dedyk dla RSL"),
                    LOKALIZACJA_ODP = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja odpowiedzialna lub *"),
                    SplitPayment = table.Column<int>(type: "int", nullable: true),
                    TERMIN_PLATNOSCI_DNI_ROB = table.Column<int>(type: "int", nullable: true, comment: "Sprzedaż - Sposób wyliczania daty płatności: wg dni roboczych"),
                    TERMIN_PLATNOSCI_DOST_DNI_ROB = table.Column<int>(type: "int", nullable: true, comment: "Zakup - Sposób wyliczania daty płatności: wg dni roboczych"),
                    TERMIN_PLATNOSCI_PROM_DNI_ROB = table.Column<int>(type: "int", nullable: true, comment: "Sprz. prom - Sposób wyliczania daty płatności: wg dni roboczych"),
                    DATA_KONTR_WYKAZ_WL = table.Column<DateTime>(type: "datetime", nullable: true),
                    WYNIK_KONTR_WYKAZ_WL = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    REQUEST_ID = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    KOD_IZBY_CELNEJ = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    SAM_PLACI_DLUG_CELNY = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy sam płaci dług celny")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KONTRAHENCI_FINANSE", x => x.ID_KONTRAHENCI_FINANSE);
                },
                comment: "Finanse kontrahenta w podziale na działy");

            migrationBuilder.CreateTable(
                name: "KONTRAHENCI_FORMATKI_CR",
                columns: table => new
                {
                    ID_KONTRAHENCI_FORMATKI_CR = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Relacja do kontrahenta - tab: KONTRAHENCI"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: false, defaultValueSql: "('')", comment: "Dotyczy lokalizacji lub *"),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: false, defaultValueSql: "('')", comment: "Dotyczy działu lub *"),
                    SYS_FORMATKA_CR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    IND_FORMATKA_CR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KONTRAHENCI_FORMATKI_CR", x => x.ID_KONTRAHENCI_FORMATKI_CR);
                },
                comment: "Ind formatki CR kontrahenta w podziale na działy");

            migrationBuilder.CreateTable(
                name: "KONTRAHENCI_FTP",
                columns: table => new
                {
                    ID_KONTRAHENCI_FTP = table.Column<int>(type: "int", nullable: false),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Relacja do kontrahenta - tab: KONTRAHENCI"),
                    SERWER = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: false, defaultValueSql: "('')", comment: "Adres serwera FTP"),
                    UZYTKOWNIK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: false, defaultValueSql: "('')", comment: "Użytkownik"),
                    HASLO = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: false, defaultValueSql: "('')", comment: "Hasło"),
                    PORT = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Port"),
                    DIR_IN = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Katalog do pobierania"),
                    DIR_OUT = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Katalog do wysyłania")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KONTRAHENCI_FTP", x => x.ID_KONTRAHENCI_FTP);
                },
                comment: "Definicje FTP dla kontrahentów");

            migrationBuilder.CreateTable(
                name: "KONTRAHENCI_GIELDY",
                columns: table => new
                {
                    ID_KONTRAHENCI_GIELDY = table.Column<int>(type: "int", nullable: false),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kontrahenta - tab: KONTRAHENCI"),
                    AKTYWNA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy zapis aktywny"),
                    GIELDA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Nazwa giełdy ładunków"),
                    LOGIN = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Login"),
                    OSOBA_KONT = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Osoba kontaktowa"),
                    UWAGI = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true, comment: "Dowolne uwagi"),
                    REPREZ_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do pracownika - tab: KONTRAHENCI_REPREZ")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KONTRAHENCI_GIELDY", x => x.ID_KONTRAHENCI_GIELDY);
                },
                comment: "Definicje dostępu do giełd ładunków kontrahenta");

            migrationBuilder.CreateTable(
                name: "KONTRAHENCI_GRUPY",
                columns: table => new
                {
                    ID_KONTRAHENCI_GRUPY = table.Column<int>(type: "int", nullable: false),
                    NAZWA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Nazwa grupy"),
                    FLAGA = table.Column<int>(type: "int", nullable: true, comment: "Ikonka"),
                    BLOKADA_ZLECEN = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy dana grupa ma blokadę na bycie zleceniodawcą"),
                    KTO_MOZE = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true, comment: "Kto ma prawo na tworzenie/edycję zleceń dla danej grupy - symbole użytkowników rozdzielane średnikiem"),
                    DOMYSLNA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy dana grupa jest domyślna"),
                    BLOKADA_PRZEWOZN = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy dana grupa ma blokadę na bycie przewoźnikiem"),
                    DictionaryId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TextId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KONTRAHENCI_GRUPY", x => x.ID_KONTRAHENCI_GRUPY);
                },
                comment: "Definicje grup kontrahentów");

            migrationBuilder.CreateTable(
                name: "KONTRAHENCI_KAT",
                columns: table => new
                {
                    ID_KONTRAHENCI_KAT = table.Column<int>(type: "int", nullable: false),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kontrahenta - tab: KONTRAHENCI"),
                    KAT_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kategorii - tab: KATEGORIE - TYP=KO"),
                    UWAGI = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true, comment: "Uwagi")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KONTRAHENCI_KAT", x => x.ID_KONTRAHENCI_KAT);
                },
                comment: "Przypisanie kontrahenta do kategorii");

            migrationBuilder.CreateTable(
                name: "KONTRAHENCI_KONTA",
                columns: table => new
                {
                    ID_KONTRAHENCI_KONTA = table.Column<int>(type: "int", nullable: false),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: false, comment: "Relacja do kontrahenta - tab: KONTRAHENCI"),
                    KRAJ_IBAN = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "Oznaczenie kraju dla formatu IBAN"),
                    KONTO = table.Column<string>(type: "varchar(36)", unicode: false, maxLength: 36, nullable: false, comment: "Numer rachunku"),
                    BANK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Bank w którym prowadzony jest rachunek"),
                    SWIFT_CODE = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Kod SWIFT - dla operacji miedzynarodowych"),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: false, comment: "Waluta rachunku"),
                    DOMYSLNE = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Flaga czy konto domyslne (dla waluty)"),
                    SUB_GENER = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga czy subkonto z generatora"),
                    SUB_GENER_KONTRAH_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kontrahenta dla któego wygenerowano to subkonto - tab: KONTRAHENCI"),
                    SUBKONTO_MNEMONIC_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do definicji subkont - tab: SUBKONTO_MNEMONIC"),
                    FAKTOR = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Symbol kontrahenta-faktora"),
                    FAKTOR_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kontrahenta-faktora - tab: KONTRAHENCI"),
                    COD = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga czy konto dla COD"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja"),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dział"),
                    AKTYWNE = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga czy konto aktywne"),
                    UWAGI = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true, comment: "Uwagi do konta"),
                    TYP = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Typ konta"),
                    KIEROWCA_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Relacja do kontrahenta - tab: KIEROWCY"),
                    DATA_KONTR_WYKAZ_WL = table.Column<DateTime>(type: "datetime", nullable: true),
                    WYNIK_KONTR_WYKAZ_WL = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    REQUEST_ID = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KONTRAHENCI_KONTA", x => x.ID_KONTRAHENCI_KONTA);
                },
                comment: "Numery kont bankowych kontrahentów");

            migrationBuilder.CreateTable(
                name: "KONTRAHENCI_KRYTERIUM_FV",
                columns: table => new
                {
                    ID_KONTRAHENCI_KRYTERIUM_FV = table.Column<int>(type: "int", nullable: false),
                    SYMBOL = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    WIDOCZNY = table.Column<int>(type: "int", nullable: true),
                    DictionaryId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TextId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KONTRAHENCI_KRYTERIUM_FV", x => x.ID_KONTRAHENCI_KRYTERIUM_FV);
                });

            migrationBuilder.CreateTable(
                name: "KONTRAHENCI_LICZNIKI",
                columns: table => new
                {
                    ID_KONTRAHENCI_LICZNIKI = table.Column<int>(type: "int", nullable: false),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kontrahenta - tab: KONTRAHENCI"),
                    PREFIX = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Prefix używany w formacie licznika"),
                    LICZNIK = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Licznik główny - używany, gdy LICZ_MIES = 0"),
                    ROK = table.Column<int>(type: "int", nullable: false, comment: "Rok licznika"),
                    MIESIAC = table.Column<int>(type: "int", nullable: true, comment: "Miesiąc licznika"),
                    POSTFIX = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Postfix używany w formacie licznika"),
                    FORMAT = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Format licznika"),
                    STALA_DLUG_LICZ = table.Column<short>(type: "smallint", nullable: true, comment: "Flaga, czy stała długość numeru licznika"),
                    ILOSC_CYFR = table.Column<short>(type: "smallint", nullable: true, comment: "Ilość cyfr, gdy stała długość - uzywane, gdy STALA_DLUG_LICZ = 1"),
                    LICZ_MIES = table.Column<short>(type: "smallint", nullable: false, defaultValueSql: "('0')", comment: "Flaga, czy licznik miesięczny"),
                    I = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Licznik dla miesiaca I - używany, gdy LICZ_MIES = 1"),
                    II = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Licznik dla miesiaca II - używany, gdy LICZ_MIES = 1"),
                    III = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Licznik dla miesiaca III - używany, gdy LICZ_MIES = 1"),
                    IV = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Licznik dla miesiaca IV - używany, gdy LICZ_MIES = 1"),
                    V = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Licznik dla miesiaca V - używany, gdy LICZ_MIES = 1"),
                    VI = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Licznik dla miesiaca VI - używany, gdy LICZ_MIES = 1"),
                    VII = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Licznik dla miesiaca VII - używany, gdy LICZ_MIES = 1"),
                    VIII = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Licznik dla miesiaca VIII - używany, gdy LICZ_MIES = 1"),
                    IX = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Licznik dla miesiaca IX - używany, gdy LICZ_MIES = 1"),
                    X = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Licznik dla miesiaca X - używany, gdy LICZ_MIES = 1"),
                    XI = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Licznik dla miesiaca XI - używany, gdy LICZ_MIES = 1"),
                    XII = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Licznik dla miesiaca XII - używany, gdy LICZ_MIES = 1")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KONTRAHENCI_LICZNIKI", x => x.ID_KONTRAHENCI_LICZNIKI);
                },
                comment: "Liczniki indywidualne dla kontrahenta");

            migrationBuilder.CreateTable(
                name: "KONTRAHENCI_MAX_DLUG",
                columns: table => new
                {
                    ID_KONTRAHENCI_MAX_DLUG = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Relacja do kontrahenta - tab: KONTRAHENCI"),
                    ODDZIAL_WLASNY_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Relacja do kontrahenta - tab: KONTRAHENCI"),
                    MAX_DLUG = table.Column<double>(type: "float", nullable: true, comment: "Kwota maksymalnego zadłużenia przeteminowanego klienta"),
                    MAX_DLUG_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Waluta maksymalnego zadłużenia przeteminowanego klienta"),
                    MAX_DLUG_CALK = table.Column<double>(type: "float", nullable: true, comment: "Kwota maksymalnego zadłużenia całkowitego klienta"),
                    MAX_DLUG_CALK_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Waluta maksymalnego zadłużenia całkowitego klienta"),
                    MAX_PRZETERM = table.Column<double>(type: "float", nullable: true, comment: "Maksymalna ilość dni po terminie"),
                    MAX_DLUG_ZLEC = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy liczyć zadłużenie również z niezafakturowanych zleceń"),
                    MAX_DLUG_WAZNOSC = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ważności maksymalnego zadłużenia"),
                    USTALONA_WPLATA = table.Column<double>(type: "float", nullable: true, comment: "Kwota ustalonej wpłaty"),
                    USTALONA_WPLATA_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Waluta ustalonej wpłaty"),
                    USTALONA_WPLATA_WAZNOSC = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ważności ustalonej wpłaty"),
                    USTALONE_MAX_PRZETERM = table.Column<double>(type: "float", nullable: true, comment: "Korekta - maksymalna ilość dni po terminie"),
                    USTALONE_MAX_PRZETERM_WAZNOSC = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ważności korekty max dni")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KONTRAHENCI_MAX_DLUG", x => x.ID_KONTRAHENCI_MAX_DLUG);
                });

            migrationBuilder.CreateTable(
                name: "KONTRAHENCI_MIEJSCA",
                columns: table => new
                {
                    ID_KONTRAHENCI_MIEJSCA = table.Column<int>(type: "int", nullable: false),
                    OPIS = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ADRESY_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    RODZAJ = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    ADRES = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    GMINA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    STREFA = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    SORT_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KONTRAHENCI_MIEJSCA", x => x.ID_KONTRAHENCI_MIEJSCA);
                });

            migrationBuilder.CreateTable(
                name: "KONTRAHENCI_ODDZIALY",
                columns: table => new
                {
                    ID_KONTRAHENCI_ODDZIALY = table.Column<int>(type: "int", nullable: false),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: false, comment: "Relacja do kontrahenta - tab: KONTRAHENCI"),
                    NAZWA = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: false, comment: "Nazwa oddziału"),
                    ADRES = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true, comment: "Adres"),
                    TEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer telefonu"),
                    FAX = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer faksu"),
                    EMAIL = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true, comment: "Adres e-mail"),
                    OSOBA = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true, comment: "Osoba kontaktowa"),
                    GEO_LONGI = table.Column<double>(type: "float", nullable: true, comment: "GPS - długość"),
                    GEO_LAT = table.Column<double>(type: "float", nullable: true, comment: "GPS - szerokość"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja"),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dział"),
                    KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Kod pocztowy"),
                    MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Miejscowość"),
                    KRAJ = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "Kraj"),
                    MAILING = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy wysyłać wiadomości mailingowe"),
                    KONTO_FK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Konto księgowe 1"),
                    MIEJSCA_ZA_ROZLADUNKU_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do POI - tab: MIEJSCA_ZA_ROZLADUNKU"),
                    OPIS_DOD = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KONTRAHENCI_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kontrahenta powiązanego - tab: KONTRAHENCI"),
                    TYP_POWIAZANIA = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Typ powiązania"),
                    SYMBOL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Nazwa oddziału"),
                    E_FAKTURY = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy wysyłać eFaktury"),
                    E_FAKTURY_EMAIL = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true, comment: "Adres mailowy do eFaktur"),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    NAZWA_K = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Adr. koresp. - Nazwa"),
                    ADRES_K = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Adr. koresp. - Adres (ulica i numery)"),
                    MIASTO_K = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Adr. koresp. - Miejscowość"),
                    KOD_K = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Adr. koresp. - Kod pocztowy"),
                    KRAJ_K = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: true, comment: "Adr. koresp. - Kraj"),
                    DUPLIKATY_SYM = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy są duplikaty po SYMBOL-u"),
                    DUPLIKATY_NADRZ = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy nadrżedny dla duplikatów")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KONTRAHENCI_ODDZIALY", x => x.ID_KONTRAHENCI_ODDZIALY);
                },
                comment: "Dane oddziałów kontrahenta");

            migrationBuilder.CreateTable(
                name: "KONTRAHENCI_OPAK",
                columns: table => new
                {
                    ID_KONTRAHENCI_OPAK = table.Column<int>(type: "int", nullable: false),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Relacja do kontrahenta - tab: KONTRAHENCI"),
                    OPAKOWANIA_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Relacja do opakowania - tab: OPAKOWANIA"),
                    ZWROTNE = table.Column<int>(type: "int", nullable: true, comment: "Zwrotne"),
                    WYMAGANE = table.Column<int>(type: "int", nullable: true, comment: "Wymagane"),
                    DL_MIN = table.Column<double>(type: "float", nullable: true),
                    DL_MAX = table.Column<double>(type: "float", nullable: true),
                    DL_DEF = table.Column<double>(type: "float", nullable: true),
                    SZ_MIN = table.Column<double>(type: "float", nullable: true),
                    SZ_MAX = table.Column<double>(type: "float", nullable: true),
                    SZ_DEF = table.Column<double>(type: "float", nullable: true),
                    WY_MIN = table.Column<double>(type: "float", nullable: true),
                    WY_MAX = table.Column<double>(type: "float", nullable: true),
                    WY_DEF = table.Column<double>(type: "float", nullable: true),
                    WAGA_MIN = table.Column<double>(type: "float", nullable: true),
                    WAGA_MAX = table.Column<double>(type: "float", nullable: true),
                    WAGA_DEF = table.Column<double>(type: "float", nullable: true),
                    OBJ_MIN = table.Column<double>(type: "float", nullable: true),
                    OBJ_MAX = table.Column<double>(type: "float", nullable: true),
                    OBJ_DEF = table.Column<double>(type: "float", nullable: true),
                    MPAL_MIN = table.Column<double>(type: "float", nullable: true),
                    MPAL_MAX = table.Column<double>(type: "float", nullable: true),
                    MPAL_DEF = table.Column<double>(type: "float", nullable: true),
                    GRUPA_CEN = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DATA_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    OPIS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    DZIALY = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    PRODUKTY = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KONTRAHENCI_OPAK", x => x.ID_KONTRAHENCI_OPAK);
                });

            migrationBuilder.CreateTable(
                name: "KONTRAHENCI_OPIEK",
                columns: table => new
                {
                    ID_KONTRAHENCI_OPIEK = table.Column<int>(type: "int", nullable: false),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kontrahenta - tab: KONTRAHENCI"),
                    KIND = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Typ opiekuna OH, OB"),
                    USER_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do opiekuna - tab: UZYTKOWNICY"),
                    REPTYPE_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do typu - tab: KONTRAH_TYP_REPREZ"),
                    DEF = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy domyślny"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dotyczy lokalizacji"),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dotyczy działu"),
                    REJON = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Rejon"),
                    KOD = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Kod"),
                    DtFrom = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data od"),
                    DtTo = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data do")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KONTRAHENCI_OPIEK", x => x.ID_KONTRAHENCI_OPIEK);
                },
                comment: "Przypisanie kontrahenta do opiekunów");

            migrationBuilder.CreateTable(
                name: "KONTRAHENCI_POD",
                columns: table => new
                {
                    ID_KONTRAHENCI_POD = table.Column<int>(type: "int", nullable: false),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    USE_EMAIL = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    USE_FTP = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    EMAIL_ADDRESS = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    EMAIL_SUBJECT = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    EMAIL_BODY = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true),
                    FTP_HOST = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FTP_USER = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FTP_PASS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FTP_DIR_IN = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FTP_DIR_OUT = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FTP_PORT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('21')"),
                    GDY_ZLECENIODAWCA = table.Column<short>(type: "smallint", nullable: true),
                    GDY_NADAWCA = table.Column<short>(type: "smallint", nullable: true),
                    GDY_ODBIORCA = table.Column<short>(type: "smallint", nullable: true),
                    GDY_PARTNER = table.Column<short>(type: "smallint", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KONTRAHENCI_POD", x => x.ID_KONTRAHENCI_POD);
                },
                comment: "Tabela do obsługi mechanizmu wysyłania załączników");

            migrationBuilder.CreateTable(
                name: "KONTRAHENCI_POLISY_OC",
                columns: table => new
                {
                    ID_KONTRAHENCI_POLISY_OC = table.Column<int>(type: "int", nullable: false),
                    TYP = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Typ polisy OC (OCP/OCS itd)"),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kontrahenta - tab: KONTRAHENCI"),
                    NR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer polisy ubezpieczenia przewoźnika"),
                    UBEZP = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Ubezpieczyciel"),
                    UBEZP_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do ubezpieczyciela - tab: KONTRAHENCI"),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ważnosci ubezpieczenia OC przewoźnika"),
                    WARTOSC = table.Column<double>(type: "float", nullable: true, comment: "Wartość ubezpieczenia OC przewoźnika"),
                    WARTOSC_WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Waluta wartości ubezpieczenia OC przewoźnika"),
                    DATA_BLOKADA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy jest blokada ubezpieczenia OC spedytora"),
                    KRAJ_ZAGR = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy ubezpieczenie OC przewoźnika obejmuje kraj czy zagranice"),
                    UWAGI = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true, comment: "Uwagi do ubezpieczenia OC przewoźnika"),
                    POLISA_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do polisy - tab: POLISY"),
                    KRAJE = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true, comment: "Dla jakich krajów ważna"),
                    KRAJE_BLOKADA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy jest blokada gdy kraj spoza listy")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KONTRAHENCI_POLISY_OC", x => x.ID_KONTRAHENCI_POLISY_OC);
                },
                comment: "Definicje polis ubezp. OC kontrahenta");

            migrationBuilder.CreateTable(
                name: "KONTRAHENCI_POWIAZANI",
                columns: table => new
                {
                    ID_KONTRAHENCI_POWIAZANI = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    KONTRAH1_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Relacja do kontrahenta - tab: KONTRAHENCI"),
                    KONTRAH2_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Relacja do kontrahenta - tab: KONTRAHENCI")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KONTRAHENCI_POWIAZANI", x => x.ID_KONTRAHENCI_POWIAZANI);
                },
                comment: "Powiazania kontrahentów pomiędzy sobą (JPK_VAT");

            migrationBuilder.CreateTable(
                name: "KONTRAHENCI_PRZELICZNIKI",
                columns: table => new
                {
                    ID_KONTRAHENCI_PRZELICZNIKI = table.Column<int>(type: "int", nullable: false),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kontrahenta - tab: KONTRAHENCI"),
                    WARTOSC_Z = table.Column<int>(type: "int", nullable: true, comment: "Z jakiej wartości"),
                    JM_Z = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Z jakiej jednostki miary"),
                    WARTOSC_DO = table.Column<int>(type: "int", nullable: true, comment: "Do jakiej wartości"),
                    JM_DO = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Do jakiej jednostki miary"),
                    JT = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KONTRAHENCI_PRZELICZNIKI", x => x.ID_KONTRAHENCI_PRZELICZNIKI);
                },
                comment: "Definicje przeliczników wartości dla kontrahenta");

            migrationBuilder.CreateTable(
                name: "KONTRAHENCI_REPREZ",
                columns: table => new
                {
                    ID_KONTRAHENCI_REPREZ = table.Column<int>(type: "int", nullable: false),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: false, comment: "Relacja do kontrahenta - tab: KONTRAHENCI"),
                    NAZWISKO_IMIE = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: false, comment: "Nazwisko i imię"),
                    STANOWISKO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Stanowisko"),
                    TEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Telefon"),
                    TEL_KOM = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Telefon komórkowy"),
                    EMAIL = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true, comment: "E-mail"),
                    FAX = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Faks"),
                    GRUPA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Grupa"),
                    GG = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Numer Gadu-Gadu"),
                    SKYPE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer SKYPE"),
                    OPIS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Dowolne uwagi"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja"),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dział"),
                    MAILING = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy wysyłać wiadomości mailingowe"),
                    ODDZIAL = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true, comment: "Nazwa oddziału"),
                    AKTYWNY = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy pracownik aktywny"),
                    GIELDA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Link do giełdy"),
                    EROD = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy eROD"),
                    POWIADOMIENIE = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy brać do powiadomienia"),
                    PRODUKT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Produkt"),
                    TYTUL = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Tytuł"),
                    ODDZIAL_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do oddziału"),
                    STATUS_EMISJA = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true, comment: "Liczba załączników")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KONTRAHENCI_REPREZ", x => x.ID_KONTRAHENCI_REPREZ);
                },
                comment: "Dane reprezentantów/pracowników kontrahenta");

            migrationBuilder.CreateTable(
                name: "KONTRAHENCI_REPREZ_ZGODY",
                columns: table => new
                {
                    ID_KONTRAHENCI_REPREZ_ZGODY = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    KONTRAH_REPREZ_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Relacja do pracownika - tab: KONTRAHENCI_REPREZ"),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kontrahenta - tab: KONTRAHENCI"),
                    ZGODA_TYP_ID = table.Column<int>(type: "int", nullable: true),
                    JEST = table.Column<int>(type: "int", nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    GDPR_SOURCE_ID = table.Column<int>(type: "int", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KONTRAHENCI_REPREZ_ZGODY", x => x.ID_KONTRAHENCI_REPREZ_ZGODY);
                },
                comment: "Zgody marketingowe na PRACOWNIKACH");

            migrationBuilder.CreateTable(
                name: "KONTRAHENCI_SKONTO",
                columns: table => new
                {
                    ID_KONTRAHENCI_SKONTO = table.Column<int>(type: "int", nullable: false),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: false, comment: "Relacja do kontrahenta - tab: KONTRAHENCI"),
                    DEF = table.Column<int>(type: "int", nullable: false, comment: "Czy skonto domyślne"),
                    TERMIN = table.Column<int>(type: "int", nullable: false, comment: "Termin płatności"),
                    SKONTO = table.Column<double>(type: "float", nullable: false, comment: "% wartosć SKONTA")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KONTRAHENCI_SKONTO", x => x.ID_KONTRAHENCI_SKONTO);
                },
                comment: "Definicje SKONTA dla kontrahentów");

            migrationBuilder.CreateTable(
                name: "KONTRAHENCI_TABOR",
                columns: table => new
                {
                    ID_KONTRAHENCI_TABOR = table.Column<int>(type: "int", nullable: false),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kontrahenta - tab: KONTRAHENCI"),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do pojazdu - tab: TABOR")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KONTRAHENCI_TABOR", x => x.ID_KONTRAHENCI_TABOR);
                },
                comment: "Przypisanie kontrahenta do pojazdów");

            migrationBuilder.CreateTable(
                name: "KONTRAHENCI_UDZIALY",
                columns: table => new
                {
                    ID_KONTRAHENCI_UDZIALY = table.Column<int>(type: "int", nullable: false),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kontrahenta - tab: KONTRAHENCI"),
                    DOTYCZY = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "Dotyczy obiektów typu [P]przesyłki, [Z]zlecenia, [T]tasy, [PR]omy"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dotyczy lokalizacji lub *"),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dotyczy działu lub *"),
                    ODDZIAL = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true, comment: "Dotyczy oddziału klienta lub *"),
                    ODDZIAL_ID = table.Column<int>(type: "int", nullable: true, comment: "Oddział ID"),
                    UDZIAL = table.Column<double>(type: "float", nullable: true, comment: "Udział w ogólnych przewozach w %"),
                    OKRES = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Okres")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KONTRAHENCI_UDZIALY", x => x.ID_KONTRAHENCI_UDZIALY);
                },
                comment: "Definicje udziałów kontrahenta");

            migrationBuilder.CreateTable(
                name: "KONTRAHENCI_WALUTY",
                columns: table => new
                {
                    ID_KONTRAHENCI_WALUTY = table.Column<int>(type: "int", nullable: false),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: false, comment: "Relacja do kontrahenta - tab: KONTRAHENCI"),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: false, comment: "Kod waluty"),
                    TYP = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true, comment: "Typ P - przychód, K - koszt"),
                    KONTO_FK = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Konto FK"),
                    TERMIN_PLATNOSCI = table.Column<int>(type: "int", nullable: true, comment: "Termin płatności dla waluty"),
                    STATUS = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Status dla waluty"),
                    LIMIT_KRED = table.Column<double>(type: "float", nullable: true, comment: "Limit kredytu dla waluty"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dotyczy lokalizacji lub *"),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dotyczy działu lub *")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KONTRAHENCI_WALUTY", x => x.ID_KONTRAHENCI_WALUTY);
                },
                comment: "Dozwolone waluty dla kontrahenta");

            migrationBuilder.CreateTable(
                name: "KONTRAHENCI_WWW",
                columns: table => new
                {
                    ID_KONTRAHENCI_WWW = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    KLIENT_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Relacja do kontrahenta - tab: KONTRAHENCI"),
                    SYMBOL = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    NAZWA = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    ULICA = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    NR_DOM = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_LOK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    MIEJSCOWOSC = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    KOD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KRAJ = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OSOBA_KONTAKTOWA = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    TELEFON = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    EMAIL = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KONTRAHENCI_WWW", x => x.ID_KONTRAHENCI_WWW);
                },
                comment: "*kontrahenci dla e-speed*");

            migrationBuilder.CreateTable(
                name: "KONTRAHENCI_ZALACZNIKI",
                columns: table => new
                {
                    ID_KONTRAHENCI_ZALACZNIKI = table.Column<int>(type: "int", nullable: false),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: false, comment: "*pole nie używane*"),
                    RODZAJ = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "*pole nie używane*"),
                    OPIS_PLIKU = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true, comment: "*pole nie używane*"),
                    NAZWA_PLIKU = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true, comment: "*pole nie używane*"),
                    TYP_PLIKU = table.Column<int>(type: "int", nullable: true, comment: "*pole nie używane*"),
                    PLIK = table.Column<byte[]>(type: "image", nullable: true, comment: "*pole nie używane*"),
                    DATA_WPROWADZENIA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "*pole nie używane*"),
                    USER_ID = table.Column<int>(type: "int", nullable: true, comment: "*pole nie używane*"),
                    USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "*pole nie używane*")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KONTRAHENCI_ZALACZNIKI", x => x.ID_KONTRAHENCI_ZALACZNIKI);
                },
                comment: "*tabela nie używana*");

            migrationBuilder.CreateTable(
                name: "KONTRAHENCI_ZASADY_FV",
                columns: table => new
                {
                    ID_KONTRAHENCI_ZASADY_FV = table.Column<int>(type: "int", nullable: false),
                    NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ZBIORCZA = table.Column<int>(type: "int", nullable: true),
                    WIDOCZNY = table.Column<int>(type: "int", nullable: true),
                    SYMBOL = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    GRUPOWANIE_ZB = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    FORMATKA_CR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    FORMATKA_KOR_CR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    FORMATKA_NOTA_CR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    FORMATKA_NOTA_KOR_CR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DictionaryId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TextId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KONTRAHENCI_ZASADY_FV", x => x.ID_KONTRAHENCI_ZASADY_FV);
                });

            migrationBuilder.CreateTable(
                name: "KOR_MAG",
                columns: table => new
                {
                    ID_KOR_MAG = table.Column<int>(type: "int", nullable: false),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    W_MAG_PRZYJECIA_ID = table.Column<int>(type: "int", nullable: true),
                    W_MAG_PRZYJECIA_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    W_MAG_WYDANIA_ID = table.Column<int>(type: "int", nullable: true),
                    W_MAG_WYDANIA_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    W_ZLECENIA_ID = table.Column<int>(type: "int", nullable: true),
                    W_ZLECENIA_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    FAKTURY_ID = table.Column<int>(type: "int", nullable: true),
                    FAKTURY_POZYCJE_ID = table.Column<int>(type: "int", nullable: true),
                    PZ_ZAMKNIETE = table.Column<int>(type: "int", nullable: true),
                    WZ_ZAMKNIETE = table.Column<int>(type: "int", nullable: true),
                    W_MAG_TOWARY_ID = table.Column<int>(type: "int", nullable: true),
                    ILOSC = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KOR_MAG", x => x.ID_KOR_MAG);
                });

            migrationBuilder.CreateTable(
                name: "KOR_MAG_F",
                columns: table => new
                {
                    FAKTURY_ID = table.Column<int>(type: "int", nullable: true),
                    FAKTURY_POZYCJE_ID = table.Column<int>(type: "int", nullable: true),
                    W_MAG_TOWARY_ID = table.Column<int>(type: "int", nullable: true),
                    ILOSC = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "KOR_MAG_F_PZ",
                columns: table => new
                {
                    W_MAG_PRZYJECIA_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    W_MAG_TOWARY_ID = table.Column<int>(type: "int", nullable: true),
                    FAKTURY_ID = table.Column<int>(type: "int", nullable: true),
                    FAKTURY_POZYCJE_ID = table.Column<int>(type: "int", nullable: true),
                    WYDANO = table.Column<double>(type: "float", nullable: true),
                    REZERWACJE = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "KOR_MAG_PZ",
                columns: table => new
                {
                    ID_KOR_MAG_PZ = table.Column<int>(type: "int", nullable: false),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    W_MAG_PRZYJECIA_ID = table.Column<int>(type: "int", nullable: true),
                    W_MAG_PRZYJECIA_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    W_MAG_TOWARY_ID = table.Column<int>(type: "int", nullable: true),
                    ILOSC_P = table.Column<double>(type: "float", nullable: true),
                    ILOSC = table.Column<double>(type: "float", nullable: true),
                    PRZELICZNIK = table.Column<double>(type: "float", nullable: true),
                    KOREKTA_ILOSC_P = table.Column<double>(type: "float", nullable: true),
                    KOREKTA_ILOSC = table.Column<double>(type: "float", nullable: true),
                    WYDANO = table.Column<double>(type: "float", nullable: true),
                    REZERWACJE = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KOR_MAG_PZ", x => x.ID_KOR_MAG_PZ);
                });

            migrationBuilder.CreateTable(
                name: "KOR_MAG_WZ_PZ",
                columns: table => new
                {
                    W_MAG_PRZYJECIA_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    W_MAG_TOWARY_ID = table.Column<int>(type: "int", nullable: true),
                    W_MAG_WYDANIA_ID = table.Column<int>(type: "int", nullable: true),
                    W_MAG_WYDANIA_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    WYDANO = table.Column<double>(type: "float", nullable: true),
                    REZERWACJE = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "KRAJE",
                columns: table => new
                {
                    SYMBOL = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: false),
                    SYMBOL_DROGOWY = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Symbol drogowy np. A, D, PL, B etc"),
                    WALUTA_KRAJU = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Waluta danego kraju"),
                    NAZWA_POL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa kraju PL"),
                    NAZWA_ENG = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa kraju EN"),
                    NAZWA_ROOT = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa kraju w języku danego kraju"),
                    DIETA = table.Column<double>(type: "float", nullable: true, comment: "Stawka diety"),
                    NOCLEG_R = table.Column<double>(type: "float", nullable: true, comment: "Ryczałt na nocleg"),
                    WALUTA_D = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Waluta dla diety"),
                    WALUTA_N = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Waluta dla noclegu"),
                    EU = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy kraj europejski"),
                    UE = table.Column<int>(type: "int", nullable: true, comment: "Flaga, cz kraj jest w unii europejskiej"),
                    GRUPA_KRAJOW = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Grupa krajów"),
                    ZMIANA_DIET = table.Column<double>(type: "float", nullable: true, comment: "Dodatek do diety"),
                    TEL_KIERUNKOWY = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Telefon kierunkowy"),
                    AKTYWNY = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy kraj jest aktywny"),
                    WERYF_KODOW = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy weryfikowac kody pocztowe"),
                    DEF_ST_VAT = table.Column<double>(type: "float", nullable: true, comment: "Domyślna stawka VAT dla kraju"),
                    WWW = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy kraj dostępny dla systemu WWW"),
                    KOD_ISO = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Kod kraju wg ISO"),
                    KOR_GODZ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Korekta czasu +/- godz"),
                    WNP = table.Column<int>(type: "int", nullable: true, comment: "Flaga, cz kraj po byłym WNP"),
                    KOSZTY_WALUTOWE = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy koszty walutowe"),
                    IMP_USLUG = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy import usług"),
                    BRAK_NIP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy brak NIPu"),
                    KOD_ISO_3 = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Kod kraju wg ISO 3"),
                    POMIN_NA_MAPIE = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy pomijac na mapie"),
                    IconId = table.Column<int>(type: "int", nullable: true),
                    TrafficLimitHoliday = table.Column<int>(type: "int", nullable: true),
                    TrafficLimitHolidayFrom = table.Column<DateTime>(type: "datetime", nullable: true),
                    TrafficLimitHolidayTo = table.Column<DateTime>(type: "datetime", nullable: true),
                    TrafficLimitSun = table.Column<int>(type: "int", nullable: true),
                    TrafficLimitSunFrom = table.Column<DateTime>(type: "datetime", nullable: true),
                    TrafficLimitSunTo = table.Column<DateTime>(type: "datetime", nullable: true),
                    TrafficLimitSat = table.Column<int>(type: "int", nullable: true),
                    TrafficLimitSatFrom = table.Column<DateTime>(type: "datetime", nullable: true),
                    TrafficLimitSatTo = table.Column<DateTime>(type: "datetime", nullable: true),
                    TrafficLimitFri = table.Column<int>(type: "int", nullable: true),
                    TrafficLimitFriFrom = table.Column<DateTime>(type: "datetime", nullable: true),
                    TrafficLimitFriTo = table.Column<DateTime>(type: "datetime", nullable: true),
                    TrafficLimitThu = table.Column<int>(type: "int", nullable: true),
                    TrafficLimitThuFrom = table.Column<DateTime>(type: "datetime", nullable: true),
                    TrafficLimitThuTo = table.Column<DateTime>(type: "datetime", nullable: true),
                    TrafficLimitWed = table.Column<int>(type: "int", nullable: true),
                    TrafficLimitWedFrom = table.Column<DateTime>(type: "datetime", nullable: true),
                    TrafficLimitWedTo = table.Column<DateTime>(type: "datetime", nullable: true),
                    TrafficLimitTue = table.Column<int>(type: "int", nullable: true),
                    TrafficLimitTueFrom = table.Column<DateTime>(type: "datetime", nullable: true),
                    TrafficLimitTueTo = table.Column<DateTime>(type: "datetime", nullable: true),
                    TrafficLimitMon = table.Column<int>(type: "int", nullable: true),
                    TrafficLimitMonFrom = table.Column<DateTime>(type: "datetime", nullable: true),
                    TrafficLimitMonTo = table.Column<DateTime>(type: "datetime", nullable: true),
                    KOD_MASKA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Kod maska"),
                    SYMBOL_DO_FK = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Symbol do FK"),
                    VAT_ID = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    DictionaryId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TextId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    ID_KRAJE = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    PREFIX_NIP = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KRAJE", x => x.SYMBOL);
                },
                comment: "Słownik krajów");

            migrationBuilder.CreateTable(
                name: "KS_POCZT_DOKUM",
                columns: table => new
                {
                    ID_KS_POCZT_DOKUM = table.Column<int>(type: "int", nullable: false),
                    TYP = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Typ obiektu - FV, ZL etc"),
                    OPIS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Opis typu obiektu"),
                    NAD = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy dotyczy poczty wychodzacej"),
                    ODB = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy dotyczy poczty przychodzącej"),
                    SEGREGATOR_NAD = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Numer segregatora poczty wychodzącej"),
                    SEGREGATOR_ODB = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Numer segregatora poczty przychodzacej"),
                    AKTYWNY = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy aktywny"),
                    SYSTEMOWY = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy systemowy - zdefiniowany przez InterLAN"),
                    DRUKUJ_KOD = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy drukowac kod kreskowy"),
                    KONTROLA_ADRESOW = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy kontrolowac adresy"),
                    DOPISZ_WIELE = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('1')", comment: "Flaga, czy można dopisywać obiekty w trybie \"Dopisz wiele\""),
                    DictionaryId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TextId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KS_POCZT_DOKUM", x => x.ID_KS_POCZT_DOKUM);
                },
                comment: "Słownik typów dokumentów dla książki pocztowej");

            migrationBuilder.CreateTable(
                name: "KSIAZKA_ADRESOWA_EMAIL",
                columns: table => new
                {
                    ID_KSIAZKA_ADRESOWA_EMAIL = table.Column<int>(type: "int", nullable: false),
                    NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "*pole nie używane*"),
                    ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "*pole nie używane*"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja"),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dział")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KSIAZKA_ADRESOWA_EMAIL", x => x.ID_KSIAZKA_ADRESOWA_EMAIL);
                },
                comment: "*tabela nie używana*");

            migrationBuilder.CreateTable(
                name: "KSIAZKA_POCZTOWA_OTRZ",
                columns: table => new
                {
                    ID_KSIAZKA_POCZTOWA_OTRZ = table.Column<int>(type: "int", nullable: false),
                    OBIEKT_TYP = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Typ obiektu - tab: KS_POCZT_DOKUM"),
                    DATA_OTRZYMANIA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data otrzymania"),
                    GODZ_OTRZYMANIA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina otrzymania"),
                    NR_KP = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Numer pozycji książki pocztowej"),
                    NR_KP_KOLEJNY = table.Column<int>(type: "int", nullable: true, comment: "Numer pozycji książki pocztowej - nr kolejny"),
                    NR_KP_MIES = table.Column<int>(type: "int", nullable: true, comment: "Numer pozycji książki pocztowej - miesiąc"),
                    NR_KP_ROK = table.Column<int>(type: "int", nullable: true, comment: "Numer pozycji książki pocztowej - rok"),
                    NADAWCA_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do nadawcy - tab: KONTRAHENCI"),
                    NADAWCA_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Symbol nadawcy"),
                    NADAWCA_ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Adres nadawcy"),
                    UZYTKOWNIK_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika - tab: UZYTKOWNIK"),
                    UZYTKOWNIK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Symbol użytkownika"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja"),
                    OPIS_PRZESYLKI = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Opis przesyłki"),
                    NR_WLASNY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer własny"),
                    UWAGI = table.Column<string>(type: "text", nullable: true, comment: "Dowolne uwagi"),
                    OPLATA = table.Column<double>(type: "float", nullable: true, comment: "Opłata"),
                    OPLATA_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Waluta opłaty"),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true, comment: "Liczba załączników"),
                    RODZAJ_DOK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Rodzaj dokumentów"),
                    SEGREGATOR = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Numer segregatora"),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dział"),
                    OBIEKT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer obiektu"),
                    WEWN = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy przesyłka wewnętrzna"),
                    LOKALIZACJA_NAD = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja nadawcza"),
                    DZIAL_NAD = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dział nadawczy"),
                    KOD_KRESKOWY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Kod kreskowy dla koperty"),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    STATUS_EMISJA = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    NADAWCA_ODDZIAL_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do oddziału nadawcy - tab: KONTRAHENCI_ODDZIALY")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KSIAZKA_POCZTOWA_OTRZ", x => x.ID_KSIAZKA_POCZTOWA_OTRZ);
                },
                comment: "Pozycje książki pocztowej przychodzącej");

            migrationBuilder.CreateTable(
                name: "KSIAZKA_POCZTOWA_OTRZ_POZ",
                columns: table => new
                {
                    ID_KSIAZKA_POCZTOWA_OTRZ_POZ = table.Column<int>(type: "int", nullable: false),
                    KSIAZKA_POCZTOWA_OTRZ_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do nagłówka książki - tab: KSIAZKA_POCZTOWA_OTRZ"),
                    OBIEKT_TYP = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Typ obiektu - tab: KS_POCZT_DOKUM"),
                    OBIEKT_ID = table.Column<int>(type: "int", nullable: true, comment: "Systemowy ID obiektu"),
                    OBIEKT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Systemowy numer obiektu"),
                    SEGREGATOR = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Numer segregatora"),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do nadawcy - tab: KONTRAHENCI"),
                    KOD_KRESKOWY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Kod kreskowy pozycji")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KSIAZKA_POCZTOWA_OTRZ_POZ", x => x.ID_KSIAZKA_POCZTOWA_OTRZ_POZ);
                },
                comment: "Obiekty pozycji książki pocztowej przychodzącej");

            migrationBuilder.CreateTable(
                name: "KSIAZKA_POCZTOWA_OTRZ_ROZDZ",
                columns: table => new
                {
                    ID_KSIAZKA_POCZTOWA_OTRZ_ROZDZ = table.Column<int>(type: "int", nullable: false),
                    KSIAZKA_POCZTOWA_OTRZ_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do nagłówka książki - tab: KSIAZKA_POCZTOWA_OTRZ"),
                    UZYTKOWNIK_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika - tab: UZYTKOWNIK"),
                    UZYTKOWNIK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Symbol użytkownika"),
                    OPIS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Opis rozdzielnika"),
                    ORYGINAL = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy otrzymuje oryginał czy kopię"),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data"),
                    GODZ = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KSIAZKA_POCZTOWA_OTRZ_ROZDZ", x => x.ID_KSIAZKA_POCZTOWA_OTRZ_ROZDZ);
                },
                comment: "Rozdzielniki dla książki pocztowej przychodzącej");

            migrationBuilder.CreateTable(
                name: "KSIAZKA_POCZTOWA_POZ",
                columns: table => new
                {
                    ID_KSIAZKA_POCZTOWA_POZ = table.Column<int>(type: "int", nullable: false),
                    OBIEKT_TYP = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Typ obiektu - tab: KS_POCZT_DOKUM"),
                    OBIEKT_ID = table.Column<int>(type: "int", nullable: true, comment: "Systemowy ID obiektu"),
                    OBIEKT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Systemowy numer obiektu"),
                    DATA_UTW = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia koperty"),
                    WYSLANE = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy wysłano"),
                    DATA_WYSLANIA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data wysłania"),
                    NR_KP = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Numer pozycji książki pocztowej"),
                    NR_KP_KOLEJNY = table.Column<int>(type: "int", nullable: true, comment: "Numer pozycji książki pocztowej - nr kolejny"),
                    NR_KP_MIES = table.Column<int>(type: "int", nullable: true, comment: "Numer pozycji książki pocztowej - miesiąc"),
                    NR_KP_ROK = table.Column<int>(type: "int", nullable: true, comment: "Numer pozycji książki pocztowej - rok"),
                    ADRESAT_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do adresata - tab: KONTRAHENCI"),
                    ADRESAT_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Symbol adresata"),
                    ADRESAT_ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Adres odbiorcy"),
                    NADAWCA_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do nadawcy - tab: KONTRAHENCI"),
                    NADAWCA_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Symbol nadawcy"),
                    NADAWCA_ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Adres nadawcy"),
                    UZYTKOWNIK_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika - tab: UZYTKOWNIK"),
                    UZYTKOWNIK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Symbol użytkownika"),
                    OPIS_PRZESYLKI = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Opis przesyłki"),
                    NR_WLASNY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer własny"),
                    UWAGI = table.Column<string>(type: "text", nullable: true, comment: "Dowolne uwagi do przesyłki"),
                    UWAGI_POCZTY = table.Column<string>(type: "text", nullable: true, comment: "Uwago od poczty"),
                    OPLATA = table.Column<double>(type: "float", nullable: true, comment: "Opłata pocztowa"),
                    OPLATA_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Waluta opłaty pocztowej"),
                    WYDRUKOWANE = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy wydrukowano książkę pocztową"),
                    DATA_WYDRUKU = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data wydruku książki pocztowej"),
                    GODZ_WYDRUKU = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina wydruku książki pocztowej"),
                    GODZ_WYSLANIA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina wysłania"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja"),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dział"),
                    RODZAJ_DOK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Rodzaj dokumentów"),
                    SEGREGATOR = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Numer segregatora"),
                    POBRANIE = table.Column<double>(type: "float", nullable: true, comment: "Kwota pobrania"),
                    POBRANIE_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Waluta kwoty pobrania"),
                    POBRANIE_OPLATA = table.Column<double>(type: "float", nullable: true, comment: "Opłata za pobranie"),
                    POBRANIE_OPLATA_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Waluta opłaty za pobranie"),
                    WEWN = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy przesyłka wewnętrzna"),
                    WEWN_WYS_POCZTA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy przesyłka wewnętrzna wysłana pocztą"),
                    LOKALIZACJA_ODB = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalziacja odbiorcza"),
                    DZIAL_ODB = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dział odbiorczy"),
                    KOD_KRESKOWY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Kod kreskowy dla koperty"),
                    OTWARTA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy koperta jest otwarta - tylko jedna otwarta w jednej lokalizacji"),
                    ADRESAT_KRAJ = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "Kraj odbiorcy"),
                    WAGA = table.Column<double>(type: "float", nullable: true, comment: "Waga przesyłki"),
                    KRAJ_ZAGR = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true, comment: "K-raj / Z-agranica"),
                    POTW_DORECZ = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy za potw. odb."),
                    DORECZONA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy doreczona"),
                    DORECZONA_DATA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data doręczenia"),
                    DORECZONA_NR_POTW = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Nr potwierdzenia"),
                    DORECZONA_ODBIORCA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Odbiorca przesyłki"),
                    PRIORYTET = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy priorytet"),
                    ZAMKNIETA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy koperta jest zamknieta"),
                    ADRESAT_ODDZIAL_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do oddziału adresata - tab: KONTRAHENCI_ODDZIALY"),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true, comment: "Załaczniki"),
                    ADRESAT_PRAC_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do oddziału adresata - tab: KONTRAHENCI_REPREZ"),
                    ADRESAT_PRAC = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Pracownik"),
                    PP_NUMERNADANIA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Nr nadania w PP"),
                    PP_GUID = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Nr guid w PP"),
                    ADRESAT_NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa odbiorcy"),
                    ADRESAT_ULICA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Ulica odbiorcy"),
                    ADRESAT_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Kod poczt. odbiorcy"),
                    ADRESAT_MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Miasto odbiorcy"),
                    STATUS_EMISJA = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    PP_FORMAT = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Format listu PP"),
                    EPO = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy EPO")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KSIAZKA_POCZTOWA_POZ", x => x.ID_KSIAZKA_POCZTOWA_POZ);
                },
                comment: "Pozycje książki pocztowej wychodzącej");

            migrationBuilder.CreateTable(
                name: "KSIAZKA_POCZTOWA_POZ_DOK",
                columns: table => new
                {
                    ID_KSIAZKA_POCZTOWA_POZ_DOK = table.Column<int>(type: "int", nullable: false),
                    KSIAZKA_POCZTOWA_POZ_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do nagłówka książki - tab: KSIAZKA_POCZTOWA_POZ"),
                    OBIEKT_TYP = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Typ obiektu - tab: KS_POCZT_DOKUM"),
                    OBIEKT_ID = table.Column<int>(type: "int", nullable: true, comment: "Systemowy ID obiektu"),
                    OBIEKT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Systemowy numer obiektu"),
                    SEGREGATOR = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Numer segregatora"),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do nadawcy - tab: KONTRAHENCI"),
                    KOD_KRESKOWY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Kod kreskowy pozycji")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KSIAZKA_POCZTOWA_POZ_DOK", x => x.ID_KSIAZKA_POCZTOWA_POZ_DOK);
                },
                comment: "Obiekty pozycji książki pocztowej wychodzącej");

            migrationBuilder.CreateTable(
                name: "KURSY",
                columns: table => new
                {
                    TABELA_ID = table.Column<int>(type: "int", nullable: false),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: false),
                    KURS_NA = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('1')"),
                    KURS = table.Column<double>(type: "float", nullable: true),
                    KUPNO = table.Column<double>(type: "float", nullable: true),
                    SPRZEDAZ = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KURSY", x => new { x.TABELA_ID, x.WALUTA });
                });

            migrationBuilder.CreateTable(
                name: "KURSY_D",
                columns: table => new
                {
                    TABELA_ID = table.Column<int>(type: "int", nullable: false),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: false),
                    KURS_NA = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('1')"),
                    KURS = table.Column<double>(type: "float", nullable: true),
                    KUPNO = table.Column<double>(type: "float", nullable: true),
                    SPRZEDAZ = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KURSY_D", x => new { x.TABELA_ID, x.WALUTA });
                });

            migrationBuilder.CreateTable(
                name: "KWIT_PAL",
                columns: table => new
                {
                    ID_KWIT_PAL = table.Column<int>(type: "int", nullable: false),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data kwitu"),
                    NR_KP = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Numer kwitu"),
                    NR_KP_KOLEJNY = table.Column<int>(type: "int", nullable: true, comment: "Numer kolejny z licznika"),
                    NR_KP_ROK = table.Column<int>(type: "int", nullable: true, comment: "Rok z licznika"),
                    NR_KP_MIES = table.Column<int>(type: "int", nullable: true, comment: "Miesiac z licznika"),
                    KLIENT_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do klienta"),
                    KLIENT = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Symbol klienta"),
                    ROZLICZONY = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy rozliczono"),
                    ROZLICZONY_DATA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data rozliczenia kwitu"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja"),
                    UWAGI = table.Column<string>(type: "text", nullable: true, comment: "Uwagi"),
                    KLIENT_TYP = table.Column<int>(type: "int", nullable: true, comment: "Typ klienta 0 - odbiorca, 1 - przewoznik, 2 - nadawca"),
                    ROZL_NAD_KWIT = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy rozliczenie z nadawcą za pomocą kwitu"),
                    ROZL_NAD_LP = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy rozliczenie z nadawcą za adnotacji na LP"),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    WEZWANIE = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy wezwanie"),
                    WEZWANIE_1_D = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data I wezwania"),
                    WEZWANIE_2_D = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data II wezwania"),
                    WEZWANIE_3_D = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data III wezwania"),
                    NR_RFK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer ref. (np. nr dokumentu nadania)"),
                    EROD = table.Column<int>(type: "int", nullable: true, comment: "Flaga eROD (0/1)"),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dział"),
                    Znacznik = table.Column<int>(type: "int", nullable: true, comment: "Znacznik"),
                    Sticker = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Sticker"),
                    mSPEED_GUID = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "GUID dla mSpeed-a"),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KWIT_PAL", x => x.ID_KWIT_PAL);
                },
                comment: "Kwity paletowe - rozliczenia palet w drobnicy");

            migrationBuilder.CreateTable(
                name: "KWIT_PAL_POZ",
                columns: table => new
                {
                    ID_KWIT_PAL_POZ = table.Column<int>(type: "int", nullable: false),
                    KWIT_PAL_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kwitu"),
                    MAGAZYN_ZDARZENIA_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja PZ/WZ"),
                    MAGAZYN_ZDARZENIA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Nr PZ/WZ"),
                    LISTY_LINIOWE_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do trasy"),
                    LISTY_LINIOWE = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Nr trasy"),
                    PRZESYLKI_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do przesyłki"),
                    PRZESYLKI = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Nr przesyłki"),
                    PACZKI_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do paczki"),
                    PACZKI = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Nr paczki"),
                    KOD_OPAK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Kod opakowania"),
                    OPAKOWANIE = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Opakowanie"),
                    TYP = table.Column<int>(type: "int", nullable: true, comment: "Typ kwitu 0 - uznanie (na +), 1 - obciążenie (na -)"),
                    ILOSC = table.Column<int>(type: "int", nullable: true, comment: "Ilość opakowań"),
                    OPIS = table.Column<string>(type: "varchar(250)", unicode: false, maxLength: 250, nullable: true, comment: "Opis do pozycji"),
                    LOKALIZACJA_NADZ = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja nadzorująca z przesyłki"),
                    ILOSC_ROZL = table.Column<int>(type: "int", nullable: true, comment: "Ilość opakowań - rozliczono"),
                    WG_LP = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy rozliczenie odb. na adnotacji na LP"),
                    ZLECENIA_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do zlecenia FTL"),
                    ZLECENIA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Nr zlecenia FTL"),
                    ZLECENIA_ZA_WY_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do pozycji ZA/WY zlecenia FTL"),
                    BILANS_OPAK_POZ_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KWIT_PAL_POZ", x => x.ID_KWIT_PAL_POZ);
                });

            migrationBuilder.CreateTable(
                name: "KWIT_PAL_ROZL",
                columns: table => new
                {
                    ID_KWIT_PAL_ROZL = table.Column<int>(type: "int", nullable: false),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ROZL"),
                    NR_ROZL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Numer ROZL"),
                    NR_ROZL_KOLEJNY = table.Column<int>(type: "int", nullable: true, comment: "Numer kolejny z licznika"),
                    NR_ROZL_ROK = table.Column<int>(type: "int", nullable: true, comment: "Rok z licznika"),
                    NR_ROZL_MIES = table.Column<int>(type: "int", nullable: true, comment: "Miesiac z licznika"),
                    KLIENT_TYP = table.Column<int>(type: "int", nullable: true, comment: "Typ klienta 0 - odbiorca, 1 - przewoznik, 2 - nadawca"),
                    KLIENT_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do klienta"),
                    KLIENT = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Symbol klienta"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja"),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    ROZL_Z = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "0 - z doreczeń, 1 - z magazynu"),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dział"),
                    TYP_FV = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    FAKTURA_ID = table.Column<int>(type: "int", nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(250)", unicode: false, maxLength: 250, nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true, comment: "Ilość załączników")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KWIT_PAL_ROZL", x => x.ID_KWIT_PAL_ROZL);
                },
                comment: "Rozliczenia palet w drobnicy");

            migrationBuilder.CreateTable(
                name: "KWIT_PAL_ROZL_LOK",
                columns: table => new
                {
                    ID_KWIT_PAL_ROZL_LOK = table.Column<int>(type: "int", nullable: false),
                    TYP = table.Column<int>(type: "int", nullable: true, comment: "Typ rozliczenia 0 - normalne, 1 - kompensata"),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ROZL"),
                    NR_ROZL_LOK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Numer ROZL"),
                    NR_ROZL_LOK_KOLEJNY = table.Column<int>(type: "int", nullable: true, comment: "Numer kolejny z licznika"),
                    NR_ROZL_LOK_ROK = table.Column<int>(type: "int", nullable: true, comment: "Rok z licznika"),
                    NR_ROZL_LOK_MIES = table.Column<int>(type: "int", nullable: true, comment: "Miesiac z licznika"),
                    LOKALIZACJA_Z = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja która palety ma"),
                    LOKALIZACJA_DO = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja która palety ma mieć"),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    DATA_OD = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Okres od"),
                    DATA_DO = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Okres do"),
                    PROCEDURA_DB = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Procedura bazodanowa")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KWIT_PAL_ROZL_LOK", x => x.ID_KWIT_PAL_ROZL_LOK);
                },
                comment: "Rozliczenia palet w lokalizacjach");

            migrationBuilder.CreateTable(
                name: "KWIT_PAL_ROZL_LOK_POZ",
                columns: table => new
                {
                    ID_KWIT_PAL_ROZL_LOK_POZ = table.Column<int>(type: "int", nullable: false),
                    KWIT_PAL_ROZL_LOK_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do KWIT_PAL_ROZL_LOK"),
                    KWIT_PAL_ROZL_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do KWIT_PAL_ROZL"),
                    KWIT_PAL_ROZL_POZ_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do KWIT_PAL_ROZL_POZ"),
                    PRZESYLKI_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do przesyłki"),
                    PRZESYLKI = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Nr przesyłki"),
                    LOKALIZACJA_NADZ = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja nadzorująca z przesyłki"),
                    PACZKI_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do paczki"),
                    PACZKI = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Nr paczki"),
                    KOD_OPAK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Kod opakowania"),
                    OPAKOWANIE = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Opakowanie"),
                    ILOSC = table.Column<int>(type: "int", nullable: true, comment: "Ilość opakowań")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KWIT_PAL_ROZL_LOK_POZ", x => x.ID_KWIT_PAL_ROZL_LOK_POZ);
                },
                comment: "Pozycje rozliczenia palet w lokalizacjach");

            migrationBuilder.CreateTable(
                name: "KWIT_PAL_ROZL_POZ",
                columns: table => new
                {
                    ID_KWIT_PAL_ROZL_POZ = table.Column<int>(type: "int", nullable: false),
                    KWIT_PAL_ROZL_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do KWIT_PAL_ROZL"),
                    KWIT_PAL_POZ_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do KWIT_PAL_POZ"),
                    KWIT_PAL_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do KWIT_PAL"),
                    KWIT_PAL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Numer kwitu"),
                    DATA_KW = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data kwitu"),
                    LISTY_LINIOWE_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do trasy"),
                    LISTY_LINIOWE = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Nr trasy"),
                    PRZESYLKI_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do przesyłki"),
                    PRZESYLKI = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Nr przesyłki"),
                    LOKALIZACJA_NADZ = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja nadzorująca z przesyłki"),
                    PACZKI_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do paczki"),
                    PACZKI = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Nr paczki"),
                    KOD_OPAK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Kod opakowania"),
                    OPAKOWANIE = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Opakowanie"),
                    ILOSC = table.Column<int>(type: "int", nullable: true, comment: "Ilość opakowań"),
                    KWIT_PAL_ROZL_LOK_ID = table.Column<int>(type: "int", nullable: true, comment: "* nie używane *"),
                    ILOSC_ROZL_LOK = table.Column<int>(type: "int", nullable: true, comment: "Ilość opakowań rozliczona na ROZL_LOK"),
                    TYP_ROZL = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "0 - DORĘCZENIE, 1 - PZ, 2 - WZ, 3 - KWIT"),
                    OBJ_ID = table.Column<int>(type: "int", nullable: true),
                    OBJ_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    BILANS_OPAK_LOK_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIA_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do zlecenia FTL"),
                    ZLECENIA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Nr zlecenia FTL")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_KWIT_PAL_ROZL_POZ", x => x.ID_KWIT_PAL_ROZL_POZ);
                });

            migrationBuilder.CreateTable(
                name: "Language",
                schema: "app",
                columns: table => new
                {
                    LanguageId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    DatabaseLanguageId = table.Column<int>(type: "int", nullable: false),
                    Active = table.Column<int>(type: "int", nullable: false, defaultValueSql: "((1))"),
                    DefaultLanguage = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Language", x => x.LanguageId);
                });

            migrationBuilder.CreateTable(
                name: "Language",
                schema: "ling",
                columns: table => new
                {
                    LanguageId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SysLangId = table.Column<int>(type: "int", nullable: true),
                    CountryId = table.Column<int>(type: "int", nullable: true),
                    Code2 = table.Column<string>(type: "nvarchar(10)", maxLength: 10, nullable: true),
                    Code3 = table.Column<string>(type: "nvarchar(10)", maxLength: 10, nullable: true),
                    Name = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    Active = table.Column<int>(type: "int", nullable: true),
                    DictionaryId = table.Column<int>(type: "int", nullable: true),
                    TextId = table.Column<int>(type: "int", nullable: true),
                    SmallFlag = table.Column<byte[]>(type: "image", nullable: true),
                    LargeFlag = table.Column<byte[]>(type: "image", nullable: true),
                    Reports = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Language", x => x.LanguageId);
                });

            migrationBuilder.CreateTable(
                name: "Language",
                schema: "lng",
                columns: table => new
                {
                    LanguageId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    DatabaseLanguageId = table.Column<int>(type: "int", nullable: false),
                    Active = table.Column<int>(type: "int", nullable: false, defaultValueSql: "((1))"),
                    DefaultLanguage = table.Column<int>(type: "int", nullable: false),
                    Name = table.Column<string>(type: "nvarchar(128)", maxLength: 128, nullable: true),
                    Code = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__Language__B93855ABC0ACF7E6", x => x.LanguageId);
                });

            migrationBuilder.CreateTable(
                name: "LAYOUT_TEMPLATE",
                columns: table => new
                {
                    ID_LAYOUT_TEMPLATE = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    WIN_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    VIEW_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    NAME = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    INI_NAME = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    DATA = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__LAYOUT_T__88458F6F0AADE974", x => x.ID_LAYOUT_TEMPLATE);
                });

            migrationBuilder.CreateTable(
                name: "LayoutType",
                schema: "app",
                columns: table => new
                {
                    LayoutTypeId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: false),
                    Description = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true),
                    Enabled = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_LayoutType", x => x.LayoutTypeId);
                });

            migrationBuilder.CreateTable(
                name: "LICENCJA",
                columns: table => new
                {
                    ID_LICENCJA = table.Column<int>(type: "int", nullable: false),
                    AKTYWNA = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    DATACZAS = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "('')"),
                    ID_LICENCJI = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: false, defaultValueSql: "('')"),
                    HASH = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: false, defaultValueSql: "('')"),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    PLIK = table.Column<string>(type: "text", nullable: true, comment: "Dane binarne")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_LICENCJA", x => x.ID_LICENCJA);
                });

            migrationBuilder.CreateTable(
                name: "LICENCJA_MODUL",
                columns: table => new
                {
                    ID_LICENCJA_MODUL = table.Column<int>(type: "int", nullable: false),
                    PROFIL_ID = table.Column<int>(type: "int", nullable: false),
                    SYMBOL = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: false),
                    OPIS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: false),
                    DATACZAS = table.Column<DateTime>(type: "datetime", nullable: false),
                    HASH = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_LICENCJA_MODUL", x => x.ID_LICENCJA_MODUL);
                });

            migrationBuilder.CreateTable(
                name: "LICENCJA_PLIK",
                columns: table => new
                {
                    ID_LICENCJA_PLIK = table.Column<int>(type: "int", nullable: false),
                    STANOWISKO = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: false, defaultValueSql: "('')"),
                    PROFIL_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    TERMINAL = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    UZYTKOWNIK_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    UZYTKOWNIK_NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: false, defaultValueSql: "('')"),
                    DATACZAS = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "('')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_LICENCJA_PLIK", x => x.ID_LICENCJA_PLIK);
                });

            migrationBuilder.CreateTable(
                name: "LICENCJA_PROFIL",
                columns: table => new
                {
                    ID_LICENCJA_PROFIL = table.Column<int>(type: "int", nullable: false),
                    STANOWISKO = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: false),
                    ILOSC = table.Column<int>(type: "int", nullable: false),
                    TERMINAL = table.Column<int>(type: "int", nullable: false),
                    NAZWA = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: false),
                    OPIS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: false),
                    HASH = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: false),
                    PROGRAM = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: false, defaultValueSql: "('')"),
                    PODGLAD = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ADMIN = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_LICENCJA_PROFIL", x => x.ID_LICENCJA_PROFIL);
                });

            migrationBuilder.CreateTable(
                name: "LICENCJA_UZYTKOWNIK",
                columns: table => new
                {
                    ID_LICENCJA_UZYTKOWNIK = table.Column<int>(type: "int", nullable: false),
                    PROFIL_ID = table.Column<int>(type: "int", nullable: false),
                    UZYTKOWNIK_ID = table.Column<int>(type: "int", nullable: false),
                    HASH = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_LICENCJA_UZYTKOWNIK", x => x.ID_LICENCJA_UZYTKOWNIK);
                });

            migrationBuilder.CreateTable(
                name: "LICZNIKI",
                columns: table => new
                {
                    ID_LICZNIKI = table.Column<int>(type: "int", nullable: false),
                    ID_LICZNIKA = table.Column<int>(type: "int", nullable: false, comment: "Systemowy identyfikator licznika"),
                    NA_ROK = table.Column<int>(type: "int", nullable: true, comment: "Na który rok"),
                    NA_LOKALIZACJE = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Na którą lokalizację"),
                    PREFIX = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Prefix - używane w formacie licznika"),
                    LICZNIK = table.Column<int>(type: "int", nullable: false, comment: "Wartość licznika (ma sens gdy LICZ_MIES = 0)"),
                    ROK = table.Column<int>(type: "int", nullable: false, comment: "*pole nie używane*"),
                    MIESIAC = table.Column<int>(type: "int", nullable: true, comment: "*pole nie używane*"),
                    POSTFIX = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Postfix - używane w formacie licznika"),
                    FORMAT = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Format licznika"),
                    OPIS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Opis licznika"),
                    STALA_DLUG_LICZ = table.Column<short>(type: "smallint", nullable: true, comment: "Flaga, czy stałą długość części liczbowej"),
                    ILOSC_CYFR = table.Column<short>(type: "smallint", nullable: true, comment: "Ilość cyfr w części liczbowej (ma sens gdy STALA_DLUG_LICZ = 1)"),
                    LICZ_MIES = table.Column<short>(type: "smallint", nullable: false, defaultValueSql: "('0')", comment: "Flaga, czy licznik miesięczny"),
                    PODLICZNIKI = table.Column<short>(type: "smallint", nullable: false, defaultValueSql: "('0')", comment: "Flaga, czy licznik posiada podliczniki"),
                    I = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Wartość licznika dla mies I (ma sens gdy LICZ_MIES = 1)"),
                    II = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Wartość licznika dla mies II (ma sens gdy LICZ_MIES = 1)"),
                    III = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Wartość licznika dla mies III (ma sens gdy LICZ_MIES = 1)"),
                    IV = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Wartość licznika dla mies IV (ma sens gdy LICZ_MIES = 1)"),
                    V = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Wartość licznika dla mies V (ma sens gdy LICZ_MIES = 1)"),
                    VI = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Wartość licznika dla mies VI (ma sens gdy LICZ_MIES = 1)"),
                    VII = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Wartość licznika dla mies VII (ma sens gdy LICZ_MIES = 1)"),
                    VIII = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Wartość licznika dla mies VIII (ma sens gdy LICZ_MIES = 1)"),
                    IX = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Wartość licznika dla mies IX (ma sens gdy LICZ_MIES = 1)"),
                    X = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Wartość licznika dla mies X (ma sens gdy LICZ_MIES = 1)"),
                    XI = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Wartość licznika dla mies XI (ma sens gdy LICZ_MIES = 1)"),
                    XII = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Wartość licznika dla mies XII (ma sens gdy LICZ_MIES = 1)"),
                    ZAMYKANIE_OKR = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy aktywne zamykanie okresów dla licznika"),
                    NA_DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Na który dział"),
                    PROCEDURA_SQL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Procedura POST"),
                    DELTA = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Delta zmiany licznika"),
                    ZAMYKANIE_OKR_IND = table.Column<short>(type: "smallint", nullable: false, defaultValueSql: "('0')", comment: "Czy właczona ind. obsługa kontroli zamk. okresu")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_LICZNIKI", x => x.ID_LICZNIKI);
                },
                comment: "Liczniki systemowe");

            migrationBuilder.CreateTable(
                name: "ListFilter",
                schema: "app",
                columns: table => new
                {
                    ListFilterId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: false),
                    Active = table.Column<int>(type: "int", nullable: false),
                    ToolId = table.Column<int>(type: "int", nullable: false),
                    ListLayoutTypeId = table.Column<int>(type: "int", nullable: true),
                    Filter = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    FilterOrder = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ListFilter", x => x.ListFilterId);
                });

            migrationBuilder.CreateTable(
                name: "ListLayout",
                schema: "app",
                columns: table => new
                {
                    ListLayoutId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ToolId = table.Column<int>(type: "int", nullable: false),
                    ListLayoutTypeId = table.Column<int>(type: "int", nullable: false),
                    Name = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    CustomName = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    Hint = table.Column<string>(type: "nvarchar(500)", maxLength: 500, nullable: true),
                    Layout = table.Column<byte[]>(type: "varbinary(max)", nullable: true),
                    ViewData = table.Column<byte[]>(type: "varbinary(max)", nullable: true),
                    DefaultLayout = table.Column<int>(type: "int", nullable: false),
                    Visible = table.Column<int>(type: "int", nullable: false, defaultValueSql: "((1))"),
                    GridTypeId = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ListLayout", x => x.ListLayoutId);
                });

            migrationBuilder.CreateTable(
                name: "LISTY_LINIOWE",
                columns: table => new
                {
                    ID_LISTY_LINIOWE = table.Column<int>(type: "int", nullable: false),
                    NR_LISTU = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_LISTU_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    NR_LISTU_ROK = table.Column<int>(type: "int", nullable: true),
                    NR_LISTU_MIES = table.Column<int>(type: "int", nullable: true),
                    TECZKA_ID = table.Column<int>(type: "int", nullable: true),
                    TECZKA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_BORDERO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    RODZAJ = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    WAGA = table.Column<double>(type: "float", nullable: true),
                    ILOSC = table.Column<double>(type: "float", nullable: true),
                    OBJ = table.Column<double>(type: "float", nullable: true),
                    PRZEWOZNIK_ID = table.Column<int>(type: "int", nullable: true),
                    PRZEWOZNIK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    PRZEWOZNIK_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    PRZEWOZNIK_ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    PRZEWOZNIK_MIASTO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    PRZEWOZNIK_KOD = table.Column<string>(type: "varchar(6)", unicode: false, maxLength: 6, nullable: true),
                    PRZEWOZNIK_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    PRZEWOZNIK_NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    STAN = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    WYJAZD_ID = table.Column<int>(type: "int", nullable: true),
                    WYJAZD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SAMOCHOD_ID = table.Column<int>(type: "int", nullable: true),
                    SAMOCHOD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KIEROWCA_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WALUTA_KALK = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    TABELA_KURSOW_KALK_ID = table.Column<int>(type: "int", nullable: true),
                    TABELA_KURSOW_KALK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PROCENT_KOSZTOW = table.Column<double>(type: "float", nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    PARTNER_ID = table.Column<int>(type: "int", nullable: true),
                    PARTNER = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    TECHNICZNE = table.Column<int>(type: "int", nullable: true),
                    USTALENIA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    STATUS_MAIL = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    VESSEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    BILL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PLACEOFRECEIPT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PORTOFLOADING = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PORTOFDISCHARGE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PORTOFDELIVERY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    CONTAINERNO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SAILED = table.Column<DateTime>(type: "datetime", nullable: true),
                    EXPECTED = table.Column<DateTime>(type: "datetime", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    KONTENER = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TYP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    STREFA = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TRANZYT = table.Column<int>(type: "int", nullable: true),
                    PLAN_DATA_ROZLAD = table.Column<DateTime>(type: "datetime", nullable: true),
                    PLAN_GODZ_ROZLAD = table.Column<DateTime>(type: "datetime", nullable: true),
                    PLAN_DATA_ZALAD = table.Column<DateTime>(type: "datetime", nullable: true),
                    PLAN_GODZ_ZALAD = table.Column<DateTime>(type: "datetime", nullable: true),
                    PRZESL_ODPR = table.Column<int>(type: "int", nullable: true),
                    KONTENER_ID = table.Column<int>(type: "int", nullable: true),
                    KONTENER_ROZM = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    TRASA_ID = table.Column<int>(type: "int", nullable: true),
                    TRASA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    ZAPLANOWANA = table.Column<int>(type: "int", nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    STATUS = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    PROFIL_POJ_ID = table.Column<int>(type: "int", nullable: true),
                    PROFIL_POJ = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OPIS_LADUNKU = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    PLAN_MAX_WAGA = table.Column<double>(type: "float", nullable: true),
                    PLAN_MAX_ILOSC = table.Column<double>(type: "float", nullable: true),
                    PLAN_MAX_OBJ = table.Column<double>(type: "float", nullable: true),
                    ODLEGOSC = table.Column<double>(type: "float", nullable: true),
                    CENA_ZA_KM = table.Column<double>(type: "float", nullable: true),
                    CENA_ZA_KM_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KWOTA = table.Column<double>(type: "float", nullable: true),
                    KWOTA_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    USTALENIA_ZLEC = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    PROM = table.Column<int>(type: "int", nullable: true),
                    PRZEWOZNIK_TEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SLOT_1 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_2 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_3 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_4 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_5 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    KPL_DOKUM = table.Column<int>(type: "int", nullable: true),
                    NACZEPA_ID = table.Column<int>(type: "int", nullable: true),
                    NACZEPA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KIEROWCA_TEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    FAKT_DATA_ROZLAD = table.Column<DateTime>(type: "datetime", nullable: true),
                    FAKT_GODZ_ROZLAD = table.Column<DateTime>(type: "datetime", nullable: true),
                    FAKT_DATA_ZALAD = table.Column<DateTime>(type: "datetime", nullable: true),
                    FAKT_GODZ_ZALAD = table.Column<DateTime>(type: "datetime", nullable: true),
                    ODLEGOSC_PUSTE = table.Column<double>(type: "float", nullable: true),
                    LICZBA_ZAWY = table.Column<double>(type: "float", nullable: true),
                    CENA_ZA_KM_PUSTE = table.Column<double>(type: "float", nullable: true),
                    CENA_ZA_KM_PUSTE_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    CENA_ZA_M_ZAWY = table.Column<double>(type: "float", nullable: true),
                    CENA_ZA_M_ZAWY_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    INNE_KOSZTY = table.Column<double>(type: "float", nullable: true),
                    KWOTA_ODC_1 = table.Column<double>(type: "float", nullable: true),
                    KWOTA_ODC_1_ST = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    KWOTA_ODC_2 = table.Column<double>(type: "float", nullable: true),
                    KWOTA_ODC_2_ST = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    KWOTA_ODC_3 = table.Column<double>(type: "float", nullable: true),
                    KWOTA_ODC_3_ST = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    JEST_PROM = table.Column<int>(type: "int", nullable: true),
                    ODPRAWA_CELNA_WYWOZ_ID = table.Column<int>(type: "int", nullable: true),
                    ODPRAWA_CELNA_WYWOZ = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    ODPRAWA_CELNA_WWOZ_ID = table.Column<int>(type: "int", nullable: true),
                    ODPRAWA_CELNA_WWOZ = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    ODPRAWA_GRANICZNA_ID = table.Column<int>(type: "int", nullable: true),
                    ODPRAWA_GRANICZNA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    ZA_MIEJSCE = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    ZA_MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZA_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    WY_MIEJSCE = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WY_MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    WY_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    SFM_STATUS = table.Column<int>(type: "int", nullable: true),
                    SFM_VER = table.Column<int>(type: "int", nullable: true),
                    SFM_L_ZA_WY = table.Column<int>(type: "int", nullable: true),
                    SFM_WYSL = table.Column<int>(type: "int", nullable: true),
                    ZLECENIA_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SIEC = table.Column<int>(type: "int", nullable: true),
                    SAMOCHOD_NR_B = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NACZEPA_NR_B = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    LOKALIZACJA_POSR = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KIERUNEK = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    ROZL_NA_PRZES = table.Column<int>(type: "int", nullable: true),
                    TRAFIK_ID = table.Column<int>(type: "int", nullable: true),
                    TRAFIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KOLKO = table.Column<int>(type: "int", nullable: true),
                    AWIZO_WEWN = table.Column<int>(type: "int", nullable: true),
                    AWIZO_DO_ID = table.Column<int>(type: "int", nullable: true),
                    DATA_ORG = table.Column<DateTime>(type: "datetime", nullable: true),
                    WAGA_DEKL = table.Column<double>(type: "float", nullable: true),
                    WAGA_OBL = table.Column<double>(type: "float", nullable: true),
                    OBJ_DEKL = table.Column<double>(type: "float", nullable: true),
                    ILOSC_PRZESYLEK = table.Column<double>(type: "float", nullable: true),
                    UTWORZONO_IMPORTY = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    SPEDYTOR_ID = table.Column<int>(type: "int", nullable: true),
                    SPEDYTOR = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BEZ_SFM = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA2_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KIEROWCA2_TEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    PARTNER_TRAFIK = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    SA_KONTAKTY = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    ROZLICZONA = table.Column<int>(type: "int", nullable: true),
                    RHENUS_ROZL_TRAS_ID = table.Column<int>(type: "int", nullable: true),
                    STATUS_KOSZTY = table.Column<int>(type: "int", nullable: true),
                    PRZELAD_NA_KOLACH = table.Column<int>(type: "int", nullable: true),
                    REF_1 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_3 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_4 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_5 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZA_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    WY_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    WARIANTY_GEN_ZAWY_ID = table.Column<int>(type: "int", nullable: true),
                    WARIANTY_GEN_ZAWY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    IS_EXPORTED = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    IS_EXPORTED_DT = table.Column<DateTime>(type: "datetime", nullable: true),
                    IS_EXPORTED_FILE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DYSPOZYTOR_ID = table.Column<int>(type: "int", nullable: true),
                    DYSPOZYTOR = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TRASA_KOD = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    SA_KOMUNIKATY = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DR_PLAN_ID = table.Column<int>(type: "int", nullable: true),
                    DYNAMICZNA = table.Column<int>(type: "int", nullable: true),
                    MIEJSCA_PAL = table.Column<double>(type: "float", nullable: true),
                    STATUS_PDA = table.Column<int>(type: "int", nullable: true),
                    ID_PDA = table.Column<int>(type: "int", nullable: true),
                    PRZYCHOD = table.Column<double>(type: "float", nullable: true),
                    PRZYCHOD_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    NIEDORECZONE = table.Column<int>(type: "int", nullable: true),
                    GEN_ZAWY_OK = table.Column<int>(type: "int", nullable: true),
                    INFO_SFM = table.Column<string>(type: "text", nullable: true, comment: "Informacje dla SFM-a"),
                    TRASA_POPRZEDNIA_ID = table.Column<int>(type: "int", nullable: true),
                    NIEZGODNOSC = table.Column<short>(type: "smallint", nullable: true, comment: "Flaga, czy jest niezgodnosc"),
                    REKLAMACJA = table.Column<short>(type: "smallint", nullable: true, comment: "Flaga, czy jest reklamacja"),
                    BEZ_KALKULACJI = table.Column<int>(type: "int", nullable: true),
                    STATUS_EMISJA = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    STAN_PLAN = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    ODLEGOSC_WG_MAPY = table.Column<double>(type: "float", nullable: true),
                    TYLKO_CENNIK = table.Column<int>(type: "int", nullable: true),
                    STATUS_KALK = table.Column<int>(type: "int", nullable: true),
                    ROZL_NA_P_KW_FV = table.Column<double>(type: "float", nullable: true),
                    ROZL_NA_P_KW = table.Column<double>(type: "float", nullable: true),
                    ROZL_NA_P_KW_FV_P = table.Column<double>(type: "float", nullable: true),
                    ROZL_NA_P_KW_P = table.Column<double>(type: "float", nullable: true),
                    ODLEGOSC_PUSTE_WG_MAPY = table.Column<double>(type: "float", nullable: true),
                    ODLEGOSC_WG_PRZ = table.Column<double>(type: "float", nullable: true),
                    ODLEGOSC_PUSTE_WG_PRZ = table.Column<double>(type: "float", nullable: true),
                    KWOTA_WAL_FV = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    NIEPODJETE = table.Column<int>(type: "int", nullable: true),
                    GIELDA_POJAZDOW_ID = table.Column<int>(type: "int", nullable: true),
                    ROUTE_TIMETAB_ID = table.Column<int>(type: "int", nullable: true),
                    RELACJA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Oznaczenie relacji np. POZ-WAW"),
                    NR_LINII = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer LH np. POZWAW1"),
                    MIEJSCA_PAL_DEKL = table.Column<double>(type: "float", nullable: true),
                    OCENA_PRZEWOZNIKA = table.Column<short>(type: "smallint", nullable: true, comment: "Ocena wykonania zlecenia przez przewoźnika"),
                    JEST_RW = table.Column<int>(type: "int", nullable: true),
                    TRIG_TIMESTAMP = table.Column<DateTime>(type: "datetime", nullable: true),
                    ADR = table.Column<int>(type: "int", nullable: true),
                    PUNKTY_ADR = table.Column<double>(type: "float", nullable: true),
                    CENNIK_KONTROLA = table.Column<int>(type: "int", nullable: true),
                    PUNKTY_ADR_CHK = table.Column<int>(type: "int", nullable: true),
                    LAMANA = table.Column<int>(type: "int", nullable: true),
                    DIRECT = table.Column<int>(type: "int", nullable: true),
                    LAST_PLAN_CHANGE = table.Column<DateTime>(type: "datetime", nullable: true),
                    LAST_MAG_GEN = table.Column<DateTime>(type: "datetime", nullable: true),
                    OW = table.Column<int>(type: "int", nullable: true),
                    Z_PODLOGI = table.Column<int>(type: "int", nullable: true),
                    PROFIL_NACZ_ID = table.Column<int>(type: "int", nullable: true),
                    PROFIL_NACZ = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KOSZTY_SP = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PRZYCHODY_SP = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    LAST_MAG_GEN_PZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    LOKALIZACJA_NADZ = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    ROUTE_TIMETAB_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    DW = table.Column<int>(type: "int", nullable: true),
                    POJAZD_ADR = table.Column<int>(type: "int", nullable: true),
                    CMR_ID = table.Column<int>(type: "int", nullable: true),
                    CMR = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KAT_TRASY = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    P_ILOSC = table.Column<double>(type: "float", nullable: true),
                    P_WAGA = table.Column<double>(type: "float", nullable: true),
                    P_OBJ = table.Column<double>(type: "float", nullable: true),
                    P_MIEJSCA_PAL = table.Column<double>(type: "float", nullable: true),
                    D_ILOSC = table.Column<double>(type: "float", nullable: true),
                    D_WAGA = table.Column<double>(type: "float", nullable: true),
                    D_OBJ = table.Column<double>(type: "float", nullable: true),
                    D_MIEJSCA_PAL = table.Column<double>(type: "float", nullable: true),
                    ODLEGOSC_WG_MAPY_AUTOSTRADY = table.Column<double>(type: "float", nullable: true),
                    ODLEGOSC_WG_MAPY_EKSPR_KRAJ = table.Column<double>(type: "float", nullable: true),
                    ODLEGOSC_WG_MAPY_POZOSTALE = table.Column<double>(type: "float", nullable: true),
                    BEZKOSZTOWA = table.Column<int>(type: "int", nullable: true),
                    JAK_ROZL = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "FV/NO/RW/--"),
                    ILOSC_LQ_ADR_CHK = table.Column<int>(type: "int", nullable: true),
                    ILOSC_LQ_ADR = table.Column<double>(type: "float", nullable: true),
                    PRZEWOZNIK_KONT = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    PARTNER2_ID = table.Column<int>(type: "int", nullable: true),
                    PARTNER2 = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    SKANY_ZGODNE = table.Column<short>(type: "smallint", nullable: true, comment: "Flaga, czy skany są OK"),
                    KPL_COD = table.Column<int>(type: "int", nullable: true),
                    TEMP_PLUS = table.Column<int>(type: "int", nullable: true),
                    KURIER = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KURIER_PARAMETRY_Z_PARTNERA = table.Column<int>(type: "int", nullable: true),
                    SQL_DEBUG_INFO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    UPDTYPE_PDA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    EMI_STATE = table.Column<int>(type: "int", nullable: true),
                    ANULOWANA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    EMI_ORG_ID = table.Column<int>(type: "int", nullable: true),
                    MOBILESTATUS = table.Column<int>(type: "int", nullable: true, comment: "status wysyłki do mSPEED (10-do wysyłki / 20-odebrano)"),
                    MOBILESEQUENCE = table.Column<int>(type: "int", nullable: true),
                    KOPIA_Z_ID = table.Column<int>(type: "int", nullable: true),
                    DATA_WYK = table.Column<DateTime>(type: "datetime", nullable: true),
                    PRZEWOZNIK_ODDZIAL_ID = table.Column<int>(type: "int", nullable: true),
                    PRZEWOZNIK_ODDZIAL_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    PRZEWOZNIK_ODDZIAL_ADRES = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PRZEWOZNIK_ODDZIAL_MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PRZEWOZNIK_ODDZIAL_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    PRZEWOZNIK_ODDZIAL_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    PODW_OBSADA = table.Column<int>(type: "int", nullable: true),
                    DT_JAZDY_START = table.Column<DateTime>(type: "datetime", nullable: true),
                    CZAS_JAZDY_GRANICA = table.Column<int>(type: "int", nullable: true),
                    MapRouting = table.Column<int>(type: "int", nullable: true),
                    OPT_TASK_ID = table.Column<int>(type: "int", nullable: true),
                    MapRoute = table.Column<int>(type: "int", nullable: true),
                    Source = table.Column<int>(type: "int", nullable: true),
                    CLENIE = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    STATUS_CELNY_ID = table.Column<int>(type: "int", nullable: true),
                    POTW_ODPR = table.Column<int>(type: "int", nullable: true),
                    WWOZ_AGENCJA_ID = table.Column<int>(type: "int", nullable: true),
                    WYWOZ_AGENCJA_ID = table.Column<int>(type: "int", nullable: true),
                    CELNA_BEZ_AUTO_ZLEC_C = table.Column<int>(type: "int", nullable: true),
                    CzasJazdy = table.Column<DateTime>(type: "datetime", nullable: true),
                    CzasOper = table.Column<DateTime>(type: "datetime", nullable: true),
                    CzasCalk = table.Column<DateTime>(type: "datetime", nullable: true),
                    KmOp = table.Column<int>(type: "int", nullable: true),
                    IS_TRANS = table.Column<int>(type: "int", nullable: true),
                    IS_TRANS_DT = table.Column<DateTime>(type: "datetime", nullable: true),
                    IS_TRANS_USER_ID = table.Column<int>(type: "int", nullable: true),
                    IS_TRANS_NUMBER = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    SENT = table.Column<int>(type: "int", nullable: true),
                    SENT_GEO_LOK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    INFO_DLA_KSIEG = table.Column<string>(type: "varchar(250)", unicode: false, maxLength: 250, nullable: true),
                    IS_TELEROUTE = table.Column<int>(type: "int", nullable: true),
                    IS_TELEROUTE_DT = table.Column<DateTime>(type: "datetime", nullable: true),
                    IS_TELEROUTE_USER_ID = table.Column<int>(type: "int", nullable: true),
                    IS_TIMOCOM = table.Column<int>(type: "int", nullable: true),
                    IS_TIMOCOM_DT = table.Column<DateTime>(type: "datetime", nullable: true),
                    IS_TIMOCOM_USER_ID = table.Column<int>(type: "int", nullable: true),
                    IS_TRANSWIDE = table.Column<int>(type: "int", nullable: true),
                    IS_TRANSWIDE_DT = table.Column<DateTime>(type: "datetime", nullable: true),
                    IS_TRANSWIDE_USER_ID = table.Column<int>(type: "int", nullable: true),
                    BEZ_DOD_PALIWOWEGO = table.Column<int>(type: "int", nullable: true),
                    HereAverageKmCost = table.Column<double>(type: "float", nullable: true, comment: "Średni koszt za km"),
                    HereAverageHourCost = table.Column<double>(type: "float", nullable: true, comment: "Średni koszt godziny"),
                    HereRouteCost = table.Column<double>(type: "float", nullable: true, comment: "Koszt stały na trasę"),
                    HereCostCurrency = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    HereRouteCalculateType = table.Column<int>(type: "int", nullable: true, comment: "Wyznaczenie trasy: 1=szybka, 2=krótka, 3=optymalna"),
                    HereTollCalculate = table.Column<int>(type: "int", nullable: true, comment: "Liczy myto: 1=EUR"),
                    HereViolation = table.Column<int>(type: "int", nullable: true, comment: "Naruszanie ograniczeń: 1=zgoda, 0=brak zgody, 2=unikaj"),
                    HereFerries = table.Column<int>(type: "int", nullable: true, comment: "Unikaj promów"),
                    HereHighways = table.Column<int>(type: "int", nullable: true, comment: "Unikaj autostrad"),
                    HerePayments = table.Column<int>(type: "int", nullable: true, comment: "Unikaj płatności"),
                    HereTunels = table.Column<int>(type: "int", nullable: true, comment: "Unikaj tuneli"),
                    HereHazardous = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true, comment: "towary niebezpieczne"),
                    PCA_DT = table.Column<DateTime>(type: "datetime", nullable: true),
                    PCA_DT_RZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    NADRZEDNE_ID = table.Column<int>(type: "int", nullable: true),
                    PRZELADUNEK = table.Column<int>(type: "int", nullable: true),
                    HereTollCalculateBaseCurr = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    HereTollCalculateOtherCurr = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MapLink = table.Column<string>(type: "varchar(4000)", unicode: false, maxLength: 4000, nullable: true),
                    KPL_PAL = table.Column<int>(type: "int", nullable: true),
                    IS_TRANS_REF_NUMBER = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    IS_TRANS_METHOD = table.Column<int>(type: "int", nullable: true),
                    PORTBASE_State = table.Column<int>(type: "int", nullable: true, comment: "Status wysyłki zgłoszenia do PORTBASE: -1=przekazane do wysyłki, -2=błędna struktura, 0=wysłane, 1=przyjęte, 2=odrzucone, 3=zaakceptowane"),
                    PORTBASE_Error = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Kod błędu w przypadku odrzucenia"),
                    PORTBASE_ProcessingState = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Status obsługi zgłoszenia wysłanego do PORTBASE")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_LISTY_LINIOWE", x => x.ID_LISTY_LINIOWE);
                });

            migrationBuilder.CreateTable(
                name: "LISTY_LINIOWE_AIR",
                columns: table => new
                {
                    ID_LISTY_LINIOWE = table.Column<int>(type: "int", nullable: false),
                    MAWB = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KONTRAH_AIR_AWB_ID = table.Column<int>(type: "int", nullable: true),
                    NR_LOTU = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DATA_LOTU = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_CUTOFF = table.Column<DateTime>(type: "datetime", nullable: true),
                    SUM_AIR_ILOSC = table.Column<double>(type: "float", nullable: true),
                    SUM_AIR_WAGA_RZ = table.Column<double>(type: "float", nullable: true),
                    SUM_AIR_WAGA_OBJ = table.Column<double>(type: "float", nullable: true),
                    SUM_AIR_WAGA_PLATNA = table.Column<double>(type: "float", nullable: true),
                    SUM_AIR_OBJ_RZ = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_LISTY_LINIOWE_AIR", x => x.ID_LISTY_LINIOWE);
                },
                comment: "Rozszerzenie tabeli LISTY_LINIOWE - relacja 1:1 z tabelą LISTY_LINIOWE");

            migrationBuilder.CreateTable(
                name: "LISTY_LINIOWE_KIERUNKI",
                columns: table => new
                {
                    ID_LISTY_LINIOWE_KIERUNKI = table.Column<int>(type: "int", nullable: false),
                    LISTY_LINIOWE_ID = table.Column<int>(type: "int", nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    WAGA = table.Column<double>(type: "float", nullable: true),
                    OBJ = table.Column<double>(type: "float", nullable: true),
                    MP = table.Column<double>(type: "float", nullable: true),
                    ILOSC = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_LISTY_LINIOWE_KIERUNKI", x => x.ID_LISTY_LINIOWE_KIERUNKI);
                });

            migrationBuilder.CreateTable(
                name: "LISTY_LINIOWE_KOMUNIK",
                columns: table => new
                {
                    ID_LISTY_LINIOWE_KOMUNIK = table.Column<int>(type: "int", nullable: false),
                    LISTY_LINIOWE_ID = table.Column<int>(type: "int", nullable: true),
                    DATA_GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    PRZECZYTANY = table.Column<int>(type: "int", nullable: true),
                    OD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KOMUNIKAT = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    ODRZUCONY = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_LISTY_LINIOWE_KOMUNIK", x => x.ID_LISTY_LINIOWE_KOMUNIK);
                });

            migrationBuilder.CreateTable(
                name: "LISTY_LINIOWE_LOK",
                columns: table => new
                {
                    ID_LISTY_LINIOWE_LOK = table.Column<int>(type: "int", nullable: false),
                    LISTY_LINIOWE_ID = table.Column<int>(type: "int", nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    ETAP = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    DT_ZA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DT_WY = table.Column<DateTime>(type: "datetime", nullable: true),
                    DT_ZA_RZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    DT_WY_RZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    STAN_PLAN = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    ZA = table.Column<int>(type: "int", nullable: true),
                    WY = table.Column<int>(type: "int", nullable: true),
                    NR_PLOMBY = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    BLOK_PLAN_P = table.Column<int>(type: "int", nullable: true),
                    BLOK_PLAN_W = table.Column<int>(type: "int", nullable: true),
                    ZA_KONIEC = table.Column<int>(type: "int", nullable: true),
                    WY_KONIEC = table.Column<int>(type: "int", nullable: true),
                    NR_PLOMBY_WY = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    ym_gotowosc_za = table.Column<DateTime>(type: "datetime", nullable: true),
                    ym_gotowosc_wy = table.Column<DateTime>(type: "datetime", nullable: true),
                    ym_brama_za = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ym_brama_wy = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_LISTY_LINIOWE_LOK", x => x.ID_LISTY_LINIOWE_LOK);
                });

            migrationBuilder.CreateTable(
                name: "LISTY_LINIOWE_POZ",
                columns: table => new
                {
                    ID_LISTY_LINIOWE_POZ = table.Column<int>(type: "int", nullable: false),
                    LP = table.Column<int>(type: "int", nullable: true),
                    LISTY_LINIOWE_ID = table.Column<int>(type: "int", nullable: true),
                    PRZESYLKI_ID = table.Column<int>(type: "int", nullable: true),
                    CZESCIOWKA = table.Column<int>(type: "int", nullable: true),
                    ILOSC = table.Column<double>(type: "float", nullable: true),
                    WAGA = table.Column<double>(type: "float", nullable: true),
                    OBJ = table.Column<double>(type: "float", nullable: true),
                    LOKALIZACJA_Z = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    LOKALIZACJA_DO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SKAN = table.Column<int>(type: "int", nullable: true),
                    KM = table.Column<double>(type: "float", nullable: true),
                    WYJATEK_RI_ANULOWANA = table.Column<int>(type: "int", nullable: true),
                    SERIA_WYDRUKU = table.Column<int>(type: "int", nullable: true),
                    GRUPA_WYDRUKU = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    BYLO_PONOWNE_PLANOWANIE = table.Column<int>(type: "int", nullable: true),
                    PRZELADUNEK_NA_KOLACH = table.Column<int>(type: "int", nullable: true),
                    DOKUM_OK = table.Column<int>(type: "int", nullable: true),
                    PODJECIE = table.Column<int>(type: "int", nullable: true),
                    DORECZENIE = table.Column<int>(type: "int", nullable: true),
                    MIEJSCA_PAL = table.Column<double>(type: "float", nullable: true),
                    BYL_TYP_P = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    INNA_LOK = table.Column<int>(type: "int", nullable: true),
                    INNA_LOKALIZACJA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    POI_PODJECIE_ID = table.Column<int>(type: "int", nullable: true),
                    ZA_NAZWA = table.Column<string>(type: "varchar(120)", unicode: false, maxLength: 120, nullable: true),
                    ZA_ADRES = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true),
                    ZA_MIASTO = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true),
                    ZA_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    ZA_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    POI_DORECZENIE_ID = table.Column<int>(type: "int", nullable: true),
                    WY_NAZWA = table.Column<string>(type: "varchar(120)", unicode: false, maxLength: 120, nullable: true),
                    WY_ADRES = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true),
                    WY_MIASTO = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true),
                    WY_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    WY_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    LL_ZA_ID = table.Column<int>(type: "int", nullable: true),
                    LL_WY_ID = table.Column<int>(type: "int", nullable: true),
                    MAGAZYN_ZDARZENIA_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    MAGAZYN_ZDARZENIA_POZ_PZ_ID = table.Column<int>(type: "int", nullable: true),
                    NIEDORECZONA = table.Column<int>(type: "int", nullable: true),
                    NIEDORECZONA_WINA = table.Column<int>(type: "int", nullable: true),
                    AWIZO_WEWN = table.Column<int>(type: "int", nullable: true),
                    ZLP_ID = table.Column<int>(type: "int", nullable: true),
                    ZAL_NA_C = table.Column<int>(type: "int", nullable: true),
                    ZAL_NA_N = table.Column<int>(type: "int", nullable: true),
                    BRAK = table.Column<int>(type: "int", nullable: true),
                    ANOMALIA_OPAK_ILOSC = table.Column<double>(type: "float", nullable: true),
                    NIEPODJETA = table.Column<int>(type: "int", nullable: true),
                    BLOKADA_ODPLANOWANIA = table.Column<int>(type: "int", nullable: true),
                    ZLP_ID_ANUL = table.Column<int>(type: "int", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    CLENIE = table.Column<int>(type: "int", nullable: true),
                    SKAN_WY = table.Column<int>(type: "int", nullable: true),
                    BRAK_WY = table.Column<int>(type: "int", nullable: true),
                    ANOMALIA_OPAK_ILOSC_WY = table.Column<double>(type: "float", nullable: true),
                    WYMAGANY_ZALADUNEK = table.Column<int>(type: "int", nullable: true),
                    DO_DEPO = table.Column<int>(type: "int", nullable: true),
                    BYLO_DEPOZYT_GDZIE_JEST_ID = table.Column<int>(type: "int", nullable: true),
                    SQL_DEBUG_INFO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SENT_State = table.Column<int>(type: "int", nullable: true),
                    SENT_DT = table.Column<DateTime>(type: "datetime", nullable: true),
                    LL_ND_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_LISTY_LINIOWE_POZ", x => x.ID_LISTY_LINIOWE_POZ);
                });

            migrationBuilder.CreateTable(
                name: "LISTY_LINIOWE_POZ_P",
                columns: table => new
                {
                    ID_LISTY_LINIOWE_POZ_P = table.Column<int>(type: "int", nullable: false),
                    LP = table.Column<int>(type: "int", nullable: true),
                    LISTY_LINIOWE_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    LISTY_LINIOWE_ID = table.Column<int>(type: "int", nullable: true),
                    PRZESYLKI_ID = table.Column<int>(type: "int", nullable: true),
                    PACZKI_ID = table.Column<int>(type: "int", nullable: true),
                    SKAN = table.Column<int>(type: "int", nullable: true),
                    BRAK = table.Column<int>(type: "int", nullable: true),
                    ANOMALIA_OPAK_ILOSC = table.Column<double>(type: "float", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    SKAN_WY = table.Column<int>(type: "int", nullable: true),
                    BRAK_WY = table.Column<int>(type: "int", nullable: true),
                    ANOMALIA_OPAK_ILOSC_WY = table.Column<double>(type: "float", nullable: true),
                    Z_PODLOGI = table.Column<int>(type: "int", nullable: true),
                    SQL_DEBUG_INFO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NIEPODJETA = table.Column<int>(type: "int", nullable: true),
                    NIEDORECZONA = table.Column<int>(type: "int", nullable: true),
                    NIEDORECZONA_WINA = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_LISTY_LINIOWE_POZ_P", x => x.ID_LISTY_LINIOWE_POZ_P);
                });

            migrationBuilder.CreateTable(
                name: "LISTY_LINIOWE_PROMY",
                columns: table => new
                {
                    ID_LISTY_LINIOWE_PROMY = table.Column<int>(type: "int", nullable: false),
                    LISTY_LINIOWE_ID = table.Column<int>(type: "int", nullable: true),
                    PROMY_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_LISTY_LINIOWE_PROMY", x => x.ID_LISTY_LINIOWE_PROMY);
                });

            migrationBuilder.CreateTable(
                name: "LISTY_LINIOWE_RAIL",
                columns: table => new
                {
                    ID_LISTY_LINIOWE = table.Column<int>(type: "int", nullable: false),
                    DATA_CUTOFF = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_CUTOFF_VGM = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_DO_CENNIKA = table.Column<DateTime>(type: "datetime", nullable: true),
                    BUYERS_CONSOL = table.Column<int>(type: "int", nullable: true),
                    NUMER_SC = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TYP_KONSOLIDACJI = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SUM_RAIL_ILOSC = table.Column<double>(type: "float", nullable: true),
                    SUM_RAIL_WAGA_RZ = table.Column<double>(type: "float", nullable: true),
                    SUM_RAIL_WAGA_OBJ = table.Column<double>(type: "float", nullable: true),
                    SUM_RAIL_WAGA_PLATNA = table.Column<double>(type: "float", nullable: true),
                    SUM_RAIL_OBJ_RZ = table.Column<double>(type: "float", nullable: true),
                    OPERATOR_ID = table.Column<int>(type: "int", nullable: true),
                    OPERATOR = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    OPERATOR_KONT = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    NAZWA_POCIAGU = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    AWIZACJA_RAIL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_LISTY_LINIOWE_RAIL", x => x.ID_LISTY_LINIOWE);
                },
                comment: "Rozszerzenie tabeli LISTY_LINIOWE - relacja 1:1 z tabelą LISTY_LINIOWE");

            migrationBuilder.CreateTable(
                name: "LISTY_LINIOWE_SEA",
                columns: table => new
                {
                    ID_LISTY_LINIOWE = table.Column<int>(type: "int", nullable: false),
                    HBL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    MBL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DATA_CUTOFF = table.Column<DateTime>(type: "datetime", nullable: true),
                    ARMATOR_ID = table.Column<int>(type: "int", nullable: true),
                    ARMATOR = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    ARMATOR_KONT = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    ARMATOR_TEL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    STATEK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_REJSU = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TYP_KONSOLIDACJI = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    BUYERS_CONSOL = table.Column<int>(type: "int", nullable: true),
                    SUM_SEA_ILOSC = table.Column<double>(type: "float", nullable: true),
                    SUM_SEA_WAGA_RZ = table.Column<double>(type: "float", nullable: true),
                    SUM_SEA_WAGA_OBJ = table.Column<double>(type: "float", nullable: true),
                    SUM_SEA_WAGA_PLATNA = table.Column<double>(type: "float", nullable: true),
                    SUM_SEA_OBJ_RZ = table.Column<double>(type: "float", nullable: true),
                    DATA_CUTOFF_VGM = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_DO_CENNIKA = table.Column<DateTime>(type: "datetime", nullable: true),
                    NUMER_SC = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_LISTY_LINIOWE_SEA", x => x.ID_LISTY_LINIOWE);
                },
                comment: "Rozszerzenie tabeli LISTY_LINIOWE - relacja 1:1 z tabelą LISTY_LINIOWE");

            migrationBuilder.CreateTable(
                name: "LISTY_LINIOWE_ZA_WY",
                columns: table => new
                {
                    ID_LISTY_LINIOWE_ZA_WY = table.Column<int>(type: "int", nullable: false),
                    TYP = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    LISTY_LINIOWE_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    WAGA = table.Column<double>(type: "float", nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    LICZNIK = table.Column<double>(type: "float", nullable: true),
                    PALETY = table.Column<double>(type: "float", nullable: true),
                    PALIWO = table.Column<double>(type: "float", nullable: true, comment: "zużyte paliwo w trakcie zdarzenia"),
                    JEDN_WAGI = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    TELEFONY = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DOD_OPIS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    JM = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    WYJAZD_ID = table.Column<int>(type: "int", nullable: true),
                    GEO_LONGI = table.Column<double>(type: "float", nullable: true),
                    GEO_LAT = table.Column<double>(type: "float", nullable: true),
                    INNE_UWAGI = table.Column<string>(type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    DATA_RZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_RZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    DOD_OPIS_RZ = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPOZNIENIE = table.Column<double>(type: "float", nullable: true),
                    OPOZNIENIE_POWOD = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    LADUNEK = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    CZAS_TRWANIA = table.Column<double>(type: "float", nullable: true),
                    MAX_OPOZN = table.Column<double>(type: "float", nullable: true),
                    WYSYLAC_UWAGI = table.Column<int>(type: "int", nullable: true),
                    TEMP_PRZEWOZU_O = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PALETY_WYM = table.Column<double>(type: "float", nullable: true),
                    DATA_RZ_K = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_RZ_K = table.Column<DateTime>(type: "datetime", nullable: true),
                    PUSTY = table.Column<int>(type: "int", nullable: true),
                    GODZ_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    WAGA_ZESTAWU = table.Column<double>(type: "float", nullable: true),
                    DATA_RZ_P = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_RZ_P = table.Column<DateTime>(type: "datetime", nullable: true),
                    LADUNEK_ID = table.Column<int>(type: "int", nullable: true),
                    WAGA_RZ = table.Column<double>(type: "float", nullable: true),
                    TEMP_PRZEWOZU_O_RZ = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    LP_KIE = table.Column<int>(type: "int", nullable: true),
                    ETA_EVENTS_ID = table.Column<int>(type: "int", nullable: true),
                    TRASA_KM = table.Column<int>(type: "int", nullable: true),
                    TRASA_KM_EXTRA = table.Column<int>(type: "int", nullable: true),
                    WYKONANY = table.Column<int>(type: "int", nullable: true),
                    ZMIENIONY = table.Column<int>(type: "int", nullable: true),
                    ZLP_ID = table.Column<int>(type: "int", nullable: true),
                    STATUS = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    SYGN_POI = table.Column<int>(type: "int", nullable: true),
                    STATUS_PDA = table.Column<int>(type: "int", nullable: true),
                    DATA_INSTR = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_INSTR = table.Column<DateTime>(type: "datetime", nullable: true),
                    INSTR = table.Column<int>(type: "int", nullable: true),
                    ZP = table.Column<int>(type: "int", nullable: true),
                    ROZL_SZT = table.Column<int>(type: "int", nullable: true),
                    NIE_PLATNE = table.Column<int>(type: "int", nullable: true),
                    KOR_GODZ = table.Column<int>(type: "int", nullable: true),
                    ZT = table.Column<int>(type: "int", nullable: true),
                    DYSP_GODZ_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DYSP_GODZ_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    ID_PDA = table.Column<int>(type: "int", nullable: true),
                    KONTENER_ID = table.Column<int>(type: "int", nullable: true),
                    KONTENER = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KONTENER2_ID = table.Column<int>(type: "int", nullable: true),
                    KONTENER2 = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    TRASA_KM_ROSN = table.Column<int>(type: "int", nullable: true),
                    LP_PW = table.Column<int>(type: "int", nullable: true),
                    PROMY_ID = table.Column<int>(type: "int", nullable: true),
                    GEO_LONGI_RZ = table.Column<double>(type: "float", nullable: true),
                    GEO_LAT_RZ = table.Column<double>(type: "float", nullable: true),
                    ANUL_ZL = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    ANUL_PW = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    GF_DEF_ID = table.Column<int>(type: "int", nullable: true, comment: "id definicji geofencingu (referencja do tabeli GF_DEF)"),
                    PALIWO_LICZNIK = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')", comment: "końcowy stan licznika paliwa"),
                    PIETROWANIE = table.Column<int>(type: "int", nullable: true),
                    ILOSC_RZ = table.Column<double>(type: "float", nullable: true),
                    SFM_STATUS = table.Column<int>(type: "int", nullable: true, comment: "Status SFM (jak dla tras)"),
                    REALIZOWANY = table.Column<int>(type: "int", nullable: true),
                    LISTY_LINIOWE_LOK_ID = table.Column<int>(type: "int", nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    HUBGATEID = table.Column<int>(type: "int", nullable: true),
                    KOD_POCZT = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    DLUGOSC = table.Column<double>(type: "float", nullable: true),
                    WYSOKOSC = table.Column<double>(type: "float", nullable: true),
                    SZEROKOSC = table.Column<double>(type: "float", nullable: true),
                    OBJ = table.Column<double>(type: "float", nullable: true),
                    LDM = table.Column<double>(type: "float", nullable: true),
                    AIR_SYMBOL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    AIR_NR_LOTU = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    SEA_SYMBOL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SEA_NR_REJSU = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    EMAIL = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true),
                    KONTAKT = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    DATA_RZ_W = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_RZ_W = table.Column<DateTime>(type: "datetime", nullable: true),
                    JAZDA = table.Column<DateTime>(type: "datetime", nullable: true),
                    JAZDA_ROSN = table.Column<DateTime>(type: "datetime", nullable: true),
                    CzasOper = table.Column<DateTime>(type: "datetime", nullable: true),
                    CzasCalk = table.Column<DateTime>(type: "datetime", nullable: true),
                    CzasCalkRosn = table.Column<DateTime>(type: "datetime", nullable: true),
                    KmOp = table.Column<int>(type: "int", nullable: true),
                    KmOpRosn = table.Column<int>(type: "int", nullable: true),
                    KmRz = table.Column<int>(type: "int", nullable: true),
                    KmRzRosn = table.Column<int>(type: "int", nullable: true),
                    ColourFlag = table.Column<int>(type: "int", nullable: true),
                    REF_1 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_3 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_4 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_5 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    RAIL_SYMBOL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ADRES = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true),
                    TRASA_CZAS = table.Column<int>(type: "int", nullable: true),
                    TRASA_CZAS_ROSN = table.Column<int>(type: "int", nullable: true),
                    ZA_WY_NADRZ_ID = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    ZA_WY_GLOWNE_ID = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    PO_PRZELADUNKU = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    CC_ISSENT = table.Column<int>(type: "int", nullable: true, comment: "czy wysłano trasę do zdarzenia (0-NIE /1-TAK)"),
                    AWIZACJA_PRZED = table.Column<DateTime>(type: "datetime", nullable: true),
                    ETA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DisableETA = table.Column<int>(type: "int", nullable: true, comment: "Wyłączenie analizy ETA")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_LISTY_LINIOWE_ZA_WY", x => x.ID_LISTY_LINIOWE_ZA_WY);
                });

            migrationBuilder.CreateTable(
                name: "LOCAL_USERS",
                columns: table => new
                {
                    ID_LOCAL_USERS = table.Column<int>(type: "int", nullable: false),
                    SYMBOL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    HASLO = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true),
                    KATEGORIA = table.Column<int>(type: "int", nullable: true),
                    POZIOM = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    TELEFON = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: true),
                    FAX = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: true),
                    EMAIL = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: true),
                    WSZYSTKIE_LOK = table.Column<short>(type: "smallint", nullable: true),
                    TYLKO_PODGLAD = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    DT_HASLO = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZABLOKOWANY = table.Column<short>(type: "smallint", nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: true),
                    WSZYSTKIE_DZIALY = table.Column<short>(type: "smallint", nullable: true),
                    PRAWA_WWW = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    WWW = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "użytkownik aplikacji WWW"),
                    TEL_KOM = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: true),
                    DEFPROFILE_ID = table.Column<int>(type: "int", nullable: true, comment: "domyślny profil dla konfiguracji kontrolek formularzy"),
                    LCNT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "liczba nieudanych logowań użytkownika"),
                    FUNKCJA = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true, comment: "funkcje jakie może pełnić użytkownik"),
                    APPLICATIONPROFILEID = table.Column<int>(type: "int", nullable: true),
                    DT_VALID = table.Column<DateTime>(type: "datetime", nullable: true, comment: "data ważności hasła tymczasowego"),
                    WSZYSTKIE_ODDZIALY = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "prawo do wszystkich oddziałów klienta"),
                    SINGLEUSEPASSWORD = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "hasło jednorazowe"),
                    KLIENTID = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "id klienta"),
                    ODDZIALID = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "id oddziału klienta"),
                    DT_CREATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "data utworzenia użytkownika"),
                    DT_BLOCK = table.Column<DateTime>(type: "datetime", nullable: true, comment: "data zablokowania użytkownika"),
                    WSZYSTKIE_MIEJSCEA_ZA = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "prawo do wszystkich miejsc ZA klienta"),
                    MIEJSCE_ZA_ID = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "id POI klienta"),
                    TOKEN = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true, comment: "Token używany w eSPEED"),
                    KONTRAHENCI_INSTALACJE_ID = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "id konfiguracji instalacji eSPEED"),
                    STATUS_EMISJA = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_LOCAL_USERS", x => x.ID_LOCAL_USERS);
                });

            migrationBuilder.CreateTable(
                name: "Locker",
                schema: "app",
                columns: table => new
                {
                    LockerId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    TableName = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: false),
                    RecordId = table.Column<int>(type: "int", nullable: false),
                    UserId = table.Column<int>(type: "int", nullable: false),
                    UserName = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: false),
                    ComputerName = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    SessionParams = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    LockDate = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Locker", x => x.LockerId);
                });

            migrationBuilder.CreateTable(
                name: "LOCKER",
                columns: table => new
                {
                    LOCKERID = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    TABLENAME = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: false),
                    RECORDID = table.Column<int>(type: "int", nullable: false),
                    USERID = table.Column<int>(type: "int", nullable: false),
                    USERNAME = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: false),
                    COMPUTERNAME = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    SESSIONPARAMS = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    LOCKDATE = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_LOCKER", x => x.LOCKERID);
                });

            migrationBuilder.CreateTable(
                name: "LOG_GF",
                columns: table => new
                {
                    ID_LOG_GF = table.Column<int>(type: "int", nullable: false),
                    LOG_ACTION = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "typ operacji (INS /UPD /DEL /SEND /CANCEL /ENTER /EXIT /DURATION /ETA)"),
                    OBJ_TYP = table.Column<int>(type: "int", nullable: true, comment: "typ obiektu (11-LISTY_LINIOWE_ZA_WY /12-ZLECENIA_ZA_WY /200-GF_EVENT_DEF)"),
                    REC_ID = table.Column<int>(type: "int", nullable: true, comment: "id obiektu SPEED (GF_EVENT_DEF_ID = [OBJ_TYP;REC_ID])"),
                    GF_SEND_LIST_ID = table.Column<int>(type: "int", nullable: true, comment: "id rekordu wysyłki/przetwarzania (0 - jeśli nie dotyczy)"),
                    SFM_TERM_ID = table.Column<int>(type: "int", nullable: true, comment: "id terminala (-1 - jeśli obsługa wewnętrzna)"),
                    SFM_MSG_ID = table.Column<int>(type: "int", nullable: true, comment: "id utworzonej wiadomości w tabeli SFM_MSG (0 - jeśli nie dotyczy)"),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true, comment: "id pojazdu (0 - jeśli dotyczy ogólnie definicji geofencingu)"),
                    NACZEPA_ID = table.Column<int>(type: "int", nullable: true, comment: "id naczepy"),
                    KIEROWCA_ID = table.Column<int>(type: "int", nullable: true, comment: "id kierowcy"),
                    DT_LOG = table.Column<DateTime>(type: "datetime", nullable: true, comment: "data utworzenia wpisu w logu"),
                    DT_EVENT = table.Column<DateTime>(type: "datetime", nullable: true, comment: "data zdarzenia"),
                    EXT_ID = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "id w systemie zewnętrznym (analogia do GF_SEND_LIST.EXT_ID_xxxx)"),
                    LON = table.Column<double>(type: "float", nullable: true, comment: "długość geograficzna wystąpienia zdarzenia"),
                    LAT = table.Column<double>(type: "float", nullable: true, comment: "szerokość geograficzna wystąpienia zdarzenia"),
                    MESSAGE = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "opis logowanego zdarzenia"),
                    GF_STATUS = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "status obsługi geofencingu (0-brak /1-wykonane /99-błąd)"),
                    GF_ERROR = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "tekst błędu podczas obsługi geofencingu")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_LOG_GF", x => x.ID_LOG_GF);
                },
                comment: "log zdarzeń geofencingu");

            migrationBuilder.CreateTable(
                name: "LOG_SERVICE",
                columns: table => new
                {
                    ID_LOG_SERVICE = table.Column<int>(type: "int", nullable: false),
                    CZASSTART = table.Column<double>(type: "float", nullable: true),
                    CZASSTOP = table.Column<double>(type: "float", nullable: true),
                    ID_UZYTK = table.Column<int>(type: "int", nullable: true),
                    IP_STACJI = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true),
                    APP = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KOD = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true),
                    KLUCZ = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true),
                    NAZWA_UZYTK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    NAZWA_STACJI = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: true),
                    INFO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_LOG_SERVICE", x => x.ID_LOG_SERVICE);
                });

            migrationBuilder.CreateTable(
                name: "logETA",
                columns: table => new
                {
                    SessionId = table.Column<int>(type: "int", nullable: false),
                    orderId = table.Column<int>(type: "int", nullable: true),
                    ID_ZLECENIA = table.Column<int>(type: "int", nullable: false),
                    ID_ZLECENIA_ZA_WY = table.Column<int>(type: "int", nullable: false),
                    NR_ZLECENIA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DT_ETA = table.Column<DateTime>(type: "datetime", nullable: true),
                    ID_TABORU = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "LOGI",
                columns: table => new
                {
                    ID_LOGI = table.Column<int>(type: "int", nullable: false),
                    UZYTKOWNIK_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika - tab: UZYTKOWNIK"),
                    UZYTKOWNIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Symbol użytkownika"),
                    TYP_OPERACJI = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "Typ operacji: C-Nowy, E-Edycja, D-Usunięcie, P-Wydruk, L-Logowanie, O-Wylogowanie, X-Zmiana opcji, R-Czyscz. logów, Z-Błąd"),
                    NAZWA_STACJI = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Nazwa stacji/komputera"),
                    IP_STACJI = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "IP stacji/komputera"),
                    NAZWA_OBIEKTU = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Nazwa obiektu na którym wykonywano operację (nazwa tabeli)"),
                    ID_OBIEKTU = table.Column<int>(type: "int", nullable: true, comment: "ID obiektu na którym wykonywano operację"),
                    OPIS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Dodatkowy opis operacji"),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data"),
                    GODZ = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina"),
                    APPNAME = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Nazwa aplikacji"),
                    APPVER = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Wersja aplikacji"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja"),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dział"),
                    ObjId = table.Column<int>(type: "int", nullable: true),
                    RecId = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_LOGI", x => x.ID_LOGI);
                },
                comment: "Logi systemowe");

            migrationBuilder.CreateTable(
                name: "LoginMethod",
                schema: "rest",
                columns: table => new
                {
                    LoginMethodId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Code = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    Description = table.Column<string>(type: "varchar(max)", unicode: false, nullable: true),
                    DictionaryId = table.Column<int>(type: "int", nullable: true),
                    TextId = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_LoginMethod", x => x.LoginMethodId);
                });

            migrationBuilder.CreateTable(
                name: "LOKALIZACJA_STAN",
                columns: table => new
                {
                    ID_LOKALIZACJA_STAN = table.Column<int>(type: "int", nullable: false),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: false, defaultValueSql: "('')", comment: "Kod lokalizacji"),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "('')", comment: "Data"),
                    STAN = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Flaga stanu 0/1")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_LOKALIZACJA_STAN", x => x.ID_LOKALIZACJA_STAN);
                },
                comment: "Powiązanie działó z lokalizacjami");

            migrationBuilder.CreateTable(
                name: "LOKALIZACJE",
                columns: table => new
                {
                    ID_LOKALIZACJE = table.Column<int>(type: "int", nullable: false),
                    KOD = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: false, comment: "Kod lokalizacji - używany w tabelach systemowych do relacji"),
                    OPIS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Opis lokalizacji"),
                    MIASTO_NA_WYDRUKI = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Miejscowość na wydruki"),
                    SYMBOL_DO_NUMERACJI = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Symbol używany w formacie numeracji w licznikach"),
                    SYMBOL_DO_FK = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Symbol używany w interfejsach do FK"),
                    SYMBOL_DOD_1 = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Dodatkowy symbol używany w interfejsach"),
                    SYMBOL_DOD_2 = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Dodatkowy symbol używany w interfejsach"),
                    SYMBOL_DOD_3 = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Dodatkowy symbol używany w interfejsach"),
                    SYMBOL_W_SIECI = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Symbol lokalizacji w sieci dystrybucyjnej"),
                    STOPKA_FV = table.Column<string>(type: "text", nullable: true, comment: "Dodatkowy tekst umieszczany w stopce wydruków faktur"),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kontrahenta - tab: KONTRAHENCI"),
                    KONTRAH = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Symbol kontrahenta"),
                    SMTP_SERVER = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Konfig. EMAIL - Serwer SMTP"),
                    SMTP_PORT = table.Column<int>(type: "int", nullable: true, comment: "Konfig. EMAIL - Port SMTP"),
                    SMTP_USER = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Konfig. EMAIL - Użytkownik SMTP"),
                    SMTP_PASS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Konfig. EMAIL - Hasło SMTP"),
                    SMTP_AUTH = table.Column<int>(type: "int", nullable: true, comment: "Konfig. EMAIL - Uwierzytelnianie SMTP"),
                    POP3_SERVER = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Konfig. EMAIL - Serwer POP3"),
                    POP3_PORT = table.Column<int>(type: "int", nullable: true, comment: "Konfig. EMAIL - Port POP3"),
                    POP3_USER = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Konfig. EMAIL - Użytkownik POP3"),
                    POP3_PASS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Konfig. EMAIL - Hasło POP3"),
                    SMTP_MAIL_ADRES = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Konfig. EMAIL - Adres mailowy dla SMTP"),
                    WSPOLNA_LISTA_KONTRAH = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy wspólna lista kontrahentów"),
                    WSPOLNA_LISTA_TABORU = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy wspólna lista pojazdów"),
                    SCIEZKA_LOGO = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true, comment: "Ścieżka do pliku graficznego zawierajacego logo do wydruków"),
                    MIEJSCE_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do POI-a - tab: MIEJSCA_ZA_ROZLADUNKU"),
                    MIEJSCE = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true, comment: "Dane POI-a"),
                    USTALENIA_SP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Relacja do tekstu ustaleń klienta na zlec. spedycyjne - tab: TEKSTY_DO_WYDRUKOW"),
                    USTALENIA_SP_P = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Relacja do tekstu ustaleń przewoźnika na zlec. spedycyjne - tab: TEKSTY_DO_WYDRUKOW"),
                    USTALENIA_TR = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Relacja do tekstu ustaleń klienta na zlec. transportowe - tab: TEKSTY_DO_WYDRUKOW"),
                    USTALENIA_TR_P = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Relacja do tekstu ustaleń przewoźnika na zlec. transportowe - tab: TEKSTY_DO_WYDRUKOW"),
                    USTALENIA_DR = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Relacja do tekstu ustaleń klienta na zlec. drobnicowe - tab: TEKSTY_DO_WYDRUKOW"),
                    USTALENIA_DR_P = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Relacja do tekstu ustaleń przewoźnika na zlec. drobnicowe - tab: TEKSTY_DO_WYDRUKOW"),
                    USTALENIA_LL = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Relacja do tekstu ustaleń przewoźnika na trasę drobnicową - tab: TEKSTY_DO_WYDRUKOW"),
                    USTALENIA_LL_ZLEC = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Relacja do tekstu ustaleń klienta na trasę drobnicową - tab: TEKSTY_DO_WYDRUKOW"),
                    LOKALIZACJA_NADRZ_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do lokalizacji nadrzędnej - tab: LOKALIZACJE"),
                    LOKALIZACJA_NADRZ = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Kod lokalizacji nadrzędnej"),
                    POZIOM_STRUKTURY = table.Column<int>(type: "int", nullable: true, comment: "Poziom w strukturze sieci"),
                    UWZGL_W_STRUKT = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy uwzględniać w strukturze sieci"),
                    LOKALIZACJA_OBCA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy lokalizacja obca / zewnętrzna"),
                    NAZWA_K = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Dane koresp. - Nazwa"),
                    ADRES_K = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Dane koresp. - Adres"),
                    MIASTO_K = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Dane koresp. - Miejscowość"),
                    KOD_K = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Dane koresp. - Kod pocztowy"),
                    KRAJ_K = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: true, comment: "Dane koresp. - Kraj"),
                    SYMBOL_DO_FK_2 = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Symbol używany w interfejsach do FK"),
                    SMTP_IMAP = table.Column<int>(type: "int", nullable: true, comment: "*pole nie używane*"),
                    IMAP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Konfig. EMAIL - Rodzaj skrzynki odbiorczej - 0-POP3, 1-IMAP"),
                    IMAP_MAILBOX = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Konfig. EMAIL - Skrzynka IMAP"),
                    AKTYWNA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('1')", comment: "Flaga, czy lokalizacja jest aktywna"),
                    UWZGL_W_WYZN_TRAS = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy uwzględniać w wyznaczaniu tras"),
                    WIRTUALNA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy lokalizacja wirtualna"),
                    KOR_GODZ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Korekta czasu +/- godz"),
                    ZLECAJACY_DRO = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Ustaw zlecającego na przesyłce drobnicowej"),
                    EF_KOR_ZUZ_M = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')", comment: "Moduł EF - Korekta zużycia w mieście"),
                    POKAZ_TABOR_PODRZ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy pokazywać tabor z lokalizacji podrzędnych"),
                    POKAZ_KONTRAH_PODRZ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy pokazywać kontrahentów z lokalizacji podrzędnych"),
                    MAG_OPAK = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy lokalizacja ma magazyn nośników"),
                    EMAIL_K = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Dane koresp. - Email"),
                    TEL_K = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Dane koresp. - Tel"),
                    FAX_K = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Dane koresp. - Fax"),
                    LOKALIZACJA_PARTNERSKA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy lokalizacja partnerska"),
                    SMTP_SSL = table.Column<int>(type: "int", nullable: true, comment: "Konfig. EMAIL - połączenie szyfrowane dla SMTP"),
                    POP3_SSL = table.Column<int>(type: "int", nullable: true, comment: "Konfig. EMAIL - połączenie szyfrowane dla POP3_SSL"),
                    EF_DOSTAWCA_PALIWA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Moduł EF - Dostawca paliwa"),
                    EF_DOSTAWCA_PALIWA_ID = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Moduł EF - Dostawca paliwa"),
                    SORTOWNIA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy lokalizacja jest sortownią"),
                    KONTRAH_OPER_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kontrahenta - tab: KONTRAHENCI"),
                    KONTRAH_OPER = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Symbol kontrahenta"),
                    KRAJ_PROW_DZ = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "Kraj prowadzenia działalności"),
                    IZBA_CELNA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Moduł CŁO - Symbol Izby Celnej"),
                    IZBA_CELNA_ID = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Moduł CŁO - Symbol Izby Celnej"),
                    KOLOR = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('536870911')", comment: "Kolor dla aktywnej lokalizacji"),
                    mSpeedPunktyTrasyWg = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Kolejność punktów trasy 0=wg lp na trasie, 1=wg alg.komiwojażera"),
                    RODZAJ_ZLECENIA_W = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Domyslny typ zlecenia warsztatowego"),
                    MagLog = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy lokalizacja jest magazynem logistycznym"),
                    DisabledCOD = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Wyłączenie COD"),
                    DefaultLanguage = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Domyslny język dla lokalizacji (code2)")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_LOKALIZACJE", x => x.ID_LOKALIZACJE);
                },
                comment: "Lokalizacje systemowe");

            migrationBuilder.CreateTable(
                name: "LOKALIZACJE_DZIALY",
                columns: table => new
                {
                    ID_LOKALIZACJE_DZIALY = table.Column<int>(type: "int", nullable: false),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: false, comment: "Kod lokalizacji"),
                    LOKALIZACJA_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do lokalizacji - tab: LOKALIZACJE"),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: false, comment: "Kod działu"),
                    DZIAL_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do działu - tab: DZIALY")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_LOKALIZACJE_DZIALY", x => x.ID_LOKALIZACJE_DZIALY);
                },
                comment: "Powiązanie działó z lokalizacjami");

            migrationBuilder.CreateTable(
                name: "LOKALIZACJE_PRAWA",
                columns: table => new
                {
                    ID_LOKALIZACJE_PRAWA = table.Column<int>(type: "int", nullable: false),
                    LOKALIZACJE_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do lokalizacji - tab: LOKALIZACJE"),
                    LOKALIZACJE = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Kod lokalizacji"),
                    UZYTKOWNIK_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika - tab: UZYTKOWNIK"),
                    PODGLAD = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy ma prawo podglądu danych z lokalizacji"),
                    EDYCJA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy ma prawo edycji danych z lokalizacji"),
                    CRC = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true, comment: "Kod CRC do weryfikacji poprawnosci wpisu"),
                    MAILING = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy zgoda na mailing")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_LOKALIZACJE_PRAWA", x => x.ID_LOKALIZACJE_PRAWA);
                },
                comment: "Prawa użytkowników do lokalizacji");

            migrationBuilder.CreateTable(
                name: "MacierzZleceniaTabor",
                schema: "opti",
                columns: table => new
                {
                    id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SolverTaskId = table.Column<int>(type: "int", nullable: true),
                    SessionId = table.Column<int>(type: "int", nullable: true),
                    ID_ZLECENIA = table.Column<int>(type: "int", nullable: true),
                    ID_TABORU = table.Column<int>(type: "int", nullable: true),
                    ID_KIEROWCY = table.Column<int>(type: "int", nullable: true),
                    TaborWarunkowo = table.Column<int>(type: "int", nullable: true, defaultValueSql: "((0))")
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "MacierzZleceniaZdarzenia",
                schema: "opti",
                columns: table => new
                {
                    MacierzZleceniaTaborId = table.Column<int>(type: "int", nullable: true),
                    SolverTaskId = table.Column<int>(type: "int", nullable: true),
                    SessionId = table.Column<int>(type: "int", nullable: true),
                    ID_ZLECENIA = table.Column<int>(type: "int", nullable: true),
                    ID_TABORU = table.Column<int>(type: "int", nullable: true),
                    ID_KIEROWCY = table.Column<int>(type: "int", nullable: true),
                    ID_ZLECENIA_ZA_WY = table.Column<int>(type: "int", nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    DYSTANS_KM = table.Column<int>(type: "int", nullable: true),
                    CZAS_JAZDY_MIN = table.Column<int>(type: "int", nullable: true),
                    CZAS_TRWANIA_MIN = table.Column<int>(type: "int", nullable: true),
                    DT_MIN = table.Column<DateTime>(type: "datetime", nullable: true),
                    DT_MAX = table.Column<DateTime>(type: "datetime", nullable: true),
                    DT_ETA = table.Column<DateTime>(type: "datetime", nullable: true),
                    ETA = table.Column<string>(type: "xml", nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "Macro",
                schema: "app",
                columns: table => new
                {
                    MacroId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    Description = table.Column<string>(type: "nvarchar(500)", maxLength: 500, nullable: true),
                    CreateUserId = table.Column<int>(type: "int", nullable: true),
                    CreateUserName = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    CreateDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ModifyUserId = table.Column<int>(type: "int", nullable: true),
                    ModifyUserName = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ModifyDate = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Macro", x => x.MacroId);
                });

            migrationBuilder.CreateTable(
                name: "MacroItem",
                schema: "app",
                columns: table => new
                {
                    MacroItemId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MacroId = table.Column<int>(type: "int", nullable: true),
                    Enum = table.Column<int>(type: "int", nullable: true),
                    OrdinalNumber = table.Column<int>(type: "int", nullable: true),
                    Sleep = table.Column<int>(type: "int", nullable: true),
                    SqlProcedure = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    ActiveFormClass = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ActiveForm = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    Control = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ControlClass = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ControlParent = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ControlValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EditValue = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Key = table.Column<int>(type: "int", nullable: true),
                    Shortcut = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    ActiveView = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    Filter = table.Column<string>(type: "varchar(max)", unicode: false, nullable: true),
                    PageIndex = table.Column<int>(type: "int", nullable: true),
                    RecordIndex = table.Column<int>(type: "int", nullable: true),
                    ToolId = table.Column<int>(type: "int", nullable: true),
                    Category = table.Column<int>(type: "int", nullable: true),
                    ModalParent = table.Column<int>(type: "int", nullable: true),
                    ParentRecordId = table.Column<int>(type: "int", nullable: true),
                    ParentPKValue = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    Mode = table.Column<int>(type: "int", nullable: true),
                    AccessLevel = table.Column<int>(type: "int", nullable: true),
                    StaticParams = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    DynamicParams = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    ModalParams = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MacroItem", x => x.MacroItemId);
                });

            migrationBuilder.CreateTable(
                name: "MAG_OPAK",
                columns: table => new
                {
                    ID_MAG_OPAK = table.Column<int>(type: "int", nullable: false),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: false, comment: "Lokalizacja, a zarazem magazyn"),
                    OPAKOWANIA_ID = table.Column<int>(type: "int", nullable: false, comment: "Relacja do OPAKOWANIA"),
                    PRZYJETO = table.Column<int>(type: "int", nullable: false, comment: "Suma przyjęć"),
                    WYDANO = table.Column<int>(type: "int", nullable: false, comment: "Suma wydań"),
                    STAN = table.Column<int>(type: "int", nullable: false, comment: "Stan magazynu"),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: false, defaultValueSql: "('')", comment: "Dział")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MAG_OPAK", x => x.ID_MAG_OPAK);
                },
                comment: "Magazyny opakowań");

            migrationBuilder.CreateTable(
                name: "MAG_OPAK_ZDARZ",
                columns: table => new
                {
                    ID_MAG_OPAK_ZDARZ = table.Column<int>(type: "int", nullable: false),
                    TYP = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: false, comment: "Typ operacji PZ/WZ/MM/BO"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: false, comment: "Lokalizacja, a zarazem magazyn"),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: false, comment: "Data"),
                    GODZ = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina"),
                    NUMER = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: false, comment: "Numer dokumentu PZ/WZ/MM/BO"),
                    NUMER_KOLEJNY = table.Column<int>(type: "int", nullable: false, comment: "Numer - kolejny"),
                    NUMER_ROK = table.Column<int>(type: "int", nullable: false, comment: "Numer - rok"),
                    NUMER_MIES = table.Column<int>(type: "int", nullable: false, comment: "Numer - miesiąc"),
                    PRZEWOZNIK_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do KONTRAHENCI"),
                    PRZEWOZNIK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Symbol kontrahenta"),
                    KIEROWCA_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do KIEROWCY"),
                    KIEROWCA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwisko i imie kierowcy"),
                    SUMA_ILOSC = table.Column<int>(type: "int", nullable: false, comment: "Suma ilość na dokumencie"),
                    STATUS = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: false, comment: "Status dokumentu O/Z"),
                    UWAGI = table.Column<string>(type: "text", nullable: true, comment: "Uwagi"),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    KONTRAHENT_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do KONTRAHENCI"),
                    KONTRAHENT = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Symbol kontrahenta"),
                    WEWN = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Flaga, czy wewnętrzne"),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: false, defaultValueSql: "('')", comment: "Dział"),
                    ZRODLO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Żródło")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MAG_OPAK_ZDARZ", x => x.ID_MAG_OPAK_ZDARZ);
                },
                comment: "Operacje na magazynie opakowań");

            migrationBuilder.CreateTable(
                name: "MAG_OPAK_ZDARZ_POZ",
                columns: table => new
                {
                    ID_MAG_OPAK_ZDARZ_POZ = table.Column<int>(type: "int", nullable: false),
                    MAG_OPAK_ZDARZ_ID = table.Column<int>(type: "int", nullable: false, comment: "Relacja do MAG_OPAK_ZDARZ"),
                    LP = table.Column<int>(type: "int", nullable: false, comment: "Lp pozycji"),
                    OPAKOWANIA_ID = table.Column<int>(type: "int", nullable: false, comment: "Relacja do OPAKOWANIA"),
                    ILOSC = table.Column<int>(type: "int", nullable: false, comment: "Ilość opakowań na dokumencie"),
                    LISTY_LINIOWE_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do LISTY_LINIOWE"),
                    PRZESYLKI_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do PRZESYLKI"),
                    UWAGI = table.Column<string>(type: "text", nullable: true, comment: "Uwagi"),
                    PACZKI_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do PACZKI"),
                    ROZL = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy rozliczona"),
                    ZLECENIA_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do ZLECENIA"),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do TABOR"),
                    TABOR = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Nr rej pojazdu"),
                    DOTYCZY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Dotyczy"),
                    FAKTURY_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do FAKTURY")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MAG_OPAK_ZDARZ_POZ", x => x.ID_MAG_OPAK_ZDARZ_POZ);
                },
                comment: "Operacje na magazynie opakowań - pozycje");

            migrationBuilder.CreateTable(
                name: "MAGAZYN_ZDARZENIA",
                columns: table => new
                {
                    ID_MAGAZYN_ZDARZENIA = table.Column<int>(type: "int", nullable: false),
                    FRM_ID = table.Column<int>(type: "int", nullable: true),
                    NR_PWZ = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    NR_PWZ_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    NR_PWZ_ROK = table.Column<int>(type: "int", nullable: true),
                    NR_PWZ_MIES = table.Column<int>(type: "int", nullable: true),
                    ZDARZENIE = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    CZAS = table.Column<DateTime>(type: "datetime", nullable: true),
                    UZYTKOWNIK_ID = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    UZYTKOWNIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    UZYTKOWNIK_MAG_ID = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    UZYTKOWNIK_MAG = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    INFO1 = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    INFO2 = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    INFO3 = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    PARTNER_ID = table.Column<int>(type: "int", nullable: true),
                    PARTNER = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    PRZEWOZNIK_ID = table.Column<int>(type: "int", nullable: true),
                    PRZEWOZNIK = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    SAMOCHOD_ID = table.Column<int>(type: "int", nullable: true),
                    SAMOCHOD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KIEROWCA = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    NR_EXT = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    ILE = table.Column<double>(type: "float", nullable: true),
                    WAGA = table.Column<double>(type: "float", nullable: true),
                    OBJ = table.Column<double>(type: "float", nullable: true),
                    LINIOWY = table.Column<int>(type: "int", nullable: true),
                    TABOR_WLASNY = table.Column<int>(type: "int", nullable: true),
                    WYJAZD_ID = table.Column<int>(type: "int", nullable: true),
                    WYJAZD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    LIST_LINIOWY_ID = table.Column<int>(type: "int", nullable: true),
                    PSD = table.Column<int>(type: "int", nullable: true),
                    LIST_LINIOWY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DATA_START = table.Column<DateTime>(type: "datetime", nullable: true),
                    CZAS_START = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_STOP = table.Column<DateTime>(type: "datetime", nullable: true),
                    CZAS_STOP = table.Column<DateTime>(type: "datetime", nullable: true),
                    STAN = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    STATUS_MAIL = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    TECHNICZNE = table.Column<int>(type: "int", nullable: true),
                    WAGA_DEKL = table.Column<double>(type: "float", nullable: true),
                    OBJ_DEKL = table.Column<double>(type: "float", nullable: true),
                    WAGA_OBL = table.Column<double>(type: "float", nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    MAG_LOK_BRAMA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    MAG_LOK_STAT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    WYMUS_PZ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    KIEROWCA_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA_TEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZATW_PO_SKAN = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    ILE_RZ = table.Column<double>(type: "float", nullable: true),
                    MP_DEKL = table.Column<double>(type: "float", nullable: true),
                    MP_RZ = table.Column<double>(type: "float", nullable: true),
                    STATUS_EMISJA = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MAGAZYN_ZDARZENIA", x => x.ID_MAGAZYN_ZDARZENIA);
                });

            migrationBuilder.CreateTable(
                name: "MAGAZYN_ZDARZENIA_POZ",
                columns: table => new
                {
                    ID_MAGAZYN_ZDARZENIA_POZ = table.Column<int>(type: "int", nullable: false),
                    MAGAZYN_ZDARZENIA_ID = table.Column<int>(type: "int", nullable: true),
                    OBIEKT_TYP = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    OBIEKT_ID = table.Column<int>(type: "int", nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    SKAN = table.Column<int>(type: "int", nullable: true),
                    LOKACJA = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    SKAN_DT = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZATW_PO_SKAN = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LISTY_LINIOWE_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    BRAK = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MAGAZYN_ZDARZENIA_POZ", x => x.ID_MAGAZYN_ZDARZENIA_POZ);
                });

            migrationBuilder.CreateTable(
                name: "MAGAZYN_ZDARZENIA_POZ_P",
                columns: table => new
                {
                    ID_MAGAZYN_ZDARZENIA_POZ_P = table.Column<int>(type: "int", nullable: false),
                    LP = table.Column<int>(type: "int", nullable: true),
                    MAGAZYN_ZDARZENIA_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    MAGAZYN_ZDARZENIA_ID = table.Column<int>(type: "int", nullable: true),
                    PRZESYLKI_ID = table.Column<int>(type: "int", nullable: true),
                    PACZKI_ID = table.Column<int>(type: "int", nullable: true),
                    SKAN = table.Column<int>(type: "int", nullable: true),
                    BRAK = table.Column<int>(type: "int", nullable: true),
                    ANOMALIA_OPAK_ILOSC = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MAGAZYN_ZDARZENIA_POZ_P", x => x.ID_MAGAZYN_ZDARZENIA_POZ_P);
                });

            migrationBuilder.CreateTable(
                name: "Mail",
                schema: "app",
                columns: table => new
                {
                    MailId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MailTypeId = table.Column<int>(type: "int", nullable: false),
                    ServerName = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: false),
                    ServerPort = table.Column<int>(type: "int", nullable: true),
                    UserName = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    UserPassword = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    AuthMechanism = table.Column<int>(type: "int", nullable: true),
                    SSL = table.Column<int>(type: "int", nullable: true),
                    SSLStartMode = table.Column<int>(type: "int", nullable: true),
                    DefaultMail = table.Column<int>(type: "int", nullable: true),
                    Name = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    CipherType = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Mail", x => x.MailId);
                });

            migrationBuilder.CreateTable(
                name: "MAIL_IN",
                columns: table => new
                {
                    ID_MAIL_IN = table.Column<int>(type: "int", nullable: false),
                    MAIL_ID = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Identyfikator wiadomości z klienta pocztowego"),
                    MAIL_TYPE = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Typ wiadomości: ZLECENIE,TABOR,PRZESYLKI etc."),
                    DATE_IN = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data odbioru"),
                    TIME_IN = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina odbioru"),
                    SUBJECT = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Temat"),
                    MAIL_FROM = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Adres nadawcy"),
                    MAIL_TO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Adres odbiorcy"),
                    MAIL_BODY = table.Column<string>(type: "text", nullable: true, comment: "Treść wiadomości"),
                    OBJECT_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do obiektu jaki został utworzony z wiadomości"),
                    OBJECT = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Numer obiektu utworzonego z wiadomości"),
                    LOCALIZATION = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja PSD"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja"),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dział"),
                    DUPLIKAT = table.Column<int>(type: "int", nullable: true, comment: "Znacznik, czy duplikat wiadomości"),
                    WCZYTANY = table.Column<int>(type: "int", nullable: true, comment: "Znacznik, czy utworzono obiekt z wiadomości"),
                    EMI_VER = table.Column<int>(type: "int", nullable: true, comment: "Wersja EMI"),
                    EMI_XML_ID = table.Column<int>(type: "int", nullable: true, comment: "Plik XML")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MAIL_IN", x => x.ID_MAIL_IN);
                },
                comment: "Poczta przychodząca (E-Mail integrator)");

            migrationBuilder.CreateTable(
                name: "MAIL_IN_ATTACH",
                columns: table => new
                {
                    ID_MAIL_IN_ATTACH = table.Column<int>(type: "int", nullable: false),
                    MAIL_IN_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do nagłówka wiadomości - tab: MAIL_IN"),
                    FILE_NAME = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Nazwa pliku"),
                    BODY = table.Column<byte[]>(type: "image", nullable: true, comment: "Zawartość pliku")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MAIL_IN_ATTACH", x => x.ID_MAIL_IN_ATTACH);
                },
                comment: "Załączniki do poczty przychodzącej (E-Mail integrator)");

            migrationBuilder.CreateTable(
                name: "MAIL_OUT",
                columns: table => new
                {
                    ID_MAIL_OUT = table.Column<int>(type: "int", nullable: false),
                    MAIL_TYPE = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Typ wiadomości: ZLECENIE,TABOR,PRZESYLKI etc."),
                    DATE_OUT = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data wysłania"),
                    TIME_OUT = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina wysłania"),
                    SUBJECT = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Temat wiadomości"),
                    MAIL_FROM = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Adres nadawcy"),
                    MAIL_TO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Adres odbiorcy"),
                    MAIL_BODY = table.Column<string>(type: "text", nullable: true, comment: "Treść wiadomości"),
                    USER_SEND = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Użytkownik wysyłający"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja"),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dział"),
                    OBJ_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do obiektu - zależna od typu wiadomości"),
                    OBJ = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Numer obiektu wyeksportowanego"),
                    EMI_VER = table.Column<int>(type: "int", nullable: true, comment: "Wersja EMI"),
                    EMI_XML_ID = table.Column<int>(type: "int", nullable: true, comment: "Plik XML")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MAIL_OUT", x => x.ID_MAIL_OUT);
                },
                comment: "Poczta wychodzaca (E-Mail integrator)");

            migrationBuilder.CreateTable(
                name: "MAIL_OUT_ATTACH",
                columns: table => new
                {
                    ID_MAIL_OUT_ATTACH = table.Column<int>(type: "int", nullable: false),
                    MAIL_OUT_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do nagłówka wiadomości - tab: MAIL_OUT"),
                    FILE_NAME = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Nazwa pliku"),
                    BODY = table.Column<byte[]>(type: "image", nullable: true, comment: "Zawartość pliku")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MAIL_OUT_ATTACH", x => x.ID_MAIL_OUT_ATTACH);
                },
                comment: "Załączniki do poczty wychodzącej (E-Mail integrator)");

            migrationBuilder.CreateTable(
                name: "MailLayoutDef",
                columns: table => new
                {
                    IdMailLayoutDef = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    LanguageId = table.Column<int>(type: "int", nullable: true),
                    ObjId = table.Column<int>(type: "int", nullable: true),
                    Location = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    Department = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    Name = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    Subject = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true),
                    Body = table.Column<string>(type: "varchar(max)", unicode: false, nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__MailLayo__B54D46B74150F1E7", x => x.IdMailLayoutDef);
                });

            migrationBuilder.CreateTable(
                name: "MailType",
                schema: "app",
                columns: table => new
                {
                    MailTypeId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Type = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    Incoming = table.Column<int>(type: "int", nullable: true),
                    Outgoing = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MailType", x => x.MailTypeId);
                });

            migrationBuilder.CreateTable(
                name: "MAKRA_STATUSY",
                columns: table => new
                {
                    ID_MAKRA_STATUSY = table.Column<int>(type: "int", nullable: false),
                    AKTYWNE = table.Column<int>(type: "int", nullable: true),
                    NR_MAKRA = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    OBIEKT = table.Column<int>(type: "int", nullable: true),
                    SYST_ZRODL = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    STATUS = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    STATUS_SFM = table.Column<int>(type: "int", nullable: true),
                    TELEFON = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    TELEFON_AKTYWNY = table.Column<int>(type: "int", nullable: true),
                    PROCEDURA = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: true),
                    PROCEDURA_ID = table.Column<int>(type: "int", nullable: true),
                    PROCEDURA_AKTYWNA = table.Column<int>(type: "int", nullable: true),
                    ID_OBJ_WZORZEC = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "ID wzorca do utworzenia wiadomości"),
                    ALERT_MSG = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "(0/1) utworz wiadomość typu alert"),
                    FUNKCJA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    FUNKCJA_AKTYWNA = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MAKRA_STATUSY", x => x.ID_MAKRA_STATUSY);
                });

            migrationBuilder.CreateTable(
                name: "MANDATY_WYKROCZ",
                columns: table => new
                {
                    ID_MANDATY_WYKROCZ = table.Column<int>(type: "int", nullable: false),
                    KIEROWCA_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    TABOR = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    RODZAJ = table.Column<int>(type: "int", nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    MIEJSCE = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    OKOLICZNOSCI = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WAZNOSC = table.Column<int>(type: "int", nullable: true),
                    KTO_PLACI = table.Column<int>(type: "int", nullable: true),
                    STATUS = table.Column<int>(type: "int", nullable: true),
                    KARA = table.Column<double>(type: "float", nullable: true),
                    KARA_WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KARA_PLN = table.Column<double>(type: "float", nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    UZYTKOWNIK_ID = table.Column<int>(type: "int", nullable: true),
                    UZYTKOWNIK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    NACZEPA_ID = table.Column<int>(type: "int", nullable: true),
                    NACZEPA = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    ZLECENIE_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    AKTA_SPRAWY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TYP = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MANDATY_WYKROCZ", x => x.ID_MANDATY_WYKROCZ);
                });

            migrationBuilder.CreateTable(
                name: "MANDATY_WYKROCZ_ROZL",
                columns: table => new
                {
                    ID_MANDATY_WYKROCZ_ROZL = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MANDATY_WYKROCZ_ID = table.Column<int>(type: "int", nullable: true),
                    STRONA = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    WARTOSC = table.Column<double>(type: "float", nullable: true),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    ILE_RAT = table.Column<int>(type: "int", nullable: true),
                    WARTOSC_RATY = table.Column<double>(type: "float", nullable: true),
                    WALUTA_RATY = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    SPLATA_RAT_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    SPLATA_RAT_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    PODST_ROZL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    STATUS = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MANDATY_WYKROCZ_ROZL", x => x.ID_MANDATY_WYKROCZ_ROZL);
                });

            migrationBuilder.CreateTable(
                name: "Map_OptiRoute_Group",
                schema: "opti",
                columns: table => new
                {
                    idx = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    dtCreate = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    sessionId = table.Column<int>(type: "int", nullable: true),
                    groupId = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    distTotal = table.Column<int>(type: "int", nullable: true),
                    distRoute = table.Column<int>(type: "int", nullable: true),
                    distFerry = table.Column<int>(type: "int", nullable: true),
                    timeTotal = table.Column<int>(type: "int", nullable: true),
                    timeRoute = table.Column<int>(type: "int", nullable: true),
                    timeFerry = table.Column<int>(type: "int", nullable: true),
                    error = table.Column<string>(type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    step = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    xml = table.Column<string>(type: "xml", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__Map_Opti__DC501A78404F47E3", x => x.idx);
                });

            migrationBuilder.CreateTable(
                name: "Map_OptiRoute_Save",
                schema: "opti",
                columns: table => new
                {
                    idx = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    dtCreate = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    sessionId = table.Column<int>(type: "int", nullable: true),
                    step = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    xml = table.Column<string>(type: "xml", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__Map_Opti__DC501A7897699FD2", x => x.idx);
                });

            migrationBuilder.CreateTable(
                name: "Map_OptiRoute_Task",
                schema: "opti",
                columns: table => new
                {
                    idx = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    sessionId = table.Column<int>(type: "int", nullable: true),
                    groupId = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    taskId = table.Column<int>(type: "int", nullable: true),
                    lp = table.Column<int>(type: "int", nullable: true),
                    distTotal = table.Column<int>(type: "int", nullable: true),
                    distRoute = table.Column<int>(type: "int", nullable: true),
                    distFerry = table.Column<int>(type: "int", nullable: true),
                    timeTotal = table.Column<int>(type: "int", nullable: true),
                    timeRoute = table.Column<int>(type: "int", nullable: true),
                    timeFerry = table.Column<int>(type: "int", nullable: true),
                    step = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    xml = table.Column<string>(type: "xml", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__Map_Opti__DC501A78A96D320B", x => x.idx);
                });

            migrationBuilder.CreateTable(
                name: "Map_OptiRoute_TaskItem",
                schema: "opti",
                columns: table => new
                {
                    idx = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    sessionId = table.Column<int>(type: "int", nullable: true),
                    groupId = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    taskId = table.Column<int>(type: "int", nullable: true),
                    lp = table.Column<int>(type: "int", nullable: true),
                    distance = table.Column<int>(type: "int", nullable: true),
                    time = table.Column<int>(type: "int", nullable: true),
                    ferry = table.Column<int>(type: "int", nullable: true),
                    type = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    step = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__Map_Opti__DC501A781FA9DB9E", x => x.idx);
                });

            migrationBuilder.CreateTable(
                name: "Map_OptiRoute_Toll",
                schema: "opti",
                columns: table => new
                {
                    idx = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    sessionId = table.Column<int>(type: "int", nullable: true),
                    groupId = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    lp = table.Column<int>(type: "int", nullable: true),
                    type = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    system = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    country = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    lpp = table.Column<int>(type: "int", nullable: true),
                    cost = table.Column<double>(type: "float", nullable: true),
                    currency = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    daylightHrs = table.Column<int>(type: "int", nullable: true),
                    passType = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    passNr = table.Column<int>(type: "int", nullable: true),
                    step = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    xml = table.Column<string>(type: "xml", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__Map_Opti__DC501A786CD46CDE", x => x.idx);
                });

            migrationBuilder.CreateTable(
                name: "MAPA_HISTORIA",
                columns: table => new
                {
                    ID_MAPA_HISTORIA = table.Column<int>(type: "int", nullable: false),
                    TRASA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Lista miast na trasie"),
                    MAPA = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    ALTERNATYWNE = table.Column<int>(type: "int", nullable: true),
                    ODLEGLOSC_RAZEM = table.Column<double>(type: "float", nullable: true),
                    ODLEGLOSC = table.Column<double>(type: "float", nullable: true),
                    DOJAZD = table.Column<double>(type: "float", nullable: true),
                    KOSZTY = table.Column<double>(type: "float", nullable: true),
                    MYTO = table.Column<double>(type: "float", nullable: true),
                    KOSZTY_RAZEM = table.Column<double>(type: "float", nullable: true),
                    CZAS = table.Column<DateTime>(type: "datetime", nullable: true),
                    USTAWIENIA = table.Column<string>(type: "text", nullable: true),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia rekordu"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Czas utworzenia rekordu"),
                    CREATE_USER_ID = table.Column<int>(type: "int", nullable: true, comment: "Id uzytkownika tworzacego rekord"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa uzytkownika tworzacego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji rekordu"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Czas ostatniej modyfikacji rekordu"),
                    MODIFY_USER_ID = table.Column<int>(type: "int", nullable: true, comment: "Id uzytkownika modyfikujacego rekord"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa uzytkownika modyfikujacego rekord")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MAPA_HISTORIA", x => x.ID_MAPA_HISTORIA);
                });

            migrationBuilder.CreateTable(
                name: "MAPA_HISTORIA_POZ",
                columns: table => new
                {
                    ID_MAPA_HISTORIA_POZ = table.Column<int>(type: "int", nullable: false),
                    MAPA_HISTORIA_ID = table.Column<int>(type: "int", nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    ORG_LP = table.Column<int>(type: "int", nullable: true),
                    ID_OBJ = table.Column<int>(type: "int", nullable: true),
                    ID_REC = table.Column<int>(type: "int", nullable: true),
                    ZAZN = table.Column<int>(type: "int", nullable: true),
                    TYP = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    NAZWA = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true),
                    KRAJ_ISO = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    KRAJ = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    KOD = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    POCZTA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MIEJSCOWOSC = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ADRES = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    CZASPOSTOJU = table.Column<DateTime>(type: "datetime", nullable: true),
                    DX = table.Column<int>(type: "int", nullable: true),
                    DY = table.Column<int>(type: "int", nullable: true),
                    FLON = table.Column<double>(type: "float", nullable: true),
                    FLAT = table.Column<double>(type: "float", nullable: true),
                    ORGRECID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    BLOKADA = table.Column<short>(type: "smallint", nullable: true),
                    ID_START = table.Column<int>(type: "int", nullable: true),
                    ID_STOP = table.Column<int>(type: "int", nullable: true),
                    OBLICZ = table.Column<short>(type: "smallint", nullable: true),
                    ZGEOKODOWANY = table.Column<int>(type: "int", nullable: true),
                    POWIELONY = table.Column<int>(type: "int", nullable: true),
                    DATA_RZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_RZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    LICZNIK = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MAPA_HISTORIA_POZ", x => x.ID_MAPA_HISTORIA_POZ);
                });

            migrationBuilder.CreateTable(
                name: "MAPA_UTRUDNIENIA2",
                columns: table => new
                {
                    ID_MAPA_UTRUDNIENIA2 = table.Column<int>(type: "int", nullable: false),
                    NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    AKTYWNE = table.Column<int>(type: "int", nullable: true),
                    TYP = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MAPA_UTRUDNIENIA2", x => x.ID_MAPA_UTRUDNIENIA2);
                });

            migrationBuilder.CreateTable(
                name: "MAPA_UTRUDNIENIA2_POZ",
                columns: table => new
                {
                    ID_MAPA_UTRUDNIENIA2_POZ = table.Column<int>(type: "int", nullable: false),
                    MAPA_UTRUDNIENIA_ID = table.Column<int>(type: "int", nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    LON = table.Column<double>(type: "float", nullable: true),
                    LAT = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MAPA_UTRUDNIENIA2_POZ", x => x.ID_MAPA_UTRUDNIENIA2_POZ);
                });

            migrationBuilder.CreateTable(
                name: "MapCatalog",
                columns: table => new
                {
                    MapCatalogId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Label = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: false, defaultValueSql: "('')"),
                    VehicleId = table.Column<int>(type: "int", nullable: true),
                    Payments = table.Column<int>(type: "int", nullable: true),
                    Highways = table.Column<int>(type: "int", nullable: true),
                    Tunnels = table.Column<int>(type: "int", nullable: true),
                    RouteRestrictionsPenalty = table.Column<int>(type: "int", nullable: true),
                    Ferries = table.Column<int>(type: "int", nullable: true),
                    RoutingType = table.Column<int>(type: "int", nullable: true),
                    hazardous = table.Column<string>(type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    CostConstant = table.Column<decimal>(type: "money", nullable: true),
                    CostPerKM = table.Column<decimal>(type: "money", nullable: true),
                    CostPerHour = table.Column<decimal>(type: "money", nullable: true),
                    CostCurrency = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    CostTotal = table.Column<decimal>(type: "money", nullable: true),
                    CreateUserId = table.Column<int>(type: "int", nullable: true),
                    CreateDatetime = table.Column<DateTime>(type: "datetime", nullable: true),
                    ModifyUserId = table.Column<int>(type: "int", nullable: true),
                    ModifyDatetime = table.Column<DateTime>(type: "datetime", nullable: true),
                    Toll = table.Column<int>(type: "int", nullable: true),
                    TollCurrency = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    TollCurrencyExceptions = table.Column<string>(type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MapCatalog", x => x.MapCatalogId);
                });

            migrationBuilder.CreateTable(
                name: "MapCatalogDetail",
                columns: table => new
                {
                    MapCatalogDetailId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MapCatalogId = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    OrdinalNumber = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    Longitude = table.Column<double>(type: "float", nullable: true),
                    Latitude = table.Column<double>(type: "float", nullable: true),
                    City = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    Street = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    HouseNumber = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    Postcode = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    State = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    CountryCode = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    Role = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: false, defaultValueSql: "('')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MapCatalogDetail", x => x.MapCatalogDetailId);
                });

            migrationBuilder.CreateTable(
                name: "MapDetails",
                schema: "map",
                columns: table => new
                {
                    MapDetailsId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ObjectId = table.Column<int>(type: "int", nullable: true),
                    RecId = table.Column<int>(type: "int", nullable: true),
                    TimeStamp = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MapDetails", x => x.MapDetailsId);
                });

            migrationBuilder.CreateTable(
                name: "MapRoutingLog",
                schema: "edi",
                columns: table => new
                {
                    MapRoutingLogId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ObjId = table.Column<int>(type: "int", nullable: true),
                    RecId = table.Column<int>(type: "int", nullable: true),
                    ErrorDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ErrorId = table.Column<int>(type: "int", nullable: true),
                    ErrorMsg = table.Column<string>(type: "varchar(max)", unicode: false, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MapRoutingLog", x => x.MapRoutingLogId);
                });

            migrationBuilder.CreateTable(
                name: "MARKA",
                columns: table => new
                {
                    ID_MARKA = table.Column<int>(type: "int", nullable: false),
                    NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    RODZAJ = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    RODZAJ_OPIS = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MARKA", x => x.ID_MARKA);
                });

            migrationBuilder.CreateTable(
                name: "MemoryStatusLog",
                columns: table => new
                {
                    idMemoryStatusLog = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    session = table.Column<Guid>(type: "uniqueidentifier", nullable: true, defaultValueSql: "(newid())"),
                    timestamp = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    userId = table.Column<int>(type: "int", nullable: true),
                    @class = table.Column<string>(name: "class", type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    action = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    ms_MemoryLoad = table.Column<long>(type: "bigint", nullable: true),
                    ms_TotalPhys = table.Column<long>(type: "bigint", nullable: true),
                    ms_AvailPhys = table.Column<long>(type: "bigint", nullable: true),
                    ms_TotalPageFile = table.Column<long>(type: "bigint", nullable: true),
                    ms_AvailPageFile = table.Column<long>(type: "bigint", nullable: true),
                    ms_TotalVirtual = table.Column<long>(type: "bigint", nullable: true),
                    ms_AvailVirtual = table.Column<long>(type: "bigint", nullable: true),
                    ms_AvailExtendedVirtual = table.Column<long>(type: "bigint", nullable: true),
                    hs_TotalAddrSpace = table.Column<long>(type: "bigint", nullable: true),
                    hs_TotalUncommitted = table.Column<long>(type: "bigint", nullable: true),
                    hs_TotalCommitted = table.Column<long>(type: "bigint", nullable: true),
                    hs_TotalAllocated = table.Column<long>(type: "bigint", nullable: true),
                    hs_TotalFree = table.Column<long>(type: "bigint", nullable: true),
                    hs_FreeSmall = table.Column<long>(type: "bigint", nullable: true),
                    hs_FreeBig = table.Column<long>(type: "bigint", nullable: true),
                    hs_Overhead = table.Column<long>(type: "bigint", nullable: true),
                    hs_HeapErrorCode = table.Column<long>(type: "bigint", nullable: true),
                    opt_ReadMax = table.Column<int>(type: "int", nullable: true),
                    opt_ReadCnt = table.Column<int>(type: "int", nullable: true),
                    opt_ReadCnt2 = table.Column<int>(type: "int", nullable: true),
                    opt_WriteMax = table.Column<int>(type: "int", nullable: true),
                    opt_WriteCnt = table.Column<int>(type: "int", nullable: true),
                    opt_WriteCnt2 = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__MemorySt__1D93B309426E2F25", x => x.idMemoryStatusLog);
                });

            migrationBuilder.CreateTable(
                name: "METRYKI_EXT",
                columns: table => new
                {
                    ID_METRYKI_EXT = table.Column<int>(type: "int", nullable: false),
                    TABELA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: false),
                    ID = table.Column<int>(type: "int", nullable: false),
                    ZRODLO = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: false),
                    WERSJA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SCHEMAT = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    GDPR_SOURCE_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_METRYKI_EXT", x => x.ID_METRYKI_EXT);
                });

            migrationBuilder.CreateTable(
                name: "MIEJSCA_ZA_ROZLADUNKU",
                columns: table => new
                {
                    ID_MIEJSCA_ZA_ROZLADUNKU = table.Column<int>(type: "int", nullable: false),
                    RODZAJ_M = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Rodzaj systemowy (MC_ZA_WY, MC_GRANICA, etc)"),
                    KLIENT_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kontrahenta - tab.: KONTRAHENCI"),
                    KLIENT = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Symbol kontrahenta"),
                    NAZWA = table.Column<string>(type: "varchar(120)", unicode: false, maxLength: 120, nullable: true, comment: "Nazwa POI-a"),
                    ADRES = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true, comment: "Adres POI-a"),
                    MIASTO = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true, comment: "Miejscowość POI-a"),
                    KOD_POCZT = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Kod pocztowy POI-a"),
                    KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Kraj POI-a"),
                    TELEFONY = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Telefon do POI-a"),
                    OPISOWO = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy POI jest określony adresem czy opisowo"),
                    OPIS = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true, comment: "Opis POI-a"),
                    GEO_LONGI = table.Column<double>(type: "float", nullable: true, comment: "GPS - długość"),
                    GEO_LAT = table.Column<double>(type: "float", nullable: true, comment: "GPS - szerokość"),
                    CZAS_TRWANIA = table.Column<double>(type: "float", nullable: true, comment: "Domyśłny czas trwania zdarzenia na POI-u"),
                    UWAGI = table.Column<string>(type: "varchar(1500)", unicode: false, maxLength: 1500, nullable: true, comment: "Dowolne uwagi do POI-a"),
                    WYSYLAC_UWAGI = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy wysyłać uwagi (SFM)"),
                    IDPOIEXT = table.Column<long>(type: "bigint", nullable: true, comment: "Zewnętrzny ID - na potrzeby interfejsów"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja"),
                    ZA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy POI jest miejscem załadunku"),
                    WY = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy POI jest miejscem wyładunku"),
                    SYMBOL_EX = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Symbol zewnętrzny"),
                    GODZ_OD = table.Column<DateTime>(type: "datetime", nullable: true, comment: "POI czynny od"),
                    GODZ_DO = table.Column<DateTime>(type: "datetime", nullable: true, comment: "POI czynny do"),
                    OFERTA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy POI jest na potrzeby ofertowania"),
                    SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Symbol POI-a"),
                    WOJEWODZTWO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Województwo POI-a"),
                    REJON = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Rejon POI-a"),
                    RODZAJ = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Rodzaj użytkownika - dowolny rodzaj wg użytkownika"),
                    KONTRAHENCI_ID = table.Column<int>(type: "int", nullable: true, comment: "POI wewnętrzny, Relacja do kontrahenta - tab.: KONTRAHENCI"),
                    KOD_STD_TRASY = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Kod domyślnej/ standardowej trasy"),
                    KOD_STD_TRASY_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do trasy, tab: TRASY"),
                    ADRES_MAPA_WWW = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true, comment: "Adres www do mapy internetowej"),
                    FAX = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Fax do POI-a"),
                    PORT_NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa portu - spedycja morska"),
                    PORT_SYMBOL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Symbol portu - spedycja morska"),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    GEO_AKCEPTACJA = table.Column<int>(type: "int", nullable: true, comment: "GPS - akceptacja"),
                    GEO_POZIOM_UFN = table.Column<int>(type: "int", nullable: true, comment: "GPS - poziom ufności"),
                    POWIAT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Powiat POI-a"),
                    GMINA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Gmina POI-a"),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true, comment: "Ilość załączników"),
                    EMAIL = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true, comment: "Email do POI-a"),
                    OSOBA_KONTAKT = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true, comment: "Osoba kontaktowa"),
                    DUPLIKATY_NADRZ = table.Column<int>(type: "int", nullable: true),
                    MapGeoCoding = table.Column<int>(type: "int", nullable: true),
                    LANG = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "Język wydruków"),
                    ProvinceId = table.Column<int>(type: "int", nullable: true),
                    SendMail = table.Column<int>(type: "int", nullable: true),
                    SendFax = table.Column<int>(type: "int", nullable: true),
                    UNLOCO = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Kod UNLOCO"),
                    mSpeedWylaczPodpisPOD = table.Column<int>(type: "int", nullable: true, comment: "Opcja wyłaczenia podpisu POD"),
                    mSpeedWylaczInfoPobr = table.Column<int>(type: "int", nullable: true, comment: "Opcja wyłaczenia informacji o pobraniu"),
                    OilHeatingAddressId = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Kod miejsca dostawy towaru dla przewozu oleju opałowego"),
                    AWIZACJA_PRZED = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Awizacja PRZED"),
                    mSpeedWylaczPodpisPOP = table.Column<int>(type: "int", nullable: true, comment: "Opcja wyłaczenia podpisu POP"),
                    mSpeedWylaczDodPaczki = table.Column<int>(type: "int", nullable: true, comment: "Opcja wyłaczenia dodawania paczki"),
                    DisableETA = table.Column<int>(type: "int", nullable: true, comment: "Wyłączenie analizy ETA"),
                    Nieaktywne = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Poi wyłaczony")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MIEJSCA_ZA_ROZLADUNKU", x => x.ID_MIEJSCA_ZA_ROZLADUNKU);
                },
                comment: "Słownik miejsc za/rozładunky (POI-e)");

            migrationBuilder.CreateTable(
                name: "MIEJSCA_ZA_WY_CZAS",
                columns: table => new
                {
                    ID_MIEJSCA_ZA_WY_CZAS = table.Column<int>(type: "int", nullable: false),
                    MIEJSCA_ZA_ROZLADUNKU_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do POI-a - tab.: MIEJSCA_ZA_ROZLADUNKU"),
                    DZIEN_TYG = table.Column<int>(type: "int", nullable: true, comment: "Dzień tygodnia"),
                    GODZ_OD = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godz od"),
                    GODZ_DO = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godz do")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MIEJSCA_ZA_WY_CZAS", x => x.ID_MIEJSCA_ZA_WY_CZAS);
                },
                comment: "Okna czasowe dla POI-a (detal do MIEJSCA_ZA_ROZLADUNKU)");

            migrationBuilder.CreateTable(
                name: "MIEJSCA_ZA_WY_KONTRAH",
                columns: table => new
                {
                    ID_MIEJSCA_ZA_WY_KONTRAH = table.Column<int>(type: "int", nullable: false),
                    KLIENT_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kontrahenta - tab.: KONTRAHENCI"),
                    KLIENT = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Symbol kontrahenta"),
                    MIEJSCA_ZA_ROZLADUNKU_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do POI-a - tab.: MIEJSCA_ZA_ROZLADUNKU"),
                    DOMYSLNY = table.Column<int>(type: "int", nullable: true, comment: "Domyślny")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MIEJSCA_ZA_WY_KONTRAH", x => x.ID_MIEJSCA_ZA_WY_KONTRAH);
                },
                comment: "Relacje POI-ów do Kontrahentów (detal do MIEJSCA_ZA_ROZLADUNKU)");

            migrationBuilder.CreateTable(
                name: "MIEJSCA_ZA_WY_MYJNIE",
                columns: table => new
                {
                    ID_MIEJSCA_ZA_ROZLADUNKU = table.Column<int>(type: "int", nullable: false),
                    ZRZESZENIE = table.Column<int>(type: "int", nullable: true),
                    CERT_KOSZERNOSCI = table.Column<int>(type: "int", nullable: true),
                    WAZNOSC_CERT_MYCIA = table.Column<int>(type: "int", nullable: true),
                    PRIORYTET = table.Column<int>(type: "int", nullable: true),
                    ALGORYTM = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MIEJSCA_ZA_WY_MYJNIE", x => x.ID_MIEJSCA_ZA_ROZLADUNKU);
                });

            migrationBuilder.CreateTable(
                name: "MIEJSCA_ZA_WY_MYJNIE_GRUPY",
                columns: table => new
                {
                    ID_MIEJSCA_ZA_WY_MYJNIE_GRUPY = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MIEJSCA_ZA_ROZLADUNKU_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    GRUPY_LADUNKOW_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MIEJSCA_ZA_WY_MYJNIE_GRUPY", x => x.ID_MIEJSCA_ZA_WY_MYJNIE_GRUPY);
                });

            migrationBuilder.CreateTable(
                name: "MIEJSCA_ZA_WY_MYJNIE_PROC",
                columns: table => new
                {
                    ID_MIEJSCA_ZA_WY_MYJNIE_PROC = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MIEJSCA_ZA_ROZLADUNKU_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    POI_MYJNIE_PROCEDURY_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MIEJSCA_ZA_WY_MYJNIE_PROC", x => x.ID_MIEJSCA_ZA_WY_MYJNIE_PROC);
                });

            migrationBuilder.CreateTable(
                name: "MIEJSCA_ZA_WY_OGR_LAD",
                columns: table => new
                {
                    ID_MIEJSCA_ZA_WY_OGR_LAD = table.Column<int>(type: "int", nullable: false),
                    MIEJSCA_ZA_ROZLADUNKU_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Relacja do kontrahenta - tab: MIEJSCA_ZA_ROZLADUNKU"),
                    GRUPY_LADUNKOW_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do grupy ładunków - tab: GRUPY_LADUNKOW"),
                    GRUPY_LADUNKOW = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Nazwa grupy ładunków"),
                    ALGORYTM = table.Column<int>(type: "int", nullable: true, comment: "Algorytm, wg którego jest dokonywana kontrola ograniczeń ładunków")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MIEJSCA_ZA_WY_OGR_LAD", x => x.ID_MIEJSCA_ZA_WY_OGR_LAD);
                },
                comment: "Ograniczenia ładunków dla POI");

            migrationBuilder.CreateTable(
                name: "MIEJSCA_ZA_WY_OGR_LAD_POZ",
                columns: table => new
                {
                    ID_MIEJSCA_ZA_WY_OGR_LAD_POZ = table.Column<int>(type: "int", nullable: false),
                    MIEJSCA_ZA_WY_OGR_LAD_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Relacja do nagłówka ograniczeń - tab: MIEJSCA_ZA_WY_OGR_LAD"),
                    MIEJSCA_ZA_ROZLADUNKU_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Relacja do kontrahenta - tab: MIEJSCA_ZA_ROZLADUNKU"),
                    GRUPY_LADUNKOW_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do grupy ładunków - tab: GRUPY_LADUNKOW"),
                    GRUPY_LADUNKOW = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Nazwa grupy ładunków")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MIEJSCA_ZA_WY_OGR_LAD_POZ", x => x.ID_MIEJSCA_ZA_WY_OGR_LAD_POZ);
                },
                comment: "Ograniczenia ładunków dla POI - pozycje");

            migrationBuilder.CreateTable(
                name: "MIEJSCA_ZA_WY_WYLACZ",
                columns: table => new
                {
                    ID_MIEJSCA_ZA_WY_WYLACZ = table.Column<int>(type: "int", nullable: false),
                    MIEJSCA_ZA_ROZLADUNKU_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do POI-a - tab.: MIEJSCA_ZA_ROZLADUNKU"),
                    DATA_OD = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data od"),
                    DATA_DO = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data do"),
                    INFO = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Opis")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MIEJSCA_ZA_WY_WYLACZ", x => x.ID_MIEJSCA_ZA_WY_WYLACZ);
                },
                comment: "Wyłaczenia czasowe dla POI-a (detal do MIEJSCA_ZA_ROZLADUNKU)");

            migrationBuilder.CreateTable(
                name: "MIEJSCA_ZA_WY_WYM_TABORU",
                columns: table => new
                {
                    ID_MIEJSCA_ZA_WY_WYM_TABORU = table.Column<int>(type: "int", nullable: false),
                    MIEJSCA_ZA_ROZLADUNKU_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do POI-a - tab.: MIEJSCA_ZA_ROZLADUNKU"),
                    NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa wymaganego osprzętu"),
                    OPIS = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true, comment: "Opis"),
                    ILOSC = table.Column<int>(type: "int", nullable: true, comment: "Ilość"),
                    TYP = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "WYM.WYP, TYP.ZAB, SP.LAD"),
                    ZAMIENNIK = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MIEJSCA_ZA_WY_WYM_TABORU", x => x.ID_MIEJSCA_ZA_WY_WYM_TABORU);
                },
                comment: "Wymagania taboru dla POI-a (detal do MIEJSCA_ZA_ROZLADUNKU)");

            migrationBuilder.CreateTable(
                name: "MIEJSCA_ZA_WY_ZAKAZY",
                columns: table => new
                {
                    ID_MIEJSCA_ZA_WY_ZAKAZY = table.Column<int>(type: "int", nullable: false),
                    MIEJSCA_ZA_ROZLADUNKU_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    OBIEKT_TYP = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: false, defaultValueSql: "('')"),
                    OBIEKT_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    DATA_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_DO = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MIEJSCA_ZA_WY_ZAKAZY", x => x.ID_MIEJSCA_ZA_WY_ZAKAZY);
                });

            migrationBuilder.CreateTable(
                name: "MIEJSCE",
                columns: table => new
                {
                    ID_MIEJSCE = table.Column<int>(type: "int", nullable: false),
                    ID_STREFA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    ID_MAGAZYN = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    KOD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KOD_MAGAZYN = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KOD_STREFA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    BRAMA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MIEJSCE", x => x.ID_MIEJSCE);
                });

            migrationBuilder.CreateTable(
                name: "MobileApplication",
                schema: "rest",
                columns: table => new
                {
                    MobileApplicationId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true),
                    Description = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MobileApplication", x => x.MobileApplicationId);
                });

            migrationBuilder.CreateTable(
                name: "MobileApplicationList",
                schema: "rest",
                columns: table => new
                {
                    MobileApplicationListId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MobileApplicationId = table.Column<int>(type: "int", nullable: true),
                    Name = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    URL = table.Column<string>(type: "varchar(250)", unicode: false, maxLength: 250, nullable: true),
                    SchemaId = table.Column<int>(type: "int", nullable: true),
                    Fingerprint = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    QRConfiguration = table.Column<string>(type: "varchar(250)", unicode: false, maxLength: 250, nullable: true),
                    QRLink = table.Column<string>(type: "varchar(250)", unicode: false, maxLength: 250, nullable: true),
                    QR = table.Column<byte[]>(type: "image", nullable: true),
                    BackgroundColor = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    FontColor = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    ButtonColor = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    ButtonFontColor = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    Logo = table.Column<byte[]>(type: "image", nullable: true),
                    StartIndex = table.Column<int>(type: "int", nullable: true),
                    StopIndex = table.Column<int>(type: "int", nullable: true),
                    Active = table.Column<int>(type: "int", nullable: true),
                    Default = table.Column<int>(type: "int", nullable: true),
                    LoginMethodId = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MobileApplicationList", x => x.MobileApplicationListId);
                });

            migrationBuilder.CreateTable(
                name: "MobileAppList",
                columns: table => new
                {
                    MobileAppListId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    URL = table.Column<string>(type: "varchar(250)", unicode: false, maxLength: 250, nullable: true),
                    Fingerprint = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    QRConfiguration = table.Column<string>(type: "varchar(250)", unicode: false, maxLength: 250, nullable: true),
                    QRLink = table.Column<string>(type: "varchar(250)", unicode: false, maxLength: 250, nullable: true),
                    QR = table.Column<byte[]>(type: "image", nullable: true),
                    BackgroundColor = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    FontColor = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    ButtonColor = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    ButtonFontColor = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    Logo = table.Column<byte[]>(type: "image", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MobileAppList", x => x.MobileAppListId);
                });

            migrationBuilder.CreateTable(
                name: "MobileAppVersion",
                columns: table => new
                {
                    MobileAppVersionId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MobileAppListId = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MobileAppVersion", x => x.MobileAppVersionId);
                });

            migrationBuilder.CreateTable(
                name: "MobileDriverPermission",
                columns: table => new
                {
                    MobileDriverPermissionId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DictionaryId = table.Column<int>(type: "int", nullable: true),
                    TextId = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MobileDriverPermission", x => x.MobileDriverPermissionId);
                });

            migrationBuilder.CreateTable(
                name: "MobileDriverProfile",
                columns: table => new
                {
                    MobileDriverProfileId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MobileDriverPermissionId = table.Column<int>(type: "int", nullable: true),
                    MobileDriverProfileTypeId = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MobileDriverProfile", x => x.MobileDriverProfileId);
                });

            migrationBuilder.CreateTable(
                name: "MobileDriverProfileType",
                columns: table => new
                {
                    MobileDriverProfileTypeId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DictionaryId = table.Column<int>(type: "int", nullable: true),
                    TextId = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MobileDriverProfileType", x => x.MobileDriverProfileTypeId);
                });

            migrationBuilder.CreateTable(
                name: "MobileObjState",
                columns: table => new
                {
                    MobileObjStateId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ObjType = table.Column<int>(type: "int", nullable: true),
                    ObjId = table.Column<int>(type: "int", nullable: true),
                    DriverId = table.Column<int>(type: "int", nullable: true),
                    State = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MobileObjState", x => x.MobileObjStateId);
                });

            migrationBuilder.CreateTable(
                name: "MobileSystem",
                schema: "rest",
                columns: table => new
                {
                    MobileSystemId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true),
                    Description = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MobileSystem", x => x.MobileSystemId);
                });

            migrationBuilder.CreateTable(
                name: "MobileTask",
                schema: "rest",
                columns: table => new
                {
                    MobileTaskId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    MobileTaskTypeId = table.Column<int>(type: "int", nullable: true),
                    MobileTaskStateId = table.Column<int>(type: "int", nullable: true),
                    DetailIndex1 = table.Column<int>(type: "int", nullable: true),
                    DetailIndex2 = table.Column<int>(type: "int", nullable: true),
                    DetailIndex3 = table.Column<int>(type: "int", nullable: true),
                    Start = table.Column<DateTime>(type: "datetime", nullable: true),
                    Finish = table.Column<DateTime>(type: "datetime", nullable: true),
                    DriverId = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MobileTask", x => x.MobileTaskId);
                });

            migrationBuilder.CreateTable(
                name: "MobileTaskState",
                schema: "rest",
                columns: table => new
                {
                    MobileTaskStateId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MobileTaskState", x => x.MobileTaskStateId);
                });

            migrationBuilder.CreateTable(
                name: "MobileTaskType",
                schema: "rest",
                columns: table => new
                {
                    MobileTaskTypeId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MobileTaskType", x => x.MobileTaskTypeId);
                });

            migrationBuilder.CreateTable(
                name: "MobileUpdate",
                schema: "rest",
                columns: table => new
                {
                    MobileUpdateId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Sql = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CustomSql = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DatabaseVersion = table.Column<int>(type: "int", nullable: true),
                    System = table.Column<int>(type: "int", nullable: true),
                    Enabled = table.Column<int>(type: "int", nullable: true),
                    MobileApplicationId = table.Column<int>(type: "int", nullable: true),
                    MasterDatabaseVersion = table.Column<int>(type: "int", nullable: true),
                    Description = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    ApplicationTitle = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    MasterMobileUpdateId = table.Column<int>(type: "int", nullable: true),
                    MobileApplicationListId = table.Column<int>(type: "int", nullable: true),
                    Version = table.Column<int>(type: "int", nullable: true),
                    Sequence = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MobileUpdate", x => x.MobileUpdateId);
                });

            migrationBuilder.CreateTable(
                name: "MobileVersionScript",
                columns: table => new
                {
                    MobileVersionScriptId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ResourceName = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    MobileVersionId = table.Column<int>(type: "int", nullable: true),
                    Order = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MobileVersionScript", x => x.MobileVersionScriptId);
                });

            migrationBuilder.CreateTable(
                name: "MODEL",
                columns: table => new
                {
                    ID_MODEL = table.Column<int>(type: "int", nullable: false),
                    MARKA_ID = table.Column<int>(type: "int", nullable: true),
                    NAZWA = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true),
                    PROD_OD = table.Column<string>(type: "varchar(7)", unicode: false, maxLength: 7, nullable: true),
                    PROD_DO = table.Column<string>(type: "varchar(7)", unicode: false, maxLength: 7, nullable: true),
                    VIN = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MODEL", x => x.ID_MODEL);
                });

            migrationBuilder.CreateTable(
                name: "Module",
                schema: "app",
                columns: table => new
                {
                    ModuleId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    Description = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true),
                    Range1 = table.Column<int>(type: "int", nullable: true),
                    Range2 = table.Column<int>(type: "int", nullable: true),
                    Plugin = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    Version = table.Column<int>(type: "int", nullable: true),
                    Index = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Module", x => x.ModuleId);
                });

            migrationBuilder.CreateTable(
                name: "mpal_test",
                columns: table => new
                {
                    id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    dt = table.Column<DateTime>(type: "datetime", nullable: false, computedColumnSql: "(getdate())", stored: false),
                    sysId = table.Column<int>(type: "int", nullable: true),
                    xml = table.Column<string>(type: "xml", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_mpal_test", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "MultilingualText",
                schema: "lng",
                columns: table => new
                {
                    MultilingualTextId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    WindowId = table.Column<int>(type: "int", nullable: false),
                    ControlId = table.Column<int>(type: "int", nullable: false),
                    TextId = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MultilingualText", x => x.MultilingualTextId);
                });

            migrationBuilder.CreateTable(
                name: "NADGABARYTY",
                columns: table => new
                {
                    ID_NADGABARYTY = table.Column<int>(type: "int", nullable: false),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    NR_WNIOSKU = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    NR_WNIOSKU_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    NR_WNIOSKU_ROK = table.Column<int>(type: "int", nullable: true),
                    NR_WNIOSKU_MIES = table.Column<int>(type: "int", nullable: true),
                    OSOBA_ODPOWIEDZIALNA_ID = table.Column<int>(type: "int", nullable: true),
                    OSOBA_ODPOWIEDZIALNA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OSOBA_WYPELNIAJACA_ID = table.Column<int>(type: "int", nullable: true),
                    OSOBA_WYPELNIAJACA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZLECENIE_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZLECENIE_TYP = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    ZLECENIODAWCA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KLIENT_ID = table.Column<int>(type: "int", nullable: true),
                    KLIENT_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KLIENT_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KLIENT_ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KLIENT_MIASTO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KLIENT_KOD = table.Column<string>(type: "varchar(6)", unicode: false, maxLength: 6, nullable: true),
                    KLIENT_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KLIENT_NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    KLIENT_TEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KLIENT_KONT = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    INNY_PRZEWOZNIK = table.Column<short>(type: "smallint", nullable: true),
                    DO_PRZEDLUZENIA = table.Column<short>(type: "smallint", nullable: true),
                    ZAKONCZONO = table.Column<short>(type: "smallint", nullable: true),
                    PRZEWOZNIK_ID = table.Column<int>(type: "int", nullable: true),
                    PRZEWOZNIK_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    PRZEWOZNIK_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    PRZEWOZNIK_ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    PRZEWOZNIK_MIASTO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    PRZEWOZNIK_KOD = table.Column<string>(type: "varchar(6)", unicode: false, maxLength: 6, nullable: true),
                    PRZEWOZNIK_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    PRZEWOZNIK_NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    PRZEWOZNIK_REGON = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    PRZEWOZNIK_TEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PRZEWOZNIK_KONT = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ZA_MIEJSCE_ID = table.Column<int>(type: "int", nullable: true),
                    ZA_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    ZA_ADRES = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ZA_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    ZA_MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZA_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    WY_MIEJSCE_ID = table.Column<int>(type: "int", nullable: true),
                    WY_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WY_ADRES = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    WY_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    WY_MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    WY_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    LADUNEK_OPIS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    LADUNEK_MASA = table.Column<double>(type: "float", nullable: true),
                    PRZEJAZD_W_KOLUMNIE = table.Column<short>(type: "smallint", nullable: true),
                    PRZEJAZD_DATA_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    PRZEJAZD_DATA_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    PRZEJAZD_JEDNOKROTNY = table.Column<short>(type: "smallint", nullable: true),
                    ILOSC_PRZEJAZDOW = table.Column<int>(type: "int", nullable: true),
                    ILOSC_POJAZDOW = table.Column<int>(type: "int", nullable: true),
                    C_TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    C_NR_REJ = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    C_L_OSI = table.Column<int>(type: "int", nullable: true),
                    N_TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    N_NR_REJ = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    N_L_OSI = table.Column<int>(type: "int", nullable: true),
                    DLUG_BEZ_LADUNKU = table.Column<double>(type: "float", nullable: true),
                    SZER_BEZ_LADUNKU = table.Column<double>(type: "float", nullable: true),
                    WYS_BEZ_LADUNKU = table.Column<double>(type: "float", nullable: true),
                    MASA_BEZ_LADUNKU = table.Column<double>(type: "float", nullable: true),
                    DLUG_Z_LADUNKIEM = table.Column<double>(type: "float", nullable: true),
                    SZER_Z_LADUNKIEM = table.Column<double>(type: "float", nullable: true),
                    WYS_Z_LADUNKIEM = table.Column<double>(type: "float", nullable: true),
                    MASA_Z_LADUNKIEM = table.Column<double>(type: "float", nullable: true),
                    ZWIS_LADUNKU = table.Column<double>(type: "float", nullable: true),
                    ZWIS_LADUNKU_PRZOD = table.Column<double>(type: "float", nullable: true),
                    NACISK_NA_OS_1 = table.Column<double>(type: "float", nullable: true),
                    NACISK_NA_OS_2 = table.Column<double>(type: "float", nullable: true),
                    NACISK_NA_OS_3 = table.Column<double>(type: "float", nullable: true),
                    NACISK_NA_OS_4 = table.Column<double>(type: "float", nullable: true),
                    NACISK_NA_OS_5 = table.Column<double>(type: "float", nullable: true),
                    NACISK_NA_OS_6 = table.Column<double>(type: "float", nullable: true),
                    NACISK_NA_OS_7 = table.Column<double>(type: "float", nullable: true),
                    NACISK_NA_OS_8 = table.Column<double>(type: "float", nullable: true),
                    NACISK_NA_OS_9 = table.Column<double>(type: "float", nullable: true),
                    NACISK_NA_OS_10 = table.Column<double>(type: "float", nullable: true),
                    NACISK_NA_OS_11 = table.Column<double>(type: "float", nullable: true),
                    NACISK_NA_OS_12 = table.Column<double>(type: "float", nullable: true),
                    ZEZWOLENIE_NR = table.Column<string>(type: "varchar(70)", unicode: false, maxLength: 70, nullable: true),
                    ZEZWOLENIE_DATA_WYD = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZEZWOLENIE_DATA_OBOW = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZEZWOLENIE_KOSZTY = table.Column<double>(type: "float", nullable: true),
                    ZAWIESZENIE_PNEUMAT = table.Column<short>(type: "smallint", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    NACISK_BEZ_LADUNKU_NA_OS_1 = table.Column<double>(type: "float", nullable: true),
                    NACISK_BEZ_LADUNKU_NA_OS_2 = table.Column<double>(type: "float", nullable: true),
                    NACISK_BEZ_LADUNKU_NA_OS_3 = table.Column<double>(type: "float", nullable: true),
                    NACISK_BEZ_LADUNKU_NA_OS_4 = table.Column<double>(type: "float", nullable: true),
                    NACISK_BEZ_LADUNKU_NA_OS_5 = table.Column<double>(type: "float", nullable: true),
                    NACISK_BEZ_LADUNKU_NA_OS_6 = table.Column<double>(type: "float", nullable: true),
                    NACISK_BEZ_LADUNKU_NA_OS_7 = table.Column<double>(type: "float", nullable: true),
                    NACISK_BEZ_LADUNKU_NA_OS_8 = table.Column<double>(type: "float", nullable: true),
                    NACISK_BEZ_LADUNKU_NA_OS_9 = table.Column<double>(type: "float", nullable: true),
                    NACISK_BEZ_LADUNKU_NA_OS_10 = table.Column<double>(type: "float", nullable: true),
                    NACISK_BEZ_LADUNKU_NA_OS_11 = table.Column<double>(type: "float", nullable: true),
                    NACISK_BEZ_LADUNKU_NA_OS_12 = table.Column<double>(type: "float", nullable: true),
                    WNIOSKUJACY_ID = table.Column<int>(type: "int", nullable: true),
                    WNIOSKUJACY_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    WNIOSKUJACY_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WNIOSKUJACY_ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WNIOSKUJACY_MIASTO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WNIOSKUJACY_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    WNIOSKUJACY_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    WNIOSKUJACY_NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    WNIOSKUJACY_REGON = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    WNIOSKUJACY_TEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    WNIOSKUJACY_KONT = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KATEGORIA_WNIOSKU = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_NADGABARYTY", x => x.ID_NADGABARYTY);
                });

            migrationBuilder.CreateTable(
                name: "NavBar",
                schema: "app",
                columns: table => new
                {
                    NavBarId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: false),
                    Collapsed = table.Column<int>(type: "int", nullable: true),
                    CustomName = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    Hint = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    ParentId = table.Column<int>(type: "int", nullable: true),
                    MasterOrder = table.Column<int>(type: "int", nullable: true),
                    ChildOrder = table.Column<int>(type: "int", nullable: true),
                    LargeIconId = table.Column<int>(type: "int", nullable: true),
                    SmallIconId = table.Column<int>(type: "int", nullable: true),
                    DesktopIconId = table.Column<int>(type: "int", nullable: true),
                    Location = table.Column<int>(type: "int", nullable: false, defaultValueSql: "((1))"),
                    ToolId = table.Column<int>(type: "int", nullable: true),
                    Active = table.Column<int>(type: "int", nullable: true),
                    Visible = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_NavBar", x => x.NavBarId);
                });

            migrationBuilder.CreateTable(
                name: "NORMY",
                columns: table => new
                {
                    ID_NORMY = table.Column<int>(type: "int", nullable: false),
                    OBIEKT_ID = table.Column<int>(type: "int", nullable: true),
                    TYP = table.Column<int>(type: "int", nullable: true),
                    ROK = table.Column<int>(type: "int", nullable: true),
                    MIESIAC = table.Column<int>(type: "int", nullable: true),
                    NORMA_KWOTOWA = table.Column<double>(type: "float", nullable: true),
                    NORMA_KWOTOWA_WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    NORMA_KM = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_NORMY", x => x.ID_NORMY);
                });

            migrationBuilder.CreateTable(
                name: "NOSNIKI_UWAGI",
                columns: table => new
                {
                    ID_NOSNIKI_UWAGI = table.Column<int>(type: "int", nullable: false),
                    KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_NOSNIKI_UWAGI", x => x.ID_NOSNIKI_UWAGI);
                });

            migrationBuilder.CreateTable(
                name: "NOTY",
                columns: table => new
                {
                    ID_NOTY = table.Column<int>(type: "int", nullable: false),
                    RODZAJ = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    KOREKTA_ID = table.Column<int>(type: "int", nullable: true),
                    KOREKTA = table.Column<int>(type: "int", nullable: true),
                    KONTRAH_TYP = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: true),
                    KONTRAH_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KONTRAH_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KONTRAH_ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KONTRAH_MIASTO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KONTRAH_KOD = table.Column<string>(type: "varchar(6)", unicode: false, maxLength: 6, nullable: true),
                    KONTRAH_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KONTRAH_NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    NOTA_OTRZYMANA = table.Column<int>(type: "int", nullable: true),
                    NOTA_OBCIAZENIOWA = table.Column<int>(type: "int", nullable: true),
                    NUMER = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    TRESC = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true),
                    KWOTA = table.Column<double>(type: "float", nullable: true),
                    TYP = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    ZAPLACONO = table.Column<int>(type: "int", nullable: true),
                    ZAKSIEGOWANA = table.Column<int>(type: "int", nullable: true),
                    DATA_ZAKSIEGOWANIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_SPLATY = table.Column<DateTime>(type: "datetime", nullable: true),
                    TRESC_DOPISEK = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true),
                    NUMER_N = table.Column<int>(type: "int", nullable: true),
                    ROK_N = table.Column<int>(type: "int", nullable: true),
                    MIES_N = table.Column<int>(type: "int", nullable: true),
                    TERMIN_ZAPLATY = table.Column<DateTime>(type: "datetime", nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    JEZYK_WYDRUKU = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    KONTO_ID = table.Column<int>(type: "int", nullable: true),
                    KONTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    IBAN = table.Column<int>(type: "int", nullable: true),
                    WYDRUK_SPORZADZIL = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    L_ORG = table.Column<int>(type: "int", nullable: true),
                    L_KOP = table.Column<int>(type: "int", nullable: true),
                    TECZKA_ID = table.Column<int>(type: "int", nullable: true),
                    TECZKA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KURSY_WALUT_ID = table.Column<int>(type: "int", nullable: true),
                    KURSY_WALUT_TYP = table.Column<int>(type: "int", nullable: true),
                    KURSY_WALUT_RODZ = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    NOTA_WALUTOWA = table.Column<int>(type: "int", nullable: true),
                    KURS_WALUTY = table.Column<double>(type: "float", nullable: true),
                    NR_TABELI_KURSOW = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    DATA_TABELI_KURSOW = table.Column<DateTime>(type: "datetime", nullable: true),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    ZLECENIE_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZLECENIE_TYP = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    KWOTA_KOR = table.Column<double>(type: "float", nullable: true),
                    STATUS_ZAPLATY = table.Column<int>(type: "int", nullable: true),
                    INFO_OPIEKUNA = table.Column<string>(type: "text", nullable: true),
                    DATA_SPRZEDAZY = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_OTRZYMANIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DATA_POTW = table.Column<DateTime>(type: "datetime", nullable: true),
                    DEKRET = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DEKRET_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    DEKRET_ROK = table.Column<int>(type: "int", nullable: true),
                    DEKRET_MIES = table.Column<int>(type: "int", nullable: true),
                    TRAFIK_ID = table.Column<int>(type: "int", nullable: true),
                    TRAFIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SA_KONTAKTY = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    KOMUNIKACJA_FK_ID = table.Column<int>(type: "int", nullable: true),
                    STATUS_WINDYKACJI = table.Column<int>(type: "int", nullable: true),
                    GRUPA_DOK = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    WYDRUK_DUPLIKAT = table.Column<int>(type: "int", nullable: true),
                    WYSTAWIONO_DUPLIKAT = table.Column<int>(type: "int", nullable: true),
                    DATA_DUPLIKATU = table.Column<DateTime>(type: "datetime", nullable: true),
                    REKLAMACJE_ID = table.Column<int>(type: "int", nullable: true),
                    REKLAMACJE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    STATUS_WIND_KTO = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    STATUS_WIND_KIEDY = table.Column<DateTime>(type: "datetime", nullable: true),
                    ODDZIAL_ID = table.Column<int>(type: "int", nullable: true),
                    ODDZIAL_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    ODDZIAL_ADRES = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ODDZIAL_MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ODDZIAL_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    ODDZIAL_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    STATUS_NEW = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    ANULOWANA = table.Column<int>(type: "int", nullable: true),
                    FORMA_PLATNOSCI = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: false, defaultValueSql: "('PRZELEW')"),
                    TERMIN_PLATNOSCI = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    EMISJA_DO_FK = table.Column<int>(type: "int", nullable: true),
                    NR_SPED = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KOMUNIKACJA_FK_INFO = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    ZLECENIE_C_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE_C = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DATA_PLATNOSCI_USR = table.Column<DateTime>(type: "datetime", nullable: true),
                    TERMIN_PLATNOSCI_USR = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_NOTY", x => x.ID_NOTY);
                });

            migrationBuilder.CreateTable(
                name: "NOTY_BAK",
                columns: table => new
                {
                    ID_NOTY = table.Column<int>(type: "int", nullable: false),
                    RODZAJ = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    KOREKTA_ID = table.Column<int>(type: "int", nullable: true),
                    KOREKTA = table.Column<int>(type: "int", nullable: true),
                    KONTRAH_TYP = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: true),
                    KONTRAH_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KONTRAH_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KONTRAH_ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KONTRAH_MIASTO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KONTRAH_KOD = table.Column<string>(type: "varchar(6)", unicode: false, maxLength: 6, nullable: true),
                    KONTRAH_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KONTRAH_NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    NOTA_OTRZYMANA = table.Column<int>(type: "int", nullable: true),
                    NOTA_OBCIAZENIOWA = table.Column<int>(type: "int", nullable: true),
                    NUMER = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    TRESC = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true),
                    KWOTA = table.Column<double>(type: "float", nullable: true),
                    TYP = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    ZAPLACONO = table.Column<int>(type: "int", nullable: true),
                    ZAKSIEGOWANA = table.Column<int>(type: "int", nullable: true),
                    DATA_ZAKSIEGOWANIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_SPLATY = table.Column<DateTime>(type: "datetime", nullable: true),
                    TRESC_DOPISEK = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true),
                    NUMER_N = table.Column<int>(type: "int", nullable: true),
                    ROK_N = table.Column<int>(type: "int", nullable: true),
                    MIES_N = table.Column<int>(type: "int", nullable: true),
                    TERMIN_ZAPLATY = table.Column<DateTime>(type: "datetime", nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    JEZYK_WYDRUKU = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    KONTO_ID = table.Column<int>(type: "int", nullable: true),
                    KONTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    IBAN = table.Column<int>(type: "int", nullable: true),
                    WYDRUK_SPORZADZIL = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    L_ORG = table.Column<int>(type: "int", nullable: true),
                    L_KOP = table.Column<int>(type: "int", nullable: true),
                    TECZKA_ID = table.Column<int>(type: "int", nullable: true),
                    TECZKA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KURSY_WALUT_ID = table.Column<int>(type: "int", nullable: true),
                    KURSY_WALUT_TYP = table.Column<int>(type: "int", nullable: true),
                    KURSY_WALUT_RODZ = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    NOTA_WALUTOWA = table.Column<int>(type: "int", nullable: true),
                    KURS_WALUTY = table.Column<double>(type: "float", nullable: true),
                    NR_TABELI_KURSOW = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    DATA_TABELI_KURSOW = table.Column<DateTime>(type: "datetime", nullable: true),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    ZLECENIE_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZLECENIE_TYP = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    KWOTA_KOR = table.Column<double>(type: "float", nullable: true),
                    STATUS_ZAPLATY = table.Column<int>(type: "int", nullable: true),
                    INFO_OPIEKUNA = table.Column<string>(type: "text", nullable: true),
                    DATA_SPRZEDAZY = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_OTRZYMANIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DATA_POTW = table.Column<DateTime>(type: "datetime", nullable: true),
                    DEKRET = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DEKRET_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    DEKRET_ROK = table.Column<int>(type: "int", nullable: true),
                    DEKRET_MIES = table.Column<int>(type: "int", nullable: true),
                    TRAFIK_ID = table.Column<int>(type: "int", nullable: true),
                    TRAFIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SA_KONTAKTY = table.Column<int>(type: "int", nullable: true),
                    KOMUNIKACJA_FK_ID = table.Column<int>(type: "int", nullable: true),
                    STATUS_WINDYKACJI = table.Column<int>(type: "int", nullable: true),
                    GRUPA_DOK = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    WYDRUK_DUPLIKAT = table.Column<int>(type: "int", nullable: true),
                    WYSTAWIONO_DUPLIKAT = table.Column<int>(type: "int", nullable: true),
                    DATA_DUPLIKATU = table.Column<DateTime>(type: "datetime", nullable: true),
                    REKLAMACJE_ID = table.Column<int>(type: "int", nullable: true),
                    REKLAMACJE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    STATUS_WIND_KTO = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    STATUS_WIND_KIEDY = table.Column<DateTime>(type: "datetime", nullable: true),
                    ODDZIAL_ID = table.Column<int>(type: "int", nullable: true),
                    ODDZIAL_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    ODDZIAL_ADRES = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ODDZIAL_MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ODDZIAL_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    ODDZIAL_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    STATUS_NEW = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    ANULOWANA = table.Column<int>(type: "int", nullable: true),
                    FORMA_PLATNOSCI = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: false),
                    TERMIN_PLATNOSCI = table.Column<int>(type: "int", nullable: false),
                    EMISJA_DO_FK = table.Column<int>(type: "int", nullable: true),
                    NR_SPED = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KOMUNIKACJA_FK_INFO = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    ZLECENIE_C_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE_C = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DATA_PLATNOSCI_USR = table.Column<DateTime>(type: "datetime", nullable: true),
                    TERMIN_PLATNOSCI_USR = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "NOTY_KORYGUJACE",
                columns: table => new
                {
                    ID_NOTY_KORYGUJACE = table.Column<int>(type: "int", nullable: false),
                    NUMER = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NUMER_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    NUMER_ROK = table.Column<int>(type: "int", nullable: true),
                    NUMER_MIES = table.Column<int>(type: "int", nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    FAKTURA_ID = table.Column<int>(type: "int", nullable: true),
                    FAKTURA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    FAKTURA_OTRZYMANA = table.Column<int>(type: "int", nullable: true),
                    TECZKA_ID = table.Column<int>(type: "int", nullable: true),
                    TECZKA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: true),
                    KONTRAH_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KONTRAH_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KONTRAH_ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KONTRAH_MIASTO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KONTRAH_KOD = table.Column<string>(type: "varchar(6)", unicode: false, maxLength: 6, nullable: true),
                    KONTRAH_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KONTRAH_NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    RODZAJ_NOTY = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    TRESC = table.Column<string>(type: "text", nullable: true),
                    TRESC_PO = table.Column<string>(type: "text", nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    L_ORG = table.Column<int>(type: "int", nullable: true),
                    L_KOP = table.Column<int>(type: "int", nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    TRAFIK_ID = table.Column<int>(type: "int", nullable: true),
                    TRAFIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DATA_POTW = table.Column<DateTime>(type: "datetime", nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    ODDZIAL_ID = table.Column<int>(type: "int", nullable: true),
                    ODDZIAL_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    ODDZIAL_ADRES = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ODDZIAL_MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ODDZIAL_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    ODDZIAL_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true),
                    INFO_OPIEKUNA = table.Column<string>(type: "text", nullable: true, comment: "Informacje od opiekuna")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_NOTY_KORYGUJACE", x => x.ID_NOTY_KORYGUJACE);
                });

            migrationBuilder.CreateTable(
                name: "NOTY_KORYGUJACE_POZ",
                columns: table => new
                {
                    ID_NOTY_KORYGUJACE_POZ = table.Column<int>(type: "int", nullable: false),
                    NOTY_KORYGUJACE_ID = table.Column<int>(type: "int", nullable: true),
                    FAKTURA_ID = table.Column<int>(type: "int", nullable: true),
                    FAKTURA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    FAKTURA_OTRZYMANA = table.Column<int>(type: "int", nullable: true),
                    TYP_DOK = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_NOTY_KORYGUJACE_POZ", x => x.ID_NOTY_KORYGUJACE_POZ);
                });

            migrationBuilder.CreateTable(
                name: "NOTY_POZYCJE",
                columns: table => new
                {
                    ID_NOTY_POZYCJE = table.Column<int>(type: "int", nullable: false),
                    NOTY_ID = table.Column<int>(type: "int", nullable: false),
                    OPIS = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true),
                    NR_TABELI_KURSOW = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    KURSY_WALUT_ID = table.Column<int>(type: "int", nullable: true),
                    KURS_WALUTY = table.Column<double>(type: "float", nullable: true),
                    KWOTA_WAL = table.Column<double>(type: "float", nullable: true),
                    KWOTA = table.Column<double>(type: "float", nullable: true),
                    FAKTURA_ID = table.Column<int>(type: "int", nullable: true),
                    FAKTURA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OPIS_ID = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    OPIS_DOD = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    STOPA = table.Column<double>(type: "float", nullable: true),
                    KWOTA_ZADLUZENIA = table.Column<double>(type: "float", nullable: true),
                    DATA_SPLATY = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_WYSTAWIENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    LICZBA_DNI = table.Column<int>(type: "int", nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_NOTY_POZYCJE", x => x.ID_NOTY_POZYCJE);
                });

            migrationBuilder.CreateTable(
                name: "NOTY_SPLATY",
                columns: table => new
                {
                    ID_NOTY_SPLATY = table.Column<int>(type: "int", nullable: false),
                    NOTY_ID = table.Column<int>(type: "int", nullable: false),
                    DATA_SPLATY = table.Column<DateTime>(type: "datetime", nullable: false),
                    NR_WYCIAGU = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KWOTA_SPLATY = table.Column<double>(type: "float", nullable: false),
                    KURSY_WALUT_ID = table.Column<int>(type: "int", nullable: true),
                    NR_TABELI_KURSOW = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    KURS_WALUTY = table.Column<double>(type: "float", nullable: true),
                    DATA_TABELI_KURSOW = table.Column<DateTime>(type: "datetime", nullable: true),
                    KOMPENSATY_ID = table.Column<int>(type: "int", nullable: true),
                    KOMUNIKACJA_FK_RK_ID = table.Column<int>(type: "int", nullable: true),
                    UZYTKOWNIK_ID = table.Column<int>(type: "int", nullable: true, comment: "Retacja do użytkownika rej. spłate - tab: UZYTKOWNIK"),
                    UZYTKOWNIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Nazwa użytkwnika"),
                    PRZELEWY_DOK_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_NOTY_SPLATY", x => x.ID_NOTY_SPLATY);
                });

            migrationBuilder.CreateTable(
                name: "OBIEKTYRPT",
                columns: table => new
                {
                    ID_OBIEKTYRPT = table.Column<int>(type: "int", nullable: false),
                    OBIEKT = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: false),
                    STATUS = table.Column<short>(type: "smallint", nullable: false, defaultValueSql: "('0')"),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    APP = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: false),
                    JEZYK = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: false),
                    PLIK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: false),
                    OPIS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OBIEKTYRPT", x => x.ID_OBIEKTYRPT);
                });

            migrationBuilder.CreateTable(
                name: "OBJ_DEF",
                columns: table => new
                {
                    ID_OBJ_DEF = table.Column<int>(type: "int", nullable: false),
                    ID_OBJ = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "ID obiektu SPEED"),
                    TYP = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "typ obiektu"),
                    TABELA = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: false, comment: "tabela główna obiektu"),
                    ID_POLE = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: false, comment: "nazwa identyfikatora w tabeli głównej"),
                    OPIS = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true, comment: "opis/nazwa obiektu"),
                    GENER_SMS_PROC = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "nazwa procedury składowanej generującej SMS dla obiektu")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OBJ_DEF", x => x.ID_OBJ_DEF);
                });

            migrationBuilder.CreateTable(
                name: "OBJ_KLUCZ",
                columns: table => new
                {
                    ID_OBJ_KLUCZ = table.Column<int>(type: "int", nullable: false),
                    ID_OBJ_DEF = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "ID definicji obiektu SPEED"),
                    KLUCZ = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: false, comment: "nazwa klucza"),
                    POLE = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: false, comment: "nazwa pola w tabeli głównej"),
                    OPIS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "opis klucza"),
                    WARTOSC = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "przykładowa wartość")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OBJ_KLUCZ", x => x.ID_OBJ_KLUCZ);
                });

            migrationBuilder.CreateTable(
                name: "OBJ_KLUCZ_SQL",
                columns: table => new
                {
                    ID_OBJ_KLUCZ_SQL = table.Column<int>(type: "int", nullable: false),
                    ID_OBJ_WZORZEC = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "ID wzorca"),
                    KLUCZ = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: false, comment: "nazwa klucza"),
                    OPIS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "opis klucza"),
                    WARTOSC = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "przykładowa wartość"),
                    LISTA = table.Column<short>(type: "smallint", nullable: false, defaultValueSql: "('0')", comment: "0/1 - czy generowanie listy"),
                    SEPARATOR = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: false, comment: "separator elementów listy"),
                    SQL = table.Column<string>(type: "text", nullable: true, comment: "SQL - zapytanie źródła danych")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OBJ_KLUCZ_SQL", x => x.ID_OBJ_KLUCZ_SQL);
                });

            migrationBuilder.CreateTable(
                name: "OBJ_WZORZEC",
                columns: table => new
                {
                    ID_OBJ_WZORZEC = table.Column<int>(type: "int", nullable: false),
                    FUNKCJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: false, comment: "funkcja - kontekst wykorzystania wzorca"),
                    WYROZNIK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: false, comment: "dodatkowy wyróżnik w obrębie funkcji"),
                    ID_OBJ = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "ID obiektu SPEED"),
                    TABELA = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: false, comment: "tabela główna obiektu - klucze typu {@pole}"),
                    DT_CREATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas utworzenia wzorca"),
                    DT_MODIFY = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas ostatniej modyfikacji wzorca"),
                    OPIS = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true, comment: "opis wzorca"),
                    DEFINICJA = table.Column<string>(type: "text", nullable: true, comment: "definicja wzorca tekstu"),
                    PARAMETRY = table.Column<string>(type: "text", nullable: true, comment: "definicje parametrów dodatkowych"),
                    UZYJSQL = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "0/1 - użyj SQL, generuj listę ID obiektów"),
                    SQL = table.Column<string>(type: "text", nullable: true, comment: "SQL - generator listy ID obiektów"),
                    SQL_KLUCZE = table.Column<string>(type: "text", nullable: true, comment: "SQL - dodatkowe źródło kluczy typu {$pole}"),
                    ID_MASTER_OBJ = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "ID obiektu SPEED nadrzędnego do ID_Obj"),
                    GRUPA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: false, defaultValueSql: "('')", comment: "wyróżnik grupy wzorców")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OBJ_WZORZEC", x => x.ID_OBJ_WZORZEC);
                });

            migrationBuilder.CreateTable(
                name: "OBJECT",
                columns: table => new
                {
                    ID_OBJECT = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    NAME = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: false, defaultValueSql: "('')"),
                    HINT = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    ANOMALY = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    AMOUNT = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ApplicationModuleId = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OBJECT", x => x.ID_OBJECT);
                },
                comment: "Obiekty systemowe");

            migrationBuilder.CreateTable(
                name: "OBJECT_ANALIZE_DEF",
                columns: table => new
                {
                    ID_OBJECT_ANALIZE_DEF = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    OBJECT_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Relacja do OBJECT"),
                    ANALIZE_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Relacja do OLAP_DEFINICJE"),
                    NAME = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: false, defaultValueSql: "('')", comment: "Nazwa analizy")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OBJECT_ANALIZE_DEF", x => x.ID_OBJECT_ANALIZE_DEF);
                },
                comment: "Analizy dla obiektów");

            migrationBuilder.CreateTable(
                name: "OBJECT_CENNIKI_SQL",
                columns: table => new
                {
                    ID_OBJECT_CENNIKI_SQL = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    OBJECT_ID = table.Column<int>(type: "int", nullable: false, comment: "Relacja do OBJECT"),
                    CENNIKI_SQL_ID = table.Column<int>(type: "int", nullable: false, comment: "Relacja do CENNIKI_SQL"),
                    NAME = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: false, comment: "Nazwa cennika")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OBJECT_CENNIKI_SQL", x => x.ID_OBJECT_CENNIKI_SQL);
                },
                comment: "Cenniki dla obiektów");

            migrationBuilder.CreateTable(
                name: "OBJECT_REC_CENNIKI_SQL",
                columns: table => new
                {
                    ID_OBJECT_REC_CENNIKI_SQL = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    OBJECT_ID = table.Column<int>(type: "int", nullable: true),
                    REC_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OBJECT_REC_CENNIKI_SQL", x => x.ID_OBJECT_REC_CENNIKI_SQL);
                },
                comment: "Cenniki dla obiektów");

            migrationBuilder.CreateTable(
                name: "OBJECT_ReportSet",
                columns: table => new
                {
                    ID_OBJECT_ReportSet = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    OBJECT_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Relacja do OBJECT"),
                    ReportSetId = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Relacja do ReportSet"),
                    NAME = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: false, defaultValueSql: "('')", comment: "Nazwa setu")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OBJECT_ReportSet", x => x.ID_OBJECT_ReportSet);
                },
                comment: "ReportSet-y dla obiektów");

            migrationBuilder.CreateTable(
                name: "Object_SFM_VER",
                columns: table => new
                {
                    ID_OBJ = table.Column<int>(type: "int", nullable: false),
                    ID_REC = table.Column<int>(type: "int", nullable: false),
                    SFM_VER = table.Column<int>(type: "int", nullable: true, defaultValueSql: "((0))")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Object_SFM_VER", x => new { x.ID_OBJ, x.ID_REC });
                });

            migrationBuilder.CreateTable(
                name: "OBJECT_SID",
                columns: table => new
                {
                    ID_OBJECT_SID = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    OBJECT_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Relacja do OBJECT"),
                    SID_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Relacja do SID"),
                    NAME = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: false, defaultValueSql: "('')", comment: "Nazwa SID-a")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OBJECT_SID", x => x.ID_OBJECT_SID);
                },
                comment: "SID-y dla obiektów");

            migrationBuilder.CreateTable(
                name: "OBJPICTURES",
                columns: table => new
                {
                    IDOBJPICTURES = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    OBJTYPE = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "typ obiektu SPEED"),
                    OBJID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "ID obiektu SPEED"),
                    MODIFYID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "znacznik modyfikacji"),
                    PICTURE = table.Column<byte[]>(type: "image", nullable: true, comment: "dane binarne zdjęcia")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OBJPICTURES", x => x.IDOBJPICTURES);
                },
                comment: "zdjęcia do obiektu SPEED");

            migrationBuilder.CreateTable(
                name: "ODLEGLOSCI",
                columns: table => new
                {
                    ID_ODLEGLOSCI = table.Column<int>(type: "int", nullable: false),
                    MIEJSCE_A_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE_A = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    KRAJ_A = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    MIASTO_A = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KOD_A = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    LON_A = table.Column<double>(type: "float", nullable: true),
                    LAT_A = table.Column<double>(type: "float", nullable: true),
                    MIEJSCE_B_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE_B = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    KRAJ_B = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    MIASTO_B = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KOD_B = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    LON_B = table.Column<double>(type: "float", nullable: true),
                    LAT_B = table.Column<double>(type: "float", nullable: true),
                    ODLEGLOSC = table.Column<double>(type: "float", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    ODLEGLOSC_LIN = table.Column<double>(type: "float", nullable: true),
                    CZAS = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ODLEGLOSCI", x => x.ID_ODLEGLOSCI);
                },
                comment: "Macież odległości między POI-ami");

            migrationBuilder.CreateTable(
                name: "ODSETKI_USTAWOWE",
                columns: table => new
                {
                    ID_ODSETKI_USTAWOWE = table.Column<int>(type: "int", nullable: false),
                    DATA_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    PROCENT_ROCZNIE = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ODSETKI_USTAWOWE", x => x.ID_ODSETKI_USTAWOWE);
                });

            migrationBuilder.CreateTable(
                name: "OFERTA_TRASY",
                columns: table => new
                {
                    ID_OFERTA_TRASY = table.Column<int>(type: "int", nullable: false),
                    OFERTA_ID = table.Column<int>(type: "int", nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    DATA_ZAL = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_ZAL = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_ROZL = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_ROZL = table.Column<DateTime>(type: "datetime", nullable: true),
                    MIEJSCE_ZAL_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE_ROZL_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE_ZAL = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    MIEJSCE_ROZL = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KRAJ_ZAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KRAJ_ROZL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    TRASA_ID = table.Column<int>(type: "int", nullable: true),
                    TRASA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    TRASA_ODL = table.Column<double>(type: "float", nullable: true),
                    TRASA_STAWKA = table.Column<double>(type: "float", nullable: true),
                    TRASA_STAWKA_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    TRASA_FRACHT = table.Column<double>(type: "float", nullable: true),
                    ZA_GEO_LONGI = table.Column<double>(type: "float", nullable: true),
                    ZA_GEO_LAT = table.Column<double>(type: "float", nullable: true),
                    WY_GEO_LONGI = table.Column<double>(type: "float", nullable: true),
                    WY_GEO_LAT = table.Column<double>(type: "float", nullable: true),
                    TRASA_STAWKA_ZA_JM = table.Column<double>(type: "float", nullable: true),
                    LADUNEK_ID = table.Column<int>(type: "int", nullable: true),
                    LADUNEK = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    LADUNEK_ILOSC = table.Column<double>(type: "float", nullable: true),
                    LADUNEK_ILOSC_JM = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    OPIS_WYMAG_TABORU = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    CYSTERNA = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OFERTA_TRASY", x => x.ID_OFERTA_TRASY);
                });

            migrationBuilder.CreateTable(
                name: "OFERTY",
                columns: table => new
                {
                    ID_OFERTY = table.Column<int>(type: "int", nullable: false),
                    NR_OFERTY = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    NR_OFERTY_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    NR_OFERTY_ROK = table.Column<int>(type: "int", nullable: true),
                    NR_OFERTY_MIES = table.Column<int>(type: "int", nullable: true),
                    JEZYK_OFERTY = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, defaultValueSql: "('PL')"),
                    SPEDYTOR_ID = table.Column<int>(type: "int", nullable: true),
                    SPEDYTOR = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    TYP_ZLECENIA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    DATA_OFERTY = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_ZALADUNKU = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_ZALADUNKU = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_ROZLADUNKU = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_ROZLADUNKU = table.Column<DateTime>(type: "datetime", nullable: true),
                    KLIENT_ID = table.Column<int>(type: "int", nullable: true),
                    KLIENT_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KLIENT_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KLIENT_ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KLIENT_MIASTO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KLIENT_KOD = table.Column<string>(type: "varchar(6)", unicode: false, maxLength: 6, nullable: true),
                    KLIENT_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KLIENT_NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    KLIENT_OSOBA_KONT = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    MIEJSCE_ZALADUNKU_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE_ROZLADUNKU_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE_ZALADUNKU = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    MIEJSCE_ROZLADUNKU = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KRAJ_ZALADUNKU = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KRAJ_ROZLADUNKU = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    TRASA_ID = table.Column<int>(type: "int", nullable: true),
                    TRASA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    TRASA_ODL = table.Column<double>(type: "float", nullable: true),
                    INFO_DOD = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true),
                    OPIS_TOWARU = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WAGA_LADUNKU = table.Column<double>(type: "float", nullable: true),
                    OBJETOSC_LADUNKU = table.Column<double>(type: "float", nullable: true),
                    WYSOKOSC = table.Column<double>(type: "float", nullable: true),
                    SZEROKOSC = table.Column<double>(type: "float", nullable: true),
                    DLUGOSC = table.Column<double>(type: "float", nullable: true),
                    TYP_OPAKOWANIA = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    ILOSC_OPAKOWAN = table.Column<double>(type: "float", nullable: true),
                    ADR = table.Column<int>(type: "int", nullable: true),
                    ADR_INFO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KWOTA = table.Column<double>(type: "float", nullable: true),
                    KWOTA_P = table.Column<double>(type: "float", nullable: true),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    FORMA_PLATNOSCI = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TERMIN = table.Column<int>(type: "int", nullable: true),
                    SAMOCHOD_ID = table.Column<int>(type: "int", nullable: true),
                    SAMOCHOD = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    PRZEWOZNIK_ID = table.Column<int>(type: "int", nullable: true),
                    PRZEWOZNIK_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    MARZA = table.Column<double>(type: "float", nullable: true),
                    STATUS = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    DATA_ZLOZENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    SPOSOB_ZLOZENIA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    TECZKA_ID = table.Column<int>(type: "int", nullable: true),
                    TECZKA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KLIENT_OSOBA_TELFAX = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KLIENT_OSOBA_EMAIL = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    DATA_WAZN_OFERTY = table.Column<DateTime>(type: "datetime", nullable: true),
                    MIN_TERM_AWIZACJI = table.Column<int>(type: "int", nullable: true),
                    TRAFIK_ID = table.Column<int>(type: "int", nullable: true),
                    TRAFIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DOTYCZY = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DATA_WAZN_WYCENY = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OFERTY", x => x.ID_OFERTY);
                });

            migrationBuilder.CreateTable(
                name: "OFERTY_DROBN",
                columns: table => new
                {
                    ID_OFERTY_DROBN = table.Column<int>(type: "int", nullable: false),
                    NR_OFERTY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_OFERTY_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    NR_OFERTY_ROK = table.Column<int>(type: "int", nullable: true),
                    NR_OFERTY_MIES = table.Column<int>(type: "int", nullable: true),
                    SPEDYTOR_ID = table.Column<int>(type: "int", nullable: true),
                    SPEDYTOR = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    JEZYK_OFERTY = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, defaultValueSql: "('PL')"),
                    DATA_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    KLIENT_ID = table.Column<int>(type: "int", nullable: true),
                    KLIENT_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KLIENT_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KLIENT_ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KLIENT_MIASTO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KLIENT_KOD = table.Column<string>(type: "varchar(6)", unicode: false, maxLength: 6, nullable: true),
                    KLIENT_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KLIENT_NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    KLIENT_OSOBA_ODP = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KLIENT_TEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KLIENT_FAX = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KLIENT_EMAIL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ZAPYTANIE_DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZAPYTANIE_UZYTKOWNIK_ID = table.Column<int>(type: "int", nullable: true),
                    ZAPYTANIE_UZYTKOWNIK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ZAPYTANIE_SPOSOB = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    ZAPYTANIE_INICJUJACY = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    ZAPYTANIE_TERMIN = table.Column<int>(type: "int", nullable: true),
                    ZAPYTANIE_UWAGI = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    ZLOZONO = table.Column<int>(type: "int", nullable: true),
                    ZLOZONO_DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZLOZONO_GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZLOZONO_UZYTKOWNIK_ID = table.Column<int>(type: "int", nullable: true),
                    ZLOZONO_UZYTKOWNIK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ZLOZONO_SPOSOB = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    ZLOZONO_UWAGI = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    DATA_NAST_KONT = table.Column<DateTime>(type: "datetime", nullable: true),
                    STATUS = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    STATUS_DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    PRZYCZYNA_ODRZUCENIA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    DATA_WAZN_WYCENY = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OFERTY_DROBN", x => x.ID_OFERTY_DROBN);
                });

            migrationBuilder.CreateTable(
                name: "OFERTY_DROBN_PRZELICZNIKI",
                columns: table => new
                {
                    ID_OFERTY_DROBN_PRZELICZNIKI = table.Column<int>(type: "int", nullable: false),
                    OFERTY_DROBN_USLUGI_ID = table.Column<int>(type: "int", nullable: true),
                    WARTOSC_Z = table.Column<int>(type: "int", nullable: true),
                    JM_Z = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    WARTOSC_DO = table.Column<int>(type: "int", nullable: true),
                    JM_DO = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    JT = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OFERTY_DROBN_PRZELICZNIKI", x => x.ID_OFERTY_DROBN_PRZELICZNIKI);
                });

            migrationBuilder.CreateTable(
                name: "OFERTY_DROBN_TOWARY",
                columns: table => new
                {
                    ID_OFERTY_DROBN_TOWARY = table.Column<int>(type: "int", nullable: false),
                    OFERTY_DROBN_USLUGI_ID = table.Column<int>(type: "int", nullable: true),
                    NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ADR = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    ILOSC = table.Column<double>(type: "float", nullable: true),
                    WAGA = table.Column<double>(type: "float", nullable: true),
                    WYS = table.Column<double>(type: "float", nullable: true),
                    SZER = table.Column<double>(type: "float", nullable: true),
                    DLUG = table.Column<double>(type: "float", nullable: true),
                    KUB = table.Column<double>(type: "float", nullable: true),
                    LDM = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OFERTY_DROBN_TOWARY", x => x.ID_OFERTY_DROBN_TOWARY);
                });

            migrationBuilder.CreateTable(
                name: "OFERTY_DROBN_USLUGI",
                columns: table => new
                {
                    ID_OFERTY_DROBN_USLUGI = table.Column<int>(type: "int", nullable: false),
                    OFERTY_DROBN_ID = table.Column<int>(type: "int", nullable: true),
                    NR_USLUGI = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    WARUNKI_DOSTAWY = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    RELACJA_ID = table.Column<int>(type: "int", nullable: true),
                    RELACJA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KIERUNEK = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    PARTNER_ID = table.Column<int>(type: "int", nullable: true),
                    PARTNER = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    USLUGA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZA_ID = table.Column<int>(type: "int", nullable: true),
                    ZA_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    ZA_ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    ZA_MIASTO = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ZA_KOD = table.Column<string>(type: "varchar(6)", unicode: false, maxLength: 6, nullable: true),
                    ZA_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    ZA_TEL = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    ZA_FAX = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    ZA_KONTAKT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    WY_ID = table.Column<int>(type: "int", nullable: true),
                    WY_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WY_ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WY_MIASTO = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    WY_KOD = table.Column<string>(type: "varchar(6)", unicode: false, maxLength: 6, nullable: true),
                    WY_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    WY_TEL = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    WY_FAX = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    WY_KONTAKT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TABELA_KURSOW_ID = table.Column<int>(type: "int", nullable: true),
                    TABELA_KURSOW = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    WAGA_OBL = table.Column<double>(type: "float", nullable: true),
                    ODL_OBL = table.Column<double>(type: "float", nullable: true),
                    FRACHT_KLIENTA = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OFERTY_DROBN_USLUGI", x => x.ID_OFERTY_DROBN_USLUGI);
                });

            migrationBuilder.CreateTable(
                name: "OFERTY_NEW",
                columns: table => new
                {
                    ID_OFERTY_NEW = table.Column<int>(type: "int", nullable: false),
                    NR_OFERTY = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    NR_OFERTY_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    NR_OFERTY_ROK = table.Column<int>(type: "int", nullable: true),
                    NR_OFERTY_MIES = table.Column<int>(type: "int", nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    JEZYK_OFERTY = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, defaultValueSql: "('PL')"),
                    SPEDYTOR_ID = table.Column<int>(type: "int", nullable: true),
                    SPEDYTOR = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    TECZKA_ID = table.Column<int>(type: "int", nullable: true),
                    TECZKA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DATA_OFERTY = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_WAZN_OFERTY = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_WAZN_WYCENY = table.Column<DateTime>(type: "datetime", nullable: true),
                    MIN_TERM_AWIZACJI = table.Column<int>(type: "int", nullable: true),
                    KLIENT_ID = table.Column<int>(type: "int", nullable: true),
                    KLIENT_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KLIENT_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KLIENT_ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KLIENT_MIASTO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KLIENT_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    KLIENT_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KLIENT_NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    KLIENT_OSOBA_KONT = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KLIENT_OSOBA_TEL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KLIENT_OSOBA_EMAIL = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    PLATNIK_ID = table.Column<int>(type: "int", nullable: true),
                    PLATNIK_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    PLATNIK_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    PLATNIK_ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    PLATNIK_MIASTO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    PLATNIK_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    PLATNIK_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    PLATNIK_NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    UWAGI = table.Column<string>(type: "text", nullable: true),
                    STATUS = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    DATA_ZLOZENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    SPOSOB_ZLOZENIA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    NR_ZLECENIA_K = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    ANULOWANA = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    DATA_WAZN_OFERTY_OD = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OFERTY_NEW", x => x.ID_OFERTY_NEW);
                });

            migrationBuilder.CreateTable(
                name: "OFERTY_NEW_POZ",
                columns: table => new
                {
                    ID_OFERTY_NEW_POZ = table.Column<int>(type: "int", nullable: false),
                    OFERTY_NEW_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Relacja do przesyłki - tab: OFERTY_NEW"),
                    LP = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Lp"),
                    OBJ_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Relacja do OBJECT"),
                    REC_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Relacja do konkretnego obiektu")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OFERTY_NEW_POZ", x => x.ID_OFERTY_NEW_POZ);
                });

            migrationBuilder.CreateTable(
                name: "OFERTY_POZYCJE",
                columns: table => new
                {
                    ID_OFERTY_POZYCJE = table.Column<int>(type: "int", nullable: false),
                    OFERTA_ID = table.Column<int>(type: "int", nullable: false),
                    OPIS_TOWARU_ID = table.Column<int>(type: "int", nullable: true),
                    OPIS_TOWARU = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WAGA_LADUNKU = table.Column<double>(type: "float", nullable: true),
                    OBJETOSC_LADUNKU = table.Column<double>(type: "float", nullable: true),
                    WYSOKOSC = table.Column<double>(type: "float", nullable: true),
                    SZEROKOSC = table.Column<double>(type: "float", nullable: true),
                    DLUGOSC = table.Column<double>(type: "float", nullable: true),
                    TYP_OPAKOWANIA = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    ILOSC_OPAKOWAN = table.Column<double>(type: "float", nullable: true),
                    ILOSC_TRANSPORTOW = table.Column<int>(type: "int", nullable: true),
                    CENA_ZA_TRANSPORT = table.Column<double>(type: "float", nullable: true),
                    WAGA_CALOSCI = table.Column<double>(type: "float", nullable: true),
                    JEDN_WAGI = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    TYP_POJAZDU = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPIS_TOWARU_HACCP = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OPIS_TOWARU_SQAS = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    CYSTERNA = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OFERTY_POZYCJE", x => x.ID_OFERTY_POZYCJE);
                });

            migrationBuilder.CreateTable(
                name: "OFERTY_ZALACZNIKI",
                columns: table => new
                {
                    ID_OFERTY_ZALACZNIKI = table.Column<int>(type: "int", nullable: false),
                    OFERTA_ID = table.Column<int>(type: "int", nullable: false),
                    RODZAJ = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    OPIS_PLIKU = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    NAZWA_PLIKU = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    TYP_PLIKU = table.Column<int>(type: "int", nullable: true),
                    PLIK = table.Column<byte[]>(type: "image", nullable: true),
                    DATA_WPROWADZENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    USER_ID = table.Column<int>(type: "int", nullable: true),
                    USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OFERTY_ZALACZNIKI", x => x.ID_OFERTY_ZALACZNIKI);
                });

            migrationBuilder.CreateTable(
                name: "OKRES_ROZLICZENIOWY",
                columns: table => new
                {
                    ID_OKRES_ROZLICZENIOWY = table.Column<int>(type: "int", nullable: false),
                    ID_FIRMA = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    DATA_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZINY_NOCNE_START = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OKRES_ROZLICZENIOWY", x => x.ID_OKRES_ROZLICZENIOWY);
                });

            migrationBuilder.CreateTable(
                name: "OKRESY",
                columns: table => new
                {
                    ID_OKRESY = table.Column<int>(type: "int", nullable: false),
                    OKRES = table.Column<int>(type: "int", nullable: true, comment: "Typ okresu: 0-tygodniowy, 1-miesieczny, 2-roczny"),
                    DATA_OD = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data od"),
                    DATA_DO = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data do"),
                    TYDZIEN = table.Column<int>(type: "int", nullable: true, comment: "Numer tygodnia"),
                    MIESIAC = table.Column<int>(type: "int", nullable: true, comment: "Miesiąc"),
                    ROK = table.Column<int>(type: "int", nullable: true, comment: "Rok"),
                    STAN = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Stan okresu: O, Z"),
                    INFO = table.Column<string>(type: "text", nullable: true, comment: "Dodatkowe informacje użytkownika"),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OKRESY", x => x.ID_OKRESY);
                },
                comment: "Okresy rozliczeniowe dla dokumentów księgowych");

            migrationBuilder.CreateTable(
                name: "OKRESY_POZ",
                columns: table => new
                {
                    ID_OKRESY_POZ = table.Column<int>(type: "int", nullable: false),
                    LP = table.Column<int>(type: "int", nullable: true, comment: "Lp"),
                    OKRESY_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do okresu - tab: OKRESY"),
                    PROCESY_OKR_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do procesu - tab: PROCESY_OKR"),
                    PROCESY_OKR = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Symbol procesu okresowego"),
                    PROCESY_OKR_ALG_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do algorytmu procesu - tab: PROCESY_OKR_ALG"),
                    PROCESY_OKR_ALG = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Symbol algorytmu procesu"),
                    ZAZN_WYKONANIE = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy zaznaczono wykonanie"),
                    ZAZN_WYKONANIE_KTO = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Kto zaznaczył wykonanie"),
                    WYKONANY = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy proces wykonany"),
                    WYKONANY_DATA_GODZ = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Kiedy wykonano proces (data/godz)"),
                    INFO = table.Column<string>(type: "text", nullable: true, comment: "Dodatkowe informacje dotyczące procesu")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OKRESY_POZ", x => x.ID_OKRESY_POZ);
                },
                comment: "Procesy wykonywane podczas zamykania okresu - detal do OKRESY");

            migrationBuilder.CreateTable(
                name: "OKRESY_ROZLICZENIOWE",
                columns: table => new
                {
                    ID_OKRESY_ROZLICZENIOWE = table.Column<int>(type: "int", nullable: false),
                    LICZNIKI_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do licznika - tab: LICZNIKI"),
                    ROK = table.Column<int>(type: "int", nullable: true, comment: "Rok"),
                    MIESIAC = table.Column<int>(type: "int", nullable: true, comment: "Miesiąc"),
                    ZAMKNIETY = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy okres zamknięty")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OKRESY_ROZLICZENIOWE", x => x.ID_OKRESY_ROZLICZENIOWE);
                },
                comment: "Okresy rozliczeniowe dla liczników");

            migrationBuilder.CreateTable(
                name: "OLAP_DEFINICJE",
                columns: table => new
                {
                    ID_OLAP_DEFINICJE = table.Column<int>(type: "int", nullable: false),
                    NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPIS = table.Column<string>(type: "text", nullable: true),
                    GRUPA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DEFINICJA_SQL = table.Column<string>(type: "text", nullable: true),
                    DEFINICJA_SQL_SP = table.Column<string>(type: "text", nullable: true),
                    EXEC_OK = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DOMYSLNY_WIDOK = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    SYSTEMOWY = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    WERSJA = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    WERSJA_DATA_GODZ_UTW = table.Column<DateTime>(type: "datetime", nullable: true),
                    DB_ENGINE = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    OLAP_DEF_COLS = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    OLAP_DEF_ROWS = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    OLAP_DEF_SUMS = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    OLAP_DEF_AGREG = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    AKTYWNY = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('1')"),
                    INSTRUKCJE = table.Column<string>(type: "text", nullable: true),
                    WCZYT_ZAPISANY = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    WWW = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    COLS_CRC = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    PRINTER_SETUP = table.Column<string>(type: "text", nullable: true),
                    OLAP_HIDE_COL_TOTALS = table.Column<int>(type: "int", nullable: true),
                    OLAP_HIDE_ROW_TOTALS = table.Column<int>(type: "int", nullable: true),
                    OLAP_HIDE_COL_GTOTALS = table.Column<int>(type: "int", nullable: true),
                    OLAP_HIDE_ROW_GTOTALS = table.Column<int>(type: "int", nullable: true),
                    EXPORT_ENDPOINT = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    DEFINICJA_SQL_SM = table.Column<string>(type: "text", nullable: true),
                    KONTEKSTOWY = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DATA_SRC = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NoSaveGridLayout = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    AllGridRecords = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OLAP_DEFINICJE", x => x.ID_OLAP_DEFINICJE);
                });

            migrationBuilder.CreateTable(
                name: "OLAP_DEFINICJE_PARAMS",
                columns: table => new
                {
                    ID_OLAP_DEFINICJE_PARAMS = table.Column<int>(type: "int", nullable: false),
                    OLAP_DEFINICJE_ID = table.Column<int>(type: "int", nullable: true),
                    NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ETYKIETA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TYP = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    WART_DOMYSLNA = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    LISTA_SQL = table.Column<string>(type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    UKRYTY = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OLAP_DEFINICJE_PARAMS", x => x.ID_OLAP_DEFINICJE_PARAMS);
                });

            migrationBuilder.CreateTable(
                name: "OLAP_DEFINICJE_ULUBIONE",
                columns: table => new
                {
                    ID_OLAP_DEFINICJE_ULUBIONE = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    OLAP_DEFINICJE_ID = table.Column<int>(type: "int", nullable: true),
                    USER_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OLAP_DEFINICJE_ULUBIONE", x => x.ID_OLAP_DEFINICJE_ULUBIONE);
                });

            migrationBuilder.CreateTable(
                name: "OLAP_EXECUTE",
                columns: table => new
                {
                    ID_OLAP_EXECUTE = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    OLAP_DEFINICJE_ID = table.Column<int>(type: "int", nullable: false),
                    START_DATE = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    FINISH_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    PARAMS = table.Column<string>(type: "varchar(max)", unicode: false, nullable: true),
                    USER_ID = table.Column<int>(type: "int", nullable: true),
                    USER_NAME = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__OLAP_EXE__2B83E037E69F3E79", x => x.ID_OLAP_EXECUTE);
                });

            migrationBuilder.CreateTable(
                name: "OLAP_GRUPY",
                columns: table => new
                {
                    ID_OLAP_GRUPY = table.Column<int>(type: "int", nullable: false),
                    LP = table.Column<int>(type: "int", nullable: true),
                    GRUPA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    IKONA = table.Column<int>(type: "int", nullable: true),
                    WIDOCZNA = table.Column<int>(type: "int", nullable: true),
                    SYSTEMOWA = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OLAP_GRUPY", x => x.ID_OLAP_GRUPY);
                });

            migrationBuilder.CreateTable(
                name: "OLAP_PRAWA",
                columns: table => new
                {
                    ID_OLAP_PRAWA = table.Column<int>(type: "int", nullable: false),
                    OLAP_DEFINICJE_ID = table.Column<int>(type: "int", nullable: true),
                    USER_ID = table.Column<int>(type: "int", nullable: true),
                    GRUPA_ID = table.Column<int>(type: "int", nullable: true),
                    EDYCJA = table.Column<int>(type: "int", nullable: true),
                    WIDOK = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OLAP_PRAWA", x => x.ID_OLAP_PRAWA);
                });

            migrationBuilder.CreateTable(
                name: "OLAP_PRNT_SETTINGS",
                columns: table => new
                {
                    ID_OLAP_PRNT_SETTINGS = table.Column<int>(type: "int", nullable: false),
                    OLAP_DEFINICJE_ID = table.Column<int>(type: "int", nullable: true),
                    USER_ID = table.Column<int>(type: "int", nullable: true),
                    GRID_SET = table.Column<byte[]>(type: "image", nullable: true),
                    PIVOT_SET = table.Column<byte[]>(type: "image", nullable: true),
                    PIVOT_STYLE_SET = table.Column<byte[]>(type: "image", nullable: true),
                    GRID_STYLE_SET = table.Column<byte[]>(type: "image", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OLAP_PRNT_SETTINGS", x => x.ID_OLAP_PRNT_SETTINGS);
                });

            migrationBuilder.CreateTable(
                name: "OLAP_USER_SETTINGS",
                columns: table => new
                {
                    ID_OLAP_USER_SETTINGS = table.Column<int>(type: "int", nullable: false),
                    OLAP_DEFINICJE_ID = table.Column<int>(type: "int", nullable: true),
                    DOMYSLNY = table.Column<int>(type: "int", nullable: true),
                    USER_ID = table.Column<int>(type: "int", nullable: true),
                    GRID_SET = table.Column<byte[]>(type: "image", nullable: true),
                    PIVOT_SET = table.Column<byte[]>(type: "image", nullable: true),
                    QUERY_PARAMS_BOX_H = table.Column<int>(type: "int", nullable: true),
                    QUERY_PARAMS_BOX_W = table.Column<int>(type: "int", nullable: true),
                    QUERY_PARAMS_BOX_L = table.Column<int>(type: "int", nullable: true),
                    QUERY_PARAMS_BOX_T = table.Column<int>(type: "int", nullable: true),
                    GRID_PRNT_SET = table.Column<byte[]>(type: "image", nullable: true),
                    PIVOT_PRNT_SET = table.Column<byte[]>(type: "image", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OLAP_USER_SETTINGS", x => x.ID_OLAP_USER_SETTINGS);
                });

            migrationBuilder.CreateTable(
                name: "OLAP_WIDOKI",
                columns: table => new
                {
                    ID_OLAP_WIDOKI = table.Column<int>(type: "int", nullable: false),
                    OLAP_DEFINICJE_ID = table.Column<int>(type: "int", nullable: true),
                    NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    UTWORZYL_KTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    UTWORZYL_KIEDY = table.Column<DateTime>(type: "datetime", nullable: true),
                    WIDOK = table.Column<int>(type: "int", nullable: true),
                    DANE = table.Column<byte[]>(type: "image", nullable: true),
                    DANE_BAZA = table.Column<byte[]>(type: "image", nullable: true),
                    DANE_PARAMS = table.Column<byte[]>(type: "image", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OLAP_WIDOKI", x => x.ID_OLAP_WIDOKI);
                });

            migrationBuilder.CreateTable(
                name: "OLAP_WIDOKI_USR",
                columns: table => new
                {
                    ID_OLAP_WIDOKI_USR = table.Column<int>(type: "int", nullable: false),
                    OLAP_DEFINICJE_ID = table.Column<int>(type: "int", nullable: true),
                    WIDOK = table.Column<int>(type: "int", nullable: true),
                    USER_ID = table.Column<int>(type: "int", nullable: true),
                    DANE = table.Column<string>(type: "text", nullable: true),
                    DATA_AREA = table.Column<int>(type: "int", nullable: true),
                    DANE_CHART = table.Column<string>(type: "text", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OLAP_WIDOKI_USR", x => x.ID_OLAP_WIDOKI_USR);
                });

            migrationBuilder.CreateTable(
                name: "OlapGroup",
                schema: "olap",
                columns: table => new
                {
                    OlapGroupId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: false),
                    OrdinalNumber = table.Column<int>(type: "int", nullable: true),
                    Visible = table.Column<int>(type: "int", nullable: true),
                    System = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OlapGroup", x => x.OlapGroupId);
                });

            migrationBuilder.CreateTable(
                name: "OPAKOWANIA",
                columns: table => new
                {
                    ID_OPAKOWANIA = table.Column<int>(type: "int", nullable: false),
                    KOD = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DL = table.Column<double>(type: "float", nullable: true),
                    SZ = table.Column<double>(type: "float", nullable: true),
                    WY = table.Column<double>(type: "float", nullable: true),
                    WAGA_MAX = table.Column<double>(type: "float", nullable: true),
                    ZWROTNE = table.Column<short>(type: "smallint", nullable: true),
                    RYCZALTOWE = table.Column<short>(type: "smallint", nullable: true),
                    PODLEGA_WYMIANIE = table.Column<short>(type: "smallint", nullable: true),
                    LP_WYMIANY = table.Column<short>(type: "smallint", nullable: true),
                    MAG_PRZYJETO = table.Column<double>(type: "float", nullable: true),
                    MAG_WYDANO = table.Column<double>(type: "float", nullable: true),
                    MAG_STAN = table.Column<double>(type: "float", nullable: true),
                    STAN_OG = table.Column<double>(type: "float", nullable: true),
                    OBJ = table.Column<double>(type: "float", nullable: true),
                    CENA_PLN = table.Column<double>(type: "float", nullable: true),
                    POBIERAJ_WYMIARY = table.Column<short>(type: "smallint", nullable: true),
                    CENA_KRAJ = table.Column<double>(type: "float", nullable: true),
                    CENA_KRAJ_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    CENA_ZAGR = table.Column<double>(type: "float", nullable: true),
                    CENA_ZAGR_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    M_PAL = table.Column<double>(type: "float", nullable: true),
                    LUZEM = table.Column<short>(type: "smallint", nullable: true),
                    ODZIEZ_WISZ = table.Column<short>(type: "smallint", nullable: true),
                    DL_MAX = table.Column<double>(type: "float", nullable: true),
                    SZ_MAX = table.Column<double>(type: "float", nullable: true),
                    WY_MAX = table.Column<double>(type: "float", nullable: true),
                    WAGA_OPAK = table.Column<double>(type: "float", nullable: true),
                    OBJ_MAX = table.Column<double>(type: "float", nullable: true),
                    M_PAL_OPAK = table.Column<double>(type: "float", nullable: true),
                    WY_OPAK = table.Column<double>(type: "float", nullable: true),
                    ZWROT_JT = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ZWROT_JT_ID = table.Column<int>(type: "int", nullable: true),
                    OBJ_OPAK = table.Column<double>(type: "float", nullable: true),
                    OPIS_NOTA = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    OPIS_NOTA_ID = table.Column<int>(type: "int", nullable: true),
                    MAG_OPAK = table.Column<short>(type: "smallint", nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    WAGA_OPAK_DO_WAGI = table.Column<int>(type: "int", nullable: true),
                    STANDARD = table.Column<short>(type: "smallint", nullable: true),
                    WYROZNIK = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    DL_MIN = table.Column<double>(type: "float", nullable: true),
                    SZ_MIN = table.Column<double>(type: "float", nullable: true),
                    WY_MIN = table.Column<double>(type: "float", nullable: true),
                    WAGA_MIN = table.Column<double>(type: "float", nullable: true),
                    WAGA_DEF = table.Column<double>(type: "float", nullable: true),
                    OBJ_MIN = table.Column<double>(type: "float", nullable: true),
                    MPAL_MIN = table.Column<double>(type: "float", nullable: true),
                    MPAL_MAX = table.Column<double>(type: "float", nullable: true),
                    PALETYZACJA = table.Column<short>(type: "smallint", nullable: true),
                    DictionaryId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TextId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OPAKOWANIA", x => x.ID_OPAKOWANIA);
                });

            migrationBuilder.CreateTable(
                name: "OPAKOWANIA_LOK",
                columns: table => new
                {
                    ID_OPAKOWANIA_LOK = table.Column<int>(type: "int", nullable: false),
                    OPAKOWANIA_ID = table.Column<int>(type: "int", nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    MAG_PRZYJETO = table.Column<double>(type: "float", nullable: true),
                    MAG_WYDANO = table.Column<double>(type: "float", nullable: true),
                    MAG_STAN = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OPAKOWANIA_LOK", x => x.ID_OPAKOWANIA_LOK);
                });

            migrationBuilder.CreateTable(
                name: "OPAKOWANIA_POZ",
                columns: table => new
                {
                    ID_OPAKOWANIA_POZ = table.Column<int>(type: "int", nullable: false),
                    OPAKOWANIA_ID = table.Column<int>(type: "int", nullable: true),
                    OPERACJA = table.Column<short>(type: "smallint", nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    ILOSC = table.Column<short>(type: "smallint", nullable: true),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    TABOR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KONTRAHENT_ID = table.Column<int>(type: "int", nullable: true),
                    KONTRAHENT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KIEROWCA_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(250)", unicode: false, maxLength: 250, nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OPAKOWANIA_POZ", x => x.ID_OPAKOWANIA_POZ);
                });

            migrationBuilder.CreateTable(
                name: "OPCJE_PRZEWOZOW",
                columns: table => new
                {
                    ID_OPCJE_PRZEWOZOW = table.Column<int>(type: "int", nullable: false),
                    RODZAJ = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    WYM_KWOTA_FRACHTU = table.Column<int>(type: "int", nullable: true),
                    BLOK_RECZN_ED_TRASY = table.Column<int>(type: "int", nullable: true),
                    BLOK_BEZP_EDYCJI_ZDARZEN = table.Column<int>(type: "int", nullable: true),
                    WYM_KM_ZDARZEN = table.Column<int>(type: "int", nullable: true),
                    SP_LICZ_KM = table.Column<int>(type: "int", nullable: true),
                    BLOK_ZAMKN_BEZ_SKAN = table.Column<int>(type: "int", nullable: true),
                    TYLKO_CENNIK = table.Column<int>(type: "int", nullable: true),
                    TRASA_AUTO_ZA_WY = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('1')"),
                    BLOK_TL_DP_GDY_OTW = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BLOK_TL_DP_GDY_SA_WST = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    FV_OTWARTE = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    USTAW_P = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    USTAW_D = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    AKTYWNY = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('1')"),
                    BLOK_ZAM_GDY_SA_WST = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    SUM_NA_TRASE_WG = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    WLACZ_PRZYCHODY = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    USTAW_PD_DIRECT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OPCJE_PRZEWOZOW", x => x.ID_OPCJE_PRZEWOZOW);
                });

            migrationBuilder.CreateTable(
                name: "OPISY_TOWAROW",
                columns: table => new
                {
                    ID_OPISY_TOWAROW = table.Column<int>(type: "int", nullable: false),
                    KLIENT_ID = table.Column<int>(type: "int", nullable: true),
                    KLIENT = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    NAZWA_UZYTK = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: false),
                    OPAKOWANIE = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    JEDNOSTKA = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    RECZNA_EDYCJA = table.Column<int>(type: "int", nullable: false),
                    IS_ADR = table.Column<int>(type: "int", nullable: false),
                    NAZWA_TARYFA = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    NAZWA_PRZEWOZOWA = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    NUMER_UN = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    KLASA = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    GP = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    KOD_KLASY = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    KAT_TRANSP = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    NUMER_ZAG = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    IS_PROZNY = table.Column<int>(type: "int", nullable: false),
                    GESTOSC = table.Column<double>(type: "float", nullable: true),
                    INFO_DOD = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    NALEPKI = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    IS_640 = table.Column<int>(type: "int", nullable: false),
                    IS_274 = table.Column<int>(type: "int", nullable: false),
                    IS_ODPAD = table.Column<int>(type: "int", nullable: false),
                    IS_OPAK_AW = table.Column<int>(type: "int", nullable: false),
                    IS_GORACY = table.Column<int>(type: "int", nullable: false),
                    IS_5_4_1_1_15 = table.Column<int>(type: "int", nullable: false),
                    PROZNY_OKR_NA_LP = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PROZNY_KAT_TRANSP = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TEMP_PRZEWOZU = table.Column<double>(type: "float", nullable: true),
                    TEMP_PRZEWOZU_O = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    HACCP = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SQAS = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    GRUPA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KOD_OPAK = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    IS_TWR = table.Column<int>(type: "int", nullable: true),
                    NAZWA_EN = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    OPIS_DOD = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    WSK = table.Column<int>(type: "int", nullable: true),
                    SYMBOL = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    JM_KG = table.Column<double>(type: "float", nullable: true),
                    LICZ_JM_KG_ILOSC_JT = table.Column<int>(type: "int", nullable: true),
                    WAGA_OPAK_DO_CAL = table.Column<int>(type: "int", nullable: true),
                    IS_SENT = table.Column<int>(type: "int", nullable: true),
                    NHM = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja"),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dział"),
                    TEMP_OD = table.Column<double>(type: "float", nullable: true),
                    TEMP_DO = table.Column<double>(type: "float", nullable: true),
                    IS_PAPIER = table.Column<int>(type: "int", nullable: true),
                    DictionaryId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TextId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OPISY_TOWAROW", x => x.ID_OPISY_TOWAROW);
                });

            migrationBuilder.CreateTable(
                name: "OPISY_TOWAROW_WYM_TABORU",
                columns: table => new
                {
                    ID_OPISY_TOWAROW_WYM_TABORU = table.Column<int>(type: "int", nullable: false),
                    OPISY_TOWAROW_ID = table.Column<int>(type: "int", nullable: true),
                    NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    ILOSC = table.Column<int>(type: "int", nullable: true),
                    TYP = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "WYM.WYP, TYP.ZAB, SP.LAD"),
                    ZAMIENNIK = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OPISY_TOWAROW_WYM_TABORU", x => x.ID_OPISY_TOWAROW_WYM_TABORU);
                });

            migrationBuilder.CreateTable(
                name: "Opti_ETA_Drivers",
                schema: "opti",
                columns: table => new
                {
                    idx = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    sessionId = table.Column<int>(type: "int", nullable: true),
                    step = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    driverId = table.Column<int>(type: "int", nullable: true),
                    dt = table.Column<DateTime>(type: "datetime", nullable: true),
                    statistics = table.Column<string>(type: "xml", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__Opti_ETA__DC501A7868AB6FE6", x => x.idx);
                });

            migrationBuilder.CreateTable(
                name: "Opti_ETA_Simulations",
                schema: "opti",
                columns: table => new
                {
                    idx = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    dtCreate = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    dtStart = table.Column<DateTime>(type: "datetime", nullable: true),
                    sessionId = table.Column<int>(type: "int", nullable: true),
                    step = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    groupId = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    driverId1 = table.Column<int>(type: "int", nullable: true),
                    driverId2 = table.Column<int>(type: "int", nullable: true),
                    error = table.Column<string>(type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    simulation = table.Column<string>(type: "xml", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__Opti_ETA__DC501A7843A9C33C", x => x.idx);
                });

            migrationBuilder.CreateTable(
                name: "OptimalizationThreads",
                schema: "opti",
                columns: table => new
                {
                    OptimalizationThreadsId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SessionId = table.Column<int>(type: "int", nullable: false),
                    RunState = table.Column<int>(type: "int", nullable: false),
                    StartDT = table.Column<DateTime>(type: "datetime", nullable: false),
                    UserId = table.Column<int>(type: "int", nullable: false),
                    ErrorId = table.Column<int>(type: "int", nullable: true),
                    ErrorMsg = table.Column<string>(type: "varchar(max)", unicode: false, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OptimalizationThreads", x => x.OptimalizationThreadsId);
                });

            migrationBuilder.CreateTable(
                name: "OptimizationFtlLog",
                schema: "opti",
                columns: table => new
                {
                    OptimizationFtlLogId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SessionId = table.Column<int>(type: "int", nullable: false),
                    Date = table.Column<DateTime>(type: "datetime", nullable: true),
                    Mode = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    Step = table.Column<string>(type: "nvarchar(20)", maxLength: 20, nullable: true),
                    Info = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OptimizationFtlLog", x => x.OptimizationFtlLogId);
                });

            migrationBuilder.CreateTable(
                name: "OptimizationLog",
                schema: "opti",
                columns: table => new
                {
                    OptimizationLogId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SessionId = table.Column<int>(type: "int", nullable: false),
                    Date = table.Column<DateTime>(type: "datetime", nullable: true),
                    Mode = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    Step = table.Column<string>(type: "nvarchar(20)", maxLength: 20, nullable: true),
                    Info = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OptimizationLog", x => x.OptimizationLogId);
                });

            migrationBuilder.CreateTable(
                name: "OPTIPLAN_LOG",
                schema: "iLAN",
                columns: table => new
                {
                    PlanDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    ZlecenieId = table.Column<int>(type: "int", nullable: false),
                    SamochodId = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__OPTIPLAN__FFFE97B443285EF0", x => x.PlanDate);
                });

            migrationBuilder.CreateTable(
                name: "OptiPlanerFtlDistance",
                columns: table => new
                {
                    IdOptiPlanerFtlDistance = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SessionId = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ObjId = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    RecId = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    Distance = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OptiPlanerFtlDistance", x => x.IdOptiPlanerFtlDistance);
                });

            migrationBuilder.CreateTable(
                name: "OptiPlanMapLineColors",
                columns: table => new
                {
                    IdOptiPlanMapLineColors = table.Column<int>(type: "int", nullable: false),
                    LineColor = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OptiPlanMapLineColors", x => x.IdOptiPlanMapLineColors);
                });

            migrationBuilder.CreateTable(
                name: "OstOPTYMALIZACJA",
                schema: "opti",
                columns: table => new
                {
                    dt = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "OTH_POZ",
                columns: table => new
                {
                    ID_OTH_POZ = table.Column<int>(type: "int", nullable: false),
                    KOD = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    JM = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OTH_POZ", x => x.ID_OTH_POZ);
                },
                comment: "Słownik usług innych");

            migrationBuilder.CreateTable(
                name: "OutputType",
                schema: "app",
                columns: table => new
                {
                    OutputTypeId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: false),
                    Description = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true),
                    Enabled = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OutputType", x => x.OutputTypeId);
                });

            migrationBuilder.CreateTable(
                name: "PACZKI",
                columns: table => new
                {
                    ID_PACZKI = table.Column<int>(type: "int", nullable: false),
                    PRZESYLKA_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do przesyłki - tab: PRZESYLKI"),
                    PRZESYLKA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer przesyłki"),
                    ZALADOWANA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy paczka została załadowana"),
                    LP = table.Column<int>(type: "int", nullable: true, comment: "Lp"),
                    ILOSC = table.Column<int>(type: "int", nullable: true, comment: "Ilość rzeczywista"),
                    NR_PACZKI_EX = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true, comment: "Numer zewnętrzny paczki"),
                    KOD_KRESKOWY = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true, comment: "Kod kreskowy paczki"),
                    OPIS = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true, comment: "Opis towaru"),
                    OPAKOWANIE = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Symbol opakowania"),
                    KOD_UN = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "ADR - kod UN"),
                    KLASA_ADR = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "ADR - Klasa"),
                    GRUPA_ADR = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "ADR - Grupa"),
                    OPIS_ADR = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "ADR - Opis"),
                    WAGA_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Waga deklarowana"),
                    OBJ_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Objętość deklarowana"),
                    WAGA = table.Column<double>(type: "float", nullable: true, comment: "Waga rzeczywista"),
                    DLUGOSC = table.Column<double>(type: "float", nullable: true, comment: "Długość rzeczywista"),
                    WYSOKOSC = table.Column<double>(type: "float", nullable: true, comment: "Wysokość rzeczywista"),
                    SZEROKOSC = table.Column<double>(type: "float", nullable: true, comment: "Szerokość rzeczywista"),
                    OBJ = table.Column<double>(type: "float", nullable: true, comment: "Objętość rzeczywista"),
                    METRY_LADOWNE = table.Column<double>(type: "float", nullable: true, comment: "Metry ładowne rzeczywiste"),
                    LIST_LINIOWY_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do przewozu liniowego - tab: LISTY_LINIOWE"),
                    LIST_LINIOWY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Ostatni przewóz liniowy"),
                    LIST_LINIOWY_DYST_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do przewozu dystryb. - tab: LISTY_LINIOWE"),
                    LIST_LINIOWY_DYST = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Ostatni przewóz dystryb."),
                    MAGAZYN_P = table.Column<int>(type: "int", nullable: true, comment: "Ostatni magazyn załadunku"),
                    MAGAZYN_R = table.Column<int>(type: "int", nullable: true, comment: "Ostatni magazyn rozładunku"),
                    OST_STATUS = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Ostatni status globalny paczki"),
                    ANOMALIA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy paczka ma anomalię"),
                    ANOMALIA_OPIS = table.Column<string>(type: "varchar(250)", unicode: false, maxLength: 250, nullable: true, comment: "Opis anomalii"),
                    ILOSC_P = table.Column<int>(type: "int", nullable: true, comment: "Ilość pierwotna"),
                    WAGA_JEDN = table.Column<double>(type: "float", nullable: true, comment: "Waga jednostkowa"),
                    OBJ_JEDN = table.Column<double>(type: "float", nullable: true, comment: "Objętość jednostkowa"),
                    WAGA_P = table.Column<double>(type: "float", nullable: true, comment: "Waga pierwotna"),
                    OBJ_P = table.Column<double>(type: "float", nullable: true, comment: "Objętość pierwotna"),
                    METRY_LADOWNE_P = table.Column<double>(type: "float", nullable: true, comment: "Metry ładowne pierwotne"),
                    MIEJSCA_PAL = table.Column<double>(type: "float", nullable: true, comment: "Miejsca paletowe rzeczywiste"),
                    MIEJSCA_PAL_P = table.Column<double>(type: "float", nullable: true, comment: "Miejsca paletowe pierwotne"),
                    MAG_LOK_KOD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Kod miejsca w magazynie - tab: MIEJSCE"),
                    MAG_LOK_STAT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Statusy złożenia w magazynie"),
                    ANOMALIA_KOD = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Kod anomalii"),
                    KOD_OPAK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Kod opakowania"),
                    METRY_DLUZYCA_P = table.Column<double>(type: "float", nullable: true, comment: "Metry dłużycowe pierwotne"),
                    METRY_DLUZYCA = table.Column<double>(type: "float", nullable: true, comment: "Metry dłużycowe rzeczywiste"),
                    WAGA_KUBATUROWA = table.Column<double>(type: "float", nullable: true, comment: "Waga kubaturowa"),
                    WAGA_LADOWNA = table.Column<double>(type: "float", nullable: true, comment: "Waga ładowna"),
                    DLUZYCA_DOD = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy jest dodatek za dłużycę"),
                    DLUZYCA_DOD_KG = table.Column<double>(type: "float", nullable: true, comment: "Dodatkowe KG za dłużycę"),
                    WAGA_OBL = table.Column<double>(type: "float", nullable: true, comment: "Waga obliczeniowa"),
                    DLUGOSC_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Długość deklarowana"),
                    WYSOKOSC_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Wysokość deklarowana"),
                    SZEROKOSC_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Szerokość deklarowana"),
                    METRY_LADOWNE_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Metry ładowne deklarowane"),
                    MIEJSCA_PAL_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Miejsca paletowe deklarowane"),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    OPAK_WYM = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy opakowanie wymienne"),
                    OPAK_WYM_ILOSC = table.Column<double>(type: "float", nullable: true, comment: "Ilość opakowań wymiennych"),
                    IDOC_POSNR = table.Column<string>(type: "varchar(6)", unicode: false, maxLength: 6, nullable: true, comment: "Numer pozycji na potrzeby IDOC (SAP)"),
                    PIETROWANIE = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy możliwe piętrowanie"),
                    LOKALIZACJA_PREV = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja poprzednia"),
                    LOKALIZACJA_CURR = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja obecna"),
                    LOKALIZACJA_NEXT = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja następna"),
                    KOREKTA = table.Column<int>(type: "int", nullable: true, comment: "Paczka zostałą skorygowana"),
                    KOREKTA_DO_AKCEPT = table.Column<int>(type: "int", nullable: true, comment: "Korekta paczki oczekuje akceptacji"),
                    KOREKTA_AKCEPT = table.Column<int>(type: "int", nullable: true, comment: "Korekta paczki zaakceptowana"),
                    KOREKTA_AKCEPT_DATA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Korekta paczki zakceptowana dnia"),
                    KOREKTA_AKCEPT_GODZ = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Korekta paczki zakceptowana o godz"),
                    KOREKTA_AKCEPT_KTO = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Kto akceptował"),
                    KOREKTA_LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja korygująca"),
                    OPAK_WYM_DO_ROZL = table.Column<double>(type: "float", nullable: true, comment: "Ilość opakowań wymiennych do rozliczenia"),
                    OPAK_WYM_PRZES_ZWR_ID = table.Column<double>(type: "float", nullable: true, comment: "Relacja do przesyłki, którą zwrócono opakowania"),
                    METRY_DLUZYCA_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Metry dłużycowe deklarowane"),
                    KONSOLIDACJA_PACZKI_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do paczki skonsolidowanej - pierwotnej"),
                    TYP_PACZKI = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Typ paczki: 0 - ładunek, 1 - tylko opak. wymienne"),
                    ILOSC_NA_JT = table.Column<int>(type: "int", nullable: true, comment: "Ilość opakowań na JT"),
                    WAGA_OPAK = table.Column<double>(type: "float", nullable: true, comment: "Waga opakowań"),
                    KOD_OPAK_T = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Kod opakowania towaru"),
                    OPAKOWANIE_T = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Symbol opakowania towaru"),
                    ADR_OGR_TUNELE = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "ADR - Ograniczenia tuneli"),
                    ADR_ILOSC_I_RODZ = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "ADR - Ilosć i rodzaj"),
                    ADR_ILOSC_CALK = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "ADR - Ilość całkowita"),
                    ID_PACZKI_EX = table.Column<int>(type: "int", nullable: true, comment: "*** na potrzeby interfejsów ***"),
                    OPIS_ID = table.Column<int>(type: "int", nullable: true, comment: "ID opisu towaru"),
                    OPIS_DOD = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true, comment: "Opis towaru - dodatkowy"),
                    WAGA_JEDN_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Waga jednostkowa deklarowana"),
                    OBJ_JEDN_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Objętość jednostkowa deklarowana"),
                    TWORZ_WIELE_ID = table.Column<int>(type: "int", nullable: true, comment: "*** na potrzeby wewnętrzne ***"),
                    ZASADA_DEKL_RZ = table.Column<int>(type: "int", nullable: true, comment: "0 - bez, 1 - DEKL->RZ, 2 - RZ -> DEKL"),
                    ZASADA_DEKL_RZ_POLA = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Pola do aktualizacji"),
                    NR_PACZKI_EX2 = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true, comment: "Numer zewnętrzny paczki 2"),
                    P_FAKT_DATA_ROZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    P_FAKT_GODZ_ROZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    P_HACCP = table.Column<int>(type: "int", nullable: true),
                    ETYKIETA = table.Column<int>(type: "int", nullable: true),
                    ETYKIETA_KURIER = table.Column<int>(type: "int", nullable: true),
                    MAG_STREFA = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    ZWROT_DO_ID = table.Column<int>(type: "int", nullable: true),
                    P_Fakt_Data_Zal = table.Column<DateTime>(type: "datetime", nullable: true),
                    P_Fakt_Godz_Zal = table.Column<DateTime>(type: "datetime", nullable: true),
                    AIR_WAGA_KUBATUROWA = table.Column<double>(type: "float", nullable: true, comment: "Waga kubaturowa"),
                    AIR_WAGA_OBL = table.Column<double>(type: "float", nullable: true, comment: "Waga obliczeniowa"),
                    POMIAR = table.Column<int>(type: "int", nullable: true),
                    KURIER_REF = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer paczki w zewnętrznej sieci kurierskiej"),
                    AIR_PACZKI_ID = table.Column<int>(type: "int", nullable: true),
                    SQL_DEBUG_INFO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    EMI_STATE = table.Column<int>(type: "int", nullable: true),
                    ZABEZP_TOWARU = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    MIEJSCA_PAL_OBL = table.Column<double>(type: "float", nullable: true, comment: "MP*"),
                    NR_PACZKI_EX3 = table.Column<string>(type: "varchar(512)", unicode: false, maxLength: 512, nullable: true, comment: "Numer zewnętrzny paczki 3"),
                    PACZKA_NADRZ_ID = table.Column<int>(type: "int", nullable: true),
                    SIEC_ZEWN_REF_1 = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    SIEC_ZEWN_REF_2 = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    STOS_ZAMKNIJ = table.Column<int>(type: "int", nullable: true),
                    TEMPERATURA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZA_ID = table.Column<int>(type: "int", nullable: true),
                    WY_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PACZKI", x => x.ID_PACZKI);
                },
                comment: "Paczki drobnicowe - detal do tabeli PRZESYLKI");

            migrationBuilder.CreateTable(
                name: "PACZKI_AIR",
                columns: table => new
                {
                    ID_PACZKI_AIR = table.Column<int>(type: "int", nullable: false),
                    TWORZ_WIELE_ID = table.Column<int>(type: "int", nullable: true, comment: "*** na potrzeby wewnętrzne ***"),
                    PRZESYLKI_AIR_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do przesyłki - tab: PRZESYLKI_AIR"),
                    LP = table.Column<int>(type: "int", nullable: true, comment: "Lp"),
                    ILOSC = table.Column<int>(type: "int", nullable: true, comment: "Ilość rzeczywista"),
                    NR_PACZKI_EX = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true, comment: "Numer zewnętrzny paczki"),
                    KOD_KRESKOWY = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true, comment: "Kod kreskowy paczki"),
                    OPIS_ID = table.Column<int>(type: "int", nullable: true, comment: "ID opisu towaru"),
                    OPIS = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true, comment: "Opis towaru"),
                    OPIS_DOD = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true, comment: "Opis towaru - dodatkowy"),
                    KOD_OPAK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Kod opakowania"),
                    OPAKOWANIE = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Symbol opakowania"),
                    WAGA_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Waga deklarowana"),
                    OBJ_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Objętość deklarowana"),
                    WAGA = table.Column<double>(type: "float", nullable: true, comment: "Waga rzeczywista"),
                    OBJ = table.Column<double>(type: "float", nullable: true, comment: "Objętość rzeczywista"),
                    DLUGOSC_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Długość deklarowana"),
                    WYSOKOSC_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Wysokość deklarowana"),
                    SZEROKOSC_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Szerokość deklarowana"),
                    DLUGOSC = table.Column<double>(type: "float", nullable: true, comment: "Długość rzeczywista"),
                    WYSOKOSC = table.Column<double>(type: "float", nullable: true, comment: "Wysokość rzeczywista"),
                    SZEROKOSC = table.Column<double>(type: "float", nullable: true, comment: "Szerokość rzeczywista"),
                    ADR = table.Column<int>(type: "int", nullable: true, comment: "Czy ADR"),
                    WAGA_OBJ = table.Column<double>(type: "float", nullable: true),
                    PIETROWANIE = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy możliwe piętrowanie")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PACZKI_AIR", x => x.ID_PACZKI_AIR);
                },
                comment: "Paczki drobnicowe - detal do tabeli PRZESYLKI_AIR");

            migrationBuilder.CreateTable(
                name: "PACZKI_DOKUM",
                columns: table => new
                {
                    ID_PACZKI_DOKUM = table.Column<int>(type: "int", nullable: false),
                    PRZESYLKI_DOKUMENTY_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    PRZESYLKI_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    PACZKI_DOK_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    PRZESYLKI_DOK_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    PRZESYLKI_DOK_LOK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: false, defaultValueSql: "('')"),
                    ILOSC = table.Column<double>(type: "float", nullable: false, defaultValueSql: "('')"),
                    ILOSC_ROZL = table.Column<double>(type: "float", nullable: false, defaultValueSql: "('')"),
                    OBJ_ID = table.Column<int>(type: "int", nullable: true),
                    REC_ID = table.Column<int>(type: "int", nullable: true),
                    TRYB = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    KOD_DOK = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    STICKER = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PACZKI_DOKUM", x => x.ID_PACZKI_DOKUM);
                });

            migrationBuilder.CreateTable(
                name: "PACZKI_HIST",
                columns: table => new
                {
                    ID_PACZKI_HIST = table.Column<int>(type: "int", nullable: false),
                    PACZKI_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do paczki"),
                    LP_ZMIANY = table.Column<int>(type: "int", nullable: true, comment: "Lp zmiany"),
                    PRZESYLKA_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do przesyłki - tab: PRZESYLKI"),
                    PRZESYLKA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer przesyłki"),
                    ZALADOWANA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy paczka została załadowana"),
                    MAG_LOK_KOD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Kod miejsca w magazynie - tab: MIEJSCE"),
                    MAG_LOK_STAT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Statusy złożenia w magazynie"),
                    LP = table.Column<int>(type: "int", nullable: true, comment: "Lp"),
                    ANOMALIA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy paczka ma anomalię"),
                    ANOMALIA_KOD = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Kod anomalii"),
                    ANOMALIA_OPIS = table.Column<string>(type: "varchar(250)", unicode: false, maxLength: 250, nullable: true, comment: "Opis anomalii"),
                    ILOSC_P = table.Column<int>(type: "int", nullable: true, comment: "Ilość pierwotna"),
                    ILOSC = table.Column<int>(type: "int", nullable: true, comment: "Ilość rzeczywista"),
                    NR_PACZKI_EX = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true, comment: "Numer zewnętrzny paczki"),
                    KOD_KRESKOWY = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true, comment: "Kod kreskowy paczki"),
                    OPIS = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true, comment: "Opis towaru"),
                    KOD_OPAK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Kod opakowania"),
                    OPAKOWANIE = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Symbol opakowania"),
                    OPAK_WYM = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy opakowanie wymienne"),
                    OPAK_WYM_ILOSC = table.Column<double>(type: "float", nullable: true, comment: "Ilość opakowań wymiennych"),
                    PIETROWANIE = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy możliwe piętrowanie"),
                    KOD_UN = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "ADR - kod UN"),
                    KLASA_ADR = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "ADR - Klasa"),
                    GRUPA_ADR = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "ADR - Grupa"),
                    OPIS_ADR = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "ADR - Opis"),
                    WAGA_JEDN = table.Column<double>(type: "float", nullable: true, comment: "Waga jednostkowa"),
                    OBJ_JEDN = table.Column<double>(type: "float", nullable: true, comment: "Objętość jednostkowa"),
                    WAGA_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Waga deklarowana"),
                    OBJ_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Objętość deklarowana"),
                    WAGA = table.Column<double>(type: "float", nullable: true, comment: "Waga rzeczywista"),
                    OBJ = table.Column<double>(type: "float", nullable: true, comment: "Objętość rzeczywista"),
                    WAGA_P = table.Column<double>(type: "float", nullable: true, comment: "Waga pierwotna"),
                    OBJ_P = table.Column<double>(type: "float", nullable: true, comment: "Objętość pierwotna"),
                    DLUGOSC_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Długość deklarowana"),
                    WYSOKOSC_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Wysokość deklarowana"),
                    SZEROKOSC_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Szerokość deklarowana"),
                    DLUGOSC = table.Column<double>(type: "float", nullable: true, comment: "Długość rzeczywista"),
                    WYSOKOSC = table.Column<double>(type: "float", nullable: true, comment: "Wysokość rzeczywista"),
                    SZEROKOSC = table.Column<double>(type: "float", nullable: true, comment: "Szerokość rzeczywista"),
                    METRY_LADOWNE_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Metry ładowne deklarowane"),
                    METRY_LADOWNE_P = table.Column<double>(type: "float", nullable: true, comment: "Metry ładowne pierwotne"),
                    METRY_LADOWNE = table.Column<double>(type: "float", nullable: true, comment: "Metry ładowne rzeczywiste"),
                    METRY_DLUZYCA_P = table.Column<double>(type: "float", nullable: true, comment: "Metry dłużycowe pierwotne"),
                    METRY_DLUZYCA = table.Column<double>(type: "float", nullable: true, comment: "Metry dłużycowe rzeczywiste"),
                    MIEJSCA_PAL_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Miejsca paletowe deklarowane"),
                    MIEJSCA_PAL = table.Column<double>(type: "float", nullable: true, comment: "Miejsca paletowe rzeczywiste"),
                    MIEJSCA_PAL_P = table.Column<double>(type: "float", nullable: true, comment: "Miejsca paletowe pierwotne"),
                    WAGA_KUBATUROWA = table.Column<double>(type: "float", nullable: true, comment: "Waga kubaturowa"),
                    WAGA_LADOWNA = table.Column<double>(type: "float", nullable: true, comment: "Waga ładowna"),
                    DLUZYCA_DOD = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy jest dodatek za dłużycę"),
                    DLUZYCA_DOD_KG = table.Column<double>(type: "float", nullable: true, comment: "Dodatkowe KG za dłużycę"),
                    WAGA_OBL = table.Column<double>(type: "float", nullable: true, comment: "Waga obliczeniowa"),
                    LIST_LINIOWY_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do przewozu liniowego - tab: LISTY_LINIOWE"),
                    LIST_LINIOWY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Ostatni przewóz liniowy"),
                    LIST_LINIOWY_DYST_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do przewozu dystryb. - tab: LISTY_LINIOWE"),
                    LIST_LINIOWY_DYST = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Ostatni przewóz dystryb."),
                    MAGAZYN_P = table.Column<int>(type: "int", nullable: true, comment: "Ostatni magazyn załadunku"),
                    MAGAZYN_R = table.Column<int>(type: "int", nullable: true, comment: "Ostatni magazyn rozładunku"),
                    OST_STATUS = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Ostatni status globalny paczki"),
                    IDOC_POSNR = table.Column<string>(type: "varchar(6)", unicode: false, maxLength: 6, nullable: true, comment: "Numer pozycji na potrzeby IDOC (SAP)"),
                    LOKALIZACJA_PREV = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja poprzednia"),
                    LOKALIZACJA_CURR = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja obecna"),
                    LOKALIZACJA_NEXT = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja następna"),
                    KOREKTA = table.Column<int>(type: "int", nullable: true, comment: "Paczka zostałą skorygowana"),
                    KOREKTA_DO_AKCEPT = table.Column<int>(type: "int", nullable: true, comment: "Korekta paczki oczekuje akceptacji"),
                    KOREKTA_AKCEPT = table.Column<int>(type: "int", nullable: true, comment: "Korekta paczki zaakceptowana"),
                    KOREKTA_AKCEPT_DATA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Korekta paczki zakceptowana dnia"),
                    KOREKTA_AKCEPT_GODZ = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Korekta paczki zakceptowana o godz"),
                    KOREKTA_AKCEPT_KTO = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Kto akceptował"),
                    KOREKTA_LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja korygująca"),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    OPAK_WYM_DO_ROZL = table.Column<double>(type: "float", nullable: true, comment: "Ilość opakowań wymiennych do rozliczenia"),
                    OPAK_WYM_PRZES_ZWR_ID = table.Column<double>(type: "float", nullable: true, comment: "Relacja do przesyłki, którą zwrócono opakowania"),
                    METRY_DLUZYCA_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Metry dłużycowe deklarowane"),
                    KONSOLIDACJA_PACZKI_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do paczki skonsolidowanej - pierwotnej"),
                    TYP_PACZKI = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Typ paczki: 0 - ładunek, 1 - tylko opak. wymienne"),
                    ILOSC_NA_JT = table.Column<int>(type: "int", nullable: true, comment: "Ilość opakowań na JT"),
                    WAGA_OPAK = table.Column<double>(type: "float", nullable: true, comment: "Waga opakowań"),
                    KOD_OPAK_T = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Kod opakowania towaru"),
                    OPAKOWANIE_T = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Symbol opakowania towaru"),
                    ADR_OGR_TUNELE = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "ADR - Ograniczenia tuneli"),
                    ADR_ILOSC_I_RODZ = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "ADR - Ilosć i rodzaj"),
                    ADR_ILOSC_CALK = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "ADR - Ilość całkowita"),
                    ID_PACZKI_EX = table.Column<int>(type: "int", nullable: true, comment: "*** na potrzeby interfejsów ***"),
                    OPIS_ID = table.Column<int>(type: "int", nullable: true, comment: "ID opisu towaru"),
                    OPIS_DOD = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true, comment: "Opis towaru - dodatkowy"),
                    WAGA_JEDN_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Waga jednostkowa deklarowana"),
                    OBJ_JEDN_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Objętość jednostkowa deklarowana"),
                    TWORZ_WIELE_ID = table.Column<int>(type: "int", nullable: true, comment: "*** na potrzeby wewnętrzne ***"),
                    ZASADA_DEKL_RZ = table.Column<int>(type: "int", nullable: true, comment: "0 - bez, 1 - DEKL->RZ, 2 - RZ -> DEKL"),
                    ZASADA_DEKL_RZ_POLA = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Pola do aktualizacji"),
                    NR_PACZKI_EX2 = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true, comment: "Numer zewnętrzny paczki 2"),
                    P_FAKT_DATA_ROZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    P_FAKT_GODZ_ROZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    P_HACCP = table.Column<int>(type: "int", nullable: true),
                    ETYKIETA = table.Column<int>(type: "int", nullable: true),
                    ETYKIETA_KURIER = table.Column<int>(type: "int", nullable: true),
                    MAG_STREFA = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    ZWROT_DO_ID = table.Column<int>(type: "int", nullable: true),
                    AIR_WAGA_KUBATUROWA = table.Column<double>(type: "float", nullable: true, comment: "Waga kubaturowa"),
                    AIR_WAGA_OBL = table.Column<double>(type: "float", nullable: true, comment: "Waga obliczeniowa"),
                    P_FAKT_DATA_ZAL = table.Column<DateTime>(type: "datetime", nullable: true),
                    P_FAKT_GODZ_ZAL = table.Column<DateTime>(type: "datetime", nullable: true),
                    POMIAR = table.Column<int>(type: "int", nullable: true),
                    KURIER_REF = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer paczki w zewnętrznej sieci kurierskiej"),
                    AIR_PACZKI_ID = table.Column<int>(type: "int", nullable: true),
                    SQL_DEBUG_INFO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    EMI_STATE = table.Column<int>(type: "int", nullable: true),
                    ZABEZP_TOWARU = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    MIEJSCA_PAL_OBL = table.Column<double>(type: "float", nullable: true, comment: "MP*"),
                    NR_PACZKI_EX3 = table.Column<string>(type: "varchar(512)", unicode: false, maxLength: 512, nullable: true, comment: "Numer zewnętrzny paczki 3"),
                    PACZKA_NADRZ_ID = table.Column<int>(type: "int", nullable: true),
                    SIEC_ZEWN_REF_1 = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    SIEC_ZEWN_REF_2 = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    STOS_ZAMKNIJ = table.Column<int>(type: "int", nullable: true),
                    TEMPERATURA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZA_ID = table.Column<int>(type: "int", nullable: true),
                    WY_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PACZKI_HIST", x => x.ID_PACZKI_HIST);
                },
                comment: "Paczki drobnicowe - detal do tabeli PRZESYLKI");

            migrationBuilder.CreateTable(
                name: "PACZKI_LOK_HIST",
                columns: table => new
                {
                    ID_PACZKI_LOK_HIST = table.Column<int>(type: "int", nullable: false),
                    PACZKI_ID = table.Column<int>(type: "int", nullable: true),
                    MAG_LOK_KOD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DATA_GODZ_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_GODZ_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    WEJ_MAGAZYN_ZDARZENIA_ID = table.Column<int>(type: "int", nullable: true),
                    WYJ_MAGAZYN_ZDARZENIA_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PACZKI_LOK_HIST", x => x.ID_PACZKI_LOK_HIST);
                });

            migrationBuilder.CreateTable(
                name: "PACZKI_PALETOWE",
                columns: table => new
                {
                    ID_PACZKI_PALETOWE = table.Column<int>(type: "int", nullable: false),
                    PACZKI_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    PRZESYLKI_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    PACZKI_PAL_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    PRZESYLKI_PAL_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ILOSC = table.Column<double>(type: "float", nullable: false, defaultValueSql: "('')"),
                    ILOSC_ROZL = table.Column<double>(type: "float", nullable: false, defaultValueSql: "('')"),
                    BILANS_OPAK_LOK_ID = table.Column<int>(type: "int", nullable: true),
                    BILANS_OPAK_LOK_POZ_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PACZKI_PALETOWE", x => x.ID_PACZKI_PALETOWE);
                });

            migrationBuilder.CreateTable(
                name: "PACZKI_PROD",
                columns: table => new
                {
                    ID_PACZKI_PROD = table.Column<int>(type: "int", nullable: false),
                    PACZKI_ID = table.Column<int>(type: "int", nullable: false, comment: "Relacja do paczki, tab: PACZKI"),
                    PRZESYLKI_ID = table.Column<int>(type: "int", nullable: false, comment: "Relacja do przesyłki, tab: PRZESYLKI"),
                    TYP_ZAMOWIENIA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Typ zamówienia"),
                    NR_ZAMOWIENIA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer zamówienia"),
                    POZ_ZAMOWIENIA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Pozycja zamówienia"),
                    SEKW_ZAMOWIENIA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Sekwencja zamówienia"),
                    REF_KLIENTA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Referencja klienta"),
                    KOD_TOWARU_1 = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true, comment: "Kod towaru 1"),
                    KOD_TOWARU_2 = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true, comment: "Kod towaru 2"),
                    DATA_DOSTAWY = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data dostawy"),
                    GODZ_DOSTAWY = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina dostawy"),
                    TOLER_TERM_DOST = table.Column<double>(type: "float", nullable: true, comment: "Toreracja terminu dostawy"),
                    ILOSC_ZAMOWIONA = table.Column<double>(type: "float", nullable: true, comment: "Ilość towaru zamówiona"),
                    TOLER_ILOSCI_MINUS = table.Column<double>(type: "float", nullable: true, comment: "Tolerancja ilości -"),
                    TOLER_ILOSCI_PLUS = table.Column<double>(type: "float", nullable: true, comment: "Tolerancja ilości +"),
                    ILOSC_WYSLANA = table.Column<double>(type: "float", nullable: true, comment: "Ilość towaru wysłana"),
                    WYMAGANA_DATA_DOSTAWY = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Wymagana data dostawy"),
                    DATA_PRODUKCJI = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data produkcji"),
                    REGION_SPRZEDAZY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Region sprzedaży"),
                    KOD_UN = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "ADR - kod UN"),
                    KLASA_ADR = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "ADR - Klasa"),
                    GRUPA_ADR = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "ADR - Grupa"),
                    OPIS_ADR = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "ADR - Opis"),
                    DATA_EXT = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data klienta"),
                    GODZ_EXT = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina klienta")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PACZKI_PROD", x => x.ID_PACZKI_PROD);
                },
                comment: "Specyfikacja produktów znajdujących się w paczce");

            migrationBuilder.CreateTable(
                name: "PACZKI_RAIL",
                columns: table => new
                {
                    ID_PACZKI_RAIL = table.Column<int>(type: "int", nullable: false),
                    TWORZ_WIELE_ID = table.Column<int>(type: "int", nullable: true, comment: "*** na potrzeby wewnętrzne ***"),
                    PRZESYLKI_RAIL_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do przesyłki - tab: PRZESYLKI_RAIL"),
                    LP = table.Column<int>(type: "int", nullable: true, comment: "Lp"),
                    ILOSC = table.Column<int>(type: "int", nullable: true, comment: "Ilość rzeczywista"),
                    NR_PACZKI_EX = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true, comment: "Numer zewnętrzny paczki"),
                    KOD_KRESKOWY = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true, comment: "Kod kreskowy paczki"),
                    NHM = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "NHM"),
                    OPIS_ID = table.Column<int>(type: "int", nullable: true, comment: "ID opisu towaru"),
                    OPIS = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true, comment: "Opis towaru"),
                    OPIS_DOD = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true, comment: "Opis towaru - dodatkowy"),
                    KOD_OPAK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Kod opakowania"),
                    OPAKOWANIE = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Symbol opakowania"),
                    KOD_OPAK_T = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Kod opakowania towaru"),
                    OPAKOWANIE_T = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Symbol opakowania towaru"),
                    ILOSC_NA_JT = table.Column<int>(type: "int", nullable: true, comment: "Ilość opakowań na JT"),
                    PIETROWANIE = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy możliwe piętrowanie"),
                    WAGA_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Waga deklarowana"),
                    OBJ_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Objętość deklarowana"),
                    WAGA = table.Column<double>(type: "float", nullable: true, comment: "Waga rzeczywista"),
                    OBJ = table.Column<double>(type: "float", nullable: true, comment: "Objętość rzeczywista"),
                    DLUGOSC_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Długość deklarowana"),
                    WYSOKOSC_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Wysokość deklarowana"),
                    SZEROKOSC_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Szerokość deklarowana"),
                    DLUGOSC = table.Column<double>(type: "float", nullable: true, comment: "Długość rzeczywista"),
                    WYSOKOSC = table.Column<double>(type: "float", nullable: true, comment: "Wysokość rzeczywista"),
                    SZEROKOSC = table.Column<double>(type: "float", nullable: true, comment: "Szerokość rzeczywista"),
                    LDM_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Metry ładowne deklarowane"),
                    LDM = table.Column<double>(type: "float", nullable: true, comment: "Metry ładowne rzeczywiste"),
                    MPAL_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Miejsca paletowe deklarowane"),
                    MPAL = table.Column<double>(type: "float", nullable: true, comment: "Miejsca paletowe rzeczywiste"),
                    METRY_LADOWNE_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Metry ładowne deklarowane"),
                    METRY_LADOWNE = table.Column<double>(type: "float", nullable: true, comment: "Metry ładowne rzeczywiste"),
                    ADR = table.Column<int>(type: "int", nullable: true, comment: "Czy ADR"),
                    WAGA_OBJ = table.Column<double>(type: "float", nullable: true),
                    WAGA_OBL = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PACZKI_RAIL", x => x.ID_PACZKI_RAIL);
                },
                comment: "Paczki drobnicowe - detal do tabeli PRZESYLKI_RAIL");

            migrationBuilder.CreateTable(
                name: "PACZKI_REL",
                columns: table => new
                {
                    ID_PACZKI_REL = table.Column<int>(type: "int", nullable: false),
                    P_PRZESYLKI_ID = table.Column<int>(type: "int", nullable: false, comment: "Relacja do przesyłki pierwotnej"),
                    P_PACZKI_ID = table.Column<int>(type: "int", nullable: false, comment: "Relacja do paczki pierwotnej"),
                    ZB_PRZESYLKI_ID = table.Column<int>(type: "int", nullable: false, comment: "Relacja do przesyłki zbiorczej"),
                    ZB_PACZKI_ID = table.Column<int>(type: "int", nullable: false, comment: "Relacja do paczki zbiorczej")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PACZKI_REL", x => x.ID_PACZKI_REL);
                });

            migrationBuilder.CreateTable(
                name: "PACZKI_SEA",
                columns: table => new
                {
                    ID_PACZKI_SEA = table.Column<int>(type: "int", nullable: false),
                    TWORZ_WIELE_ID = table.Column<int>(type: "int", nullable: true, comment: "*** na potrzeby wewnętrzne ***"),
                    PRZESYLKI_SEA_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do przesyłki - tab: PRZESYLKI_SEA"),
                    LP = table.Column<int>(type: "int", nullable: true, comment: "Lp"),
                    ILOSC = table.Column<int>(type: "int", nullable: true, comment: "Ilość rzeczywista"),
                    NR_PACZKI_EX = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true, comment: "Numer zewnętrzny paczki"),
                    KOD_KRESKOWY = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true, comment: "Kod kreskowy paczki"),
                    OPIS_ID = table.Column<int>(type: "int", nullable: true, comment: "ID opisu towaru"),
                    OPIS = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true, comment: "Opis towaru"),
                    OPIS_DOD = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true, comment: "Opis towaru - dodatkowy"),
                    KOD_OPAK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Kod opakowania"),
                    OPAKOWANIE = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Symbol opakowania"),
                    WAGA_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Waga deklarowana"),
                    OBJ_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Objętość deklarowana"),
                    WAGA = table.Column<double>(type: "float", nullable: true, comment: "Waga rzeczywista"),
                    OBJ = table.Column<double>(type: "float", nullable: true, comment: "Objętość rzeczywista"),
                    DLUGOSC_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Długość deklarowana"),
                    WYSOKOSC_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Wysokość deklarowana"),
                    SZEROKOSC_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Szerokość deklarowana"),
                    DLUGOSC = table.Column<double>(type: "float", nullable: true, comment: "Długość rzeczywista"),
                    WYSOKOSC = table.Column<double>(type: "float", nullable: true, comment: "Wysokość rzeczywista"),
                    SZEROKOSC = table.Column<double>(type: "float", nullable: true, comment: "Szerokość rzeczywista"),
                    ADR = table.Column<int>(type: "int", nullable: true, comment: "Czy ADR"),
                    WAGA_OBJ = table.Column<double>(type: "float", nullable: true),
                    WAGA_OBL = table.Column<double>(type: "float", nullable: true),
                    PIETROWANIE = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy możliwe piętrowanie")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PACZKI_SEA", x => x.ID_PACZKI_SEA);
                },
                comment: "Paczki drobnicowe - detal do tabeli PRZESYLKI_SEA");

            migrationBuilder.CreateTable(
                name: "PACZKI_SKAN",
                columns: table => new
                {
                    ID_PACZKI_SKAN = table.Column<int>(type: "int", nullable: false),
                    PACZKI_ID = table.Column<int>(type: "int", nullable: true),
                    LISTY_LINIOWE_ID = table.Column<int>(type: "int", nullable: true),
                    MAGAZYN_ZDARZENIA_ID = table.Column<int>(type: "int", nullable: true),
                    SKAN = table.Column<int>(type: "int", nullable: true),
                    BRAK = table.Column<int>(type: "int", nullable: true),
                    SKAN_DT = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PACZKI_SKAN", x => x.ID_PACZKI_SKAN);
                });

            migrationBuilder.CreateTable(
                name: "PACZKI_STOSY",
                columns: table => new
                {
                    ID_PACZKI_STOSY = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    STOSY_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    PACZKI_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PACZKI_STOSY", x => x.ID_PACZKI_STOSY);
                });

            migrationBuilder.CreateTable(
                name: "PACZKIANOMALIE",
                columns: table => new
                {
                    PACZKIANOMALIEID = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    NADWYZKOWA_WY = table.Column<int>(type: "int", nullable: true),
                    PACZKI_ID = table.Column<int>(type: "int", nullable: true),
                    PRZESYLKI_ID = table.Column<int>(type: "int", nullable: true),
                    LISTY_LINIOWE_ID = table.Column<int>(type: "int", nullable: true),
                    LOKALIZACJA_ID = table.Column<int>(type: "int", nullable: true),
                    WIRTUALNA = table.Column<int>(type: "int", nullable: true),
                    BRAK = table.Column<int>(type: "int", nullable: true),
                    BRAK_WY = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PACZKIANOMALIE", x => x.PACZKIANOMALIEID);
                });

            migrationBuilder.CreateTable(
                name: "PALIWO_GESTOSC",
                columns: table => new
                {
                    ID_PALIWO_GESTOSC = table.Column<int>(type: "int", nullable: false),
                    RODZAJ = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "rodzaj paliwa"),
                    GESTOSC = table.Column<double>(type: "float", nullable: true, comment: "gęstość paliwa 1 15°C"),
                    OPIS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "opis")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PALIWO_GESTOSC", x => x.ID_PALIWO_GESTOSC);
                });

            migrationBuilder.CreateTable(
                name: "ParameterType",
                schema: "olap",
                columns: table => new
                {
                    ParameterTypeId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    Order = table.Column<int>(type: "int", nullable: true),
                    Visible = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ParameterType", x => x.ParameterTypeId);
                });

            migrationBuilder.CreateTable(
                name: "Permission",
                schema: "app",
                columns: table => new
                {
                    PermissionId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    PermissionGroupId = table.Column<int>(type: "int", nullable: true),
                    Name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DictionaryId = table.Column<int>(type: "int", nullable: true),
                    TextId = table.Column<int>(type: "int", nullable: true),
                    Visible = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Permission", x => x.PermissionId);
                });

            migrationBuilder.CreateTable(
                name: "PermissionGroup",
                schema: "app",
                columns: table => new
                {
                    PermissionGroupId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    DictionaryId = table.Column<int>(type: "int", nullable: true),
                    TextId = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PermissionGroup", x => x.PermissionGroupId);
                });

            migrationBuilder.CreateTable(
                name: "PK",
                columns: table => new
                {
                    ID_PK = table.Column<int>(type: "int", nullable: false),
                    ETYKIETA_FRM = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "*pole nie używane*"),
                    NAZWA_FRM = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "*pole nie używane*"),
                    KLASA_FRM = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "*pole nie używane*"),
                    ETYKIETA_CTRL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "*pole nie używane*"),
                    NAZWA_CTRL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "*pole nie używane*"),
                    KLASA_CTRL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "*pole nie używane*"),
                    KTO_MOZE = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true, comment: "*pole nie używane*"),
                    STAN_CTRL = table.Column<int>(type: "int", nullable: true, comment: "*pole nie używane*")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PK", x => x.ID_PK);
                },
                comment: "*tabela nie używana*");

            migrationBuilder.CreateTable(
                name: "PLANY_DOSTAW",
                columns: table => new
                {
                    ID_PLANY_DOSTAW = table.Column<int>(type: "int", nullable: false),
                    HARMONOGRAMY_ID = table.Column<int>(type: "int", nullable: true),
                    HARMONOGRAMY_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    DATA_WYJAZDU = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_WYJAZDU = table.Column<DateTime>(type: "datetime", nullable: true),
                    STATUS = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    MAX_DATA_GODZ_REJ = table.Column<DateTime>(type: "datetime", nullable: true),
                    DZIEN_TYG_NR = table.Column<int>(type: "int", nullable: true),
                    DATA_GODZ_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_GODZ_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    WOLNY = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PLANY_DOSTAW", x => x.ID_PLANY_DOSTAW);
                });

            migrationBuilder.CreateTable(
                name: "PLIKIRPT",
                columns: table => new
                {
                    ID_PLIKIRPT = table.Column<int>(type: "int", nullable: false),
                    PLIK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: false),
                    STATUS = table.Column<short>(type: "smallint", nullable: false, defaultValueSql: "('0')"),
                    OBIEKT = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: false),
                    APP = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: false),
                    JEZYK = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: false),
                    OPIS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PLIKIRPT", x => x.ID_PLIKIRPT);
                });

            migrationBuilder.CreateTable(
                name: "PODLICZNIKI",
                columns: table => new
                {
                    ID_PODLICZNIKI = table.Column<int>(type: "int", nullable: false),
                    LICZNIKI_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do licznika głónego - tab: LICZNIKI"),
                    ID_LICZNIKA = table.Column<int>(type: "int", nullable: true, comment: "Systemowy identyfikator licznika"),
                    ID_PODLICZNIKA = table.Column<int>(type: "int", nullable: true, comment: "Systemowy identyfikator podlicznika"),
                    LICZNIK = table.Column<int>(type: "int", nullable: false, comment: "Wartość licznika (ma sens gdy LICZ_MIES = 0)"),
                    FORMAT = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Format licznika"),
                    OPIS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Opis licznika"),
                    STALA_DLUG_LICZ = table.Column<short>(type: "smallint", nullable: true, comment: "Flaga, czy stałą długość części liczbowej"),
                    ILOSC_CYFR = table.Column<short>(type: "smallint", nullable: true, comment: "Ilość cyfr w części liczbowej (ma sens gdy STALA_DLUG_LICZ = 1)"),
                    LICZ_MIES = table.Column<short>(type: "smallint", nullable: false, defaultValueSql: "('0')", comment: "Flaga, czy licznik miesięczny"),
                    I = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Wartość licznika dla mies I (ma sens gdy LICZ_MIES = 1)"),
                    II = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Wartość licznika dla mies II (ma sens gdy LICZ_MIES = 1)"),
                    III = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Wartość licznika dla mies III (ma sens gdy LICZ_MIES = 1)"),
                    IV = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Wartość licznika dla mies IV (ma sens gdy LICZ_MIES = 1)"),
                    V = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Wartość licznika dla mies V (ma sens gdy LICZ_MIES = 1)"),
                    VI = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Wartość licznika dla mies VI (ma sens gdy LICZ_MIES = 1)"),
                    VII = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Wartość licznika dla mies VII (ma sens gdy LICZ_MIES = 1)"),
                    VIII = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Wartość licznika dla mies VIII (ma sens gdy LICZ_MIES = 1)"),
                    IX = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Wartość licznika dla mies IX (ma sens gdy LICZ_MIES = 1)"),
                    X = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Wartość licznika dla mies X (ma sens gdy LICZ_MIES = 1)"),
                    XI = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Wartość licznika dla mies XI (ma sens gdy LICZ_MIES = 1)"),
                    XII = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Wartość licznika dla mies XII (ma sens gdy LICZ_MIES = 1)"),
                    DELTA = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Delta zmiany licznika")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PODLICZNIKI", x => x.ID_PODLICZNIKI);
                },
                comment: "Podliczniki systemowe");

            migrationBuilder.CreateTable(
                name: "POI_MYJNIE_PROCEDURY",
                columns: table => new
                {
                    ID_POI_MYJNIE_PROCEDURY = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    KOD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Kod"),
                    OPIS = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true, comment: "Opis "),
                    PELNE = table.Column<int>(type: "int", nullable: true, comment: "Czy mycie pełne"),
                    KOSZERNE = table.Column<int>(type: "int", nullable: true, comment: "Czy mycie koszerne"),
                    DictionaryId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TextId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_POI_MYJNIE_PROCEDURY", x => x.ID_POI_MYJNIE_PROCEDURY);
                },
                comment: "Słownik procedur mycia");

            migrationBuilder.CreateTable(
                name: "POLISY",
                columns: table => new
                {
                    ID_POLISY = table.Column<int>(type: "int", nullable: false),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    TABOR = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    UBEZPIECZYCIEL_ID = table.Column<int>(type: "int", nullable: true),
                    UBEZPIECZYCIEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NUMER_POLISY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OC = table.Column<int>(type: "int", nullable: true),
                    AC = table.Column<int>(type: "int", nullable: true),
                    NW = table.Column<int>(type: "int", nullable: true),
                    DATA_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    UWAGI = table.Column<string>(type: "text", nullable: true),
                    ZNIZKI = table.Column<double>(type: "float", nullable: true),
                    SKLADKA = table.Column<double>(type: "float", nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    AKTYWNA = table.Column<int>(type: "int", nullable: true),
                    OCP = table.Column<int>(type: "int", nullable: true),
                    TABOR_NR_BOCZNY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: true),
                    KONTRAH = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    WARTOSC = table.Column<double>(type: "float", nullable: true),
                    WARTOSC_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KRAJ = table.Column<int>(type: "int", nullable: true),
                    ZAGRANICA = table.Column<int>(type: "int", nullable: true),
                    KRAJE = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KRAJE_KABOTAZ = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KABOTAZ = table.Column<int>(type: "int", nullable: true),
                    SKLADKA_OC = table.Column<double>(type: "float", nullable: true),
                    SKLADKA_AC = table.Column<double>(type: "float", nullable: true),
                    SKLADKA_NW = table.Column<double>(type: "float", nullable: true),
                    OCP_TOWARY_PODW_RYZYKO = table.Column<int>(type: "int", nullable: true),
                    OCP_TOWARY_KONTR_TEMP = table.Column<int>(type: "int", nullable: true),
                    SKLADKA_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    SKLADKA_OC_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    SKLADKA_AC_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    SKLADKA_NW_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    SKLADKA_INNE = table.Column<double>(type: "float", nullable: true),
                    SKLADKA_INNE_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    UWAGI_OC = table.Column<string>(type: "text", nullable: true),
                    UWAGI_AC = table.Column<string>(type: "text", nullable: true),
                    UWAGI_NW = table.Column<string>(type: "text", nullable: true),
                    UDZIAL_WLASNY_OC = table.Column<double>(type: "float", nullable: true),
                    UDZIAL_WLASNY_OC_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    UDZIAL_WLASNY_AC = table.Column<double>(type: "float", nullable: true),
                    UDZIAL_WLASNY_AC_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    DATA_DO_AC = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZIELONA_KARTA_NR = table.Column<string>(type: "varchar(35)", unicode: false, maxLength: 35, nullable: true),
                    KRADZIEZ = table.Column<int>(type: "int", nullable: true),
                    ODPOWIEDZIALNY_ID = table.Column<int>(type: "int", nullable: true),
                    ODPOWIEDZIALNY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    POLISA_GLOWNA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    MPK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SKLADKA_AC_PROCENT = table.Column<double>(type: "float", nullable: true),
                    ROZBOJ = table.Column<int>(type: "int", nullable: true),
                    ASS = table.Column<int>(type: "int", nullable: true),
                    SKLADKA_AS = table.Column<double>(type: "float", nullable: true),
                    SKLADKA_AS_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    UWAGI_AS = table.Column<string>(type: "text", nullable: true),
                    SUMA_GWAR_OC = table.Column<double>(type: "float", nullable: true),
                    SUMA_GWAR_OC_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    SUMA_GWAR_AC = table.Column<double>(type: "float", nullable: true),
                    SUMA_GWAR_AC_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    SUMA_GWAR_NW = table.Column<double>(type: "float", nullable: true),
                    SUMA_GWAR_NW_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    SUMA_GWAR_AS = table.Column<double>(type: "float", nullable: true),
                    SUMA_GWAR_AS_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    STATUS = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Status"),
                    WNIOSKUJACY_ID = table.Column<int>(type: "int", nullable: true),
                    WNIOSKUJACY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    WNIOSKUJACY2_ID = table.Column<int>(type: "int", nullable: true),
                    WNIOSKUJACY2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    BROKER_ID = table.Column<int>(type: "int", nullable: true),
                    BROKER = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OPIEKUN_ID = table.Column<int>(type: "int", nullable: true),
                    OPIEKUN = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SKLADKA_PROCENT = table.Column<double>(type: "float", nullable: true),
                    ZAPYTANIE = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    ZAPYTANIE_ID = table.Column<int>(type: "int", nullable: true),
                    ANULOWANA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    STATUS_EMISJA = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    KONTAKT_ID = table.Column<int>(type: "int", nullable: true),
                    KONTAKT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ODSZKODOWANIE = table.Column<double>(type: "float", nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    NIEDBALSTWO = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_POLISY", x => x.ID_POLISY);
                });

            migrationBuilder.CreateTable(
                name: "POLISY_POJAZDY",
                columns: table => new
                {
                    ID_POLISY_POJAZDY = table.Column<int>(type: "int", nullable: false),
                    POLISY_ID = table.Column<int>(type: "int", nullable: true),
                    POLISY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    TABOR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    WARTOSC = table.Column<double>(type: "float", nullable: true),
                    TABOR_NR_BOCZNY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OC = table.Column<int>(type: "int", nullable: true),
                    AC = table.Column<int>(type: "int", nullable: true),
                    NW = table.Column<int>(type: "int", nullable: true),
                    SKLADKA = table.Column<double>(type: "float", nullable: true),
                    WARTOSC_POJAZDU = table.Column<double>(type: "float", nullable: true),
                    SUBPOLISA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ASS = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_POLISY_POJAZDY", x => x.ID_POLISY_POJAZDY);
                });

            migrationBuilder.CreateTable(
                name: "POLISY_SKLADKI",
                columns: table => new
                {
                    ID_POLISY_SKLADKI = table.Column<int>(type: "int", nullable: false),
                    POLISY_ID = table.Column<int>(type: "int", nullable: true),
                    POLISY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TERMIN = table.Column<DateTime>(type: "datetime", nullable: true),
                    KWOTA = table.Column<double>(type: "float", nullable: true),
                    ZAPLACONO = table.Column<int>(type: "int", nullable: true),
                    DATA_ZAPLATY = table.Column<DateTime>(type: "datetime", nullable: true),
                    PROWIZJA_KWOTA_PLAN = table.Column<double>(type: "float", nullable: true),
                    PROWIZJA_KWOTA_RZ = table.Column<double>(type: "float", nullable: true),
                    PROWIZJA_DATA_PLAN = table.Column<DateTime>(type: "datetime", nullable: true),
                    PROWIZJA_DATA_RZ = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_POLISY_SKLADKI", x => x.ID_POLISY_SKLADKI);
                });

            migrationBuilder.CreateTable(
                name: "POLISY_TOWARY",
                columns: table => new
                {
                    ID_POLISY_TOWARY = table.Column<int>(type: "int", nullable: false),
                    POLISY_ID = table.Column<int>(type: "int", nullable: true),
                    KOD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_POLISY_TOWARY", x => x.ID_POLISY_TOWARY);
                });

            migrationBuilder.CreateTable(
                name: "PopupMenuConfig",
                columns: table => new
                {
                    IdPopupMenuConfig = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    WinName = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: false, defaultValueSql: "('')"),
                    UserId = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    Position = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    MenuItemName = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: false, defaultValueSql: "('')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PopupMenuConfig", x => x.IdPopupMenuConfig);
                });

            migrationBuilder.CreateTable(
                name: "POWIADOMIENIA_EM_ANOMALIE",
                schema: "rep",
                columns: table => new
                {
                    wie = table.Column<int>(type: "int", nullable: true),
                    kol = table.Column<int>(type: "int", nullable: true),
                    wynik = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "POWIADOMIENIA_EM_PUSTE",
                schema: "rep",
                columns: table => new
                {
                    wie = table.Column<int>(type: "int", nullable: true),
                    kol = table.Column<int>(type: "int", nullable: true),
                    wynik = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "POWIADOMIENIA_EM_ZLECENIA",
                schema: "rep",
                columns: table => new
                {
                    wie = table.Column<int>(type: "int", nullable: true),
                    kol = table.Column<int>(type: "int", nullable: true),
                    wynik = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "POZYCJE_FAKTUR",
                columns: table => new
                {
                    ID_POZYCJE_FAKTUR = table.Column<int>(type: "int", nullable: false),
                    LP = table.Column<int>(type: "int", nullable: true, comment: "Lp"),
                    TYTUL = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: false, comment: "Tytuł pozycji"),
                    SZABLON_DO_OPIS = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true, comment: "Szablon do tworzenia opisu na fakturze"),
                    ETYK_SZABLON_DO_OPIS = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true, comment: "Etykiety dla szablonu"),
                    JM = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: false, comment: "Jednostka miary"),
                    PKWIU = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "PKWiU"),
                    VAT_ID = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Kod stawki VAT - tab: STAWKI_VAT"),
                    VAT = table.Column<double>(type: "float", nullable: true, comment: "Stawka VAT"),
                    CENA_JEDN = table.Column<double>(type: "float", nullable: true, comment: "Cena jednostkowa"),
                    RODZ_PRZYCHODOW = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true, comment: "Rodzaj przychodu - tab: RODZ_PRZYCHODOW"),
                    KONTO_SPRZEDAZ = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Konto FK - sprzedaż"),
                    RODZ_KOSZTOW = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true, comment: "Rodzaj kosztu - tab: RODZ_KOSZTOW"),
                    KONTO_ZAKUP = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Konto FK - zakupy"),
                    KOD_POZYCJI = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Kod pozycji"),
                    SPRZEDAZ = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy pozycja dotyczy sprzedaży"),
                    ZAKUP = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy pozycja dotyczy zakupów"),
                    CENA_JEDN_B = table.Column<double>(type: "float", nullable: true, comment: "Cena jednostkowa brutto"),
                    CENA_JEDN_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Waluta ceny jednostkowej"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Lokalizacja"),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dział"),
                    GRUPA_POJ = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Grupa pojazdów"),
                    KONTO_SP_REZERW = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Konto FK - rezerwy sprzedaży"),
                    KONTO_ZA_REZERW = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Konto FK - rezerwy zakupu"),
                    NOTA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy pozycja dotyczy not księgowych"),
                    REZERWA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy pozycja dotyczy rezerw"),
                    AKTYWNA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('1')", comment: "Flaga, czy pozycja jest aktywna"),
                    ZAL_OD_KONTENERA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy pozycja zależna od kontenerów morskich"),
                    GRUPA_ANALITYCZNA = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Grupa analityczna"),
                    PRZYCH_JAK_FRACHT = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy traktować pozycje przychdu jak fracht"),
                    KOSZT_JAK_FRACHT = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy traktować pozycje kosztu jak fracht"),
                    ROZL_WEWN = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy pozycja dotyczy rozl. wewn."),
                    ZLEC_FTL = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy pozycja dotyczy zlec. FTL"),
                    DROBN = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy pozycja dotyczy zlec. drobn."),
                    KOLEJ = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy pozycja dotyczy zlec. kolej."),
                    MORSKIE = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy pozycja dotyczy zlec. morskich"),
                    LOTNICZE = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy pozycja dotyczy zlec. lotniczych"),
                    JEZYK_POZYCJI = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, defaultValueSql: "('PL')"),
                    WYL_FAKTURY = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy wyłaczyć na fakturach"),
                    PROMY = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy pozycja dotyczy promów"),
                    CELNE = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy pozycja dotyczy zleceń celnych"),
                    KONTO_FK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    IntOrders = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy pozycja dotyczy prowizji interlanowych"),
                    F_SYSTEM_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    KATEGORIA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SplitPaymentS = table.Column<int>(type: "int", nullable: true),
                    VAT_JPK_OZN_ID = table.Column<int>(type: "int", nullable: true),
                    DictionaryId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TextId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    IntOrdersHours = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy pozycja dotyczy godzin do rozliczenia")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_POZYCJE_FAKTUR", x => x.ID_POZYCJE_FAKTUR);
                },
                comment: "Słownik pozycji fakturowych");

            migrationBuilder.CreateTable(
                name: "POZYCJE_FAKTUR_PROW",
                columns: table => new
                {
                    ID_POZYCJE_FAKTUR_PROW = table.Column<int>(type: "int", nullable: false),
                    POZYCJE_FAKTUR_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do słownika pozycji faktur - tab: POZYCJE_FAKTUR"),
                    UZYTKOWNIK_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika - tab: UZYTKOWNIK"),
                    UZYTKOWNIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Symbol użytkownika"),
                    PROWIZJA = table.Column<double>(type: "float", nullable: true, comment: "Wartość prowizji")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_POZYCJE_FAKTUR_PROW", x => x.ID_POZYCJE_FAKTUR_PROW);
                },
                comment: "Prowizje dla pracowników - detal do tabeli POZYCJE_FAKTUR");

            migrationBuilder.CreateTable(
                name: "POZYCJE_FAKTUR_TLUMACZ",
                columns: table => new
                {
                    ID_POZYCJE_FAKTUR_TLUMACZ = table.Column<int>(type: "int", nullable: false),
                    POZYCJE_FAKTUR_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do słownika pozycji faktur - tab: POZYCJE_FAKTUR"),
                    JEZYK_POZYCJI = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, defaultValueSql: "('PL')"),
                    TYTUL = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: false, comment: "Tytuł pozycji"),
                    SZABLON_DO_OPIS = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true, comment: "Szablon do tworzenia opisu na fakturze")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_POZYCJE_FAKTUR_TLUMACZ", x => x.ID_POZYCJE_FAKTUR_TLUMACZ);
                },
                comment: "Słownik pozycji fakturowych - tłumaczenia na inne języki");

            migrationBuilder.CreateTable(
                name: "PREFAKTURY",
                columns: table => new
                {
                    ID_PREFAKTURY = table.Column<int>(type: "int", nullable: false),
                    DATA_UTWORZENIA = table.Column<DateTime>(type: "datetime", nullable: false, comment: "Data utworzenia bilingu"),
                    NUMER = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: false, comment: "Numer bilingu"),
                    NUMER_KOLEJNY = table.Column<int>(type: "int", nullable: true, comment: "Numer bilingu - licznik"),
                    NUMER_ROK = table.Column<int>(type: "int", nullable: false, comment: "Numer bilingu - rok"),
                    NUMER_MIESIAC = table.Column<int>(type: "int", nullable: false, comment: "Numer bilingu - miesiąc"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja"),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dział"),
                    KONTRAH = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Symbol kontrahenta"),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kontrahenta, tab: KONTRAHENCI"),
                    DATA_OD = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data od"),
                    DATA_DO = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data do"),
                    WG_DAT = table.Column<int>(type: "int", nullable: true, comment: "Dane wg dat"),
                    STATUS = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Status"),
                    SUMA = table.Column<double>(type: "float", nullable: true, comment: "Suma PREFAKTURY"),
                    SUMA_F = table.Column<double>(type: "float", nullable: true, comment: "Suma FAKTUR"),
                    PROCEDURA_SQL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Procedura generująca pozycje PREFAKTURY"),
                    UWAGI = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true, comment: "Uwagi do prefaktury"),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    ZBIORCZA = table.Column<int>(type: "int", nullable: true, comment: "0 - pojedyncza, 1 - zbiorcza z zest, 2 - zbiorcza bez zest"),
                    ZB_GRUPUJ_WG = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Grupowanie zbiorcze z zest.")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PREFAKTURY", x => x.ID_PREFAKTURY);
                },
                comment: "Nagłówek prefaktury/bilingu");

            migrationBuilder.CreateTable(
                name: "PREFAKTURY_POZ",
                columns: table => new
                {
                    ID_PREFAKTURY_POZ = table.Column<int>(type: "int", nullable: false),
                    PREFAKTURY_ID = table.Column<int>(type: "int", nullable: false, comment: "Relacja do PREFAKTURY, tab: PREFAKTURY"),
                    STAN = table.Column<int>(type: "int", nullable: true, comment: "Flaga/status gotowości do FV"),
                    LP = table.Column<int>(type: "int", nullable: true, comment: "LP - wg tego LP dane trafią na FV"),
                    TYTUL_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do pozycji FV, tab: POZYCJE_FAKTUR"),
                    TYTUL_KOD = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Kod pozycji FV"),
                    TYTUL = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Tytuł pozycji FV"),
                    TYTUL_OPIS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Dodatkowy opic pozycji FV"),
                    JM = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: false, comment: "jm"),
                    ILOSC = table.Column<double>(type: "float", nullable: false, comment: "Ilość"),
                    NETTO_JEDN = table.Column<double>(type: "float", nullable: false, comment: "Cena jednostkowa"),
                    NETTO = table.Column<double>(type: "float", nullable: false, comment: "Cena razem"),
                    RABAT = table.Column<double>(type: "float", nullable: false, comment: "Wartość rabatu w %"),
                    VAT_ID = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: false, comment: "Kod stawki VAT"),
                    VAT_STAWKA = table.Column<double>(type: "float", nullable: false, comment: "Stawka VAT"),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: false, comment: "Waluta pozycji"),
                    WALUTA_FV = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: false, comment: "Waluta na FV"),
                    KALKULACJE_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kalkulacji, tab: KALKULACJE"),
                    PRZESYLKA_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do przesyłki, tab: PRZESYLKI"),
                    PRZESYLKA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Nr przesyłki"),
                    ZLEC_POZ_FAKT_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do poz. dod. zlecenia FTL, tab: ZLECENIA_POZ_FAKT"),
                    ODCINEK = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "Odcinek zlecenia FTL (KR, UE, ZG)"),
                    ZLECENIE_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do zlecenia FTL, tab: ZLECENIA"),
                    ZLECENIE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Nr zlecenia FTL"),
                    ZLECENIE_M_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do zlecenia morskiego, tab: ZLECENIA_M"),
                    ZLECENIE_M = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Nr zlecenia morskiego"),
                    LIST_LINIOWY_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do trasy, tab: LISTY_LINIOWE"),
                    LIST_LINIOWY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Nr trasy drobnicowej"),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do pojazdu, tab: TABOR"),
                    TABOR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Nr rej pojazdu"),
                    NACZEPA_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do naczepy, tab: TABOR"),
                    NACZEPA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Nr rej naczepy"),
                    KIEROWCA_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kierowcy, tab: KIEROWCY"),
                    KIEROWCA = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true, comment: "Nazwisko i imię kierowcy"),
                    PROMY_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do promu, tab: PROMY"),
                    PROMY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer promu"),
                    DOT_LOKALIZACJI = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dotyczy lokalizacji"),
                    DOT_DZIALU = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dotyczy działu"),
                    POW_ZM_KWOTY = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true, comment: "Powód zmiany kwoty"),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    ZLECENIE_RAIL_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do zlecenia morskiego, tab: ZLECENIA_M"),
                    ZLECENIE_RAIL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Nr zlecenia morskiego")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PREFAKTURY_POZ", x => x.ID_PREFAKTURY_POZ);
                },
                comment: "Pozycje prefaktury/bilingu");

            migrationBuilder.CreateTable(
                name: "PROCEDURE_CFG",
                columns: table => new
                {
                    ID_PROCEDURE_CFG = table.Column<int>(type: "int", nullable: false),
                    ACTIVITY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    DESCRIPTION = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: false, defaultValueSql: "('')"),
                    STD_PROCEDURE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    USER_PROCEDURE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    STANDARD = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    OBLIGATORY = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ENABLED = table.Column<int>(type: "int", nullable: true),
                    ACTIVITY_GROUP = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TYPE = table.Column<int>(type: "int", nullable: true, comment: "0 - procedura, 1 - sql"),
                    ENABLED_SQL = table.Column<int>(type: "int", nullable: true),
                    STD_SQL = table.Column<string>(type: "varchar(max)", unicode: false, nullable: true),
                    USER_SQL = table.Column<string>(type: "varchar(max)", unicode: false, nullable: true),
                    OPT_SQL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    USER_COUNT_SQL = table.Column<string>(type: "varchar(max)", unicode: false, nullable: true),
                    OPT_COUNT_SQL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    PARAMS_DESC = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true),
                    PARAMS_PROCEDURE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PROCEDURE_CFG", x => x.ID_PROCEDURE_CFG);
                });

            migrationBuilder.CreateTable(
                name: "PROCEDURE_CFG_back",
                columns: table => new
                {
                    ID_PROCEDURE_CFG = table.Column<int>(type: "int", nullable: false),
                    ACTIVITY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    DESCRIPTION = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: false, defaultValueSql: "('')"),
                    STD_PROCEDURE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    USER_PROCEDURE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    STANDARD = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    OBLIGATORY = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ENABLED = table.Column<int>(type: "int", nullable: true),
                    ACTIVITY_GROUP = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TYPE = table.Column<int>(type: "int", nullable: true, comment: "0 - procedura, 1 - sql"),
                    ENABLED_SQL = table.Column<int>(type: "int", nullable: true),
                    STD_SQL = table.Column<string>(type: "varchar(max)", unicode: false, nullable: true),
                    USER_SQL = table.Column<string>(type: "varchar(max)", unicode: false, nullable: true),
                    OPT_SQL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    USER_COUNT_SQL = table.Column<string>(type: "varchar(max)", unicode: false, nullable: true),
                    OPT_COUNT_SQL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    PARAMS_DESC = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true),
                    PARAMS_PROCEDURE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PROCEDURE_CFG_back", x => x.ID_PROCEDURE_CFG);
                });

            migrationBuilder.CreateTable(
                name: "PROCEDURE_CFG_EXT",
                columns: table => new
                {
                    ID_PROCEDURE_CFG_EXT = table.Column<int>(type: "int", nullable: false),
                    PROCEDURE_CFG_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    TYP = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Typ uprawnienia 0 - user, 1 - profil"),
                    OBIEKT_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Relacja do użytkownika, profilu"),
                    SQL_EXT = table.Column<string>(type: "varchar(max)", unicode: false, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PROCEDURE_CFG_EXT", x => x.ID_PROCEDURE_CFG_EXT);
                });

            migrationBuilder.CreateTable(
                name: "PROCEDURY",
                columns: table => new
                {
                    ID_PROCEDURY = table.Column<int>(type: "int", nullable: false),
                    NAZWA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Nazwa procedury"),
                    GRUPA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Grupa "),
                    TEKST = table.Column<string>(type: "text", nullable: true, comment: "Tekst procedury"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia rekordu"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Czas utworzenia rekordu"),
                    CREATE_USER_ID = table.Column<int>(type: "int", nullable: true, comment: "Id uzytkownika tworzacego rekord"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa uzytkownika tworzacego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji rekordu"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Czas ostatniej modyfikacji rekordu"),
                    MODIFY_USER_ID = table.Column<int>(type: "int", nullable: true, comment: "Id uzytkownika modyfikujacego rekord"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa uzytkownika modyfikujacego rekord")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PROCEDURY", x => x.ID_PROCEDURY);
                },
                comment: "Lista procedur składowanych");

            migrationBuilder.CreateTable(
                name: "PROCEDURYLOG",
                columns: table => new
                {
                    ID_PROCEDURYLOG = table.Column<int>(type: "int", nullable: false),
                    ID_PROC_GRP = table.Column<int>(type: "int", nullable: true),
                    IS_NEW = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('1')"),
                    IS_ENABLED = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('1')"),
                    IS_ERROR = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    PROC_NAME = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PROC_TYPE = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true, defaultValueSql: "('P')"),
                    DT_SAVE = table.Column<DateTime>(type: "datetime", nullable: true),
                    DT_OFF = table.Column<DateTime>(type: "datetime", nullable: true),
                    DT_ON = table.Column<DateTime>(type: "datetime", nullable: true),
                    DT_MODIFY = table.Column<DateTime>(type: "datetime", nullable: true),
                    TEXT = table.Column<string>(type: "text", nullable: true),
                    ERROR = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PROCEDURYLOG", x => x.ID_PROCEDURYLOG);
                });

            migrationBuilder.CreateTable(
                name: "ProcessLogger",
                schema: "app",
                columns: table => new
                {
                    ProcessLoggerId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ToolId = table.Column<int>(type: "int", nullable: true),
                    Params = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ContextInfo = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Information = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Severity = table.Column<int>(type: "int", nullable: true),
                    ClientProcessId = table.Column<int>(type: "int", nullable: true),
                    ClientHost = table.Column<string>(type: "nvarchar(258)", maxLength: 258, nullable: true, computedColumnSql: "(nt_client())", stored: false),
                    ApplicationName = table.Column<string>(type: "nvarchar(128)", maxLength: 128, nullable: true, computedColumnSql: "(app_name())", stored: false),
                    RegisterDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ProcessLogger", x => x.ProcessLoggerId);
                });

            migrationBuilder.CreateTable(
                name: "PROCESY",
                columns: table => new
                {
                    ID_PROCESY = table.Column<int>(type: "int", nullable: false),
                    LP = table.Column<int>(type: "int", nullable: true, comment: "Lp"),
                    NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa procesu"),
                    INFO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Opis"),
                    PLIK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Plik BPL z akcją do wykonania"),
                    PROCEDURA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Wskaźnik do procedury w pliku BPL"),
                    CZESTOTLIWOSC = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Częsctotliwość wykonywania"),
                    DATA_NAST_WYKONANIA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data następnego wykonania"),
                    DATA_POPRZ_WYKONANIA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data poprzedniego wykonania"),
                    GODZ_POPRZ_WYKONANIA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina poprzedniego wykonania"),
                    KTO_MOZE = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Kto moze wykonywać - lista symboli użytkowników rozdzielona średnikami"),
                    KTO_OSTATNIO = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Kto ostatnio wykonywał"),
                    AKTYWNY = table.Column<int>(type: "int", nullable: true, comment: "Czy proces aktywny"),
                    APLIKACJA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "W jakiej aplikacji ma się uruchamiać (SPEED, WARSZTAT etc)")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PROCESY", x => x.ID_PROCESY);
                },
                comment: "Definicje automat. procesów sytemowych");

            migrationBuilder.CreateTable(
                name: "PROCESY_OKR",
                columns: table => new
                {
                    ID_PROCESY_OKR = table.Column<int>(type: "int", nullable: false),
                    LP = table.Column<int>(type: "int", nullable: true, comment: "Lp"),
                    AKTYWNY = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy proces aktywny"),
                    NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa"),
                    INFO = table.Column<string>(type: "text", nullable: true, comment: "Informacje dodatkowe o procesie"),
                    SYMBOL = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Symbol"),
                    UWAGI = table.Column<string>(type: "text", nullable: true, comment: "Dowolne uwagi")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PROCESY_OKR", x => x.ID_PROCESY_OKR);
                },
                comment: "Słownik procesów okresowych");

            migrationBuilder.CreateTable(
                name: "PROCESY_OKR_ALG",
                columns: table => new
                {
                    ID_PROCESY_OKR_ALG = table.Column<int>(type: "int", nullable: false),
                    PROCESY_OKR_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do procesu - tab: PROCESY_OKR"),
                    DOMYSLNY = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy algorytm domyślny"),
                    NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa"),
                    INFO = table.Column<string>(type: "text", nullable: true, comment: "Informacje dodatkowe o procesie"),
                    PARAMETRY = table.Column<string>(type: "text", nullable: true, comment: "Parametry algorytmu - struktura ini"),
                    LP = table.Column<int>(type: "int", nullable: true, comment: "Lp"),
                    AKTYWNY = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy algorytm aktywny"),
                    SYMBOL = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Symbol algorytmu"),
                    UWAGI = table.Column<string>(type: "text", nullable: true, comment: "Dowolne uwagi")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PROCESY_OKR_ALG", x => x.ID_PROCESY_OKR_ALG);
                },
                comment: "Słownik algorytmów dla procesu okresowego - detal do PROCESY_OKR");

            migrationBuilder.CreateTable(
                name: "Profile",
                schema: "app",
                columns: table => new
                {
                    ProfileId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Description = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Visible = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Profile", x => x.ProfileId);
                });

            migrationBuilder.CreateTable(
                name: "PROFILE",
                columns: table => new
                {
                    ID_PROFILE = table.Column<int>(type: "int", nullable: false),
                    NAZWA = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PROGRAM = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PRAWA = table.Column<byte[]>(type: "image", nullable: true),
                    BLOBVER = table.Column<int>(type: "int", nullable: true),
                    DictionaryId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TextId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PROFILE", x => x.ID_PROFILE);
                });

            migrationBuilder.CreateTable(
                name: "PROFILEDOMAINGROUP",
                columns: table => new
                {
                    PROFILEDOMAINGROUPID = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    PROFILEID = table.Column<int>(type: "int", nullable: true),
                    DOMAINGROUP = table.Column<string>(type: "nvarchar(1)", maxLength: 1, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PROFILEDOMAINGROUP", x => x.PROFILEDOMAINGROUPID);
                });

            migrationBuilder.CreateTable(
                name: "ProfilePermission",
                schema: "app",
                columns: table => new
                {
                    ProfilePermissionId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ProfileId = table.Column<int>(type: "int", nullable: true),
                    PermissionId = table.Column<int>(type: "int", nullable: true),
                    State = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ProfilePermission", x => x.ProfilePermissionId);
                });

            migrationBuilder.CreateTable(
                name: "PROM",
                columns: table => new
                {
                    ID_PROM = table.Column<int>(type: "int", nullable: false),
                    NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true),
                    ARMATOR_ID = table.Column<int>(type: "int", nullable: true),
                    ARMATOR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PROM", x => x.ID_PROM);
                });

            migrationBuilder.CreateTable(
                name: "PROMY",
                columns: table => new
                {
                    ID_PROMY = table.Column<int>(type: "int", nullable: false),
                    TYP = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    STATUS = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    ARMATOR_ID = table.Column<int>(type: "int", nullable: true),
                    ARMATOR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    RELACJA_ID = table.Column<int>(type: "int", nullable: true),
                    RELACJA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    RELACJA_SYMBOL = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    DZIEN_TYG = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    DATA_WYPL = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_WYPL = table.Column<DateTime>(type: "datetime", nullable: true),
                    MAX_DATA_BUKINGU = table.Column<DateTime>(type: "datetime", nullable: true),
                    MAX_GODZ_BUKINGU = table.Column<DateTime>(type: "datetime", nullable: true),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    TABOR = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    DATA_WJAZD = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_WJAZD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_ZJAZD = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_ZJAZD = table.Column<DateTime>(type: "datetime", nullable: true),
                    WL = table.Column<int>(type: "int", nullable: true),
                    WL_NR = table.Column<int>(type: "int", nullable: true),
                    KLIENT_ID = table.Column<int>(type: "int", nullable: true),
                    KLIENT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TYDZIEN = table.Column<int>(type: "int", nullable: true),
                    PROMY_ALOTY_ID = table.Column<int>(type: "int", nullable: true),
                    PROMY_ALOTY_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    TABOR_NR_B = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    NR_BOOKINGU = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    PROMY_ALOTY_KOR_ID = table.Column<int>(type: "int", nullable: true),
                    PROMY_ALOTY_KOR_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    DLUGOSC_MB = table.Column<double>(type: "float", nullable: true),
                    KIEROWCY = table.Column<int>(type: "int", nullable: true),
                    PONADGABARYT_DL = table.Column<double>(type: "float", nullable: true),
                    PONADGABARYT_WY = table.Column<double>(type: "float", nullable: true),
                    PONADGABARYT_SZ = table.Column<double>(type: "float", nullable: true),
                    AGREGAT = table.Column<int>(type: "int", nullable: true),
                    CENA_ZA_MB = table.Column<double>(type: "float", nullable: true),
                    CENA_ZA_MB_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    CENA_ZA_2_KIER = table.Column<double>(type: "float", nullable: true),
                    CENA_ZA_2_KIER_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    CENA_ZA_TONE = table.Column<double>(type: "float", nullable: true),
                    CENA_ZA_TONE_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KOSZT_AGR = table.Column<double>(type: "float", nullable: true),
                    KOSZT_AGR_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KOSZTY_PROMU = table.Column<double>(type: "float", nullable: true),
                    KOSZTY_PROMU_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KOSZTY_2_KIER = table.Column<double>(type: "float", nullable: true),
                    KOSZTY_2_KIER_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    ILOSC_TON = table.Column<double>(type: "float", nullable: true),
                    KOSZTY_TONY = table.Column<double>(type: "float", nullable: true),
                    KOSZTY_TONY_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KOSZTY_RAZEM = table.Column<double>(type: "float", nullable: true),
                    KOSZTY_RAZEM_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    FAKTURA_PROMOWA_ID = table.Column<int>(type: "int", nullable: true),
                    FAKTURA_PROMOWA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    FAKTURA_PROMOWA_DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    ODSPRZEDANE = table.Column<int>(type: "int", nullable: true),
                    KLIENT_KONTAKT = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KLIENT_TEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KLIENT_ZLECENIE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KLIENT_MARZA = table.Column<double>(type: "float", nullable: true),
                    KLIENT_KWOTA = table.Column<double>(type: "float", nullable: true),
                    KLIENT_KWOTA_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KLIENT_FAKTURA_ID = table.Column<int>(type: "int", nullable: true),
                    KLIENT_FAKTURA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KLIENT_FAKTURA_DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    UWAGI = table.Column<string>(type: "text", nullable: true),
                    KOSZTY_DOD = table.Column<double>(type: "float", nullable: true),
                    SPEDYTOR_ID = table.Column<int>(type: "int", nullable: true),
                    SPEDYTOR = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    NUMER = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NUMER_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    NUMER_ROK = table.Column<int>(type: "int", nullable: true),
                    NUMER_MIES = table.Column<int>(type: "int", nullable: true),
                    ANULOWANY = table.Column<int>(type: "int", nullable: true),
                    SAM_OSOB = table.Column<int>(type: "int", nullable: true),
                    ADR = table.Column<int>(type: "int", nullable: true),
                    NACZEPA_ID = table.Column<int>(type: "int", nullable: true),
                    NACZEPA = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    NACZEPA_NR_B = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    KLIENT_FAKTURA_PF = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_1 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_3 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_4 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_5 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    JEST_RW = table.Column<int>(type: "int", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    KLIENT_KWOTA_WAL_FV = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KLIENT_VAT_ID = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    KLIENT_VAT_STAWKA = table.Column<double>(type: "float", nullable: true),
                    ARMATOR_CENNIK_SP = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KLIENT_CENNIK_SP = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    LINIA_ID = table.Column<int>(type: "int", nullable: true),
                    LINIA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KLASA_ADR = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    TYLKO_NACZEPA = table.Column<int>(type: "int", nullable: true),
                    SR_TRANSP = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    ZAFAKTUROWANE = table.Column<int>(type: "int", nullable: true),
                    CZAS_PLYNIECIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    STATUS_KOSZTY = table.Column<int>(type: "int", nullable: true),
                    NIEODEBRANY = table.Column<int>(type: "int", nullable: true),
                    KOSZTY_RAZEM_WAL_FV = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    IS_EXPORTED = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    IS_EXPORTED_DT = table.Column<DateTime>(type: "datetime", nullable: true),
                    KLIENT_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KLIENT_ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KLIENT_MIASTO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KLIENT_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    KLIENT_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KLIENT_NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    PLATNIK_ID = table.Column<int>(type: "int", nullable: true),
                    PLATNIK_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    PLATNIK_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    PLATNIK_ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    PLATNIK_MIASTO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    PLATNIK_KOD = table.Column<string>(type: "varchar(6)", unicode: false, maxLength: 6, nullable: true),
                    PLATNIK_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    PLATNIK_NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    FORMA_PLATNOSCI = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TERMIN = table.Column<int>(type: "int", nullable: true),
                    FV_NA_PLATNIKA = table.Column<short>(type: "smallint", nullable: true, comment: "Flaga, czy faktura na płatnika"),
                    NIE_FAKTURUJ = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy nie fakturować"),
                    PROM_ID = table.Column<int>(type: "int", nullable: true),
                    PROM = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    NR_BILETU = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DATA_WYK = table.Column<DateTime>(type: "datetime", nullable: true),
                    CENNIK_ID = table.Column<int>(type: "int", nullable: true),
                    PROMY_HARMONOGRAM_ID = table.Column<int>(type: "int", nullable: true),
                    OSOBOWY = table.Column<int>(type: "int", nullable: true),
                    DLUGOSC_MB2 = table.Column<double>(type: "float", nullable: true),
                    USLUGA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PAPIER = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PROMY", x => x.ID_PROMY);
                });

            migrationBuilder.CreateTable(
                name: "PROMY_ALOTY",
                columns: table => new
                {
                    ID_PROMY_ALOTY = table.Column<int>(type: "int", nullable: false),
                    STATUS = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    ARMATOR_ID = table.Column<int>(type: "int", nullable: true),
                    ARMATOR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    RELACJA_ID = table.Column<int>(type: "int", nullable: true),
                    RELACJA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    RELACJA_SYMBOL = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    DATA_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    UTW_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    UTW_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    PROC_WYK = table.Column<int>(type: "int", nullable: true),
                    KOREKTA = table.Column<int>(type: "int", nullable: true),
                    KOREKTA_DO_ID = table.Column<int>(type: "int", nullable: true),
                    LINIA_ID = table.Column<int>(type: "int", nullable: true),
                    LINIA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SR_TRANSP = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    CENNIK_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PROMY_ALOTY", x => x.ID_PROMY_ALOTY);
                });

            migrationBuilder.CreateTable(
                name: "PROMY_ALOTY_POZ",
                columns: table => new
                {
                    ID_PROMY_ALOTY_POZ = table.Column<int>(type: "int", nullable: false),
                    PROMY_ALOTY_ID = table.Column<int>(type: "int", nullable: true),
                    DZIEN_TYG_NR = table.Column<int>(type: "int", nullable: true),
                    DZIEN_TYG = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    GODZ_WYPL = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_PRZYPL = table.Column<DateTime>(type: "datetime", nullable: true),
                    L_MIEJSC = table.Column<int>(type: "int", nullable: true),
                    CENA_ZA_MIEJSCE = table.Column<double>(type: "float", nullable: true),
                    CENA_ZA_MIEJSCE_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    BUKING_ILE_H_PRZED = table.Column<int>(type: "int", nullable: true),
                    CENA_ZA_MB = table.Column<double>(type: "float", nullable: true),
                    CENA_ZA_MB_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    CENA_ZA_2_KIER = table.Column<double>(type: "float", nullable: true),
                    CENA_ZA_2_KIER_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    CENA_ZA_TONE = table.Column<double>(type: "float", nullable: true),
                    CENA_ZA_TONE_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    CZAS_PLYNIECIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    CENNIK_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PROMY_ALOTY_POZ", x => x.ID_PROMY_ALOTY_POZ);
                });

            migrationBuilder.CreateTable(
                name: "PROMY_CENNIKI",
                columns: table => new
                {
                    ID_PROMY_CENNIKI = table.Column<int>(type: "int", nullable: false),
                    DATA_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    ARMATOR_ID = table.Column<int>(type: "int", nullable: true),
                    ARMATOR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    RELACJA_ID = table.Column<int>(type: "int", nullable: true),
                    RELACJA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    RELACJA_SYMBOL = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    KOSZTY_PROMU = table.Column<double>(type: "float", nullable: true),
                    KOSZTY_PROMU_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    GODZ_WYPL = table.Column<DateTime>(type: "datetime", nullable: true),
                    DL_OD = table.Column<int>(type: "int", nullable: true),
                    DL_DO = table.Column<int>(type: "int", nullable: true),
                    CENA_SP = table.Column<double>(type: "float", nullable: true),
                    CENA_SP_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    LINIA_ID = table.Column<int>(type: "int", nullable: true),
                    LINIA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    WSZYSTKIE_DNI_TYG = table.Column<int>(type: "int", nullable: true),
                    DZIEN_TYG = table.Column<string>(type: "varchar(7)", unicode: false, maxLength: 7, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PROMY_CENNIKI", x => x.ID_PROMY_CENNIKI);
                });

            migrationBuilder.CreateTable(
                name: "PROMY_HARMONOGRAM",
                columns: table => new
                {
                    ID_PROMY_HARMONOGRAM = table.Column<int>(type: "int", nullable: false),
                    ARMATOR_ID = table.Column<int>(type: "int", nullable: true),
                    ARMATOR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    LINIA_ID = table.Column<int>(type: "int", nullable: true),
                    LINIA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    RELACJA_ID = table.Column<int>(type: "int", nullable: true),
                    RELACJA_SYMBOL = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    RELACJA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DZIEN = table.Column<int>(type: "int", nullable: true),
                    DATA_WYPLYNIECIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_WYPLYNIECIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    CENNIK_ID = table.Column<int>(type: "int", nullable: true),
                    PROM_ID = table.Column<int>(type: "int", nullable: true),
                    PROM = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PROMY_HARMONOGRAM", x => x.ID_PROMY_HARMONOGRAM);
                });

            migrationBuilder.CreateTable(
                name: "PROMY_HARMONOGRAM_CENNIK",
                columns: table => new
                {
                    ID_PROMY_HARMONOGRAM_CENNIK = table.Column<int>(type: "int", nullable: false),
                    NAZWA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    IKONA = table.Column<byte[]>(type: "image", nullable: true),
                    KOLOR = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PROMY_HARMONOGRAM_CENNIK", x => x.ID_PROMY_HARMONOGRAM_CENNIK);
                });

            migrationBuilder.CreateTable(
                name: "PROMY_RELACJE",
                columns: table => new
                {
                    ID_PROMY_RELACJE = table.Column<int>(type: "int", nullable: false),
                    NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SYMBOL = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    MIEJSCE_ZA_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE_ZA_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    MIEJSCE_ZA_ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    MIEJSCE_ZA_MIASTO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    MIEJSCE_ZA_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    MIEJSCE_ZA_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    MIEJSCE_WY_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE_WY_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    MIEJSCE_WY_ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    MIEJSCE_WY_MIASTO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    MIEJSCE_WY_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    MIEJSCE_WY_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    MIEJSCE_ZA_GEO_LONGI = table.Column<double>(type: "float", nullable: true),
                    MIEJSCE_ZA_GEO_LAT = table.Column<double>(type: "float", nullable: true),
                    MIEJSCE_WY_GEO_LONGI = table.Column<double>(type: "float", nullable: true),
                    MIEJSCE_WY_GEO_LAT = table.Column<double>(type: "float", nullable: true),
                    CZAS_PLYNIECIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    WAZNOSC_BOOKINGU = table.Column<int>(type: "int", nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    AKTYWNA = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PROMY_RELACJE", x => x.ID_PROMY_RELACJE);
                });

            migrationBuilder.CreateTable(
                name: "PROMY_RELACJE_ARMATOR",
                columns: table => new
                {
                    ID_PROMY_RELACJE_ARMATOR = table.Column<int>(type: "int", nullable: false),
                    PROMY_RELACJE_ID = table.Column<int>(type: "int", nullable: true),
                    RELACJE_NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ARMATOR_ID = table.Column<int>(type: "int", nullable: true),
                    ARMATOR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PROMY_RELACJE_ARMATOR", x => x.ID_PROMY_RELACJE_ARMATOR);
                });

            migrationBuilder.CreateTable(
                name: "PROMY_ZA_WY",
                columns: table => new
                {
                    ID_PROMY_ZA_WY = table.Column<int>(type: "int", nullable: false),
                    TYP = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    PROMY_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TELEFONY = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_RZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_RZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    DOD_OPIS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DOD_OPIS_RZ = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPOZNIENIE = table.Column<double>(type: "float", nullable: true),
                    OPOZNIENIE_POWOD = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    LADUNEK = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    TEMP_PRZEWOZU_O = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    LICZNIK = table.Column<double>(type: "float", nullable: true),
                    WAGA = table.Column<double>(type: "float", nullable: true),
                    JEDN_WAGI = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    PALETY = table.Column<double>(type: "float", nullable: true),
                    PALETY_WYM = table.Column<double>(type: "float", nullable: true),
                    JM = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PALIWO = table.Column<double>(type: "float", nullable: true, comment: "zużyte paliwo w trakcie zdarzenia"),
                    WYJAZD_ID = table.Column<int>(type: "int", nullable: true),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    GEO_LONGI = table.Column<double>(type: "float", nullable: true),
                    GEO_LAT = table.Column<double>(type: "float", nullable: true),
                    INNE_UWAGI = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WYSYLAC_UWAGI = table.Column<int>(type: "int", nullable: true),
                    CZAS_TRWANIA = table.Column<double>(type: "float", nullable: true),
                    MAX_OPOZN = table.Column<double>(type: "float", nullable: true),
                    LIST_LINIOWY_ID = table.Column<int>(type: "int", nullable: true),
                    DATA_RZ_K = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_RZ_K = table.Column<DateTime>(type: "datetime", nullable: true),
                    PUSTY = table.Column<int>(type: "int", nullable: true),
                    GODZ_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_RZ_P = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_RZ_P = table.Column<DateTime>(type: "datetime", nullable: true),
                    LADUNEK_ID = table.Column<int>(type: "int", nullable: true),
                    WAGA_ZESTAWU = table.Column<double>(type: "float", nullable: true),
                    TEMP_PRZEWOZU_O_RZ = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    WAGA_RZ = table.Column<double>(type: "float", nullable: true),
                    KOR_GODZ = table.Column<int>(type: "int", nullable: true),
                    KONTENER_ID = table.Column<int>(type: "int", nullable: true),
                    KONTENER = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KONTENER2_ID = table.Column<int>(type: "int", nullable: true),
                    KONTENER2 = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    LP_PW = table.Column<int>(type: "int", nullable: true),
                    PALIWO_LICZNIK = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')", comment: "końcowy stan licznika paliwa"),
                    PIETROWANIE = table.Column<int>(type: "int", nullable: true),
                    GF_DEF_ID = table.Column<int>(type: "int", nullable: true, comment: "id definicji geofencingu (referencja do tabeli GF_DEF)"),
                    ILOSC_RZ = table.Column<double>(type: "float", nullable: true),
                    DLUGOSC = table.Column<double>(type: "float", nullable: true),
                    WYSOKOSC = table.Column<double>(type: "float", nullable: true),
                    SZEROKOSC = table.Column<double>(type: "float", nullable: true),
                    OBJ = table.Column<double>(type: "float", nullable: true),
                    LDM = table.Column<double>(type: "float", nullable: true),
                    EMAIL = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true),
                    KONTAKT = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    DATA_RZ_W = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_RZ_W = table.Column<DateTime>(type: "datetime", nullable: true),
                    REF_1 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_3 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_4 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_5 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    AWIZACJA_PRZED = table.Column<DateTime>(type: "datetime", nullable: true),
                    ETA = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PROMY_ZA_WY", x => x.ID_PROMY_ZA_WY);
                });

            migrationBuilder.CreateTable(
                name: "PROT_NIEZG",
                columns: table => new
                {
                    ID_PROT_NIEZG = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    DATA_GODZ_PROT = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "('')"),
                    NR_PROT = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    NR_PROT_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    NR_PROT_ROK = table.Column<int>(type: "int", nullable: true),
                    NR_PROT_MIES = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE_SPORZADZENIA = table.Column<int>(type: "int", nullable: true),
                    TYPY_PROT_NIEZG_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ZDARZENIA_PROT_NIEZG_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    MAGAZYN_ZDARZENIA_ID = table.Column<int>(type: "int", nullable: true),
                    LISTY_LINIOWE_ID = table.Column<int>(type: "int", nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    RELACJA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PRZEWOZNIK_ID = table.Column<int>(type: "int", nullable: true),
                    STAN = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    PRACOWNIK_ID = table.Column<int>(type: "int", nullable: true),
                    SAMOCHOD_ID = table.Column<int>(type: "int", nullable: true),
                    NACZEPA_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA_TEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KIEROWCA2_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA2_TEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PRZESYLKI_ID = table.Column<int>(type: "int", nullable: true),
                    TECZKA_ID = table.Column<int>(type: "int", nullable: true),
                    RODZAJ_UWAGI = table.Column<string>(type: "text", nullable: true),
                    SPOSOB_OPAK_UWAGI = table.Column<string>(type: "text", nullable: true),
                    DOD_KOMENT_UWAGI = table.Column<string>(type: "text", nullable: true),
                    UWAGI = table.Column<string>(type: "text", nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    DOKUM_ZDJ = table.Column<int>(type: "int", nullable: true),
                    DOKUM_ZDJ_ILOSC = table.Column<int>(type: "int", nullable: true),
                    DOKUM_ZDJ_OPIS = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    OPAK_ZEWN_USZK = table.Column<int>(type: "int", nullable: true),
                    DOST_DO_TOWARU = table.Column<int>(type: "int", nullable: true),
                    REKLAMACJE_ID = table.Column<int>(type: "int", nullable: true),
                    POPR_ZABEZP = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PROT_NIEZG", x => x.ID_PROT_NIEZG);
                });

            migrationBuilder.CreateTable(
                name: "PROT_NIEZG_DOD_KOMENT",
                columns: table => new
                {
                    ID_PROT_NIEZG_DOD_KOMENT = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Lp = table.Column<int>(type: "int", nullable: true),
                    LpMobile = table.Column<int>(type: "int", nullable: true),
                    OPIS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    AKTYWNE = table.Column<int>(type: "int", nullable: true),
                    MOBILE_VERSION = table.Column<int>(type: "int", nullable: true, comment: "Wersja na mobile-u")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PROT_NIEZG_DOD_KOMENT", x => x.ID_PROT_NIEZG_DOD_KOMENT);
                });

            migrationBuilder.CreateTable(
                name: "PROT_NIEZG_DODATKOWE_KOMENTARZE",
                columns: table => new
                {
                    ID_PROT_NIEZG_DODATKOWE_KOMENTARZE = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    PROT_NIEZG_ID = table.Column<int>(type: "int", nullable: true),
                    PROT_NIEZG_DOD_KOMENT_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PROT_NIEZG_DODATKOWE_KOMENTARZE", x => x.ID_PROT_NIEZG_DODATKOWE_KOMENTARZE);
                });

            migrationBuilder.CreateTable(
                name: "PROT_NIEZG_MOC_TOW",
                columns: table => new
                {
                    ID_PROT_NIEZG_MOC_TOW = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Lp = table.Column<int>(type: "int", nullable: true),
                    LpMobile = table.Column<int>(type: "int", nullable: true),
                    OPIS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    AKTYWNE = table.Column<int>(type: "int", nullable: true),
                    MOBILE_VERSION = table.Column<int>(type: "int", nullable: true, comment: "Wersja na mobile-u")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PROT_NIEZG_MOC_TOW", x => x.ID_PROT_NIEZG_MOC_TOW);
                });

            migrationBuilder.CreateTable(
                name: "PROT_NIEZG_MOCOWANIE_TOWARU",
                columns: table => new
                {
                    ID_PROT_NIEZG_MOCOWANIE_TOWARU = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    PROT_NIEZG_ID = table.Column<int>(type: "int", nullable: true),
                    PROT_NIEZG_MOC_TOW_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PROT_NIEZG_MOCOWANIE_TOWARU", x => x.ID_PROT_NIEZG_MOCOWANIE_TOWARU);
                });

            migrationBuilder.CreateTable(
                name: "PROT_NIEZG_PACZKI",
                columns: table => new
                {
                    ID_PROT_NIEZG_PACZKI = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    PROT_NIEZG_ID = table.Column<int>(type: "int", nullable: true),
                    PACZKI_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PROT_NIEZG_PACZKI", x => x.ID_PROT_NIEZG_PACZKI);
                });

            migrationBuilder.CreateTable(
                name: "PROT_NIEZG_POST",
                columns: table => new
                {
                    ID_PROT_NIEZG_POST = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Lp = table.Column<int>(type: "int", nullable: true),
                    LpMobile = table.Column<int>(type: "int", nullable: true),
                    OPIS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    AKTYWNE = table.Column<int>(type: "int", nullable: true),
                    MOBILE_VERSION = table.Column<int>(type: "int", nullable: true, comment: "Wersja na mobile-u")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PROT_NIEZG_POST", x => x.ID_PROT_NIEZG_POST);
                });

            migrationBuilder.CreateTable(
                name: "PROT_NIEZG_POSTANOWIENIA",
                columns: table => new
                {
                    ID_PROT_NIEZG_POSTANOWIENIA = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    PROT_NIEZG_ID = table.Column<int>(type: "int", nullable: true),
                    PROT_NIEZG_POST_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PROT_NIEZG_POSTANOWIENIA", x => x.ID_PROT_NIEZG_POSTANOWIENIA);
                });

            migrationBuilder.CreateTable(
                name: "PROT_NIEZG_RODZAJ",
                columns: table => new
                {
                    ID_PROT_NIEZG_RODZAJ = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Lp = table.Column<int>(type: "int", nullable: true),
                    LpMobile = table.Column<int>(type: "int", nullable: true),
                    OPIS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    AKTYWNE = table.Column<int>(type: "int", nullable: true),
                    MOBILE_VERSION = table.Column<int>(type: "int", nullable: true, comment: "Wersja na mobile-u")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PROT_NIEZG_RODZAJ", x => x.ID_PROT_NIEZG_RODZAJ);
                });

            migrationBuilder.CreateTable(
                name: "PROT_NIEZG_RODZAJE",
                columns: table => new
                {
                    ID_PROT_NIEZG_RODZAJE = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    PROT_NIEZG_ID = table.Column<int>(type: "int", nullable: true),
                    PROT_NIEZG_RODZAJ_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PROT_NIEZG_RODZAJE", x => x.ID_PROT_NIEZG_RODZAJE);
                });

            migrationBuilder.CreateTable(
                name: "PROT_NIEZG_SPOSOB_OPAK",
                columns: table => new
                {
                    ID_PROT_NIEZG_SPOSOB_OPAK = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Lp = table.Column<int>(type: "int", nullable: true),
                    LpMobile = table.Column<int>(type: "int", nullable: true),
                    OPIS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    AKTYWNE = table.Column<int>(type: "int", nullable: true),
                    MOBILE_VERSION = table.Column<int>(type: "int", nullable: true, comment: "Wersja na mobile-u")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PROT_NIEZG_SPOSOB_OPAK", x => x.ID_PROT_NIEZG_SPOSOB_OPAK);
                });

            migrationBuilder.CreateTable(
                name: "PROT_NIEZG_SPOSOB_OPAKOWANIA",
                columns: table => new
                {
                    ID_PROT_NIEZG_SPOSOB_OPAKOWANIA = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    PROT_NIEZG_ID = table.Column<int>(type: "int", nullable: true),
                    PROT_NIEZG_SPOSOB_OPAK_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PROT_NIEZG_SPOSOB_OPAKOWANIA", x => x.ID_PROT_NIEZG_SPOSOB_OPAKOWANIA);
                });

            migrationBuilder.CreateTable(
                name: "PROT_NIEZG_ZDARZENIA",
                columns: table => new
                {
                    ID_PROT_NIEZG_ZDARZENIA = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ZDARZENIE = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: false, defaultValueSql: "('')"),
                    OPIS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    AKTYWNE = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PROT_NIEZG_ZDARZENIA", x => x.ID_PROT_NIEZG_ZDARZENIA);
                });

            migrationBuilder.CreateTable(
                name: "Province",
                columns: table => new
                {
                    ProvinceId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    CountryCode = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: false, defaultValueSql: "('')"),
                    ProvinceName = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: false, defaultValueSql: "('')"),
                    ProvinceCode = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Province", x => x.ProvinceId);
                },
                comment: "Słownik prowincji");

            migrationBuilder.CreateTable(
                name: "PRZEK_FILTR",
                columns: table => new
                {
                    ID_PRZEK_FILTR = table.Column<int>(type: "int", nullable: false),
                    ID_PRZEKIEROWANIA = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "ID przekierowania"),
                    KOD = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "kod filtra"),
                    NAZWA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "nazwa filtra"),
                    FILTR_TXT = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "wiadomość tekstowa (-1/0/1)"),
                    FILTR_SYS = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "wiadomość systemowa (-1/0/1)"),
                    FILTR_ALERT = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "alert (-1/0/1)"),
                    FILTR_ZLEC = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "wiadomość do zlecenia (-1/0/1)"),
                    WARUNEK_DOD = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true, comment: "warunek dodatkowy")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PRZEK_FILTR", x => x.ID_PRZEK_FILTR);
                },
                comment: "dodatkowy filtr wiadomości do przekierowania");

            migrationBuilder.CreateTable(
                name: "PRZEK_TABOR",
                columns: table => new
                {
                    ID_PRZEK_TABOR = table.Column<int>(type: "int", nullable: false),
                    ID_PRZEKIEROWANIA = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "ID przekierowania"),
                    ID_TABOR = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "ID taboru"),
                    TELEFON = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: false, comment: "telefon źródłowy")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PRZEK_TABOR", x => x.ID_PRZEK_TABOR);
                });

            migrationBuilder.CreateTable(
                name: "PRZEKIEROWANIA",
                columns: table => new
                {
                    ID_PRZEKIEROWANIA = table.Column<int>(type: "int", nullable: false),
                    ID_UZYTK = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "ID użytkownika"),
                    UZYTK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "nazwa użytkownika"),
                    TELEFON = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: false, comment: "docelowy numer telefonu"),
                    AKTYWNE = table.Column<short>(type: "smallint", nullable: false, defaultValueSql: "('1')", comment: "0-wył./ 1-włączony"),
                    STATUS = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "0-wszyscy/ 1-lista/ 2-moje pojazdy + lista"),
                    OPIS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "opis przekierowania"),
                    GODZOD = table.Column<DateTime>(type: "datetime", nullable: true, comment: "aktywne od godz."),
                    GODZDO = table.Column<DateTime>(type: "datetime", nullable: true, comment: "do godz."),
                    FILTRUJ = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "0/1 - włącza dodatkowy filtr wiadomości"),
                    EMAIL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "docelowy adres e-mail"),
                    SMS = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('1')", comment: "0/1 - wyślij SMS"),
                    EML = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "0/1 - wyślij e-mail"),
                    DNIWOLNE24 = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "0/1 - w dni wolne od pracy aktywne przez 24 godz")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PRZEKIEROWANIA", x => x.ID_PRZEKIEROWANIA);
                });

            migrationBuilder.CreateTable(
                name: "PRZELEWY",
                columns: table => new
                {
                    ID_PRZELEWY = table.Column<int>(type: "int", nullable: false),
                    NR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    NR_ROK = table.Column<int>(type: "int", nullable: true),
                    NR_MIES = table.Column<int>(type: "int", nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    TYP_PRZELEWU = table.Column<int>(type: "int", nullable: true),
                    NADAWCA_ID = table.Column<int>(type: "int", nullable: true),
                    NADAWCA_NAZWA = table.Column<string>(type: "varchar(35)", unicode: false, maxLength: 35, nullable: true),
                    NADAWCA_ADRES = table.Column<string>(type: "varchar(35)", unicode: false, maxLength: 35, nullable: true),
                    NADAWCA_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    NADAWCA_MIASTO = table.Column<string>(type: "varchar(25)", unicode: false, maxLength: 25, nullable: true),
                    NADAWCA_RACHUNEK = table.Column<string>(type: "varchar(37)", unicode: false, maxLength: 37, nullable: true),
                    PRZELEWY_RACHUNKI_ID = table.Column<int>(type: "int", nullable: true),
                    ODBIORCA_ID = table.Column<int>(type: "int", nullable: true),
                    ODBIORCA_NAZWA = table.Column<string>(type: "varchar(35)", unicode: false, maxLength: 35, nullable: true),
                    ODBIORCA_ADRES = table.Column<string>(type: "varchar(35)", unicode: false, maxLength: 35, nullable: true),
                    ODBIORCA_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    ODBIORCA_MIASTO = table.Column<string>(type: "varchar(25)", unicode: false, maxLength: 25, nullable: true),
                    ODBIORCA_RACHUNEK = table.Column<string>(type: "varchar(37)", unicode: false, maxLength: 37, nullable: true),
                    TYTUL1 = table.Column<string>(type: "varchar(35)", unicode: false, maxLength: 35, nullable: true),
                    TYTUL2 = table.Column<string>(type: "varchar(35)", unicode: false, maxLength: 35, nullable: true),
                    TYTUL3 = table.Column<string>(type: "varchar(35)", unicode: false, maxLength: 35, nullable: true),
                    TYTUL4 = table.Column<string>(type: "varchar(35)", unicode: false, maxLength: 35, nullable: true),
                    KWOTA = table.Column<double>(type: "float", nullable: true),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    ZUS_PLATNIK1 = table.Column<string>(type: "varchar(35)", unicode: false, maxLength: 35, nullable: true),
                    ZUS_PLATNIK2 = table.Column<string>(type: "varchar(35)", unicode: false, maxLength: 35, nullable: true),
                    ZUS_NIP = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    ZUS_TYP_DOD_ID = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    ZUS_DOD_ID = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZUS_TYP_WPL = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    ZUS_OKR = table.Column<string>(type: "varchar(6)", unicode: false, maxLength: 6, nullable: true),
                    ZUS_NR_DEKL = table.Column<string>(type: "varchar(6)", unicode: false, maxLength: 6, nullable: true),
                    ZUS_NR_DEC = table.Column<string>(type: "varchar(35)", unicode: false, maxLength: 35, nullable: true),
                    US_PLATNIK1 = table.Column<string>(type: "varchar(35)", unicode: false, maxLength: 35, nullable: true),
                    US_PLATNIK2 = table.Column<string>(type: "varchar(35)", unicode: false, maxLength: 35, nullable: true),
                    US_TYP_ID = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    US_ID = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    US_FORMULARZ = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    US_ROK = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    US_TYP_OKR = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    US_OKR = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    US_ID_ZOB = table.Column<string>(type: "varchar(35)", unicode: false, maxLength: 35, nullable: true),
                    OST_PLIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OST_PLIK_DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    ZAGR = table.Column<int>(type: "int", nullable: true),
                    NADAWCA_RACHUNEK_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    ODBIORCA_RACHUNEK_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    ZAGR_SWIFT = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ZAGR_OPLATY = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    ZAGR_OPLATY_RACH = table.Column<string>(type: "varchar(37)", unicode: false, maxLength: 37, nullable: true),
                    ZAGR_KURS_NEG = table.Column<double>(type: "float", nullable: true),
                    ZAGR_KURS_DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    SEPA = table.Column<int>(type: "int", nullable: true),
                    ODBIORCA_RACHUNEK_NIE_NRB = table.Column<int>(type: "int", nullable: true),
                    GEN_SESJA_ID = table.Column<int>(type: "int", nullable: true),
                    DATA_KONTR_WYKAZ_WL = table.Column<DateTime>(type: "datetime", nullable: true),
                    WYNIK_KONTR_WYKAZ_WL = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    REQUEST_ID = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PRZELEWY", x => x.ID_PRZELEWY);
                });

            migrationBuilder.CreateTable(
                name: "PRZELEWY_BANKI",
                columns: table => new
                {
                    ID_PRZELEWY_BANKI = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    SWIFT = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    KRAJ_IBAN = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PRZELEWY_BANKI", x => x.ID_PRZELEWY_BANKI);
                });

            migrationBuilder.CreateTable(
                name: "PRZELEWY_BANKI_TYPY_PLIKOW",
                columns: table => new
                {
                    ID_PRZELEWY_BANKI_TYPY_PLIKOW = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    PRZELEWY_BANKI_ID = table.Column<int>(type: "int", nullable: true),
                    PRZELEWY_TYPY_PLIKOW_ID = table.Column<int>(type: "int", nullable: true),
                    KRAJ = table.Column<int>(type: "int", nullable: true),
                    ZAGR = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PRZELEWY_BANKI_TYPY_PLIKOW", x => x.ID_PRZELEWY_BANKI_TYPY_PLIKOW);
                });

            migrationBuilder.CreateTable(
                name: "PRZELEWY_CELNE",
                columns: table => new
                {
                    ID_PRZELEWY_CELNE = table.Column<int>(type: "int", nullable: false),
                    NR_PRZELEWU = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_PRZELEWU_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    NR_PRZELEWU_ROK = table.Column<int>(type: "int", nullable: true),
                    NR_PRZELEWU_MIES = table.Column<int>(type: "int", nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DATA_PLATNOSCI = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_ZWOLNIENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZAPLACONE = table.Column<int>(type: "int", nullable: true),
                    ZAPLACONE_DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    IZBA_ID = table.Column<int>(type: "int", nullable: true),
                    IZBA_CELNA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    IZBA_NAZWA = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PRZELEWY_CELNE", x => x.ID_PRZELEWY_CELNE);
                });

            migrationBuilder.CreateTable(
                name: "PRZELEWY_DOK",
                columns: table => new
                {
                    ID_PRZELEWY_DOK = table.Column<int>(type: "int", nullable: false),
                    PRZELEWY_ID = table.Column<int>(type: "int", nullable: true),
                    DOKUMENT_TYP = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    DOKUMENT_ID = table.Column<int>(type: "int", nullable: true),
                    DOKUMENT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KWOTA = table.Column<double>(type: "float", nullable: true),
                    KWOTA_SPLATY = table.Column<double>(type: "float", nullable: true),
                    SPLATA_ID = table.Column<int>(type: "int", nullable: true),
                    NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    INFO_DOD = table.Column<string>(type: "varchar(33)", unicode: false, maxLength: 33, nullable: true),
                    KWOTA_NETTO = table.Column<double>(type: "float", nullable: true),
                    KWOTA_VAT = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PRZELEWY_DOK", x => x.ID_PRZELEWY_DOK);
                });

            migrationBuilder.CreateTable(
                name: "PRZELEWY_PLIK",
                columns: table => new
                {
                    ID_PRZELEWY_PLIK = table.Column<int>(type: "int", nullable: false),
                    NR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    NR_ROK = table.Column<int>(type: "int", nullable: true),
                    NR_MIES = table.Column<int>(type: "int", nullable: true),
                    TYP_PLIKU = table.Column<int>(type: "int", nullable: true),
                    PRZELEWY_RACHUNKI_ID = table.Column<int>(type: "int", nullable: true),
                    BANK = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    NUMER = table.Column<string>(type: "varchar(37)", unicode: false, maxLength: 37, nullable: true),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    ILOSC_OPER = table.Column<int>(type: "int", nullable: true),
                    SUMA_OPER = table.Column<double>(type: "float", nullable: true),
                    DATA_UTWORZENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_UTWORZENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_WYSLANIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_WYSLANIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    ZAGR = table.Column<int>(type: "int", nullable: true),
                    KRAJ_IBAN = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    DATA_WYGENER_PLIKU = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_WYGENER_PLIKU = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_REALIZACJI = table.Column<DateTime>(type: "datetime", nullable: true),
                    TRYB_REALIZACJI = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PRZELEWY_PLIK", x => x.ID_PRZELEWY_PLIK);
                });

            migrationBuilder.CreateTable(
                name: "PRZELEWY_PLIK_POZ",
                columns: table => new
                {
                    ID_PRZELEWY_PLIK_POZ = table.Column<int>(type: "int", nullable: false),
                    PRZELEWY_PLIK_ID = table.Column<int>(type: "int", nullable: true),
                    PRZELEWY_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PRZELEWY_PLIK_POZ", x => x.ID_PRZELEWY_PLIK_POZ);
                });

            migrationBuilder.CreateTable(
                name: "PRZELEWY_RACHUNKI",
                columns: table => new
                {
                    ID_PRZELEWY_RACHUNKI = table.Column<int>(type: "int", nullable: false),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: true),
                    KONTRAH = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    BANK = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    SWIFT = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    NUMER = table.Column<string>(type: "varchar(37)", unicode: false, maxLength: 37, nullable: true),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    TYP_PLIKU = table.Column<int>(type: "int", nullable: true),
                    KODOWANIE = table.Column<int>(type: "int", nullable: true),
                    TYLKO_JEDEN_KONTRAH = table.Column<int>(type: "int", nullable: true),
                    BEZ_REF = table.Column<int>(type: "int", nullable: true),
                    WERSJA = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    DOMYSLNY = table.Column<int>(type: "int", nullable: true),
                    CIF = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    KRAJ_IBAN = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    TYP_PLIKU_ZAGR = table.Column<int>(type: "int", nullable: true),
                    DEF_ZAGR = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    DEF_OPLATY = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    DEF_OPLATY_RACH = table.Column<string>(type: "varchar(37)", unicode: false, maxLength: 37, nullable: true),
                    DEF_SEPA = table.Column<int>(type: "int", nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ELIXIR_SPLIT_SEP = table.Column<int>(type: "int", nullable: true),
                    OGR_ILOSC_PRZEL_W_PACZCE = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PRZELEWY_RACHUNKI", x => x.ID_PRZELEWY_RACHUNKI);
                });

            migrationBuilder.CreateTable(
                name: "PRZELEWY_TYPY_PLIKOW",
                columns: table => new
                {
                    ID_PRZELEWY_TYPY_PLIKOW = table.Column<int>(type: "int", nullable: false),
                    NAZWA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KRAJ = table.Column<int>(type: "int", nullable: true),
                    ZAGR = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PRZELEWY_TYPY_PLIKOW", x => x.ID_PRZELEWY_TYPY_PLIKOW);
                });

            migrationBuilder.CreateTable(
                name: "PRZELICZNIKI",
                columns: table => new
                {
                    ID_PRZELICZNIKI = table.Column<int>(type: "int", nullable: false),
                    WARTOSC_Z = table.Column<int>(type: "int", nullable: true),
                    JM_Z = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    WARTOSC_DO = table.Column<int>(type: "int", nullable: true),
                    JM_DO = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    JT = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PRZELICZNIKI", x => x.ID_PRZELICZNIKI);
                });

            migrationBuilder.CreateTable(
                name: "PRZELICZNIKI_SIEC",
                columns: table => new
                {
                    ID_PRZELICZNIKI_SIEC = table.Column<int>(type: "int", nullable: false),
                    WARTOSC_Z = table.Column<int>(type: "int", nullable: true),
                    JM_Z = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    WARTOSC_DO = table.Column<int>(type: "int", nullable: true),
                    JM_DO = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    JT = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PRZELICZNIKI_SIEC", x => x.ID_PRZELICZNIKI_SIEC);
                });

            migrationBuilder.CreateTable(
                name: "PRZESYLKI",
                columns: table => new
                {
                    ID_PRZESYLKI = table.Column<int>(type: "int", nullable: false),
                    FRM_ID = table.Column<int>(type: "int", nullable: true),
                    NR_PRZESYLKI = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    NR_PRZESYLKI_EX = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    NR_PRZESYLKI_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    NR_PRZESYLKI_ROK = table.Column<int>(type: "int", nullable: true),
                    NR_PRZESYLKI_MIES = table.Column<int>(type: "int", nullable: true),
                    NR_BORDERO = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DATA_ZLECENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    PLAN_DATA_ZAL = table.Column<DateTime>(type: "datetime", nullable: true),
                    PLAN_GODZ_ZAL = table.Column<DateTime>(type: "datetime", nullable: true),
                    PLAN_DATA_ROZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    PLAN_GODZ_ROZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    FAKT_DATA_ZAL = table.Column<DateTime>(type: "datetime", nullable: true),
                    FAKT_GODZ_ZAL = table.Column<DateTime>(type: "datetime", nullable: true),
                    FAKT_DATA_ROZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    FAKT_GODZ_ROZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_DORECZENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_DORECZENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_PODJECIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_PODJECIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    TECZKA_ID = table.Column<int>(type: "int", nullable: true),
                    TECZKA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KLIENT_ID = table.Column<int>(type: "int", nullable: true),
                    KLIENT_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KLIENT_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KLIENT_ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KLIENT_MIASTO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KLIENT_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    KLIENT_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KLIENT_NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    PLATNIK_ID = table.Column<int>(type: "int", nullable: true),
                    PLATNIK_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    PLATNIK_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    PLATNIK_ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    PLATNIK_MIASTO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    PLATNIK_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    PLATNIK_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    PLATNIK_NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    KLIENT_NAD_ID = table.Column<int>(type: "int", nullable: true),
                    KLIENT_NAD_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KLIENT_NAD_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KLIENT_NAD_ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KLIENT_NAD_MIASTO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KLIENT_NAD_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    KLIENT_NAD_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KLIENT_NAD_NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    KLIENT_NAD_TEL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KLIENT_NAD_FAX = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KLIENT_NAD_KONT = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    KLIENT_ODB_ID = table.Column<int>(type: "int", nullable: true),
                    KLIENT_ODB_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KLIENT_ODB_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KLIENT_ODB_ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KLIENT_ODB_MIASTO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KLIENT_ODB_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    KLIENT_ODB_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KLIENT_ODB_NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    KLIENT_ODB_TEL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KLIENT_ODB_FAX = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KLIENT_ODB_KONT = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    MIEJSCE_ZA = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    MIEJSCE_ZA_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE_ZA_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    MIEJSCE_ZA_ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    MIEJSCE_ZA_MIASTO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    MIEJSCE_ZA_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    MIEJSCE_ZA_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    MIEJSCE_ZA_TEL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MIEJSCE_ZA_FAX = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MIEJSCE_ZA_KONT = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    MIEJSCE_WY = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    MIEJSCE_WY_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE_WY_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    MIEJSCE_WY_ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    MIEJSCE_WY_MIASTO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    MIEJSCE_WY_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    MIEJSCE_WY_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    MIEJSCE_WY_TEL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MIEJSCE_WY_FAX = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MIEJSCE_WY_KONT = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    MIEJSCE_C_ZA = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    MIEJSCE_C_ZA_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE_C_ZA_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    MIEJSCE_C_ZA_ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    MIEJSCE_C_ZA_MIASTO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    MIEJSCE_C_ZA_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    MIEJSCE_C_ZA_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    MIEJSCE_C_ZA_TEL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MIEJSCE_C_ZA_FAX = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MIEJSCE_C_ZA_KONT = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    MIEJSCE_C_WY = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    MIEJSCE_C_WY_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE_C_WY_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    MIEJSCE_C_WY_ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    MIEJSCE_C_WY_MIASTO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    MIEJSCE_C_WY_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    MIEJSCE_C_WY_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    MIEJSCE_C_WY_TEL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MIEJSCE_C_WY_FAX = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MIEJSCE_C_WY_KONT = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    STATUS_CELNY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    WARUNKI_DOSTAWY = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KIERUNEK = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    TRASA_ID = table.Column<int>(type: "int", nullable: true),
                    TRASA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    TRASA_KM = table.Column<double>(type: "float", nullable: true),
                    USLUGA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true),
                    UWAGI_POD = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true),
                    JEST_POBRANIE = table.Column<int>(type: "int", nullable: true),
                    KWOTA_POBRANIE = table.Column<double>(type: "float", nullable: true),
                    WALUTA_POBRANIE = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    JEST_UBEZP = table.Column<int>(type: "int", nullable: true),
                    KWOTA_UBEZP = table.Column<double>(type: "float", nullable: true),
                    WALUTA_UBEZP = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KWOTA_EXW = table.Column<double>(type: "float", nullable: true),
                    WALUTA_EXW = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KONTO_EXW = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    WARTOSC_TOWARU = table.Column<double>(type: "float", nullable: true),
                    WALUTA_WARTOSC_TOWARU = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    OPLATY_CELNE = table.Column<double>(type: "float", nullable: true),
                    WALUTA_OPLATY_CELNE = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    NR_DEKLARACJI = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPIS_TOWARU = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    POCHODZENIE_TOWARU = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_FAKTURY = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DATA_FAKTURY = table.Column<DateTime>(type: "datetime", nullable: true),
                    ILOSC_DEKL = table.Column<double>(type: "float", nullable: true),
                    WAGA_DEKL = table.Column<double>(type: "float", nullable: true),
                    OBJ_DEKL = table.Column<double>(type: "float", nullable: true),
                    WAGA_RZECZYWISTA = table.Column<double>(type: "float", nullable: true),
                    OBJ_RZECZYWISTA = table.Column<double>(type: "float", nullable: true),
                    WAGA_KUBATUROWA = table.Column<double>(type: "float", nullable: true),
                    WAGA_LADOWNA = table.Column<double>(type: "float", nullable: true),
                    DLUZYCA = table.Column<double>(type: "float", nullable: true),
                    WAGA_OBL = table.Column<double>(type: "float", nullable: true),
                    ADR = table.Column<int>(type: "int", nullable: true),
                    CELNA = table.Column<int>(type: "int", nullable: true),
                    DIRECT = table.Column<int>(type: "int", nullable: true),
                    STATUS_MAIL = table.Column<int>(type: "int", nullable: true),
                    STAN = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    OST_STATUS = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    MAGAZYN_P = table.Column<int>(type: "int", nullable: true),
                    MAGAZYN_R = table.Column<int>(type: "int", nullable: true),
                    LIST_LINIOWY_ID = table.Column<int>(type: "int", nullable: true),
                    LIST_LINIOWY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    LIST_LINIOWY_DYST_ID = table.Column<int>(type: "int", nullable: true),
                    LIST_LINIOWY_DYST = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    WYJAZD_ID = table.Column<int>(type: "int", nullable: true),
                    WYJAZD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PROCENT_KOSZTOW = table.Column<double>(type: "float", nullable: true),
                    PARTNER_ID = table.Column<int>(type: "int", nullable: true),
                    PARTNER = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    WALUTA_KALKULACJI = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    TABELA_KURSOW_KALKULACJI_ID = table.Column<int>(type: "int", nullable: true),
                    TABELA_KURSOW_KALKULACJI = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    CMR_ID = table.Column<int>(type: "int", nullable: true),
                    CMR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DATA_CMR = table.Column<DateTime>(type: "datetime", nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    LOKALIZACJA_POSR = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    FAKTURA_WYSTAWIONA = table.Column<int>(type: "int", nullable: true),
                    TECHNICZNE = table.Column<int>(type: "int", nullable: true),
                    USTALENIA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    USTALENIA_POTW = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    INFO_DLA_KSIEG = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    REF_1 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_3 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PRZEWOZNIK_DYST_ID = table.Column<int>(type: "int", nullable: true),
                    PRZEWOZNIK_DYST = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FRACHT_PRZEWOZNIKA_DYST = table.Column<double>(type: "float", nullable: true),
                    NUMER_CFR = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DESTYNACJA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FUMIGACJA = table.Column<int>(type: "int", nullable: true),
                    TERMS = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DELIVERY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    VESSEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    BILL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PLACEOFRECEIPT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PORTOFLOADING = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PORTOFDISCHARGE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PORTOFDELIVERY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SAILED = table.Column<DateTime>(type: "datetime", nullable: true),
                    EXPECTED = table.Column<DateTime>(type: "datetime", nullable: true),
                    NREF = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    WREF = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SAMOCHOD_ID = table.Column<int>(type: "int", nullable: true),
                    SAMOCHOD = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    KONTENER = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TYP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    STREFA_NAD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    STREFA_ODB = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    STATUS_WEJSCIA = table.Column<int>(type: "int", nullable: true),
                    STATUS_ZMIANY = table.Column<int>(type: "int", nullable: true),
                    WAGA_WYJSCIA = table.Column<double>(type: "float", nullable: true),
                    OBJ_WYJSCIA = table.Column<double>(type: "float", nullable: true),
                    STATUS_CELNY_ID = table.Column<int>(type: "int", nullable: true),
                    POTW_ODPR = table.Column<int>(type: "int", nullable: true),
                    LIST_LINIOWY_LP = table.Column<int>(type: "int", nullable: true),
                    LIST_LINIOWY_SKAN = table.Column<int>(type: "int", nullable: true),
                    PRZEWOZNIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    LIST_LINIOWY_DYST_LP = table.Column<int>(type: "int", nullable: true),
                    LIST_LINIOWY_DYST_SKAN = table.Column<int>(type: "int", nullable: true),
                    SAMOCHOD_DYST = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ID_MC = table.Column<int>(type: "int", nullable: true),
                    ID_MCWYD = table.Column<int>(type: "int", nullable: true),
                    ID_MCDWYD = table.Column<int>(type: "int", nullable: true),
                    KONTENER_ID = table.Column<int>(type: "int", nullable: true),
                    OPIEKUN = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TYP_P = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    TYP_POJAZDU = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    REKALKULACJA = table.Column<int>(type: "int", nullable: true),
                    TYP_ZLECENIA = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    SLOT_1 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_2 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_3 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_4 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_5 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    PODPRZESYLKA = table.Column<int>(type: "int", nullable: true),
                    NR_PODPRZESYLKI = table.Column<int>(type: "int", nullable: true),
                    MA_PODPRZESYLKI = table.Column<int>(type: "int", nullable: true),
                    PRZESYLKA_NADRZ_ID = table.Column<int>(type: "int", nullable: true),
                    PODPRZESYLKA_NADRZ_ID = table.Column<int>(type: "int", nullable: true),
                    KALK_KOMAS_ID = table.Column<int>(type: "int", nullable: true),
                    OK = table.Column<int>(type: "int", nullable: true),
                    ILOSC_RZECZYWISTA = table.Column<double>(type: "float", nullable: true),
                    OPAKOWANIE = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PONOWNE_PLANOWANIE = table.Column<int>(type: "int", nullable: true),
                    PODJECIE = table.Column<int>(type: "int", nullable: true),
                    STATUS_LOK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    SLOT_1_LOK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    SLOT_2_LOK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    SLOT_3_LOK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    SLOT_4_LOK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    SLOT_5_LOK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    OST_STATUS_L = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_1_L = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_2_L = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_3_L = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_4_L = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_5_L = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    LOKALIZACJA_NADZ = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    ZWR_DOK_LOK_POSR = table.Column<int>(type: "int", nullable: true),
                    DOK_OK = table.Column<int>(type: "int", nullable: true),
                    DOK_OK_DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    ANOMALIA = table.Column<int>(type: "int", nullable: true),
                    ZWROT_DO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZWROT_DO_ID = table.Column<int>(type: "int", nullable: true),
                    MA_ZWROT = table.Column<int>(type: "int", nullable: true),
                    GODZ_ZLECENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_POTWIERDZENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    TERMINOWOSC = table.Column<int>(type: "int", nullable: true),
                    EKSPRESOWA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    PLAN_DATA_ZAL_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    PLAN_GODZ_ZAL_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    PLAN_DATA_ROZ_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    PLAN_GODZ_ROZ_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    TRAFIK_ID = table.Column<int>(type: "int", nullable: true),
                    TRAFIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    JEST_POBRANIE_FRACHT = table.Column<int>(type: "int", nullable: true),
                    FORMA_POBRANIE = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    ROZL_POBRANIE = table.Column<int>(type: "int", nullable: true),
                    DATA_ROZL_POBRANIE = table.Column<DateTime>(type: "datetime", nullable: true),
                    ROZL_POBRANIE_K = table.Column<int>(type: "int", nullable: true),
                    DATA_ROZL_POBRANIE_K = table.Column<DateTime>(type: "datetime", nullable: true),
                    WAGA_DO_OBL = table.Column<double>(type: "float", nullable: true),
                    WAGA_MAX = table.Column<double>(type: "float", nullable: true),
                    LDM = table.Column<double>(type: "float", nullable: true),
                    DLUZYCA_DOD = table.Column<int>(type: "int", nullable: true),
                    DLUZYCA_DOD_KG = table.Column<double>(type: "float", nullable: true),
                    MIEJSCA_PAL = table.Column<double>(type: "float", nullable: true),
                    SP_WYLICZ_WAGI_OBL = table.Column<int>(type: "int", nullable: true),
                    ADR_UN = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    TRANZYT_INFO = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true),
                    PONOWNE_PLANOWANIE_LOK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    PODJECIE_POM = table.Column<int>(type: "int", nullable: true),
                    PODJECIE_1_LL = table.Column<int>(type: "int", nullable: true),
                    MAG_GDZIE_JEST = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    MAG_GDZIE_JEST_DATA_GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    PARTNER_TRAFIK = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DOSTAWA_MAGAZYN = table.Column<int>(type: "int", nullable: true),
                    LOKALIZACJA_MAG = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    INSTR_DOD = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    STATUS_EMISJA = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    SA_KONTAKTY = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    FAKTURA_ID = table.Column<int>(type: "int", nullable: true),
                    FAKTURA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    REF_4 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_5 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_BORDERO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    STOP = table.Column<int>(type: "int", nullable: true),
                    STOP_INFO = table.Column<string>(type: "text", nullable: true),
                    TRASA_KOD = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    OPLATA_POBRANIE = table.Column<double>(type: "float", nullable: true),
                    WALUTA_OPLATA_POBRANIE = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    OPAK_WYM = table.Column<int>(type: "int", nullable: true),
                    OPAK_WYM_OPIS = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    OPAK_WYM_ILOSC = table.Column<double>(type: "float", nullable: true),
                    WYMIANA_PALET_ROZL = table.Column<int>(type: "int", nullable: true),
                    WYMIANA_PALET_WYSL = table.Column<int>(type: "int", nullable: true),
                    WYMIANA_PALET_WYSL_DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    ADR_WYL = table.Column<int>(type: "int", nullable: true),
                    ADR_WYL_INFO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    LOKALIZACJA_CLO_WW = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    LOKALIZACJA_CLO_WY = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KOD_OPAK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    LDM_DEKL = table.Column<double>(type: "float", nullable: true),
                    DOK_ROZL_POBRANIE = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    DOK_ROZL_POBRANIE_K = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    MIEJSCA_PAL_DEKL = table.Column<double>(type: "float", nullable: true),
                    TRIG_TIMESTAMP = table.Column<DateTime>(type: "datetime", nullable: true),
                    DZIAL_ODP = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DLUZYCA_DEKL = table.Column<double>(type: "float", nullable: true),
                    List_Liniowy_Dystr_Id = table.Column<int>(type: "int", nullable: true),
                    ZWROT_TYP = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    NR_ZLECENIA_K = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    POZYCJA_OFERTY = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    OFERTA_ID = table.Column<int>(type: "int", nullable: true),
                    OFERTA_POZYCJA_ID = table.Column<int>(type: "int", nullable: true),
                    OFERTA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SQL_DEBUG_INFO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    CHECKLISTOK = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    EMI_ORG_ID = table.Column<int>(type: "int", nullable: true),
                    DATA_WYK = table.Column<DateTime>(type: "datetime", nullable: true),
                    MIEJSCA_PAL_OBL = table.Column<double>(type: "float", nullable: true),
                    ORG_TYP_P = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    NR_PRZESYLKI_EX2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OPIEKUN_HANDL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    STREFA_NAD_R = table.Column<int>(type: "int", nullable: true),
                    STREFA_ODB_R = table.Column<int>(type: "int", nullable: true),
                    BEZ_DYSTRYBUCJI = table.Column<int>(type: "int", nullable: true),
                    ROZL_POBRANIE_KIEROWCA = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PRZESYLKI", x => x.ID_PRZESYLKI);
                });

            migrationBuilder.CreateTable(
                name: "PRZESYLKI_ADR",
                columns: table => new
                {
                    ID_PRZESYLKI_ADR = table.Column<int>(type: "int", nullable: false),
                    PRZESYLKI_ID = table.Column<int>(type: "int", nullable: true),
                    UN = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "ADR - kod UN"),
                    GRUPA = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "ADR - Grupa"),
                    KLASA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "ADR - Klasa"),
                    OPIS = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true, comment: "ADR - Opis"),
                    TUNELE = table.Column<string>(type: "varchar(8)", unicode: false, maxLength: 8, nullable: true, comment: "ADR - Ograniczenia tuneli"),
                    ILOSC = table.Column<double>(type: "float", nullable: true, comment: "ADR - Ilosć"),
                    ILOSC_OPIS_OPAK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "ADR - Ilość opis opakowania"),
                    ILOSC_CALK = table.Column<double>(type: "float", nullable: true, comment: "ADR - Ilość całkowita"),
                    NALEPKI = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "ADR - Nalepki"),
                    MIARA = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "ADR - Miara"),
                    KAT_TRANSP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "ADR - Kategoria transp"),
                    OPIS_DOD = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true, comment: "ADR - Dodatkowy opis"),
                    ILOSC_DO_WYLICZEN = table.Column<double>(type: "float", nullable: true, comment: "ADR - Ilość do wyliczeń"),
                    PKT_OBLICZ = table.Column<double>(type: "float", nullable: true, comment: "ADR - Ilość do wyliczeń"),
                    PKT_RECZNIE = table.Column<double>(type: "float", nullable: true, comment: "ADR - Ilość do wyliczeń"),
                    ILOSC_LQ_ADR = table.Column<double>(type: "float", nullable: true),
                    ILOSC_OGR_LQ = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    ILOSC_OGR_LQ_OBL = table.Column<double>(type: "float", nullable: true),
                    ADR_ENV = table.Column<int>(type: "int", nullable: true),
                    ADR_TABLE_ID = table.Column<int>(type: "int", nullable: true, comment: "ID w tabeli ADR_TABLE"),
                    IS_P274 = table.Column<int>(type: "int", nullable: true),
                    ZWOLN_DOD = table.Column<int>(type: "int", nullable: true),
                    ZWOLN_DOD_PRZEPIS = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NALEPKI_DOD = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "ADR - Nalepki dod"),
                    PRZEPISY_SZCZ = table.Column<string>(type: "varchar(19)", unicode: false, maxLength: 19, nullable: true, comment: "Przepisy szczególne")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PRZESYLKI_ADR", x => x.ID_PRZESYLKI_ADR);
                });

            migrationBuilder.CreateTable(
                name: "PRZESYLKI_AIR",
                columns: table => new
                {
                    ID_PRZESYLKI = table.Column<int>(type: "int", nullable: false),
                    HAWB = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    MAWB = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    AS_AGREED = table.Column<int>(type: "int", nullable: true),
                    UBEZP_PROC_STAWKA = table.Column<double>(type: "float", nullable: true),
                    UBEZP_PROC = table.Column<double>(type: "float", nullable: true),
                    WAGA_DEKL = table.Column<double>(type: "float", nullable: true),
                    WAGA_RZ = table.Column<double>(type: "float", nullable: true),
                    OBJ_DEKL = table.Column<double>(type: "float", nullable: true),
                    OBJ_RZ = table.Column<double>(type: "float", nullable: true),
                    ILOSC_RZ = table.Column<double>(type: "float", nullable: true),
                    WAGA_DO_OBL = table.Column<double>(type: "float", nullable: true),
                    WAGA_OBJ = table.Column<double>(type: "float", nullable: true),
                    WAGA_PLATNA = table.Column<double>(type: "float", nullable: true),
                    WAGA_PLATNA_USTALONA = table.Column<double>(type: "float", nullable: true),
                    INCO_MIEJSCE = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true),
                    AGENT_HANDL_ID = table.Column<int>(type: "int", nullable: true),
                    AGENT_HANDL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    CESJA_NA_ID = table.Column<int>(type: "int", nullable: true),
                    CESJA_NA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PRZESYLKI_AIR", x => x.ID_PRZESYLKI);
                },
                comment: "Rozszerzenie tabeli PRZESYLKI - relacja 1:1 z tabelą PRZESYLKI");

            migrationBuilder.CreateTable(
                name: "PRZESYLKI_CHECKLIST",
                columns: table => new
                {
                    ID_PRZESYLKI_CHECKLIST = table.Column<int>(type: "int", nullable: false),
                    PRZESYLKI_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Relacja do zlecenia morskiego"),
                    CHECKLISTDEFID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Relacja do pozycji checklisty"),
                    LP = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Lp"),
                    COMPLETED = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Flaga czy wykonano"),
                    COMPLETEDDT = table.Column<DateTime>(type: "datetime", nullable: true, comment: "DT kiedy wykonano"),
                    DESCRIPTION = table.Column<string>(type: "varchar(250)", unicode: false, maxLength: 250, nullable: true, comment: "Uwagi"),
                    CHANGEDT = table.Column<DateTime>(type: "datetime", nullable: true, comment: "DT kiedy zmieniono"),
                    CHANGEUSERID = table.Column<int>(type: "int", nullable: true, comment: "User który wykonał zmianę"),
                    ExpirationDT = table.Column<DateTime>(type: "datetime", nullable: true, comment: "DT do kiedy")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PRZESYLKI_CHECKLIST", x => x.ID_PRZESYLKI_CHECKLIST);
                });

            migrationBuilder.CreateTable(
                name: "PRZESYLKI_DOK_TYP_GEN",
                columns: table => new
                {
                    ID_PRZESYLKI_DOK_TYP_GEN = table.Column<int>(type: "int", nullable: false),
                    KOD = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Kod pozycji"),
                    OPIS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Opis ")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PRZESYLKI_DOK_TYP_GEN", x => x.ID_PRZESYLKI_DOK_TYP_GEN);
                },
                comment: "Słownik typów dla generatora przesyłek dokumentowych");

            migrationBuilder.CreateTable(
                name: "PRZESYLKI_DOKUMENTY",
                columns: table => new
                {
                    ID_PRZESYLKI_DOKUMENTY = table.Column<int>(type: "int", nullable: false),
                    PRZESYLKI_ID = table.Column<int>(type: "int", nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    KOD = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WYMAGANY = table.Column<int>(type: "int", nullable: true),
                    WPLYNAL = table.Column<int>(type: "int", nullable: true),
                    DATA_WPLYWU = table.Column<DateTime>(type: "datetime", nullable: true),
                    UZYTKOWNIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    ROD = table.Column<int>(type: "int", nullable: true),
                    ROD_DO = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    ROD_WYSZEDL = table.Column<int>(type: "int", nullable: true),
                    ROD_DATA_WYJSCIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    ROD_UZYTKOWNIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KONSOLIDACJA_ID = table.Column<int>(type: "int", nullable: true),
                    PRZESYLKI_ZWR_ID = table.Column<int>(type: "int", nullable: true),
                    KOD_KRESKOWY = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KWIT_PAL_ID = table.Column<int>(type: "int", nullable: true),
                    ILOSC = table.Column<int>(type: "int", nullable: true),
                    ILOSC_ROZL = table.Column<int>(type: "int", nullable: true),
                    LOKALIZACJA_WEJSCIA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DOK = table.Column<int>(type: "int", nullable: true),
                    DOKS = table.Column<int>(type: "int", nullable: true),
                    EROD = table.Column<int>(type: "int", nullable: true),
                    ROD_DO_KONTRAH_ID = table.Column<int>(type: "int", nullable: true),
                    ROD_DO_KONTRAH = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    STICKER = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    LOKALIZACJA_WYJSCIA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DATA_WYS_CENTR = table.Column<DateTime>(type: "datetime", nullable: true),
                    SZUFLADA_ID = table.Column<int>(type: "int", nullable: true),
                    SZUFLADA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    STOP_W_LOKALIZACJI = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    STATUS = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    DATA_ODB_CENTRALA = table.Column<DateTime>(type: "datetime", nullable: true),
                    CZAS_ODB_CENTR = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_DO_SKANOWANIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_Z_SKANOWANIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_WYSLANIA_DO_KLIENTA = table.Column<DateTime>(type: "datetime", nullable: true),
                    EKSPRES = table.Column<int>(type: "int", nullable: true),
                    LOG_LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    LOG_DATA_ODB_CENTRALA = table.Column<DateTime>(type: "datetime", nullable: true),
                    UZYTKOWNIK_POTW = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PRZESYLKI_DOKUMENTY", x => x.ID_PRZESYLKI_DOKUMENTY);
                });

            migrationBuilder.CreateTable(
                name: "PRZESYLKI_DOKUMENTY_UWAGI",
                columns: table => new
                {
                    ID_PRZESYLKI_DOKUMENTY_UWAGI = table.Column<int>(type: "int", nullable: false),
                    PRZESYLKI_DOKUMENTY_ID = table.Column<int>(type: "int", nullable: true),
                    DOKUMENTY_UWAGI_ID = table.Column<int>(type: "int", nullable: true),
                    OPIS_DOD = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PRZESYLKI_DOKUMENTY_UWAGI", x => x.ID_PRZESYLKI_DOKUMENTY_UWAGI);
                });

            migrationBuilder.CreateTable(
                name: "PRZESYLKI_EXT",
                columns: table => new
                {
                    ID_PRZESYLKI = table.Column<int>(type: "int", nullable: false),
                    WERYF_KODOW = table.Column<int>(type: "int", nullable: true, comment: "Status weryfikacji kodów pocztowych (0 - OK, 1 - błędy kodów, 2 - błędy GPS kodów)"),
                    BLOKADA = table.Column<int>(type: "int", nullable: true, comment: "Pole na potrzeby interfejsu Whirpool"),
                    BLOKADA_DT = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Pole na potrzeby interfejsu Whirpool"),
                    POTW_SMS = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy aktywna usługa potwierdzenia SMS"),
                    POTW_EMAIL = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy aktywna usługa potwierdzenia EMAIL"),
                    JEST_PROT_NIEZG = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy jest protokół niezgodnosci"),
                    ANULOWANA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy przesyłka jest anulowana"),
                    KAT_PRZESYLKI = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Kategoria przesyłki"),
                    KONSOLIDACJA_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do przesyłki skonsolidowanej - tab: PRZESYLKI"),
                    AKT_PARAM_LOG = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy należy zaktualizowac parametry logistyczne"),
                    WLASC_PALET = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Właściciel opakowań wymiennych (ZL, NAD, ODB, MZA, MWY, L_NAD, L_WE, L_WY + ew. inne)"),
                    WLASC_PALET_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do własciciela opakowań wymiennych - tab: KONTRAHENCI"),
                    GDZIE_ZWR = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Informacja, gdzie należy zwrócicć opakowania wymienne (ZL, NAD, ODB, MZA, MWY, L_NAD, L_WE, L_WY + ew. inne)"),
                    GDZIE_ZWR_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja gdzie zwrócic palety - POI - gdy inne miejsce niz to wynikajace z WLASC_PALET) - tab: MIEJSCA_ZA_ROZLADUNKU"),
                    LOK_ZWR_PAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Informacja, która lokalizacja ma zwrócić opakowania wymienne nadawcy"),
                    ODEBRANO_PALETY = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy odebrano opakowania od odbiorcy"),
                    ODEBRANO_PALETY_ILE = table.Column<int>(type: "int", nullable: true, comment: "Ilość opakowań odebranych od odbiorcy"),
                    ODEBRANO_PALETY_ILE_KP = table.Column<int>(type: "int", nullable: true, comment: "Ilość opakowań na kwicie paletowym"),
                    ODEBRANO_PALETY_LOK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Informacja o lokalizacji, która odebrała opakowania od odbiorcy"),
                    ODEBRANO_PALETY_KP_ID = table.Column<int>(type: "int", nullable: true, comment: "*pole nie używane*"),
                    ODEBRANO_PALETY_KP = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "*pole nie używane*"),
                    ROZL_W_SIECI = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy rozliczono opakowania wymiene w sieci"),
                    ROZL_Z_WLASC = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy rozliczono opakowania wymiene z właścicielem"),
                    ROZL_Z_WLASC_ILE = table.Column<int>(type: "int", nullable: true, comment: "Ilość opakowań rozliczonych z właścicielem"),
                    ROZL_Z_WLASC_ILE_KP = table.Column<int>(type: "int", nullable: true, comment: "Ilość opakowań rozliczonych kwitem paletowym z właścicielem"),
                    ROZL_Z_WLASC_LOK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Informacja o lokalizacji, która rozliczyła opakowania z włascicielem"),
                    ROZL_Z_WLASC_KP_ID = table.Column<int>(type: "int", nullable: true, comment: "*pole nie używane*"),
                    ROZL_Z_WLASC_KP = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "*pole nie używane*"),
                    ROZL_PALET_UWAGI = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true, comment: "Uwagi do rozliczenia opakowań"),
                    PODSTAW_OPAKOWAN = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy należy podstawic własne opakowania wymienne"),
                    FV_NA_PLATNIKA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy faktura jest wystawiana na płatnika"),
                    ODDZIAL_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do danych oddziału zleceniodawcy - tab. KONTRAHENCI_ODDZIAL"),
                    ODDZIAL_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Oddział - nazwa"),
                    ODDZIAL_ADRES = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Oddział - adres"),
                    ODDZIAL_MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Oddział - miasto"),
                    ODDZIAL_KOD = table.Column<string>(type: "varchar(6)", unicode: false, maxLength: 6, nullable: true, comment: "Oddział - kod pocztowy"),
                    ODDZIAL_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Oddział - kraj"),
                    PRZESYLKA_WWW = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy przesyłka pochodzi z systemu WWW"),
                    PIETROWANIE = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy możliwe piętrowanie"),
                    MIEJSCE_WY_LON = table.Column<double>(type: "float", nullable: true, comment: "GPS - Długość geogr. - załadunek"),
                    MIEJSCE_WY_LAT = table.Column<double>(type: "float", nullable: true, comment: "GPS - Szerokość geogr. - załadunek"),
                    MIEJSCE_ZA_LON = table.Column<double>(type: "float", nullable: true, comment: "GPS - Długość geogr. - rozładunek"),
                    MIEJSCE_ZA_LAT = table.Column<double>(type: "float", nullable: true, comment: "GPS - Szerokość geogr. - rozładunek"),
                    ZM_TRASY = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy zmieiono zaplanowaną trasę"),
                    ROD = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy jest ROD"),
                    WROD = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy wykonano ROD"),
                    PARTNER2_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do partnera 2 - tab: KONTRAHENCI"),
                    PARTNER2 = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true, comment: "Symbol partnera 2"),
                    PARTNER2_TRAFIK = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Symbol trafiku partnera 2"),
                    UZUP_DANE = table.Column<int>(type: "int", nullable: true, comment: "Flaga uzupełnienia danych na przesyłce"),
                    LICZNIK_PLANOWAN = table.Column<int>(type: "int", nullable: true, comment: "Licznik planowań/odplanowań"),
                    NIEZGODNOSC = table.Column<short>(type: "smallint", nullable: true, comment: "Flaga, czy jest niezgodnosc"),
                    REKLAMACJA = table.Column<short>(type: "smallint", nullable: true, comment: "Flaga, czy jest reklamacja"),
                    SZCZ_UWAGA = table.Column<short>(type: "smallint", nullable: true, comment: "Flaga, czy przesyłka szczególnej uwagi"),
                    REF_6 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_7 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_8 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_9 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_10 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TRASA_RECZNA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy trasa ustalona ręcznie"),
                    ZBIORCZA = table.Column<int>(type: "int", nullable: true, comment: "Flaga , czy przesyłka zbiorcza - wynikająca z konsolidacji"),
                    JEST_LP = table.Column<short>(type: "smallint", nullable: true, comment: "Flaga, czy przesyłka ma LP (list przewozowy)"),
                    PRZES_ZLEC_AKC = table.Column<short>(type: "smallint", nullable: true, comment: "Flaga, czy zaakceptowane zlecenie podjęcia"),
                    IS_EXPORTED = table.Column<int>(type: "int", nullable: true),
                    IS_EXPORTED_DT = table.Column<DateTime>(type: "datetime", nullable: true),
                    WSTEPNA = table.Column<short>(type: "smallint", nullable: true, comment: "Flaga, czy przesyłka wstępna"),
                    JEST_LP_DUPL = table.Column<short>(type: "smallint", nullable: true, comment: "Flaga, czy przesyłka ma LP - Duplikat"),
                    BRAKI = table.Column<short>(type: "smallint", nullable: true, comment: "Flaga, czy przesyłka wynika z braków"),
                    PRZYCHODY_SP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Nazwa cennika SP dla przychodów"),
                    KOSZTY_SP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Nazwa cennika SP dla kosztów"),
                    PRZESYLKA_WWW_AKCEPT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy przesyłka pochodząca z systemu WWW jest zaakceptowana"),
                    CENNIK_KONTROLA = table.Column<int>(type: "int", nullable: true),
                    PUNKTY_ADR_CHK = table.Column<int>(type: "int", nullable: true),
                    PUNKTY_ADR = table.Column<double>(type: "float", nullable: true),
                    CELNA_EXPORT = table.Column<int>(type: "int", nullable: true),
                    CELNA_NR_PRZEJSCIA_GR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PODMIANA_PALET = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy należy podmienić opakowania wymienne"),
                    PODMIENIONO_PALETY = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy należy podmienić opakowania wymienne"),
                    COD_ROZL_PRZEW = table.Column<double>(type: "float", nullable: true),
                    COD_ROZL_ZLEC = table.Column<double>(type: "float", nullable: true),
                    CELNA_IMPORT = table.Column<int>(type: "int", nullable: true),
                    ODB_WLASNY = table.Column<int>(type: "int", nullable: true),
                    WALIDACJA_ERROR = table.Column<int>(type: "int", nullable: true),
                    BRAK_BB = table.Column<short>(type: "smallint", nullable: true),
                    NIE_FAKTURUJ = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy nie fakturować"),
                    P_DOK_STAN_WE = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    P_DOK_STAN_WY = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    KLIENT_TEL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KLIENT_KONT = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    ODROCZONY_VAT = table.Column<int>(type: "int", nullable: true),
                    ILOSC_CALK_ADR = table.Column<double>(type: "float", nullable: true),
                    DOW_WLASNY = table.Column<int>(type: "int", nullable: true),
                    NIEKOMPLETNA = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy przesyłka kompletna"),
                    TYP_UBEZP = table.Column<int>(type: "int", nullable: true),
                    KRAJ_POCZ = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    KRAJ_DOCEL = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    DEPOZYT_GDZIE_JEST_ID = table.Column<int>(type: "int", nullable: true),
                    DATACAR_ID = table.Column<int>(type: "int", nullable: true),
                    PLAC = table.Column<int>(type: "int", nullable: true),
                    HACCP = table.Column<int>(type: "int", nullable: true),
                    ZWR_DOK = table.Column<int>(type: "int", nullable: true),
                    REZ = table.Column<int>(type: "int", nullable: true),
                    PRZEKAZANA_DO_KURIERA = table.Column<int>(type: "int", nullable: true),
                    PLATNIK_RECZNIE = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy płatnik wskazany recznie"),
                    P_ADR_ENV = table.Column<int>(type: "int", nullable: true),
                    ILOSC_LQ_ADR = table.Column<double>(type: "float", nullable: true),
                    CLENIE_NR_DOK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    CLENIE_DATA_WAZN_DOK = table.Column<DateTime>(type: "datetime", nullable: true),
                    CLENIE_DATA_WEJ = table.Column<DateTime>(type: "datetime", nullable: true),
                    CLENIE_DATA_WYJ = table.Column<DateTime>(type: "datetime", nullable: true),
                    CLENIE_UWAGI = table.Column<string>(type: "text", nullable: true),
                    MIEJSCE_C_ZA_AGENCJA_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE_C_ZA_AGENCJA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    MIEJSCE_C_WY_AGENCJA_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE_C_WY_AGENCJA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    MIEJSCE_C_WY_STREFA = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    MIEJSCE_C_ZA_STREFA = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    COD_KONTO = table.Column<string>(type: "varchar(36)", unicode: false, maxLength: 36, nullable: true),
                    COD_KONTO_ID = table.Column<int>(type: "int", nullable: true),
                    COD_INFO_DOD = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    AIR_WAGA_KUBATUROWA = table.Column<double>(type: "float", nullable: true),
                    AIR_WAGA_OBL = table.Column<double>(type: "float", nullable: true),
                    PRZESYLKI_AIR_ID = table.Column<int>(type: "int", nullable: true),
                    PRZESYLKI_SEA_ID = table.Column<int>(type: "int", nullable: true),
                    KRAJE_RECZNIE = table.Column<int>(type: "int", nullable: true),
                    GOT_AUTO_FV = table.Column<int>(type: "int", nullable: true),
                    BEZPLATNA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy przesyłka jest bezpłatna"),
                    KURIER = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Obsługa siecią zewnetrzną"),
                    KURIER_REF = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Numer w zewnętrznej sieci"),
                    TEMP_PLUS = table.Column<int>(type: "int", nullable: true),
                    VAT_NA_SADZIE = table.Column<int>(type: "int", nullable: true),
                    SQL_DEBUG_INFO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    CELNA_BEZ_AUTO_ZLEC_C = table.Column<int>(type: "int", nullable: true),
                    EMI_STATE = table.Column<int>(type: "int", nullable: true),
                    KOPIA_Z_ID = table.Column<int>(type: "int", nullable: true),
                    ZAMOWIENIE = table.Column<int>(type: "int", nullable: true),
                    ZAMOWIENIE_Z_ID = table.Column<int>(type: "int", nullable: true),
                    OPT_TASK_ID = table.Column<int>(type: "int", nullable: true),
                    MapGeoCoding = table.Column<int>(type: "int", nullable: true),
                    MapRouting = table.Column<int>(type: "int", nullable: true),
                    SENT_RefNo = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SENT = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE_WY_EMAIL = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true),
                    MIEJSCE_ZA_EMAIL = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true),
                    KLIENT_NAD_EMAIL = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true),
                    KLIENT_ODB_EMAIL = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true),
                    PRZESYLKI_RAIL_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIA_RAIL_ID = table.Column<int>(type: "int", nullable: true),
                    SIEC_ZEWN_REF_1 = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    SIEC_ZEWN_REF_2 = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    BulkState = table.Column<int>(type: "int", nullable: true),
                    UbezpGrupaTowarowaId = table.Column<int>(type: "int", nullable: true),
                    UbezpKlauzulaSpecjalnaId = table.Column<int>(type: "int", nullable: true),
                    UbezpOswZgodnosci = table.Column<int>(type: "int", nullable: true),
                    WAGA_OBL_R = table.Column<int>(type: "int", nullable: true),
                    POD_Date = table.Column<DateTime>(type: "datetime", nullable: true),
                    POD_Information = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    HereAverageKmCost = table.Column<double>(type: "float", nullable: true, comment: "Średni koszt za km"),
                    HereAverageHourCost = table.Column<double>(type: "float", nullable: true, comment: "Średni koszt godziny"),
                    HereRouteCost = table.Column<double>(type: "float", nullable: true, comment: "Koszt stały na trasę"),
                    HereCostCurrency = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    HereRouteCalculateType = table.Column<int>(type: "int", nullable: true, comment: "Wyznaczenie trasy: 1=szybka, 2=krótka, 3=optymalna"),
                    HereTollCalculate = table.Column<int>(type: "int", nullable: true, comment: "Liczy myto: 1=EUR"),
                    HereViolation = table.Column<int>(type: "int", nullable: true, comment: "Naruszanie ograniczeń: 1=zgoda, 0=brak zgody, 2=unikaj"),
                    HereFerries = table.Column<int>(type: "int", nullable: true, comment: "Unikaj promów"),
                    HereHighways = table.Column<int>(type: "int", nullable: true, comment: "Unikaj autostrad"),
                    HerePayments = table.Column<int>(type: "int", nullable: true, comment: "Unikaj płatności"),
                    HereTunels = table.Column<int>(type: "int", nullable: true, comment: "Unikaj tuneli"),
                    HereHazardous = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true, comment: "towary niebezpieczne"),
                    HereTollCalculateBaseCurr = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    HereTollCalculateOtherCurr = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MapLink = table.Column<string>(type: "varchar(4000)", unicode: false, maxLength: 4000, nullable: true),
                    POI_ZA_ID = table.Column<int>(type: "int", nullable: true),
                    POI_WY_ID = table.Column<int>(type: "int", nullable: true),
                    POI_C_ZA_ID = table.Column<int>(type: "int", nullable: true),
                    POI_C_WY_ID = table.Column<int>(type: "int", nullable: true),
                    PORTBASE_State = table.Column<int>(type: "int", nullable: true, comment: "Status wysyłki zgłoszenia do PORTBASE: -1=przekazane do wysyłki, -2=błędna struktura, 0=wysłane, 1=przyjęte, 2=odrzucone, 3=zaakceptowane"),
                    PORTBASE_Error = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Kod błędu w przypadku odrzucenia"),
                    PORTBASE_ProcessingState = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Status obsługi zgłoszenia wysłanego do PORTBASE")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PRZESYLKI_EXT", x => x.ID_PRZESYLKI);
                },
                comment: "Rozszerzenie tabeli PRZESYLKI - relacja 1:1 z tabelą PRZESYLKI");

            migrationBuilder.CreateTable(
                name: "PRZESYLKI_INSTR_DOD",
                columns: table => new
                {
                    ID_PRZESYLKI_INSTR_DOD = table.Column<int>(type: "int", nullable: false),
                    PRZESYLKI_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Relacja do przesyłki, tab: PRZESYLKI"),
                    KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Redundantnie na podstwie słownika INSTRUKCJE_DOD"),
                    WYMAGANY_OPIS = table.Column<int>(type: "int", nullable: true, comment: "Redundantnie na podstwie słownika INSTRUKCJE_DOD"),
                    UWAGI = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    WYMAGANA_DATA = table.Column<int>(type: "int", nullable: true, comment: "Redundantnie na podstwie słownika INSTRUKCJE_DOD"),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    WYMAGANA_KWOTA = table.Column<int>(type: "int", nullable: true, comment: "Redundantnie na podstwie słownika INSTRUKCJE_DOD"),
                    KWOTA = table.Column<double>(type: "float", nullable: true),
                    KWOTA_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    COD = table.Column<int>(type: "int", nullable: true, comment: "Redundantnie na podstwie słownika INSTRUKCJE_DOD"),
                    CENNIK = table.Column<int>(type: "int", nullable: true, comment: "Redundantnie na podstwie słownika INSTRUKCJE_DOD"),
                    OPCJONALNA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Redundantnie na podstwie słownika INSTRUKCJE_DOD"),
                    WYMAGANA_ILOSC = table.Column<int>(type: "int", nullable: true),
                    ILOSC = table.Column<double>(type: "float", nullable: true),
                    WYMAGANA_JT = table.Column<int>(type: "int", nullable: true),
                    ILOSC_JT = table.Column<double>(type: "float", nullable: true),
                    JT = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    WYMAGANY_OPIS_DOD = table.Column<int>(type: "int", nullable: true),
                    OPIS_DOD = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    INSTRUKCJE_DOD_KONFIG_ID = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    CENNIK_PODSTAWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    CENNIK_KALKULACJA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    WYMAGANY_CHECKBOX = table.Column<int>(type: "int", nullable: true),
                    CHECKBOX = table.Column<double>(type: "float", nullable: true),
                    DOT_KLIENTA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Redundantnie na podstwie słownika INSTRUKCJE_DOD"),
                    DOT_PRZEWOZNIKA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Redundantnie na podstwie słownika INSTRUKCJE_DOD")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PRZESYLKI_INSTR_DOD", x => x.ID_PRZESYLKI_INSTR_DOD);
                });

            migrationBuilder.CreateTable(
                name: "PRZESYLKI_LOKALIZACJE",
                columns: table => new
                {
                    ID_PRZESYLKI_LOKALIZACJE = table.Column<int>(type: "int", nullable: false),
                    PRZESYLKI_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do przesyłki - tab: PRZESYLKI"),
                    LP = table.Column<int>(type: "int", nullable: true, comment: "Lp"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja"),
                    OST_STATUS = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Ostatni status dla lokalizacji"),
                    SLOT_1 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Slot 1 dla statusu lokalizacji"),
                    SLOT_2 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Slot 2 dla statusu lokalizacji"),
                    SLOT_3 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Slot 3 dla statusu lokalizacji"),
                    SLOT_4 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Slot 4 dla statusu lokalizacji"),
                    SLOT_5 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Slot 5 dla statusu lokalizacji"),
                    LISTY_LINIOWE_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do przewozu - tab: LISTY_LINIOWE"),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dział"),
                    ZAPLANOWANA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy przesyłka została juz zaplanowana w danej lokalizacji"),
                    AUTOMAT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy zapis pochodzi z procesu wyznaczania trasy"),
                    POMINIETA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy dana lokalizacja zostałą pominięta"),
                    LOKALIZACJA_NAST = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja następna"),
                    LOKALIZACJA_POPRZ = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja następna")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PRZESYLKI_LOKALIZACJE", x => x.ID_PRZESYLKI_LOKALIZACJE);
                },
                comment: "Lokalizacje przez które przejdzie/przeszła przesyłka - detal do tabeli PRZESYLKI");

            migrationBuilder.CreateTable(
                name: "PRZESYLKI_MAG_STAT",
                columns: table => new
                {
                    ID_PRZESYLKI_MAG_STAT = table.Column<int>(type: "int", nullable: false),
                    PRZESYLKI_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do przesyłki - tab: PRZESYLKI"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja"),
                    DNI = table.Column<int>(type: "int", nullable: true, comment: "Ilość dni w magazynie"),
                    DATA_OD = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data od"),
                    DATA_DO = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data do"),
                    DOK_WEJ_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do PZ - tab: MAGAZYN_ZDARZENIA"),
                    DOK_WEJ = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer PZ"),
                    DOK_WYJ_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do WZ - tab: MAGAZYN_ZDARZENIA"),
                    DOK_WYJ = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer WZ")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PRZESYLKI_MAG_STAT", x => x.ID_PRZESYLKI_MAG_STAT);
                },
                comment: "Statystyka magazynowa przesyłek - detal do tabeli PRZESYLKI");

            migrationBuilder.CreateTable(
                name: "PRZESYLKI_NOSNIKI",
                columns: table => new
                {
                    ID_PRZESYLKI_NOSNIKI = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    PRZESYLKI_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    OPAKOWANIA_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ETAP = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: false, defaultValueSql: "('')"),
                    ILOSC = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PRZESYLKI_NOSNIKI", x => x.ID_PRZESYLKI_NOSNIKI);
                });

            migrationBuilder.CreateTable(
                name: "PRZESYLKI_NOSNIKI_UWAGI",
                columns: table => new
                {
                    ID_PRZESYLKI_NOSNIKI_UWAGI = table.Column<int>(type: "int", nullable: false),
                    PRZESYLKI_ID = table.Column<int>(type: "int", nullable: true),
                    OPAKOWANIA_ID = table.Column<int>(type: "int", nullable: true),
                    NOSNIKI_UWAGI_ID = table.Column<int>(type: "int", nullable: true),
                    ILOSC = table.Column<int>(type: "int", nullable: true),
                    OPIS_DOD = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true),
                    KWIT_PAL_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PRZESYLKI_NOSNIKI_UWAGI", x => x.ID_PRZESYLKI_NOSNIKI_UWAGI);
                });

            migrationBuilder.CreateTable(
                name: "PRZESYLKI_OTH_POZ",
                columns: table => new
                {
                    ID_PRZESYLKI_OTH_POZ = table.Column<int>(type: "int", nullable: false),
                    PRZESYLKI_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Relacja do przesyłki - tab: PRZESYLKI"),
                    LP = table.Column<int>(type: "int", nullable: true, comment: "Lp"),
                    ILOSC = table.Column<double>(type: "float", nullable: true),
                    OTH_POZ_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do słownika pozycji - tab: OTH_POZ"),
                    OPIS_DOD = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PRZESYLKI_OTH_POZ", x => x.ID_PRZESYLKI_OTH_POZ);
                },
                comment: "Usługi inne - detal do tabeli PRZESYLKI");

            migrationBuilder.CreateTable(
                name: "PRZESYLKI_POI_HASH",
                columns: table => new
                {
                    ID_PRZESYLKI_POI_HASH = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_PRZESYLKI = table.Column<int>(type: "int", nullable: true),
                    TYP = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    POI_HASH = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    LAT = table.Column<double>(type: "float", nullable: true),
                    LON = table.Column<double>(type: "float", nullable: true),
                    POZIOM = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PRZESYLKI_POI_HASH", x => x.ID_PRZESYLKI_POI_HASH);
                });

            migrationBuilder.CreateTable(
                name: "PRZESYLKI_POWIADOMIENIA",
                columns: table => new
                {
                    ID_PRZESYLKI_POWIADOMIENIA = table.Column<int>(type: "int", nullable: false),
                    PRZESYLKI_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do przesyłki, tab: PRZESYLKI"),
                    KTO = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Do kogo np. ZLEC, NAD, ODB, PLATN, PARTN, INNY"),
                    TYP = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true, comment: "Typ powiadomienia np. SMS, EMAIL etc"),
                    CO_WYZWALA = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true, comment: "Statusy wyzwalające zapisane jako ciąg rozdzielany ;"),
                    EMAIL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true, comment: "Adres email na jaki zostanie wysłane powiadomienie"),
                    KRAJ = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "Symbol kraju"),
                    TEL_PREFIX = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Prefix telefonu"),
                    TEL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nr telefonu"),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia powiadomoenia (=ZLECENIA.DATA_ZLECENIA)"),
                    ZROBIONE_N = table.Column<short>(type: "smallint", nullable: true, comment: "Flaga, czy wysłano powiadomienie o NADANIU"),
                    ZROBIONE_D = table.Column<short>(type: "smallint", nullable: true, comment: "Flaga, czy wysłano powiadomienie o DORĘCZENIU"),
                    ZROBIONE_K = table.Column<short>(type: "smallint", nullable: true, comment: "Flaga, czy wysłano powiadomienie o DORĘCZENIU KOŃCOWYM"),
                    DT = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data/Godzina wyzwolenia powiadomienia"),
                    TRESC = table.Column<string>(type: "varchar(600)", unicode: false, maxLength: 600, nullable: true, comment: "Treść komunikatu")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PRZESYLKI_POWIADOMIENIA", x => x.ID_PRZESYLKI_POWIADOMIENIA);
                },
                comment: "Powiadomienia do przesyłek - detal do tabeli PRZESYLKI");

            migrationBuilder.CreateTable(
                name: "PRZESYLKI_PROT_NIEZG",
                columns: table => new
                {
                    ID_PRZESYLKI_PROT_NIEZG = table.Column<int>(type: "int", nullable: false),
                    DATA_PROT = table.Column<DateTime>(type: "datetime", nullable: true),
                    NR_PROT = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    NR_PROT_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    NR_PROT_ROK = table.Column<int>(type: "int", nullable: true),
                    NR_PROT_MIES = table.Column<int>(type: "int", nullable: true),
                    TYP = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    ZDARZENIE = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    LISTY_LINIOWE_ID = table.Column<int>(type: "int", nullable: true),
                    LISTY_LINIOWE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    LISTY_LINIOWE_DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    LISTY_LINIOWE_DATA_ZAWY = table.Column<DateTime>(type: "datetime", nullable: true),
                    LISTY_LINIOWE_GODZ_ZAWY = table.Column<DateTime>(type: "datetime", nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    PRZEWOZNIK_ID = table.Column<int>(type: "int", nullable: true),
                    PRZEWOZNIK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    PRZEWOZNIK_TEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    STAN = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    PRACOWNIK_ID = table.Column<int>(type: "int", nullable: true),
                    PRACOWNIK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SAMOCHOD_ID = table.Column<int>(type: "int", nullable: true),
                    SAMOCHOD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SAMOCHOD_NR_B = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NACZEPA_ID = table.Column<int>(type: "int", nullable: true),
                    NACZEPA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NACZEPA_NR_B = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KIEROWCA_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KIEROWCA_TEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KIEROWCA2_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KIEROWCA2_TEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PRZESYLKI_ID = table.Column<int>(type: "int", nullable: true),
                    PRZESYLKA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ILOSC = table.Column<double>(type: "float", nullable: true),
                    WAGA = table.Column<double>(type: "float", nullable: true),
                    TECZKA_ID = table.Column<int>(type: "int", nullable: true),
                    TECZKA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OPAK_FIRM = table.Column<int>(type: "int", nullable: true),
                    OPAK_FIRM_OPIS = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    OPAK_FOLIA = table.Column<int>(type: "int", nullable: true),
                    OPAK_FOLIA_OPIS = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    OPAK_SKRZYNIA = table.Column<int>(type: "int", nullable: true),
                    OPAK_SKRZYNIA_OPIS = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    OPAK_WOREK = table.Column<int>(type: "int", nullable: true),
                    OPAK_WOREK_OPIS = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    OPAK_KARTON = table.Column<int>(type: "int", nullable: true),
                    OPAK_KARTON_OPIS = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    OPAK_TASMA = table.Column<int>(type: "int", nullable: true),
                    OPAK_TASMA_OPIS = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    OPAK_POJEMNIK = table.Column<int>(type: "int", nullable: true),
                    OPAK_POJEMNIK_OPIS = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    OPAK_INNE = table.Column<int>(type: "int", nullable: true),
                    OPAK_INNE_OPIS = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    SZCZ_OPIS_NIEZG = table.Column<string>(type: "text", nullable: true),
                    OPAK_ZEWN_USZK = table.Column<int>(type: "int", nullable: true),
                    DOST_DO_TOWARU = table.Column<int>(type: "int", nullable: true),
                    RODZAJ_NIEZG = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    RODZAJ_NIEZG_OPIS = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    DOKUM_ZDJ = table.Column<int>(type: "int", nullable: true),
                    DOKUM_ZDJ_ILOSC = table.Column<int>(type: "int", nullable: true),
                    DOKUM_ZDJ_OPIS = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    ZABEZPIECZONO = table.Column<int>(type: "int", nullable: true),
                    ZABEZPIECZONO_OPIS = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    ZABEZPIECZONO_INNE = table.Column<int>(type: "int", nullable: true),
                    ZABEZPIECZONO_INNE_OPIS = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    UWAGI = table.Column<string>(type: "text", nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    SYMBOL_USZK = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    OPIS_USZK = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    OPIS_USZK_UZUP = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    MAGAZYN_ZDARZENIA_ID = table.Column<int>(type: "int", nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    GODZ_PROT = table.Column<DateTime>(type: "datetime", nullable: true),
                    OBJ = table.Column<double>(type: "float", nullable: true),
                    WARUNKI_DOSTAWY = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PRZESYLKI_PROT_NIEZG", x => x.ID_PRZESYLKI_PROT_NIEZG);
                });

            migrationBuilder.CreateTable(
                name: "PRZESYLKI_PRZELICZNIKI",
                columns: table => new
                {
                    ID_PRZESYLKI_PRZELICZNIKI = table.Column<int>(type: "int", nullable: false),
                    PRZESYLKI_ID = table.Column<int>(type: "int", nullable: true),
                    WARTOSC_Z = table.Column<int>(type: "int", nullable: true),
                    JM_Z = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    WARTOSC_DO = table.Column<int>(type: "int", nullable: true),
                    JM_DO = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    JT = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PRZESYLKI_PRZELICZNIKI", x => x.ID_PRZESYLKI_PRZELICZNIKI);
                });

            migrationBuilder.CreateTable(
                name: "PRZESYLKI_RAIL",
                columns: table => new
                {
                    ID_PRZESYLKI = table.Column<int>(type: "int", nullable: false),
                    ALL_IN = table.Column<int>(type: "int", nullable: true),
                    UBEZP_PROC_STAWKA = table.Column<double>(type: "float", nullable: true),
                    UBEZP_PROC = table.Column<double>(type: "float", nullable: true),
                    UBEZPIECZYCIEL_ID = table.Column<int>(type: "int", nullable: true),
                    UBEZPIECZYCIEL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    WAGA_DEKL = table.Column<double>(type: "float", nullable: true),
                    WAGA_RZ = table.Column<double>(type: "float", nullable: true),
                    OBJ_DEKL = table.Column<double>(type: "float", nullable: true),
                    OBJ_RZ = table.Column<double>(type: "float", nullable: true),
                    ILOSC_RZ = table.Column<double>(type: "float", nullable: true),
                    WAGA_DO_OBL = table.Column<double>(type: "float", nullable: true),
                    WAGA_OBJ = table.Column<double>(type: "float", nullable: true),
                    WAGA_PLATNA = table.Column<double>(type: "float", nullable: true),
                    WeightConversionId = table.Column<int>(type: "int", nullable: true),
                    INCO_MIEJSCE = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PRZESYLKI_RAIL", x => x.ID_PRZESYLKI);
                },
                comment: "Rozszerzenie tabeli PRZESYLKI - relacja 1:1 z tabelą PRZESYLKI");

            migrationBuilder.CreateTable(
                name: "PRZESYLKI_SEA",
                columns: table => new
                {
                    ID_PRZESYLKI = table.Column<int>(type: "int", nullable: false),
                    HBL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    MBL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    BUYERS_CONSOL = table.Column<int>(type: "int", nullable: true),
                    AS_AGREED = table.Column<int>(type: "int", nullable: true),
                    ALL_IN = table.Column<int>(type: "int", nullable: true),
                    UBEZP_PROC_STAWKA = table.Column<double>(type: "float", nullable: true),
                    UBEZP_PROC = table.Column<double>(type: "float", nullable: true),
                    WAGA_DEKL = table.Column<double>(type: "float", nullable: true),
                    WAGA_RZ = table.Column<double>(type: "float", nullable: true),
                    OBJ_DEKL = table.Column<double>(type: "float", nullable: true),
                    OBJ_RZ = table.Column<double>(type: "float", nullable: true),
                    ILOSC_RZ = table.Column<double>(type: "float", nullable: true),
                    WAGA_DO_OBL = table.Column<double>(type: "float", nullable: true),
                    WAGA_OBJ = table.Column<double>(type: "float", nullable: true),
                    WAGA_PLATNA = table.Column<double>(type: "float", nullable: true),
                    INCO_MIEJSCE = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true),
                    UWAGI_COLOADER = table.Column<string>(type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    DATA_GOTOWOSCI = table.Column<DateTime>(type: "datetime", nullable: true),
                    KONOSAMENT = table.Column<int>(type: "int", nullable: true),
                    UBEZPIECZYCIEL_ID = table.Column<int>(type: "int", nullable: true),
                    UBEZPIECZYCIEL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PRZESYLKI_SEA", x => x.ID_PRZESYLKI);
                },
                comment: "Rozszerzenie tabeli PRZESYLKI - relacja 1:1 z tabelą PRZESYLKI");

            migrationBuilder.CreateTable(
                name: "PRZESYLKI_WYM_TABORU",
                columns: table => new
                {
                    ID_PRZESYLKI_WYM_TABORU = table.Column<int>(type: "int", nullable: false),
                    PRZESYLKI_ID = table.Column<int>(type: "int", nullable: true),
                    TYP = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "WYM.WYP, TYP.ZAB, SP.LAD"),
                    NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    ILOSC = table.Column<int>(type: "int", nullable: true),
                    ZAMIENNIK = table.Column<int>(type: "int", nullable: true),
                    NIE_BLOKUJ = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PRZESYLKI_WYM_TABORU", x => x.ID_PRZESYLKI_WYM_TABORU);
                });

            migrationBuilder.CreateTable(
                name: "PRZESYLKI_ZA_WY",
                columns: table => new
                {
                    ID_PRZESYLKI_ZA_WY = table.Column<int>(type: "int", nullable: false),
                    TYP = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    PRZESYLKI_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TELEFONY = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_RZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_RZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    DOD_OPIS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DOD_OPIS_RZ = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPOZNIENIE = table.Column<double>(type: "float", nullable: true),
                    OPOZNIENIE_POWOD = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    LADUNEK = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    TEMP_PRZEWOZU_O = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    LICZNIK = table.Column<double>(type: "float", nullable: true),
                    WAGA = table.Column<double>(type: "float", nullable: true),
                    JEDN_WAGI = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    PALETY = table.Column<double>(type: "float", nullable: true),
                    PALETY_WYM = table.Column<double>(type: "float", nullable: true),
                    JM = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PALIWO = table.Column<double>(type: "float", nullable: true, comment: "zużyte paliwo w trakcie zdarzenia"),
                    WYJAZD_ID = table.Column<int>(type: "int", nullable: true),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    GEO_LONGI = table.Column<double>(type: "float", nullable: true),
                    GEO_LAT = table.Column<double>(type: "float", nullable: true),
                    INNE_UWAGI = table.Column<string>(type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    WYSYLAC_UWAGI = table.Column<int>(type: "int", nullable: true),
                    CZAS_TRWANIA = table.Column<double>(type: "float", nullable: true),
                    MAX_OPOZN = table.Column<double>(type: "float", nullable: true),
                    LIST_LINIOWY_ID = table.Column<int>(type: "int", nullable: true),
                    DATA_RZ_K = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_RZ_K = table.Column<DateTime>(type: "datetime", nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    PUSTY = table.Column<int>(type: "int", nullable: true),
                    GODZ_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_RZ_P = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_RZ_P = table.Column<DateTime>(type: "datetime", nullable: true),
                    LADUNEK_ID = table.Column<int>(type: "int", nullable: true),
                    WAGA_ZESTAWU = table.Column<double>(type: "float", nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    TEMP_PRZEWOZU_O_RZ = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    WAGA_RZ = table.Column<double>(type: "float", nullable: true),
                    KONTENER_ID = table.Column<int>(type: "int", nullable: true),
                    KONTENER = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KONTENER2_ID = table.Column<int>(type: "int", nullable: true),
                    KONTENER2 = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    GEO_LONGI_RZ = table.Column<double>(type: "float", nullable: true),
                    GEO_LAT_RZ = table.Column<double>(type: "float", nullable: true),
                    PALIWO_LICZNIK = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')", comment: "końcowy stan licznika paliwa"),
                    PIETROWANIE = table.Column<int>(type: "int", nullable: true),
                    GF_DEF_ID = table.Column<int>(type: "int", nullable: true, comment: "id definicji geofencingu (referencja do tabeli GF_DEF)"),
                    ILOSC_RZ = table.Column<double>(type: "float", nullable: true),
                    DYSP_GODZ_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DYSP_GODZ_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    KOR_GODZ = table.Column<int>(type: "int", nullable: true),
                    TYP_ODCINKA = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    DLUGOSC = table.Column<double>(type: "float", nullable: true),
                    WYSOKOSC = table.Column<double>(type: "float", nullable: true),
                    SZEROKOSC = table.Column<double>(type: "float", nullable: true),
                    OBJ = table.Column<double>(type: "float", nullable: true),
                    LDM = table.Column<double>(type: "float", nullable: true),
                    AIR_SYMBOL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    AIR_NR_LOTU = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    SEA_SYMBOL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    EMAIL = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true),
                    KONTAKT = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    DATA_RZ_W = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_RZ_W = table.Column<DateTime>(type: "datetime", nullable: true),
                    REF_1 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_3 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_4 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_5 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    RAIL_SYMBOL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    AWIZACJA_PRZED = table.Column<DateTime>(type: "datetime", nullable: true),
                    ETA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DisableETA = table.Column<int>(type: "int", nullable: true, comment: "Wyłączenie analizy ETA")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PRZESYLKI_ZA_WY", x => x.ID_PRZESYLKI_ZA_WY);
                });

            migrationBuilder.CreateTable(
                name: "PW_KARTA",
                columns: table => new
                {
                    ID_PW_KARTA = table.Column<int>(type: "int", nullable: false),
                    STATUS = table.Column<short>(type: "smallint", nullable: true),
                    ID_WYJAZDY = table.Column<int>(type: "int", nullable: true),
                    ID_SFM_SYSTEM = table.Column<int>(type: "int", nullable: true, comment: "ID systemu telematycznego"),
                    ID_SFM_TERM = table.Column<int>(type: "int", nullable: true),
                    TYP_TERM = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    ID_TABOR = table.Column<int>(type: "int", nullable: true),
                    ID_KIEROWCY = table.Column<int>(type: "int", nullable: true),
                    DT_SAVE = table.Column<DateTime>(type: "datetime", nullable: true),
                    DT_CREATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    DT_START = table.Column<DateTime>(type: "datetime", nullable: true),
                    DT_STOP = table.Column<DateTime>(type: "datetime", nullable: true),
                    EXT_DEVICE = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    EXT_DRIVER = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    EXT_ID = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    EXT_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    EXT_INFO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    EXT_DATA = table.Column<string>(type: "text", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PW_KARTA", x => x.ID_PW_KARTA);
                });

            migrationBuilder.CreateTable(
                name: "PW_KARTA_POZ",
                columns: table => new
                {
                    ID_PW_KARTA_POZ = table.Column<int>(type: "int", nullable: false),
                    STATUS = table.Column<short>(type: "smallint", nullable: true),
                    ID_PW_KARTA = table.Column<int>(type: "int", nullable: true),
                    ID_WYJAZDY_ZDARZENIA = table.Column<int>(type: "int", nullable: true),
                    ID_SFM_COSTS = table.Column<int>(type: "int", nullable: true),
                    ID_SFM_MSG = table.Column<int>(type: "int", nullable: true),
                    DT_SAVE = table.Column<DateTime>(type: "datetime", nullable: true),
                    DT_START = table.Column<DateTime>(type: "datetime", nullable: true),
                    DT_STOP = table.Column<DateTime>(type: "datetime", nullable: true),
                    EXT_ID = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    EXT_CODE = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    EXT_DATA = table.Column<string>(type: "text", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PW_KARTA_POZ", x => x.ID_PW_KARTA_POZ);
                });

            migrationBuilder.CreateTable(
                name: "PW_KARTA_POZ_ATR",
                columns: table => new
                {
                    ID_PW_KARTA_POZ_ATR = table.Column<int>(type: "int", nullable: false),
                    STATUS = table.Column<short>(type: "smallint", nullable: true),
                    ID_PW_KARTA_POZ = table.Column<int>(type: "int", nullable: true),
                    EXT_CODE = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    EXT_VALUE = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    EXT_DATA = table.Column<string>(type: "text", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PW_KARTA_POZ_ATR", x => x.ID_PW_KARTA_POZ_ATR);
                });

            migrationBuilder.CreateTable(
                name: "RAMKI",
                columns: table => new
                {
                    ID_RAMKI = table.Column<int>(type: "int", nullable: false),
                    ID_KOMUNIKATY = table.Column<int>(type: "int", nullable: true),
                    TERMINAL_IP = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true),
                    TERMINAL_PORT = table.Column<int>(type: "int", nullable: true),
                    TYP = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    RODZAJ = table.Column<int>(type: "int", nullable: true),
                    DT = table.Column<DateTime>(type: "datetime", nullable: true),
                    LP = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    TRESC = table.Column<string>(type: "varchar(700)", unicode: false, maxLength: 700, nullable: true),
                    WYSLANO = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RAMKI", x => x.ID_RAMKI);
                });

            migrationBuilder.CreateTable(
                name: "RAPORTY_KASOWE",
                columns: table => new
                {
                    ID_RAPORTY_KASOWE = table.Column<int>(type: "int", nullable: false),
                    RAP_KAS_NR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    RAP_KAS_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    RAP_KAS_ROK = table.Column<int>(type: "int", nullable: true),
                    RAP_KAS_MIES = table.Column<int>(type: "int", nullable: true),
                    KASA_ID = table.Column<int>(type: "int", nullable: true),
                    KASA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    STATUS = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    STAN_POCZATKOWY = table.Column<double>(type: "float", nullable: true),
                    STAN_WN = table.Column<double>(type: "float", nullable: true),
                    STAN_MA = table.Column<double>(type: "float", nullable: true),
                    SALDO = table.Column<double>(type: "float", nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    EKSPORT_FK_ID = table.Column<int>(type: "int", nullable: true),
                    ZAMKN_BEZ_SPEC = table.Column<int>(type: "int", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RAPORTY_KASOWE", x => x.ID_RAPORTY_KASOWE);
                });

            migrationBuilder.CreateTable(
                name: "RAPORTY_KASOWE_OPER",
                columns: table => new
                {
                    ID_RAPORTY_KASOWE_OPER = table.Column<int>(type: "int", nullable: false),
                    NR_OPERACJI = table.Column<int>(type: "int", nullable: true),
                    DOWOD_NR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DOWOD_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    DOWOD_ROK = table.Column<int>(type: "int", nullable: true),
                    DOWOD_MIES = table.Column<int>(type: "int", nullable: true),
                    RAPORT_KASOWY_ID = table.Column<int>(type: "int", nullable: true),
                    RAPORT_KASOWY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    RODZAJ = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    TYP = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KONTO = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TYP_LISTY_K = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    KWOTA = table.Column<double>(type: "float", nullable: true),
                    KWOTA_PLN = table.Column<double>(type: "float", nullable: true),
                    KURS_WYMIANY = table.Column<double>(type: "float", nullable: true),
                    KLIENT_ID = table.Column<int>(type: "int", nullable: true),
                    KLIENT_SYMBOL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KLIENT_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KLIENT_ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KLIENT_KOD = table.Column<string>(type: "varchar(6)", unicode: false, maxLength: 6, nullable: true),
                    KLIENT_MIASTO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KIEROWCA_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    FAKTURA_ID = table.Column<int>(type: "int", nullable: true),
                    FAKTURA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ZALICZKA_ID = table.Column<int>(type: "int", nullable: true),
                    ZALICZKA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ROZL_ZAL = table.Column<int>(type: "int", nullable: true),
                    ROZL_COD = table.Column<int>(type: "int", nullable: true),
                    PRZESYLKI_ID = table.Column<int>(type: "int", nullable: true),
                    PRZESYLKI = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DELEGACJA = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ZAL = table.Column<int>(type: "int", nullable: true),
                    ROZN_KURSOWA = table.Column<double>(type: "float", nullable: true),
                    KURS_UZGODNIONY = table.Column<int>(type: "int", nullable: true),
                    WALUTA_B = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KURSY_WALUT_B_ID = table.Column<int>(type: "int", nullable: true),
                    NR_TABELI_KURSOW_B = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    DATA_TABELI_KURSOW_B = table.Column<DateTime>(type: "datetime", nullable: true),
                    KURSY_WALUT_ID = table.Column<int>(type: "int", nullable: true),
                    NR_TABELI_KURSOW = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    DATA_TABELI_KURSOW = table.Column<DateTime>(type: "datetime", nullable: true),
                    KURS_WALUTY_B = table.Column<double>(type: "float", nullable: true),
                    KURS_WALUTY = table.Column<double>(type: "float", nullable: true),
                    KWOTA_B = table.Column<double>(type: "float", nullable: true),
                    INFO = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RAPORTY_KASOWE_OPER", x => x.ID_RAPORTY_KASOWE_OPER);
                });

            migrationBuilder.CreateTable(
                name: "RAPORTY_KASOWE_OPER_SPEC",
                columns: table => new
                {
                    ID_RAPORTY_KASOWE_OPER_SPEC = table.Column<int>(type: "int", nullable: false),
                    RAPORTY_KASOWE_OPER_ID = table.Column<int>(type: "int", nullable: true),
                    NOMINAL = table.Column<double>(type: "float", nullable: true),
                    ILOSC = table.Column<int>(type: "int", nullable: true),
                    SUMA = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RAPORTY_KASOWE_OPER_SPEC", x => x.ID_RAPORTY_KASOWE_OPER_SPEC);
                });

            migrationBuilder.CreateTable(
                name: "RAPORTY_KASOWE_SPEC",
                columns: table => new
                {
                    ID_RAPORTY_KASOWE_SPEC = table.Column<int>(type: "int", nullable: false),
                    RAPORT_KASOWY_ID = table.Column<int>(type: "int", nullable: true),
                    NOMINAL = table.Column<double>(type: "float", nullable: true),
                    ILOSC = table.Column<int>(type: "int", nullable: true),
                    SUMA = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RAPORTY_KASOWE_SPEC", x => x.ID_RAPORTY_KASOWE_SPEC);
                });

            migrationBuilder.CreateTable(
                name: "RCP",
                columns: table => new
                {
                    ID_RCP = table.Column<int>(type: "int", nullable: false),
                    ID_FIRMA = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ID_KIEROWCY = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ID_OKRES_ROZLICZENIOWY = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    TYP_DNIA = table.Column<int>(type: "int", nullable: true),
                    NR_TYGODNIA = table.Column<int>(type: "int", nullable: true),
                    NR_DNIA_TYGODNIA = table.Column<int>(type: "int", nullable: true),
                    NIEOBECNOSC = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    HARMONOGRAM = table.Column<double>(type: "float", nullable: true),
                    G_ROZPOCZECIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    G_ROBOCZE = table.Column<DateTime>(type: "datetime", nullable: true),
                    G_NOCNE = table.Column<DateTime>(type: "datetime", nullable: true),
                    G_DYZUR = table.Column<DateTime>(type: "datetime", nullable: true),
                    G_DYZUR100 = table.Column<DateTime>(type: "datetime", nullable: true),
                    NADGODZINY = table.Column<DateTime>(type: "datetime", nullable: true),
                    NADGODZINY_100 = table.Column<DateTime>(type: "datetime", nullable: true),
                    NADGODZINY_ZREDUK = table.Column<DateTime>(type: "datetime", nullable: true),
                    NADGODZINY_100_ZREDUK = table.Column<DateTime>(type: "datetime", nullable: true),
                    G_UDZIELONEWOLNE = table.Column<DateTime>(type: "datetime", nullable: true),
                    PRZEKIEROWANY = table.Column<short>(type: "smallint", nullable: true),
                    PRZEKIEROWANY_DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    ID_TACHO = table.Column<int>(type: "int", nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(250)", unicode: false, maxLength: 250, nullable: true),
                    ID_RCP_NAG = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    M_ROBOCZE = table.Column<int>(type: "int", nullable: true),
                    M_NOCNE = table.Column<int>(type: "int", nullable: true),
                    M_DYZUR = table.Column<int>(type: "int", nullable: true),
                    M_DYZUR100 = table.Column<int>(type: "int", nullable: true),
                    M_NADGODZINY = table.Column<int>(type: "int", nullable: true),
                    M_NADGODZINY_100 = table.Column<int>(type: "int", nullable: true),
                    M_NADGODZINY_ZREDUK = table.Column<int>(type: "int", nullable: true),
                    M_NADGODZINY_100_ZREDUK = table.Column<int>(type: "int", nullable: true),
                    KOD_NIEOBECNOSCI = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    G_ZAKONCZENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    MNIEJ_NIZ_24H = table.Column<int>(type: "int", nullable: true),
                    M_UDZIELONEWOLNE = table.Column<int>(type: "int", nullable: true),
                    M_ODEBRANE = table.Column<int>(type: "int", nullable: true),
                    M_NADGODZINYODEBRANE_50 = table.Column<int>(type: "int", nullable: true),
                    M_NADGODZINYODEBRANE_100 = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RCP", x => x.ID_RCP);
                });

            migrationBuilder.CreateTable(
                name: "RCP_ANALIZA",
                columns: table => new
                {
                    ID_RCP_ANALIZA = table.Column<int>(type: "int", nullable: false),
                    ID_FIRMA = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ID_KIEROWCY = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ID_OKRES_ROZLICZENIOWY = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ID_RCP_NAG = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    TRYB = table.Column<int>(type: "int", nullable: true),
                    TRYB_2 = table.Column<int>(type: "int", nullable: true),
                    DATACZAS_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATACZAS_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    TRYB_3 = table.Column<int>(type: "int", nullable: true),
                    TABOR = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    M_TRWANIE = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RCP_ANALIZA", x => x.ID_RCP_ANALIZA);
                });

            migrationBuilder.CreateTable(
                name: "RCP_BLEDY",
                columns: table => new
                {
                    ID_RCP_BLEDY = table.Column<int>(type: "int", nullable: false),
                    ID_FIRMA = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ID_KIEROWCY = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ID_OKRES_ROZLICZENIOWY = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ID_RCP_NAG = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    OPIS = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RCP_BLEDY", x => x.ID_RCP_BLEDY);
                });

            migrationBuilder.CreateTable(
                name: "RCP_DODATKI",
                columns: table => new
                {
                    ID_RCP_DODATKI = table.Column<int>(type: "int", nullable: false),
                    ID_FIRMA = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ID_KIEROWCY = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ID_OKRES_ROZLICZENIOWY = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ID_RCP_NAG = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    OKRES_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    OKRES_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    NOCNE_GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    NOCNE_STAWKA = table.Column<double>(type: "float", nullable: true),
                    NOCNE_KWOTA = table.Column<double>(type: "float", nullable: true),
                    DYZUR50_GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    DYZUR50_STAWKA = table.Column<double>(type: "float", nullable: true),
                    DYZUR50_KWOTA = table.Column<double>(type: "float", nullable: true),
                    DYZUR100_GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    DYZUR100_STAWKA = table.Column<double>(type: "float", nullable: true),
                    DYZUR100_KWOTA = table.Column<double>(type: "float", nullable: true),
                    NADGODZINY50_GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    NADGODZINY50_STAWKA = table.Column<double>(type: "float", nullable: true),
                    NADGODZINY50_KWOTA = table.Column<double>(type: "float", nullable: true),
                    NADGODZINY100_GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    NADGODZINY100_STAWKA = table.Column<double>(type: "float", nullable: true),
                    NADGODZINY100_KWOTA = table.Column<double>(type: "float", nullable: true),
                    PONADNORMA_GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    PONADNORMA_STAWKA = table.Column<double>(type: "float", nullable: true),
                    PONADNORMA_KWOTA = table.Column<double>(type: "float", nullable: true),
                    NORMA_DONE = table.Column<DateTime>(type: "datetime", nullable: true),
                    NORMA_GODZIN = table.Column<int>(type: "int", nullable: true),
                    ALL_KWOTA = table.Column<double>(type: "float", nullable: true),
                    RYCZALT_DYZUR = table.Column<double>(type: "float", nullable: true),
                    RYCZALT_NOCKI = table.Column<double>(type: "float", nullable: true),
                    RYCZALT_NADGODZINY = table.Column<double>(type: "float", nullable: true),
                    WYPLATA_DYZUR = table.Column<double>(type: "float", nullable: true),
                    WYPLATA_NOCKI = table.Column<double>(type: "float", nullable: true),
                    WYPLATA_NADGODZINY = table.Column<double>(type: "float", nullable: true),
                    NORMA_DNI_DONE = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RCP_DODATKI", x => x.ID_RCP_DODATKI);
                });

            migrationBuilder.CreateTable(
                name: "RCP_HISTORIA",
                columns: table => new
                {
                    ID_RCP_HISTORIA = table.Column<int>(type: "int", nullable: false),
                    ID_RCP_NAG = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    UZYTKOWNIK_ID = table.Column<int>(type: "int", nullable: true),
                    APP_VER = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DT = table.Column<DateTime>(type: "datetime", nullable: true),
                    ID_OKRES_ROZLICZENIOWY = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RCP_HISTORIA", x => x.ID_RCP_HISTORIA);
                });

            migrationBuilder.CreateTable(
                name: "RCP_NAG",
                columns: table => new
                {
                    ID_RCP_NAG = table.Column<int>(type: "int", nullable: false),
                    ID_FIRMA = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ID_KIEROWCY = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ID_OKRES_ROZLICZENIOWY = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    APP_VER = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    G_WYPRACOWANE = table.Column<DateTime>(type: "datetime", nullable: true),
                    ROZLICZENIE_UWAGI = table.Column<string>(type: "text", nullable: true),
                    ANALIZA_DANE = table.Column<byte[]>(type: "image", nullable: true),
                    G_POZOSTALE = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZAKONCZONE = table.Column<int>(type: "int", nullable: true),
                    ZAKONCZONE_DT = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZAKONCZONE_USER_ID = table.Column<int>(type: "int", nullable: true),
                    ZAKONCZONE_USER_NAME = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RCP_NAG", x => x.ID_RCP_NAG);
                });

            migrationBuilder.CreateTable(
                name: "REJ_KOSZT_OG",
                columns: table => new
                {
                    ID_REJ_KOSZT_OG = table.Column<int>(type: "int", nullable: false),
                    ROK = table.Column<int>(type: "int", nullable: true),
                    MIES = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_REJ_KOSZT_OG", x => x.ID_REJ_KOSZT_OG);
                });

            migrationBuilder.CreateTable(
                name: "REJ_KOSZT_OG_POZ",
                columns: table => new
                {
                    ID_REJ_KOSZT_OG_POZ = table.Column<int>(type: "int", nullable: false),
                    REJ_KOSZT_OG_ID = table.Column<int>(type: "int", nullable: true),
                    FAKTURA_ID = table.Column<int>(type: "int", nullable: true),
                    RODZ_KOSZTOW = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KWOTA = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_REJ_KOSZT_OG_POZ", x => x.ID_REJ_KOSZT_OG_POZ);
                });

            migrationBuilder.CreateTable(
                name: "REKL_KOSZTY_ODSZKOD",
                columns: table => new
                {
                    ID_REKL_KOSZTY_ODSZKOD = table.Column<int>(type: "int", nullable: false),
                    REKLAMACJE_ID = table.Column<int>(type: "int", nullable: true),
                    TYP_KOSZTU_ID = table.Column<int>(type: "int", nullable: true),
                    KWOTA = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')", comment: "Kwota kosztu"),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, defaultValueSql: "('PLN')", comment: "Waluta kosztu"),
                    KWOTA_K = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')", comment: "Kwota kosztu w walucie kalkulacji"),
                    WALUTA_K = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, defaultValueSql: "('EUR')", comment: "Waluta kalkulacji kosztu"),
                    KURS_WG_DATY = table.Column<DateTime>(type: "datetime", nullable: true),
                    TYP_TAB = table.Column<int>(type: "int", nullable: true),
                    TYP_KURS = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    KURS_WYM = table.Column<double>(type: "float", nullable: true),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: true),
                    KONTRAH = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_REKL_KOSZTY_ODSZKOD", x => x.ID_REKL_KOSZTY_ODSZKOD);
                });

            migrationBuilder.CreateTable(
                name: "REKL_KOSZTY_ODSZKOD_TYP",
                columns: table => new
                {
                    ID_REKL_KOSZTY_ODSZKOD_TYP = table.Column<int>(type: "int", nullable: false),
                    KOD = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    NAZWA = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    SYSTEMOWY = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_REKL_KOSZTY_ODSZKOD_TYP", x => x.ID_REKL_KOSZTY_ODSZKOD_TYP);
                });

            migrationBuilder.CreateTable(
                name: "REKL_KTO_WINNY",
                columns: table => new
                {
                    ID_REKL_KTO_WINNY = table.Column<int>(type: "int", nullable: false),
                    KOD = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    NAZWA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_REKL_KTO_WINNY", x => x.ID_REKL_KTO_WINNY);
                });

            migrationBuilder.CreateTable(
                name: "REKL_RODZ_USZK",
                columns: table => new
                {
                    ID_REKL_RODZ_USZK = table.Column<int>(type: "int", nullable: false),
                    KOD = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    WAZNOSC = table.Column<int>(type: "int", nullable: true),
                    GRUPA_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_REKL_RODZ_USZK", x => x.ID_REKL_RODZ_USZK);
                });

            migrationBuilder.CreateTable(
                name: "REKL_RODZ_USZK_GR",
                columns: table => new
                {
                    ID_REKL_RODZ_USZK_GR = table.Column<int>(type: "int", nullable: false),
                    KOD = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_REKL_RODZ_USZK_GR", x => x.ID_REKL_RODZ_USZK_GR);
                });

            migrationBuilder.CreateTable(
                name: "REKL_SCHEMAT",
                columns: table => new
                {
                    ID_REKL_SCHEMAT = table.Column<int>(type: "int", nullable: false),
                    NAZWA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_REKL_SCHEMAT", x => x.ID_REKL_SCHEMAT);
                });

            migrationBuilder.CreateTable(
                name: "REKL_SCHEMAT_POZ",
                columns: table => new
                {
                    ID_REKL_SCHEMAT_POZ = table.Column<int>(type: "int", nullable: false),
                    REKL_SCHEMAT_ID = table.Column<int>(type: "int", nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    AKCJA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NAZWA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DZIEN = table.Column<int>(type: "int", nullable: true),
                    PRACOWNIK_ID = table.Column<int>(type: "int", nullable: true),
                    PRACOWNIK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_REKL_SCHEMAT_POZ", x => x.ID_REKL_SCHEMAT_POZ);
                });

            migrationBuilder.CreateTable(
                name: "REKLAMACJE",
                columns: table => new
                {
                    ID_REKLAMACJE = table.Column<int>(type: "int", nullable: false),
                    AKTYWNA_ZAKLADKA = table.Column<int>(type: "int", nullable: true),
                    REKL_SCHEMAT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REKL_SCHEMAT_ID = table.Column<int>(type: "int", nullable: true),
                    NIEZGODNOSC = table.Column<int>(type: "int", nullable: true),
                    DATA_NIEZG = table.Column<DateTime>(type: "datetime", nullable: true),
                    NR_NIEZG = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    NR_NIEZG_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    NR_NIEZG_ROK = table.Column<int>(type: "int", nullable: true),
                    NR_NIEZG_MIES = table.Column<int>(type: "int", nullable: true),
                    REKLAMACJA = table.Column<int>(type: "int", nullable: true),
                    DATA_REKL = table.Column<DateTime>(type: "datetime", nullable: true),
                    NR_REKL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    NR_REKL_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    NR_REKL_ROK = table.Column<int>(type: "int", nullable: true),
                    NR_REKL_MIES = table.Column<int>(type: "int", nullable: true),
                    KTO_ZGLASZA = table.Column<int>(type: "int", nullable: true),
                    TYP = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    STAN = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    STATUS = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    OBIEKT_TYP = table.Column<int>(type: "int", nullable: true),
                    OBIEKT_ID = table.Column<int>(type: "int", nullable: true),
                    OBIEKT_NR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    VIN = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MARKA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MODEL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    LISTY_LINIOWE_ID = table.Column<int>(type: "int", nullable: true),
                    LISTY_LINIOWE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PRACOWNIK_ID = table.Column<int>(type: "int", nullable: true),
                    PRACOWNIK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KLIENT_ID = table.Column<int>(type: "int", nullable: true),
                    KLIENT = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KLIENT_TEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KLIENT_PRACOWNIK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PRZEWOZNIK_ID = table.Column<int>(type: "int", nullable: true),
                    PRZEWOZNIK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    PRZEWOZNIK_TEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PRZEWOZNIK_PRACOWNIK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SAMOCHOD_ID = table.Column<int>(type: "int", nullable: true),
                    SAMOCHOD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SAMOCHOD_NR_B = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NACZEPA_ID = table.Column<int>(type: "int", nullable: true),
                    NACZEPA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NACZEPA_NR_B = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KIEROWCA_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KIEROWCA_TEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KIEROWCA2_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KIEROWCA2_TEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TECZKA_ID = table.Column<int>(type: "int", nullable: true),
                    TECZKA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DOKUM_ZDJ = table.Column<int>(type: "int", nullable: true),
                    DOKUM_ZDJ_ILOSC = table.Column<int>(type: "int", nullable: true),
                    DOKUM_ZDJ_OPIS = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    OPIS = table.Column<string>(type: "text", nullable: true),
                    UWAGI = table.Column<string>(type: "text", nullable: true),
                    WNIOSKI = table.Column<string>(type: "text", nullable: true),
                    KTO_WINNY = table.Column<int>(type: "int", nullable: true),
                    KLIENT_WINNY_ID = table.Column<int>(type: "int", nullable: true),
                    KLIENT_WINNY = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KWOTA_ROSZCZENIA = table.Column<double>(type: "float", nullable: true),
                    KWOTA_ROSZCZENIA_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    TWORZ_SZKODE = table.Column<int>(type: "int", nullable: true),
                    SZKODY_ID = table.Column<int>(type: "int", nullable: true),
                    SZKODY = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DATA_ZDARZENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_ZDARZENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    REKL_ZASADNA = table.Column<int>(type: "int", nullable: true),
                    REF_1 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_3 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_4 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_5 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    FAKTURY_TYP = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    FAKTURY_ID = table.Column<int>(type: "int", nullable: true),
                    FAKTURY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DATA_ZAK_OCZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_ZAK_REKL = table.Column<DateTime>(type: "datetime", nullable: true),
                    KTO_WINNY_NAZWA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SZKODY_MIEJSCE = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: true),
                    LOKALIZACJA_ODP = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    PACZKA_ID = table.Column<int>(type: "int", nullable: true),
                    PACZKA_NR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OPIS_TOWARU = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    DATA_DECYZJI = table.Column<DateTime>(type: "datetime", nullable: true),
                    ODWOLANIE_ID = table.Column<int>(type: "int", nullable: true),
                    ODWOLYWANA_ID = table.Column<int>(type: "int", nullable: true),
                    NR_ODWOLANIA_KOLEJNY = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Nr odwołania. Pierwotna reklamacja ma 0"),
                    KLIENT_NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    KLIENT_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    POLISY_ID = table.Column<int>(type: "int", nullable: true),
                    POLISY = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    SPEDYTOR_ID = table.Column<int>(type: "int", nullable: true),
                    SPEDYTOR = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KWOTA_NA_PRZEWOZNIKA = table.Column<double>(type: "float", nullable: true),
                    KWOTA_NA_PRZEWOZNIKA_WAL = table.Column<double>(type: "float", nullable: true),
                    JAK_WESZLO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_ZEWN = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SYS_ZEWN_REF = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    Jest_CARGO = table.Column<int>(type: "int", nullable: true),
                    MAIL_KONTAKT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_REKLAMACJE", x => x.ID_REKLAMACJE);
                });

            migrationBuilder.CreateTable(
                name: "REKLAMACJE_FAKTURY_POZ",
                columns: table => new
                {
                    ID_REKLAMACJE_FAKTURY_POZ = table.Column<int>(type: "int", nullable: false),
                    REKLAMACJE_ID = table.Column<int>(type: "int", nullable: true),
                    FAKTURY_ID = table.Column<int>(type: "int", nullable: true),
                    FAKTURY_POZYCJE_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_REKLAMACJE_FAKTURY_POZ", x => x.ID_REKLAMACJE_FAKTURY_POZ);
                });

            migrationBuilder.CreateTable(
                name: "REKLAMACJE_USZK",
                columns: table => new
                {
                    ID_REKLAMACJE_USZK = table.Column<int>(type: "int", nullable: false),
                    REKLAMACJE_ID = table.Column<int>(type: "int", nullable: true),
                    REKL_RODZ_USZK_ID = table.Column<int>(type: "int", nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    KOD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    WAGA = table.Column<double>(type: "float", nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    WAZNOSC = table.Column<int>(type: "int", nullable: true),
                    KOR = table.Column<int>(type: "int", nullable: true),
                    DATA_WYK = table.Column<DateTime>(type: "datetime", nullable: true),
                    ILOSC = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_REKLAMACJE_USZK", x => x.ID_REKLAMACJE_USZK);
                });

            migrationBuilder.CreateTable(
                name: "REKLAMACJE_ZAD",
                columns: table => new
                {
                    ID_REKLAMACJE_ZAD = table.Column<int>(type: "int", nullable: false),
                    REKLAMACJE_ID = table.Column<int>(type: "int", nullable: true),
                    REKL_SCHEMAT_ID = table.Column<int>(type: "int", nullable: true),
                    REKL_SCHEMAT_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    AKCJA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NAZWA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    TERMIN = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_REALIZACJI = table.Column<DateTime>(type: "datetime", nullable: true),
                    WYKONANE = table.Column<int>(type: "int", nullable: true),
                    PRACOWNIK_ID = table.Column<int>(type: "int", nullable: true),
                    PRACOWNIK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_REKLAMACJE_ZAD", x => x.ID_REKLAMACJE_ZAD);
                });

            migrationBuilder.CreateTable(
                name: "Remarks",
                columns: table => new
                {
                    RemarksId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ObjId = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    RecId = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    Type = table.Column<int>(type: "int", nullable: true),
                    RemarkText = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Remarks", x => x.RemarksId);
                });

            migrationBuilder.CreateTable(
                name: "ReportConfig",
                schema: "cr",
                columns: table => new
                {
                    ReportConfigId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    AppName = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    PrintOutSlot = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true),
                    PrintOutRemarks = table.Column<string>(type: "nvarchar(255)", maxLength: 255, nullable: true),
                    Location = table.Column<string>(type: "nvarchar(30)", maxLength: 30, nullable: true),
                    Department = table.Column<string>(type: "nvarchar(30)", maxLength: 30, nullable: true),
                    UserId = table.Column<int>(type: "int", nullable: true),
                    Language = table.Column<string>(type: "nvarchar(5)", maxLength: 5, nullable: true),
                    FormName = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true),
                    PrinterName = table.Column<string>(type: "nvarchar(255)", maxLength: 255, nullable: true),
                    Direction = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ReportConfig", x => x.ReportConfigId);
                });

            migrationBuilder.CreateTable(
                name: "ReportLabel",
                schema: "cr",
                columns: table => new
                {
                    ReportLabelId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ReportSlot = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true),
                    ReportInfo = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true),
                    LabelName = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true),
                    DefaultLabelText = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    System = table.Column<int>(type: "int", nullable: true),
                    CreateLanguageId = table.Column<int>(type: "int", nullable: true),
                    DictionaryId = table.Column<int>(type: "int", nullable: true),
                    TextId = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ReportLabel", x => x.ReportLabelId);
                });

            migrationBuilder.CreateTable(
                name: "ReportLanguage",
                schema: "cr",
                columns: table => new
                {
                    ReportLanguageId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    PrintOut = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PrintOutInfo = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    Language = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    Reference = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    Label = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ReportLanguage", x => x.ReportLanguageId);
                });

            migrationBuilder.CreateTable(
                name: "ReportSet",
                columns: table => new
                {
                    IdReportSet = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Code = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: false, defaultValueSql: "('')"),
                    Active = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    Description = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ReportSet", x => x.IdReportSet);
                });

            migrationBuilder.CreateTable(
                name: "ReportSetPos",
                columns: table => new
                {
                    IdReportSetPos = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ReportSetId = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    Position = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ReportName = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: false, defaultValueSql: "('')"),
                    SetPrinter = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ReportSetPos", x => x.IdReportSetPos);
                });

            migrationBuilder.CreateTable(
                name: "ReportSlot",
                schema: "cr",
                columns: table => new
                {
                    ReportSlotId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ReportSlot = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: false),
                    ApplicationId = table.Column<int>(type: "int", nullable: true),
                    ApplicationModuleId = table.Column<int>(type: "int", nullable: true),
                    DictionaryId = table.Column<int>(type: "int", nullable: true),
                    DefaultText = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ReportSlot", x => x.ReportSlotId);
                });

            migrationBuilder.CreateTable(
                name: "RequestBaseType",
                columns: table => new
                {
                    RequestBaseTypeId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true),
                    Description = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RequestBaseType", x => x.RequestBaseTypeId);
                });

            migrationBuilder.CreateTable(
                name: "RequestBaseType",
                schema: "rest",
                columns: table => new
                {
                    RequestBaseTypeId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true),
                    Description = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RequestBaseType", x => x.RequestBaseTypeId);
                });

            migrationBuilder.CreateTable(
                name: "RequestConfiguration",
                columns: table => new
                {
                    RequestConfigurationId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true),
                    RequestBaseTypeId = table.Column<int>(type: "int", nullable: true),
                    Enabled = table.Column<int>(type: "int", nullable: true),
                    RequestGroupId = table.Column<int>(type: "int", nullable: true),
                    RequestDataTypeId = table.Column<int>(type: "int", nullable: true),
                    RequestTypeId = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RequestConfiguration", x => x.RequestConfigurationId);
                });

            migrationBuilder.CreateTable(
                name: "RequestConfiguration",
                schema: "rest",
                columns: table => new
                {
                    RequestConfigurationId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true),
                    RequestBaseTypeId = table.Column<int>(type: "int", nullable: true),
                    Enabled = table.Column<int>(type: "int", nullable: true),
                    RequestGroupId = table.Column<int>(type: "int", nullable: true),
                    RequestDataTypeId = table.Column<int>(type: "int", nullable: true),
                    MasterConfigurationId = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RequestConfiguration", x => x.RequestConfigurationId);
                });

            migrationBuilder.CreateTable(
                name: "RequestConfigurationAccess",
                columns: table => new
                {
                    RequestConfigurationAccessId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    RequestConfigurationId = table.Column<int>(type: "int", nullable: true),
                    RequestProfileId = table.Column<int>(type: "int", nullable: true),
                    UserId = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RequestConfigurationAccess", x => x.RequestConfigurationAccessId);
                });

            migrationBuilder.CreateTable(
                name: "RequestConfigurationQuery",
                columns: table => new
                {
                    RequestConfigurationQueryId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    RequestConfigurationId = table.Column<int>(type: "int", nullable: true),
                    Sql = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Enabled = table.Column<int>(type: "int", nullable: true),
                    DataElement = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    KeyItem = table.Column<string>(type: "nvarchar(128)", maxLength: 128, nullable: true),
                    ReferenceKey = table.Column<string>(type: "nvarchar(128)", maxLength: 128, nullable: true),
                    KeyGenerator = table.Column<string>(type: "nvarchar(128)", maxLength: 128, nullable: true),
                    ReferenceItem = table.Column<string>(type: "nvarchar(128)", maxLength: 128, nullable: true),
                    QueryOrder = table.Column<int>(type: "int", nullable: true),
                    TableName = table.Column<string>(type: "nvarchar(128)", maxLength: 128, nullable: true),
                    RequestTypeId = table.Column<int>(type: "int", nullable: true),
                    ExecuteOnly = table.Column<int>(type: "int", nullable: true),
                    Layout = table.Column<string>(type: "xml", nullable: true),
                    PacketSize = table.Column<int>(type: "int", nullable: true),
                    KeyField = table.Column<string>(type: "nvarchar(128)", maxLength: 128, nullable: true),
                    ItemField = table.Column<string>(type: "nvarchar(128)", maxLength: 128, nullable: true),
                    KeyOrder = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    ConditionElement = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ConditionValue = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    RequestData = table.Column<int>(type: "int", nullable: true),
                    AllowInsert = table.Column<int>(type: "int", nullable: false),
                    QueryHint = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    ParentElement = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RequestConfigurationQuery", x => x.RequestConfigurationQueryId);
                });

            migrationBuilder.CreateTable(
                name: "RequestConfigurationQuery",
                schema: "rest",
                columns: table => new
                {
                    RequestConfigurationQueryId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    RequestConfigurationId = table.Column<int>(type: "int", nullable: true),
                    Sql = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Enabled = table.Column<int>(type: "int", nullable: true),
                    DataElement = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    QueryOrder = table.Column<int>(type: "int", nullable: true),
                    RequestTypeId = table.Column<int>(type: "int", nullable: true),
                    MasterQueryId = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RequestConfigurationQuery", x => x.RequestConfigurationQueryId);
                });

            migrationBuilder.CreateTable(
                name: "RequestConfigurationQueryBinding",
                columns: table => new
                {
                    RequestConfigurationQueryBindingId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    RequestConfigurationQueryId = table.Column<int>(type: "int", nullable: true),
                    FieldName = table.Column<string>(type: "nvarchar(128)", maxLength: 128, nullable: false),
                    Element = table.Column<string>(type: "nvarchar(128)", maxLength: 128, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RequestConfigurationQueryBinding", x => x.RequestConfigurationQueryBindingId);
                });

            migrationBuilder.CreateTable(
                name: "RequestConfigurationQueryConfiguration",
                columns: table => new
                {
                    RequestConfigurationQueryConfigurationId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    RequestConfigurationQueryId = table.Column<int>(type: "int", nullable: true),
                    UserId = table.Column<int>(type: "int", nullable: true),
                    Enabled = table.Column<int>(type: "int", nullable: true),
                    PacketSize = table.Column<int>(type: "int", nullable: true),
                    QueryHint = table.Column<string>(type: "varchar(max)", unicode: false, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RequestConfigurationQueryConfiguration", x => x.RequestConfigurationQueryConfigurationId);
                });

            migrationBuilder.CreateTable(
                name: "RequestConfigurationQueryLayout",
                columns: table => new
                {
                    RequestConfigurationQueryLayoutId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    RequestConfigurationQueryId = table.Column<int>(type: "int", nullable: true),
                    Language = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: false),
                    Enabled = table.Column<int>(type: "int", nullable: true),
                    Layout = table.Column<string>(type: "xml", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RequestConfigurationQueryLayout", x => x.RequestConfigurationQueryLayoutId);
                });

            migrationBuilder.CreateTable(
                name: "RequestData",
                columns: table => new
                {
                    RequestDataId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SessionId = table.Column<int>(type: "int", nullable: true),
                    Element = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ElementName = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ElementValue = table.Column<string>(type: "varchar(max)", unicode: false, nullable: true),
                    ElementIndex = table.Column<int>(type: "int", nullable: true),
                    XmlData = table.Column<string>(type: "xml", nullable: true),
                    CreateDate = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RequestData", x => x.RequestDataId);
                });

            migrationBuilder.CreateTable(
                name: "RequestDataType",
                columns: table => new
                {
                    RequestDataTypeId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    Description = table.Column<string>(type: "nvarchar(500)", maxLength: 500, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RequestDataType", x => x.RequestDataTypeId);
                });

            migrationBuilder.CreateTable(
                name: "RequestEmptyTable",
                columns: table => new
                {
                    ID = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1")
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "RequestFilesToDownload",
                columns: table => new
                {
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Tittle = table.Column<string>(type: "nvarchar(500)", maxLength: 500, nullable: true),
                    Description = table.Column<string>(type: "nvarchar(500)", maxLength: 500, nullable: true),
                    FileName = table.Column<string>(type: "nvarchar(500)", maxLength: 500, nullable: true),
                    Active = table.Column<int>(type: "int", nullable: true),
                    CreateDate = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    ModifyData = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    Language = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "RequestFingerprint",
                schema: "rest",
                columns: table => new
                {
                    RequestFingerprintId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Fingerprint = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    Name = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DetailData = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    Active = table.Column<int>(type: "int", nullable: true),
                    MobileApplicationListId = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RequestFingerprint", x => x.RequestFingerprintId);
                });

            migrationBuilder.CreateTable(
                name: "RequestForm",
                columns: table => new
                {
                    RequestFormId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    Description = table.Column<string>(type: "nvarchar(500)", maxLength: 500, nullable: true),
                    RequestFormBaseTypeId = table.Column<int>(type: "int", nullable: true),
                    ClientId = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RequestForm", x => x.RequestFormId);
                });

            migrationBuilder.CreateTable(
                name: "RequestFormBaseType",
                columns: table => new
                {
                    RequestFormBaseTypeId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    Description = table.Column<string>(type: "nvarchar(500)", maxLength: 500, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RequestFormBaseType", x => x.RequestFormBaseTypeId);
                });

            migrationBuilder.CreateTable(
                name: "RequestFormItem",
                columns: table => new
                {
                    RequestFormItemId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    RequestFormId = table.Column<int>(type: "int", nullable: true),
                    Name = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    Description = table.Column<string>(type: "nvarchar(500)", maxLength: 500, nullable: true),
                    DictionaryId = table.Column<int>(type: "int", nullable: true),
                    TextId = table.Column<int>(type: "int", nullable: true),
                    RequestFormSectionId = table.Column<int>(type: "int", nullable: true),
                    Type = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    Attribute = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    RequestFormItemTypeId = table.Column<int>(type: "int", nullable: true),
                    ItemOrder = table.Column<int>(type: "int", nullable: true),
                    ReadOnly = table.Column<int>(type: "int", nullable: true),
                    Required = table.Column<int>(type: "int", nullable: true),
                    Columns = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Data = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    EmptyData = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Action = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Disabled = table.Column<int>(type: "int", nullable: true),
                    constraints = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    DisableEdit = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RequestFormItem", x => x.RequestFormItemId);
                });

            migrationBuilder.CreateTable(
                name: "RequestFormItemType",
                columns: table => new
                {
                    RequestFormItemTypeId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    Description = table.Column<string>(type: "nvarchar(500)", maxLength: 500, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RequestFormItemType", x => x.RequestFormItemTypeId);
                });

            migrationBuilder.CreateTable(
                name: "RequestFormPermission",
                columns: table => new
                {
                    RequestFormPermissionId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    RequestFormItemId = table.Column<int>(type: "int", nullable: true),
                    UserId = table.Column<int>(type: "int", nullable: true),
                    RequestProfileId = table.Column<int>(type: "int", nullable: true),
                    AllowPermission = table.Column<int>(type: "int", nullable: true),
                    DenyPermission = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RequestFormPermission", x => x.RequestFormPermissionId);
                });

            migrationBuilder.CreateTable(
                name: "RequestFormSection",
                columns: table => new
                {
                    RequestFormSectionId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    Description = table.Column<string>(type: "nvarchar(500)", maxLength: 500, nullable: true),
                    Required = table.Column<int>(type: "int", nullable: true),
                    DictionaryId = table.Column<int>(type: "int", nullable: true),
                    TextId = table.Column<int>(type: "int", nullable: true),
                    SectionOrder = table.Column<int>(type: "int", nullable: true),
                    RequestFormId = table.Column<int>(type: "int", nullable: true),
                    Collapsed = table.Column<int>(type: "int", nullable: true),
                    Collapsible = table.Column<int>(type: "int", nullable: true, defaultValueSql: "((1))")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RequestFormSection", x => x.RequestFormSectionId);
                });

            migrationBuilder.CreateTable(
                name: "RequestGroup",
                columns: table => new
                {
                    RequestGroupId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true),
                    Description = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RequestGroup", x => x.RequestGroupId);
                });

            migrationBuilder.CreateTable(
                name: "RequestGuestTokenDetail",
                columns: table => new
                {
                    RequestGuestTokenDetailId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    OrderId = table.Column<int>(type: "int", nullable: true),
                    OrderPointId = table.Column<int>(type: "int", nullable: true),
                    GuestHash = table.Column<byte[]>(type: "varbinary(max)", nullable: true),
                    CarrierId = table.Column<int>(type: "int", nullable: true),
                    Link = table.Column<string>(type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    TYP = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    DATA = table.Column<DateTime>(type: "date", nullable: true),
                    GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    InsertDate = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    Email = table.Column<string>(type: "varchar(max)", unicode: false, nullable: true),
                    Sent = table.Column<int>(type: "int", nullable: true, defaultValueSql: "((0))"),
                    SentDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Active = table.Column<int>(type: "int", nullable: true, defaultValueSql: "((1))"),
                    ObjType = table.Column<int>(type: "int", nullable: true),
                    HashString = table.Column<string>(type: "varchar(900)", unicode: false, maxLength: 900, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "RequestInvoicePeriod",
                schema: "espeed",
                columns: table => new
                {
                    id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    year = table.Column<int>(type: "int", nullable: true),
                    month = table.Column<int>(type: "int", nullable: true),
                    FirstDay = table.Column<int>(type: "int", nullable: true),
                    LastDay = table.Column<int>(type: "int", nullable: true),
                    DateStart = table.Column<DateTime>(type: "date", nullable: true),
                    DateEnd = table.Column<DateTime>(type: "date", nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "RequestItem",
                columns: table => new
                {
                    RequestItemId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    RequestConfigurationId = table.Column<int>(type: "int", nullable: true),
                    Name = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    Type = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    Visible = table.Column<int>(type: "int", nullable: true),
                    KeyField = table.Column<int>(type: "int", nullable: true),
                    ItemField = table.Column<int>(type: "int", nullable: true),
                    Width = table.Column<int>(type: "int", nullable: true),
                    DictionaryId = table.Column<int>(type: "int", nullable: true),
                    TextId = table.Column<int>(type: "int", nullable: true),
                    DefaultValue = table.Column<object>(type: "sql_variant", nullable: true),
                    Attribute = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    RequestItemTypeId = table.Column<int>(type: "int", nullable: true),
                    ParamType = table.Column<int>(type: "int", nullable: true),
                    RequestConfigurationQueryId = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RequestItem", x => x.RequestItemId);
                });

            migrationBuilder.CreateTable(
                name: "RequestItemType",
                columns: table => new
                {
                    RequestItemTypeId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RequestItemType", x => x.RequestItemTypeId);
                });

            migrationBuilder.CreateTable(
                name: "RequestPermission",
                columns: table => new
                {
                    RequestPermissionId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    DictionaryId = table.Column<int>(type: "int", nullable: true),
                    TextId = table.Column<int>(type: "int", nullable: true),
                    RequestPermissionGroupId = table.Column<int>(type: "int", nullable: true),
                    Active = table.Column<int>(type: "int", nullable: true),
                    PermissionLevel = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RequestPermission", x => x.RequestPermissionId);
                });

            migrationBuilder.CreateTable(
                name: "RequestPermissionDependency",
                columns: table => new
                {
                    RequestPermissionDependencyId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    RequestPermissionId = table.Column<int>(type: "int", nullable: false),
                    DependencyId = table.Column<int>(type: "int", nullable: false),
                    Active = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RequestPermissionDependency", x => x.RequestPermissionDependencyId);
                });

            migrationBuilder.CreateTable(
                name: "RequestPermissionGroup",
                columns: table => new
                {
                    RequestPermissionGroupId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    DictionaryId = table.Column<int>(type: "int", nullable: false),
                    TextId = table.Column<int>(type: "int", nullable: false),
                    Active = table.Column<int>(type: "int", nullable: true),
                    GroupOrder = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RequestPermissionGroup", x => x.RequestPermissionGroupId);
                });

            migrationBuilder.CreateTable(
                name: "RequestProfile",
                columns: table => new
                {
                    RequestProfileId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    Description = table.Column<string>(type: "nvarchar(500)", maxLength: 500, nullable: true),
                    Enabled = table.Column<int>(type: "int", nullable: true),
                    Visible = table.Column<int>(type: "int", nullable: true),
                    PasswordResetDatePart = table.Column<string>(type: "nvarchar(128)", maxLength: 128, nullable: true),
                    PasswordResetOffset = table.Column<int>(type: "int", nullable: true),
                    LastPasswordReset = table.Column<DateTime>(type: "datetime", nullable: true),
                    ClientId = table.Column<int>(type: "int", nullable: true),
                    DefaultProfile = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RequestProfile", x => x.RequestProfileId);
                });

            migrationBuilder.CreateTable(
                name: "RequestProfilePermission",
                columns: table => new
                {
                    RequestProfilePermissionId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    RequestProfileId = table.Column<int>(type: "int", nullable: true),
                    RequestPermissionId = table.Column<int>(type: "int", nullable: true),
                    AllowPermission = table.Column<int>(type: "int", nullable: true),
                    DenyPermission = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RequestProfilePermission", x => x.RequestProfilePermissionId);
                });

            migrationBuilder.CreateTable(
                name: "RequestSalt",
                schema: "rest",
                columns: table => new
                {
                    RequestSaltId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    User = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    Salt = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    Expire = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RequestSalt", x => x.RequestSaltId);
                });

            migrationBuilder.CreateTable(
                name: "RequestSettlementPrintStatus",
                columns: table => new
                {
                    id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SettlementId = table.Column<int>(type: "int", nullable: true),
                    CreateDate = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    STATUS = table.Column<int>(type: "int", nullable: true),
                    ExecuteDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Type = table.Column<int>(type: "int", nullable: true),
                    InvoiceId = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "RequestToken",
                columns: table => new
                {
                    RequestTokenId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    UserId = table.Column<int>(type: "int", nullable: true),
                    Token = table.Column<string>(type: "varchar(38)", unicode: false, maxLength: 38, nullable: true),
                    Salt = table.Column<string>(type: "varchar(38)", unicode: false, maxLength: 38, nullable: true),
                    Expire = table.Column<DateTime>(type: "datetime", nullable: true),
                    Hash = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RequestToken", x => x.RequestTokenId);
                });

            migrationBuilder.CreateTable(
                name: "RequestType",
                schema: "rest",
                columns: table => new
                {
                    RequestTypeId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true),
                    Description = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RequestType", x => x.RequestTypeId);
                });

            migrationBuilder.CreateTable(
                name: "RESULT_101",
                schema: "opti",
                columns: table => new
                {
                    id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    dt = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    sessionId = table.Column<int>(type: "int", nullable: true),
                    groupId = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    map_profileId = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    map_toll = table.Column<int>(type: "int", nullable: true),
                    tasks = table.Column<string>(type: "xml", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RESULT_101", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "REVERSEGEOCODING",
                columns: table => new
                {
                    ID_REVERSEGEOCODING = table.Column<int>(type: "int", nullable: false),
                    LON = table.Column<double>(type: "float", nullable: true, comment: "długość geograficzna pozycji badanej"),
                    LAT = table.Column<double>(type: "float", nullable: true, comment: "szerokość geograficzna pozycji badanej"),
                    LON_ORG = table.Column<double>(type: "float", nullable: true, comment: "długość geograficzna pozycji adresu"),
                    LAT_ORG = table.Column<double>(type: "float", nullable: true, comment: "szerokość geograficzna pozycji adresu"),
                    DISTANCE = table.Column<int>(type: "int", nullable: true, comment: "odległość w metrach pozycji badanej od pozycji adresu"),
                    COUNTRY = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "kraj - kod ISO"),
                    ZIPCODE = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true, comment: "kod pocztowy"),
                    PLACE = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "miejscowość"),
                    STREET = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "adres"),
                    PROVINCE = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "województwo / okręg"),
                    Address = table.Column<string>(type: "varchar(223)", unicode: false, maxLength: 223, nullable: true, computedColumnSql: "(((case when [country]<>'' then [country]+', ' else '' end+case when [zipcode]<>'' then [zipcode]+', ' else '' end)+case when [place]<>'' then [place]+', ' else '' end)+case when [street]<>'' then [street] else '' end)", stored: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_REVERSEGEOCODING", x => x.ID_REVERSEGEOCODING);
                });

            migrationBuilder.CreateTable(
                name: "REZERWY",
                columns: table => new
                {
                    ID_REZERWY = table.Column<int>(type: "int", nullable: false),
                    TYP = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SP_REJESTRACJI = table.Column<int>(type: "int", nullable: true),
                    PROCESY_OKR_ID = table.Column<int>(type: "int", nullable: true),
                    REZERWY_NR = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    REZERWY_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    REZERWY_ROK = table.Column<int>(type: "int", nullable: true),
                    REZERWY_MIES = table.Column<int>(type: "int", nullable: true),
                    STATUS = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: true),
                    KONTRAH_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KONTRAH_NAZWA = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    KONTRAH_ADRES = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KONTRAH_MIASTO = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KONTRAH_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    KONTRAH_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KONTRAH_NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: false),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    TECZKA_ID = table.Column<int>(type: "int", nullable: true),
                    TECZKA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TECZKA_ODB_ID = table.Column<int>(type: "int", nullable: true),
                    TECZKA_ODB = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TRAFIK_ID = table.Column<int>(type: "int", nullable: true),
                    TRAFIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZLECENIE_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PRZESYLKA_ID = table.Column<int>(type: "int", nullable: true),
                    PRZESYLKA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    LIST_LINIOWY_ID = table.Column<int>(type: "int", nullable: true),
                    LIST_LINIOWY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    WYJAZD_ID = table.Column<int>(type: "int", nullable: true),
                    WYJAZD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    TABOR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KIEROWCA_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    FAKTURA_ID = table.Column<int>(type: "int", nullable: true),
                    FAKTURA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DATA_WYSTAWIENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KURSY_WALUT_ID = table.Column<int>(type: "int", nullable: true),
                    KURSY_WALUT_TYP = table.Column<int>(type: "int", nullable: true),
                    KURSY_WALUT_RODZ = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    KURS_WALUTY = table.Column<double>(type: "float", nullable: false, defaultValueSql: "('1')"),
                    NR_TABELI_KURSOW = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    DATA_TABELI_KURSOW = table.Column<DateTime>(type: "datetime", nullable: true),
                    KWOTA_W_WAL = table.Column<double>(type: "float", nullable: true),
                    KWOTA_W_PLN = table.Column<double>(type: "float", nullable: true),
                    OPIS_ID = table.Column<int>(type: "int", nullable: true),
                    OPIS = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    OPIS_DOD = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    RODZ_KOSZTOW = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    RODZ_PRZYCHODOW = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    UWAGI = table.Column<string>(type: "text", nullable: true),
                    ROZWIAZANIE = table.Column<int>(type: "int", nullable: true),
                    DATA_ROZWIAZANIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    ROZWIAZANIE_REZERWY_ID = table.Column<int>(type: "int", nullable: true),
                    INFO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KOMUNIKACJA_FK_ID = table.Column<int>(type: "int", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    ZLEC_POZ_FAKT_ID = table.Column<int>(type: "int", nullable: true),
                    KALKULACJA_ID = table.Column<int>(type: "int", nullable: true),
                    PROM_ID = table.Column<int>(type: "int", nullable: true),
                    PROM = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KOMUNIKACJA_FK_INFO = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    ZLECENIE_ZB_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE_ZB = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZLECENIE_M_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE_M = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZLECENIE_RAIL_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE_RAIL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_REZERWY", x => x.ID_REZERWY);
                });

            migrationBuilder.CreateTable(
                name: "RHENUS_ROZL_TRAS",
                columns: table => new
                {
                    ID_RHENUS_ROZL_TRAS = table.Column<int>(type: "int", nullable: false),
                    PRZEWOZNIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PRZEWOZNIK_ID = table.Column<int>(type: "int", nullable: true),
                    FAKTURA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    FAKTURA_ID = table.Column<int>(type: "int", nullable: true),
                    DATA_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    STATUS = table.Column<int>(type: "int", nullable: true),
                    STATUS_NEW = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    ZAMKNIETE = table.Column<int>(type: "int", nullable: true),
                    FRACHTY = table.Column<double>(type: "float", nullable: true),
                    KOSZTY_INNE = table.Column<double>(type: "float", nullable: true),
                    SUMA = table.Column<double>(type: "float", nullable: true),
                    SUMA_F = table.Column<double>(type: "float", nullable: true),
                    ROZNICA = table.Column<double>(type: "float", nullable: true),
                    ILOSC_TRAS = table.Column<double>(type: "float", nullable: true),
                    ILOSC = table.Column<double>(type: "float", nullable: true),
                    WAGA = table.Column<double>(type: "float", nullable: true),
                    WAGA_DEKL = table.Column<double>(type: "float", nullable: true),
                    WAGA_OBL = table.Column<double>(type: "float", nullable: true),
                    OBJ = table.Column<double>(type: "float", nullable: true),
                    OBJ_DEKL = table.Column<double>(type: "float", nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    WG_DAT = table.Column<int>(type: "int", nullable: true),
                    TYPY_TRAS = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    ZMIANY_NA_TRASACH = table.Column<int>(type: "int", nullable: true),
                    PROCEDURA_SQL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PRZEWOZNIK_NAZWA = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    WALUTA_FV = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    SKONTO = table.Column<int>(type: "int", nullable: true),
                    SKONTO_ID = table.Column<int>(type: "int", nullable: true),
                    FORMA_PLATNOSCI = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    TERMIN_PLATNOSCI = table.Column<int>(type: "int", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    RABAT = table.Column<int>(type: "int", nullable: true),
                    RABAT_WART = table.Column<double>(type: "float", nullable: true),
                    ZLECENIE_ZB = table.Column<int>(type: "int", nullable: true),
                    NR_ROZL_TRAS = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    NR_ROZL_TRAS_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    NR_ROZL_TRAS_ROK = table.Column<int>(type: "int", nullable: true),
                    NR_ROZL_TRAS_MIES = table.Column<int>(type: "int", nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RHENUS_ROZL_TRAS", x => x.ID_RHENUS_ROZL_TRAS);
                });

            migrationBuilder.CreateTable(
                name: "RHENUS_ROZL_TRAS_POZ",
                columns: table => new
                {
                    ID_RHENUS_ROZL_TRAS_POZ = table.Column<int>(type: "int", nullable: false),
                    LP = table.Column<int>(type: "int", nullable: true),
                    RHENUS_ROZL_TRAS_ID = table.Column<int>(type: "int", nullable: true),
                    LISTY_LINIOWE_ID = table.Column<int>(type: "int", nullable: true),
                    ROZLICZONA = table.Column<int>(type: "int", nullable: true),
                    FAKTURA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    FAKTURA_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIA_ID = table.Column<int>(type: "int", nullable: true),
                    ZMIANY_NA_TRASACH = table.Column<int>(type: "int", nullable: true),
                    WALUTA_FV = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RHENUS_ROZL_TRAS_POZ", x => x.ID_RHENUS_ROZL_TRAS_POZ);
                });

            migrationBuilder.CreateTable(
                name: "RightsProfileHist",
                columns: table => new
                {
                    IdRightsProfileHist = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ProfileType = table.Column<int>(type: "int", nullable: true),
                    ProfileId = table.Column<int>(type: "int", nullable: true),
                    ProfileName = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    RightsAppName = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    RightsBlobVer = table.Column<int>(type: "int", nullable: true),
                    RightsData = table.Column<byte[]>(type: "varbinary(max)", nullable: true),
                    RightsHash = table.Column<string>(type: "varchar(64)", unicode: false, maxLength: 64, nullable: true),
                    ModifyAction = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    ModifyDT = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    ModifyUserId = table.Column<int>(type: "int", nullable: true),
                    ModifyAppVersion = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ModifyNotes = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__RightsPr__461A44062A827CDC", x => x.IdRightsProfileHist);
                });

            migrationBuilder.CreateTable(
                name: "RODZ_KOSZTOW",
                columns: table => new
                {
                    ID_RODZ_KOSZTOW = table.Column<int>(type: "int", nullable: false),
                    KOD = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true, comment: "Kod"),
                    LP = table.Column<int>(type: "int", nullable: true, comment: "Lp"),
                    OPIS = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true, comment: "Opis rodzaju kosztów"),
                    PALIWO = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy rodzaj kosztu dotyczy zakupu paliwa"),
                    DIETA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy rodzaj kosztu dotyczy diet"),
                    KONTO = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Konto księgowe"),
                    WYROZNIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Wyróznik kosztu 1"),
                    SYSTEMOWY = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy rodzaj kosztu jest systemowy - utworzony przez InterLAN"),
                    UWZGL_ROZL_KIER = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy koszty danego rodzaju uwzględniać w rozl. kierowców (podst. prowizji)"),
                    UWZGL_ROZL_SPED = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy koszty danego rodzaju uwzględniać w rozl. spedytorów"),
                    STR_ROZL_KIER = table.Column<int>(type: "int", nullable: true, comment: "Flaga czy dodatek (0) czy obicążenie (1) od podst. prowizji"),
                    DOD_KOSZTY_OG = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy uwzględniać przy rejestracji kosztów na liście kierowców"),
                    WYMAG_LICZNIK = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy koszt z danym rodzajem kosztu wymaga podania licznika pojazdu"),
                    UWZGL_ROZL_KIER2 = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy koszty danego rodzaju uwzględniać w rozl. kierowców (pensja)"),
                    STR_ROZL_KIER2 = table.Column<int>(type: "int", nullable: true, comment: "Flaga czy dodatek (0) czy obicążenie (1) od pensji"),
                    ADBLUE = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy rodzaj kosztu dotyczy zakupu AdBlue"),
                    KONTO_5 = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Konto księgowe grupy 5"),
                    DOD_KOSZTY_MO = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy dodawać koszt do rejestru kosztów międzyokresowych"),
                    WYMAG_TABOR = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy koszt z danym rodzajem kosztu wymaga podania pojazdu"),
                    KONTO_REZERW = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Konto księgowe rezerw"),
                    WYROZNIK_1 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Wyróżnik kosztu 2"),
                    GRUPA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Grupa rodzajów kosztów"),
                    AKTYWNY = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy rodzaj kosztu jest aktywny"),
                    NIEUDOKUMENTOWANY = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy koszt nieudokumentowany (dla potrzeb rozl. zaliczek)"),
                    KONTO_WAR = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Konto księgowe warsztatu"),
                    ROZL_MO = table.Column<int>(type: "int", nullable: true),
                    BEZ_KSIEGOWANIA = table.Column<int>(type: "int", nullable: true),
                    SplitPayment = table.Column<int>(type: "int", nullable: true),
                    DictionaryId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TextId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RODZ_KOSZTOW", x => x.ID_RODZ_KOSZTOW);
                },
                comment: "Słownik rodzajów kosztów");

            migrationBuilder.CreateTable(
                name: "RODZ_KOSZTOW_ROZL_MO",
                columns: table => new
                {
                    ID_RODZ_KOSZTOW = table.Column<int>(type: "int", nullable: false),
                    ILE_RAT = table.Column<int>(type: "int", nullable: true),
                    CZESTOTLIWOSC_RAT = table.Column<int>(type: "int", nullable: true),
                    CZESTOTLIWOSC_RAT_K_MIES = table.Column<int>(type: "int", nullable: true),
                    DEKR_PW = table.Column<int>(type: "int", nullable: true),
                    DEKR_PW_ALG = table.Column<int>(type: "int", nullable: true),
                    DEKR_PW_WG_DATY = table.Column<int>(type: "int", nullable: true),
                    DEKR_ZLEC = table.Column<int>(type: "int", nullable: true),
                    DEKR_ZLEC_ALG = table.Column<int>(type: "int", nullable: true),
                    DEKR_ZLEC_WG_DATY = table.Column<int>(type: "int", nullable: true),
                    PROCEDURA_SQL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DEKR_BEZ_LOK = table.Column<int>(type: "int", nullable: true),
                    TWORZ_RM = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RODZ_KOSZTOW_ROZL_MO", x => x.ID_RODZ_KOSZTOW);
                });

            migrationBuilder.CreateTable(
                name: "RODZ_OPER_KAS",
                columns: table => new
                {
                    ID_RODZ_OPER_KAS = table.Column<int>(type: "int", nullable: false),
                    KOD = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KONTO = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    LISTA = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    KASA = table.Column<int>(type: "int", nullable: true),
                    BANK = table.Column<int>(type: "int", nullable: true),
                    KURS_OPIS = table.Column<int>(type: "int", nullable: true),
                    ZALICZKA = table.Column<int>(type: "int", nullable: true),
                    COD = table.Column<int>(type: "int", nullable: true),
                    ZASIL_ODPR = table.Column<int>(type: "int", nullable: true),
                    DOD_OPIS_NA_WYDR = table.Column<string>(type: "text", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RODZ_OPER_KAS", x => x.ID_RODZ_OPER_KAS);
                });

            migrationBuilder.CreateTable(
                name: "RODZ_PRZEW",
                columns: table => new
                {
                    ID_RODZ_PRZEW = table.Column<int>(type: "int", nullable: false),
                    KOD = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: false, comment: "Kod rodzaju przewoźnika"),
                    WYM_UMOWA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy wymagana umowa"),
                    KOLOR_RAMKI = table.Column<int>(type: "int", nullable: true, comment: "Kolor ramki w gridzie"),
                    KOLOR_TEKSTU = table.Column<int>(type: "int", nullable: true, comment: "Kolor tekstu w ramce grida"),
                    KONTO_FK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Konto księgowe 1")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RODZ_PRZEW", x => x.ID_RODZ_PRZEW);
                },
                comment: "Rodzaje przewoźników");

            migrationBuilder.CreateTable(
                name: "RODZ_PRZYCHODOW",
                columns: table => new
                {
                    ID_RODZ_PRZYCHODOW = table.Column<int>(type: "int", nullable: false),
                    KOD = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true, comment: "Kod"),
                    LP = table.Column<int>(type: "int", nullable: true, comment: "Lp"),
                    OPIS = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true, comment: "Opis"),
                    KONTO = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Konto FK"),
                    WYROZNIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Wyróżnik 1"),
                    KONTO_REZERW = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Konto rezerw"),
                    WYROZNIK_1 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Wyróżnik 2"),
                    GRUPA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Grupa rodzaju przychodu"),
                    USLUGA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy usługa"),
                    DictionaryId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TextId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RODZ_PRZYCHODOW", x => x.ID_RODZ_PRZYCHODOW);
                },
                comment: "Słownik rodzajów przychodów");

            migrationBuilder.CreateTable(
                name: "RODZ_ZDARZEN",
                columns: table => new
                {
                    ID_RODZ_ZDARZEN = table.Column<int>(type: "int", nullable: false),
                    LP = table.Column<int>(type: "int", nullable: true, comment: "Lp"),
                    KOD = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Kod"),
                    SYMBOL = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Symbol"),
                    OPIS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Opis"),
                    SYSTEMOWY = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy zdarzenie systemowe"),
                    KOLOR_RAMKI = table.Column<int>(type: "int", nullable: true, comment: "Kolor ramki w gridzie"),
                    KOLOR_TEKSTU = table.Column<int>(type: "int", nullable: true, comment: "Kolor tekstu w ramce grida"),
                    BEZ_WERYF_PW = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy bez weryfikacji na PW"),
                    UWZGL_DO_TRASY = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy uwzględniać rodzaj w budowaniu trasy"),
                    AKTYWNY = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy aktywny"),
                    CZY_KOLOR_RAMKI = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy ustawiać kolor ramki w gridzie"),
                    CZY_KOLOR_TEKSTU = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy ustawiać kolor tekstu w ramce grida"),
                    BEZ_MAPY = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy nie przekazywać do mapy"),
                    POKAZ_W_DYSP = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy pokazywać w dyspozytorze"),
                    MOBILE_ACTIVE = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy pokazywać w mSPEED"),
                    MOBILE_ICON_ID = table.Column<int>(type: "int", nullable: true, comment: "Nr ikony w mSPEED"),
                    BEZ_KOPIOWANIA = table.Column<int>(type: "int", nullable: true, comment: "Nr ikony w mSPEED"),
                    DictionaryId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TextId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RODZ_ZDARZEN", x => x.ID_RODZ_ZDARZEN);
                },
                comment: "Słownik zdarzeń transportowych");

            migrationBuilder.CreateTable(
                name: "RODZAJE_WAGONOW",
                columns: table => new
                {
                    ID_RODZAJE_WAGONOW = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    KOD = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: false, defaultValueSql: "('')"),
                    OPIS = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RODZAJE_WAGONOW", x => x.ID_RODZAJE_WAGONOW);
                });

            migrationBuilder.CreateTable(
                name: "ROUTE_INTERHUB",
                columns: table => new
                {
                    ID_ROUTE_INTERHUB = table.Column<int>(type: "int", nullable: false),
                    SYMBOL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Symbol schematu"),
                    LOKALIZACJA_OD = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Z jakiej lokalizacji"),
                    LOKALIZACJA_DO = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Do jakiej lokalizacji"),
                    GODZ_OD = table.Column<DateTime>(type: "datetime", nullable: true, comment: "W godzinach od"),
                    GODZ_DO = table.Column<DateTime>(type: "datetime", nullable: true, comment: "W godzinach do")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ROUTE_INTERHUB", x => x.ID_ROUTE_INTERHUB);
                },
                comment: "Schematy tras międzyoddziałowych");

            migrationBuilder.CreateTable(
                name: "ROUTE_INTERHUB_POZ",
                columns: table => new
                {
                    ID_ROUTE_INTERHUB_POZ = table.Column<int>(type: "int", nullable: false),
                    ROUTE_INTERHUB_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do schematu - tab: ROUTE_INTERHUB"),
                    LP = table.Column<int>(type: "int", nullable: true, comment: "Lp"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ROUTE_INTERHUB_POZ", x => x.ID_ROUTE_INTERHUB_POZ);
                },
                comment: "Pozycje schematu tras międzyoddziałowych - detal do ROUTE_INTERHUB");

            migrationBuilder.CreateTable(
                name: "ROUTE_TIMETAB",
                columns: table => new
                {
                    ID_ROUTE_TIMETAB = table.Column<int>(type: "int", nullable: false),
                    RELACJA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Oznaczenie relacji np. POZ-WAW"),
                    NR_LINII = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer LH np. POZWAW1"),
                    LOKALIZACJA_OD = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Z jakiej lokalizacji"),
                    LOKALIZACJA_DO = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Do jakiej lokalizacji"),
                    WAZNA_OD = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ważności od"),
                    WAZNA_DO = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data wazności do"),
                    RODZAJ_TRASY = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Rodzaj generowanych tras"),
                    DT_GENERACJI = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data/godz ostatniego generowania"),
                    GODZ_AUTO_ANUL = table.Column<double>(type: "float", nullable: true, comment: "Automatyczne anulowanie"),
                    LOKALIZACJA_VIA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Przez jaką lokalizację"),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dział"),
                    LOKALIZACJA_VIA2 = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Przez jaką lokalizację 2"),
                    LAMANA = table.Column<int>(type: "int", nullable: true, comment: "Czy trasa łamana"),
                    Z_PODLOGI = table.Column<int>(type: "int", nullable: true, comment: "Czy trasa z podłogi"),
                    KOLKO = table.Column<int>(type: "int", nullable: true, comment: "Czy trasa w kółku"),
                    DIRECT = table.Column<int>(type: "int", nullable: true, comment: "Czy trasa DIRECT"),
                    TEMP_PLUS = table.Column<int>(type: "int", nullable: true, comment: "Czy trasa TEMP+"),
                    TEMP_PLUS_WART = table.Column<double>(type: "float", nullable: true, comment: "TEMP+ wartość"),
                    WYMAG_ADR = table.Column<int>(type: "int", nullable: true, comment: "Czy wymagany pojazd ADR"),
                    NORMA_EU = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Norma EU"),
                    INNE_1 = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Inne parametry 1"),
                    INNE_2 = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Inne parametry 2"),
                    INNE_3 = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Inne parametry 3"),
                    INNE_4 = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Inne parametry 4"),
                    INNE_5 = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Inne parametry 5"),
                    INNE_6 = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Inne parametry 6")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ROUTE_TIMETAB", x => x.ID_ROUTE_TIMETAB);
                },
                comment: "Harmonogramy tras międzyoddziałowych");

            migrationBuilder.CreateTable(
                name: "ROUTE_TIMETAB_FIN",
                columns: table => new
                {
                    ID_ROUTE_TIMETAB_FIN = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ROUTE_TIMETAB_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do harmonogramu - tab: ROUTE_TIMETAB"),
                    LP = table.Column<int>(type: "int", nullable: true),
                    DOTYCZY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TYP = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    STAWKA = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ROUTE_TIMETAB_FIN", x => x.ID_ROUTE_TIMETAB_FIN);
                });

            migrationBuilder.CreateTable(
                name: "ROUTE_TIMETAB_POZ",
                columns: table => new
                {
                    ID_ROUTE_TIMETAB_POZ = table.Column<int>(type: "int", nullable: false),
                    ROUTE_TIMETAB_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do harmonogramu - tab: ROUTE_TIMETAB"),
                    ZA_DZIEN_TYG = table.Column<int>(type: "int", nullable: true),
                    ZA_GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    WY_DZIEN_TYG = table.Column<int>(type: "int", nullable: true),
                    WY_GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZA_CZAS_TRWANIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    WY_CZAS_TRWANIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    STAN_TRASY = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    VIA_DZIEN_TYG = table.Column<int>(type: "int", nullable: true),
                    VIA_GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    VIA_CZAS_TRWANIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZA_HUBGATEID = table.Column<int>(type: "int", nullable: true),
                    VIA_HUBGATEID = table.Column<int>(type: "int", nullable: true),
                    WY_HUBGATEID = table.Column<int>(type: "int", nullable: true),
                    VIA2_DZIEN_TYG = table.Column<int>(type: "int", nullable: true),
                    VIA2_GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    VIA2_CZAS_TRWANIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    VIA2_HUBGATEID = table.Column<int>(type: "int", nullable: true),
                    VIA_GODZ_ZA = table.Column<DateTime>(type: "datetime", nullable: true),
                    VIA2_GODZ_ZA = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ROUTE_TIMETAB_POZ", x => x.ID_ROUTE_TIMETAB_POZ);
                },
                comment: "Pozycje do harmonogramu tras międzyoddziałowych - detal do ROUTE_TIMETAB");

            migrationBuilder.CreateTable(
                name: "RouteCalculation",
                columns: table => new
                {
                    RouteCalculationId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BillOfLadingId = table.Column<int>(type: "int", nullable: true),
                    ShipmentId = table.Column<int>(type: "int", nullable: true),
                    PackageId = table.Column<int>(type: "int", nullable: true),
                    Calculate = table.Column<bool>(type: "bit", nullable: true),
                    SaveUserId = table.Column<int>(type: "int", nullable: true),
                    SaveUser = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_RouteCalculation", x => x.RouteCalculationId);
                });

            migrationBuilder.CreateTable(
                name: "ROZL_KIER",
                columns: table => new
                {
                    ID_ROZL_KIER = table.Column<int>(type: "int", nullable: false),
                    ROK = table.Column<int>(type: "int", nullable: true),
                    MIESIAC = table.Column<int>(type: "int", nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KURS_DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    KURS_TABELA_ID = table.Column<int>(type: "int", nullable: true),
                    KURS_TABELA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KURS_TABELA_TYP = table.Column<int>(type: "int", nullable: true),
                    KURS_RODZAJ = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    SUMA = table.Column<double>(type: "float", nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ROZL_KIER", x => x.ID_ROZL_KIER);
                });

            migrationBuilder.CreateTable(
                name: "ROZL_KIER_DOD_ODL",
                columns: table => new
                {
                    ID_ROZL_KIER_DOD_ODL = table.Column<int>(type: "int", nullable: false),
                    TYP = table.Column<int>(type: "int", nullable: true),
                    TYTUL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ROZL_KIER_DOD_ODL", x => x.ID_ROZL_KIER_DOD_ODL);
                });

            migrationBuilder.CreateTable(
                name: "ROZL_KIER_POZ",
                columns: table => new
                {
                    ID_ROZL_KIER_POZ = table.Column<int>(type: "int", nullable: false),
                    ROZL_KIER_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PENSJA_PODST = table.Column<double>(type: "float", nullable: true),
                    KM_STAWKA = table.Column<double>(type: "float", nullable: true),
                    ILOSC_KM = table.Column<double>(type: "float", nullable: true),
                    PENSJA_KM = table.Column<double>(type: "float", nullable: true),
                    PENSJA_OD_ZLEC = table.Column<double>(type: "float", nullable: true),
                    DODATKI = table.Column<double>(type: "float", nullable: true),
                    ODLICZENIA = table.Column<double>(type: "float", nullable: true),
                    DO_WYPLATY = table.Column<double>(type: "float", nullable: true),
                    ZALICZKI = table.Column<double>(type: "float", nullable: true),
                    POZOSTALO = table.Column<double>(type: "float", nullable: true),
                    ROZLICZONO = table.Column<int>(type: "int", nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KWOTA1 = table.Column<double>(type: "float", nullable: true),
                    KWOTA2 = table.Column<double>(type: "float", nullable: true),
                    KWOTA3 = table.Column<double>(type: "float", nullable: true),
                    KWOTA4 = table.Column<double>(type: "float", nullable: true),
                    KWOTA5 = table.Column<double>(type: "float", nullable: true),
                    KWOTA6 = table.Column<double>(type: "float", nullable: true),
                    KWOTA7 = table.Column<double>(type: "float", nullable: true),
                    KWOTA8 = table.Column<double>(type: "float", nullable: true),
                    KWOTA9 = table.Column<double>(type: "float", nullable: true),
                    KWOTA10 = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ROZL_KIER_POZ", x => x.ID_ROZL_KIER_POZ);
                });

            migrationBuilder.CreateTable(
                name: "ROZL_KIER_POZ_DOD",
                columns: table => new
                {
                    ID_ROZL_KIER_POZ_DOD = table.Column<int>(type: "int", nullable: false),
                    ROZL_KIER_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    TYTUL_ID = table.Column<int>(type: "int", nullable: true),
                    TYTUL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KWOTA = table.Column<double>(type: "float", nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ROZL_KIER_POZ_DOD", x => x.ID_ROZL_KIER_POZ_DOD);
                });

            migrationBuilder.CreateTable(
                name: "ROZL_KIER_POZ_ODL",
                columns: table => new
                {
                    ID_ROZL_KIER_POZ_ODL = table.Column<int>(type: "int", nullable: false),
                    ROZL_KIER_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    TYTUL_ID = table.Column<int>(type: "int", nullable: true),
                    TYTUL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KWOTA = table.Column<double>(type: "float", nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ROZL_KIER_POZ_ODL", x => x.ID_ROZL_KIER_POZ_ODL);
                });

            migrationBuilder.CreateTable(
                name: "ROZL_KIER_POZ_ZAL",
                columns: table => new
                {
                    ID_ROZL_KIER_POZ_ZAL = table.Column<int>(type: "int", nullable: false),
                    ROZL_KIER_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    TYTUL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KWOTA = table.Column<double>(type: "float", nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ROZL_KIER_POZ_ZAL", x => x.ID_ROZL_KIER_POZ_ZAL);
                });

            migrationBuilder.CreateTable(
                name: "ROZL_KIER_POZ_ZLEC",
                columns: table => new
                {
                    ID_ROZL_KIER_POZ_ZLEC = table.Column<int>(type: "int", nullable: false),
                    ROZL_KIER_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    TYP = table.Column<int>(type: "int", nullable: true),
                    ZLECENIA_ID = table.Column<int>(type: "int", nullable: true),
                    WYJAZDY_ID = table.Column<int>(type: "int", nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    KM = table.Column<double>(type: "float", nullable: true),
                    KWOTA_WAL = table.Column<double>(type: "float", nullable: true),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KWOTA_KURS = table.Column<double>(type: "float", nullable: true),
                    KURS_DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    KWOTA_PLN = table.Column<double>(type: "float", nullable: true),
                    KWOTA_ODL_PLN = table.Column<double>(type: "float", nullable: true),
                    PROCENT_UDZIALU = table.Column<double>(type: "float", nullable: true),
                    DO_PROWIZJI = table.Column<double>(type: "float", nullable: true),
                    PROCENT = table.Column<double>(type: "float", nullable: true),
                    PROWIZJA = table.Column<double>(type: "float", nullable: true),
                    FAKTURY_ID = table.Column<int>(type: "int", nullable: true),
                    PRZELADUNEK = table.Column<int>(type: "int", nullable: true),
                    PROCENT_RECZNIE = table.Column<int>(type: "int", nullable: true),
                    SPR = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ROZL_KIER_POZ_ZLEC", x => x.ID_ROZL_KIER_POZ_ZLEC);
                });

            migrationBuilder.CreateTable(
                name: "ROZL_M_OKRESOWE",
                columns: table => new
                {
                    ID_ROZL_M_OKRESOWE = table.Column<int>(type: "int", nullable: false),
                    DATA_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    RODZAJ = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPIS = table.Column<string>(type: "text", nullable: true),
                    ILE_RAT = table.Column<int>(type: "int", nullable: true),
                    CZESTOTLIWOSC_RAT = table.Column<int>(type: "int", nullable: true),
                    KWOTA = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')"),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    FAKTURY_ID = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    FAKTURY = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SAMOCHOD_ID = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    SAMOCHOD = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    RODZ_KOSZTOW = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    ROZL = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    CZESTOTLIWOSC_RAT_K_MIES = table.Column<int>(type: "int", nullable: true),
                    DEKR_PW = table.Column<int>(type: "int", nullable: true),
                    DEKR_PW_ALG = table.Column<int>(type: "int", nullable: true),
                    DEKR_PW_WG_DATY = table.Column<int>(type: "int", nullable: true),
                    DEKR_ZLEC = table.Column<int>(type: "int", nullable: true),
                    DEKR_ZLEC_ALG = table.Column<int>(type: "int", nullable: true),
                    DEKR_ZLEC_WG_DATY = table.Column<int>(type: "int", nullable: true),
                    PROCEDURA_SQL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    AKTYWNE = table.Column<int>(type: "int", nullable: true),
                    DEKR_BEZ_LOK = table.Column<int>(type: "int", nullable: true),
                    FAKTURY_POZYCJE_ID = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ROZL_M_OKRESOWE", x => x.ID_ROZL_M_OKRESOWE);
                });

            migrationBuilder.CreateTable(
                name: "ROZL_M_OKRESOWE_POZ",
                columns: table => new
                {
                    ID_ROZL_M_OKRESOWE_POZ = table.Column<int>(type: "int", nullable: false),
                    ROZL_M_OKRESOWE_ID = table.Column<int>(type: "int", nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    KWOTA = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')"),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    ROZL = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    FAKTURY_ID = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    FAKTURY = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ROZL_M_OKRESOWE_POZ", x => x.ID_ROZL_M_OKRESOWE_POZ);
                });

            migrationBuilder.CreateTable(
                name: "ROZL_WEWN",
                columns: table => new
                {
                    ID_ROZL_WEWN = table.Column<int>(type: "int", nullable: false),
                    SP_REJESTRACJI = table.Column<int>(type: "int", nullable: true),
                    PROCESY_OKR_ID = table.Column<int>(type: "int", nullable: true),
                    RW_NR = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    RW_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    RW_ROK = table.Column<int>(type: "int", nullable: true),
                    RW_MIES = table.Column<int>(type: "int", nullable: true),
                    STATUS = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    LOKALIZACJA_NAD = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: false),
                    DZIAL_NAD = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    AKCEPT_NAD = table.Column<int>(type: "int", nullable: true),
                    AKCEPT_NAD_UZYTK_ID = table.Column<int>(type: "int", nullable: true),
                    AKCEPT_NAD_UZYTK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    AKCEPT_NAD_DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    AKCEPT_NAD_GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    LOKALIZACJA_ODB = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: false),
                    DZIAL_ODB = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    AKCEPT_ODB = table.Column<int>(type: "int", nullable: true),
                    AKCEPT_ODB_UZYTK_ID = table.Column<int>(type: "int", nullable: true),
                    AKCEPT_ODB_UZYTK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    AKCEPT_ODB_DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    AKCEPT_ODB_GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    TECZKA_ID = table.Column<int>(type: "int", nullable: true),
                    TECZKA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TECZKA_ODB_ID = table.Column<int>(type: "int", nullable: true),
                    TECZKA_ODB = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TRAFIK_ID = table.Column<int>(type: "int", nullable: true),
                    TRAFIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZLECENIE_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PRZESYLKA_ID = table.Column<int>(type: "int", nullable: true),
                    PRZESYLKA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    LIST_LINIOWY_ID = table.Column<int>(type: "int", nullable: true),
                    LIST_LINIOWY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    WYJAZD_ID = table.Column<int>(type: "int", nullable: true),
                    WYJAZD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    TABOR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KIEROWCA_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ROZL_WEWN_SIECI_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    DATA_WYSTAWIENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KURSY_WALUT_ID = table.Column<int>(type: "int", nullable: true),
                    KURSY_WALUT_TYP = table.Column<int>(type: "int", nullable: true),
                    KURSY_WALUT_RODZ = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    KURS_WALUTY = table.Column<double>(type: "float", nullable: false, defaultValueSql: "('1')"),
                    NR_TABELI_KURSOW = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    DATA_TABELI_KURSOW = table.Column<DateTime>(type: "datetime", nullable: true),
                    KWOTA_W_WAL = table.Column<double>(type: "float", nullable: true),
                    KWOTA_W_PLN = table.Column<double>(type: "float", nullable: true),
                    OPIS_ID = table.Column<int>(type: "int", nullable: true),
                    OPIS = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    OPIS_DOD = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    UWAGI = table.Column<string>(type: "text", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    PROMY_ID = table.Column<int>(type: "int", nullable: true),
                    PROMY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZLECENIA_POZ_FAKT_ID = table.Column<int>(type: "int", nullable: true),
                    KALKULACJA_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE_ODB_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE_ODB = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZLECENIA_POZ_FAKT_ODB_ID = table.Column<int>(type: "int", nullable: true),
                    PRZESYLKA_ODB_ID = table.Column<int>(type: "int", nullable: true),
                    PRZESYLKA_ODB = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KALKULACJA_ODB_ID = table.Column<int>(type: "int", nullable: true),
                    LIST_LINIOWY_ODB_ID = table.Column<int>(type: "int", nullable: true),
                    LIST_LINIOWY_ODB = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PROMY_ODB_ID = table.Column<int>(type: "int", nullable: true),
                    PROMY_ODB = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SZKODA_ID = table.Column<int>(type: "int", nullable: true),
                    SZKODA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    RODZ_KOSZTOW = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    RODZ_PRZYCHODOW = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    ZLECENIE_M_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE_M = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZLECENIE_C_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE_C = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZLECENIE_M_ODB_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE_M_ODB = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZLECENIE_C_ODB_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE_C_ODB = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZLECENIE_RAIL_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE_RAIL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZLECENIE_RAIL_ODB_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE_RAIL_ODB = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ROZL_WEWN", x => x.ID_ROZL_WEWN);
                });

            migrationBuilder.CreateTable(
                name: "ROZL_WEWN_SIECI",
                columns: table => new
                {
                    ID_ROZL_WEWN_SIECI = table.Column<int>(type: "int", nullable: false),
                    DATA_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    TYP = table.Column<int>(type: "int", nullable: true),
                    WG_DATY = table.Column<int>(type: "int", nullable: true),
                    CENNIK_ID = table.Column<int>(type: "int", nullable: true),
                    CENNIK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    UWAGI = table.Column<string>(type: "text", nullable: true),
                    STATUS = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    CENNIK_SZUKAJ_ID = table.Column<int>(type: "int", nullable: true),
                    CENNIK_SZUKAJ = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ROZL_WEWN_SIECI", x => x.ID_ROZL_WEWN_SIECI);
                });

            migrationBuilder.CreateTable(
                name: "ROZL_WEWN_SIECI_POZ",
                columns: table => new
                {
                    ID_ROZL_WEWN_SIECI_POZ = table.Column<int>(type: "int", nullable: false),
                    ROZL_WEWN_SIECI_ID = table.Column<int>(type: "int", nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    OBIEKT_TYP = table.Column<int>(type: "int", nullable: true),
                    OBIEKT_ID = table.Column<int>(type: "int", nullable: true),
                    OBIEKT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ROZL_WEWN_SIECI_POZ", x => x.ID_ROZL_WEWN_SIECI_POZ);
                });

            migrationBuilder.CreateTable(
                name: "ROZL_WEWN_SIECI_STAT",
                columns: table => new
                {
                    ID_ROZL_WEWN_SIECI_STAT = table.Column<int>(type: "int", nullable: false),
                    ROZL_WEWN_SIECI_ID = table.Column<int>(type: "int", nullable: true),
                    STATUS_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    STATUS_OPIS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ROZL_WEWN_SIECI_STAT", x => x.ID_ROZL_WEWN_SIECI_STAT);
                });

            migrationBuilder.CreateTable(
                name: "SaveSimulationToReport",
                schema: "opti",
                columns: table => new
                {
                    SessionId = table.Column<int>(type: "int", nullable: true),
                    MacierzZleceniaTaborId = table.Column<int>(type: "int", nullable: true),
                    StatisticName = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    StatisticValue = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "ScaleConfiguration",
                schema: "scan",
                columns: table => new
                {
                    ScaleConfigurationId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    VariableId = table.Column<int>(type: "int", nullable: false),
                    Name = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    Hint = table.Column<string>(type: "nvarchar(500)", maxLength: 500, nullable: true),
                    Value = table.Column<byte[]>(type: "varbinary(max)", nullable: true),
                    DefaultValue = table.Column<byte[]>(type: "varbinary(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ScaleConfiguration", x => x.ScaleConfigurationId);
                });

            migrationBuilder.CreateTable(
                name: "ScannerConfiguration",
                schema: "scan",
                columns: table => new
                {
                    ScannerConfigurationId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    VariableId = table.Column<int>(type: "int", nullable: false),
                    Name = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    Hint = table.Column<string>(type: "nvarchar(500)", maxLength: 500, nullable: true),
                    Value = table.Column<byte[]>(type: "varbinary(max)", nullable: true),
                    DefaultValue = table.Column<byte[]>(type: "varbinary(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ScannerConfiguration", x => x.ScannerConfigurationId);
                });

            migrationBuilder.CreateTable(
                name: "SchemaAccess",
                schema: "olap",
                columns: table => new
                {
                    SchemaAccessId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    AppSchemaId = table.Column<int>(type: "int", nullable: false),
                    OlapGroupId = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SchemaAccess", x => x.SchemaAccessId);
                });

            migrationBuilder.CreateTable(
                name: "Sensor",
                schema: "rest",
                columns: table => new
                {
                    SensorId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    Category = table.Column<int>(type: "int", nullable: true),
                    MinTime = table.Column<int>(type: "int", nullable: true),
                    MinDistance = table.Column<int>(type: "int", nullable: true),
                    Sleep = table.Column<int>(type: "int", nullable: true),
                    Order = table.Column<int>(type: "int", nullable: true),
                    Active = table.Column<int>(type: "int", nullable: true),
                    DeviceInfo = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    Detail1 = table.Column<int>(type: "int", nullable: true),
                    Detail2 = table.Column<int>(type: "int", nullable: true),
                    Detail3 = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Sensor", x => x.SensorId);
                });

            migrationBuilder.CreateTable(
                name: "Sent1306",
                schema: "sent",
                columns: table => new
                {
                    Sent1306Id = table.Column<int>(type: "int", nullable: false),
                    Code = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    Droga = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    Description = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    Tonaz = table.Column<string>(type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    Rodzaj = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    Typ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    Droga_z = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    Latitude = table.Column<double>(type: "float", nullable: true),
                    Longitude = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Sent1306", x => x.Sent1306Id);
                });

            migrationBuilder.CreateTable(
                name: "SentMain",
                schema: "sent",
                columns: table => new
                {
                    SentMainId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Month = table.Column<int>(type: "int", nullable: false),
                    Year = table.Column<int>(type: "int", nullable: false),
                    ObjId = table.Column<int>(type: "int", nullable: true),
                    RecId = table.Column<int>(type: "int", nullable: true),
                    SentNumber = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    SenderKey = table.Column<string>(type: "varchar(7)", unicode: false, maxLength: 7, nullable: true),
                    RecipientKey = table.Column<string>(type: "varchar(7)", unicode: false, maxLength: 7, nullable: true),
                    CarrierKey = table.Column<string>(type: "varchar(7)", unicode: false, maxLength: 7, nullable: true),
                    CreationDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Creator = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    ModificationData = table.Column<DateTime>(type: "datetime", nullable: true),
                    Modifier = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    SentId = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    SourceDocumentId = table.Column<string>(type: "varchar(70)", unicode: false, maxLength: 70, nullable: true),
                    ChecksumOfSourceDocument = table.Column<string>(type: "varchar(120)", unicode: false, maxLength: 120, nullable: true),
                    IncomingNumber = table.Column<string>(type: "varchar(70)", unicode: false, maxLength: 70, nullable: true),
                    SentStatus = table.Column<int>(type: "int", nullable: true),
                    GoodsCodeCnClassification = table.Column<string>(type: "varchar(8)", unicode: false, maxLength: 8, nullable: true),
                    GoodsCodePkwiuClassification = table.Column<string>(type: "varchar(17)", unicode: false, maxLength: 17, nullable: true),
                    GoodsName = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true),
                    GoodsAmount = table.Column<double>(type: "float", nullable: true),
                    GoodsUnitOfMeasure = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true),
                    GoodsGrossWeightOfGoods = table.Column<double>(type: "float", nullable: true),
                    GoodsTypeOfTransportDocument = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    GoodsNumberOfTransportDocument = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    MeansOfTransportTruckNumber = table.Column<string>(type: "varchar(12)", unicode: false, maxLength: 12, nullable: true),
                    MeansOfTransportTrailerNumber = table.Column<string>(type: "varchar(12)", unicode: false, maxLength: 12, nullable: true),
                    MeansOfTransportPermitRoad = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    EntranceRoutePlace = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    EntranceRouteNumber = table.Column<string>(type: "varchar(8)", unicode: false, maxLength: 8, nullable: true),
                    EntranceDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ExitRoutePlace = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    ExitRouteNumber = table.Column<string>(type: "varchar(8)", unicode: false, maxLength: 8, nullable: true),
                    ExitDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Comments = table.Column<string>(type: "text", nullable: true),
                    DocumentId = table.Column<string>(type: "varchar(70)", unicode: false, maxLength: 70, nullable: true),
                    ResponseEmailAddress1 = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    ResponseEmailAddress2 = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    ResponseEmailAddress3 = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    Statement = table.Column<int>(type: "int", nullable: true),
                    FirstName = table.Column<string>(type: "varchar(80)", unicode: false, maxLength: 80, nullable: true),
                    LastName = table.Column<string>(type: "varchar(80)", unicode: false, maxLength: 80, nullable: true),
                    EmergencyProcedure = table.Column<int>(type: "int", nullable: true),
                    StartTransportDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    EndTransportDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    MultipleSentNumber = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    TypeOfTransport = table.Column<int>(type: "int", nullable: true),
                    DeliveredAmountOfGoods = table.Column<double>(type: "float", nullable: true),
                    GeoLocatorNumber = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    FailoverGeoLocatorNumber = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    FailoverCarrierEmail = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    ExitProvince = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ExitLatitude = table.Column<double>(type: "float", nullable: true),
                    ExitLongitude = table.Column<double>(type: "float", nullable: true),
                    EntranceProvince = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    EntranceLatitude = table.Column<double>(type: "float", nullable: true),
                    EntranceLongitude = table.Column<double>(type: "float", nullable: true),
                    VATRate = table.Column<string>(type: "varchar(6)", unicode: false, maxLength: 6, nullable: true),
                    TypeOfDeclaration = table.Column<int>(type: "int", nullable: true),
                    EntranceType = table.Column<int>(type: "int", nullable: true, defaultValueSql: "((0))"),
                    ExitType = table.Column<int>(type: "int", nullable: true, defaultValueSql: "((0))"),
                    EntranceOtherPlace = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    ExitOtherPlace = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    IsEntrance = table.Column<int>(type: "int", nullable: true, defaultValueSql: "((0))"),
                    IsExit = table.Column<int>(type: "int", nullable: true, defaultValueSql: "((0))")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SentMain", x => x.SentMainId);
                });

            migrationBuilder.CreateTable(
                name: "SentMsg",
                schema: "sent",
                columns: table => new
                {
                    SentMsgId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SentMainId = table.Column<int>(type: "int", nullable: false),
                    CtxObjId = table.Column<int>(type: "int", nullable: true),
                    CtxRecId = table.Column<int>(type: "int", nullable: true),
                    SentMsg = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    Type = table.Column<int>(type: "int", nullable: false),
                    InOut = table.Column<int>(type: "int", nullable: false),
                    Lp = table.Column<int>(type: "int", nullable: true),
                    SendXML = table.Column<string>(type: "text", nullable: true),
                    SendDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    SendConfirmed = table.Column<int>(type: "int", nullable: true),
                    Month = table.Column<int>(type: "int", nullable: false),
                    Year = table.Column<int>(type: "int", nullable: false),
                    CarrierId = table.Column<int>(type: "int", nullable: true),
                    CarrierIdSisc = table.Column<string>(type: "varchar(17)", unicode: false, maxLength: 17, nullable: true),
                    CarrierName = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    CarrierIdentityType = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    CarrierIdentityNumber = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    CarrierStreet = table.Column<string>(type: "varchar(80)", unicode: false, maxLength: 80, nullable: true),
                    CarrierHouseNumber = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    CarrierFlatNumber = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    CarrierCity = table.Column<string>(type: "varchar(52)", unicode: false, maxLength: 52, nullable: true),
                    CarrierCountry = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    CarrierPostalCode = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    StartTransportDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    EndTransportDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    SentStatus = table.Column<int>(type: "int", nullable: true),
                    GoodsTypeOfTransportDocument = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    GoodsNumberOfTransportDocument = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    MeansOfTransportTruckNumber = table.Column<string>(type: "varchar(12)", unicode: false, maxLength: 12, nullable: true),
                    MeansOfTransportTrailerNumber = table.Column<string>(type: "varchar(12)", unicode: false, maxLength: 12, nullable: true),
                    MeansOfTransportPermitRoad = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    EntranceRoutePlace = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    EntranceRouteNumber = table.Column<string>(type: "varchar(8)", unicode: false, maxLength: 8, nullable: true),
                    EntranceDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ExitRoutePlace = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    ExitRouteNumber = table.Column<string>(type: "varchar(8)", unicode: false, maxLength: 8, nullable: true),
                    ExitDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Comments = table.Column<string>(type: "text", nullable: true),
                    DocumentId = table.Column<string>(type: "varchar(70)", unicode: false, maxLength: 70, nullable: true),
                    ResponseEmailAddress1 = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    ResponseEmailAddress2 = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    ResponseEmailAddress3 = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    Statement = table.Column<int>(type: "int", nullable: true),
                    FirstName = table.Column<string>(type: "varchar(80)", unicode: false, maxLength: 80, nullable: true),
                    LastName = table.Column<string>(type: "varchar(80)", unicode: false, maxLength: 80, nullable: true),
                    ComplianceIsCompliance = table.Column<int>(type: "int", nullable: true),
                    ComplianceTypeOfNonCompliance = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    CloseTransportDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ErrorText = table.Column<string>(type: "text", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    GeoLocatorNumber = table.Column<string>(type: "varchar(12)", unicode: false, maxLength: 12, nullable: true),
                    FailoverGeoLocatorNumber = table.Column<string>(type: "varchar(12)", unicode: false, maxLength: 12, nullable: true),
                    FailoverCarrierEmail = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    ExitOtherPlace = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    ExitProvince = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ExitLatitude = table.Column<double>(type: "float", nullable: true),
                    ExitLongitude = table.Column<double>(type: "float", nullable: true),
                    EntranceProvince = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    EntranceLatitude = table.Column<double>(type: "float", nullable: true),
                    EntranceLongitude = table.Column<double>(type: "float", nullable: true),
                    EntranceOtherPlace = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    IsEntrance = table.Column<int>(type: "int", nullable: true, defaultValueSql: "((0))"),
                    IsExit = table.Column<int>(type: "int", nullable: true, defaultValueSql: "((0))"),
                    EntranceType = table.Column<int>(type: "int", nullable: true, defaultValueSql: "((0))"),
                    ExitType = table.Column<int>(type: "int", nullable: true, defaultValueSql: "((0))"),
                    Statement2 = table.Column<int>(type: "int", nullable: true, defaultValueSql: "((0))"),
                    Statement3 = table.Column<int>(type: "int", nullable: true, defaultValueSql: "((0))"),
                    Statement4 = table.Column<int>(type: "int", nullable: true, defaultValueSql: "((0))"),
                    Statement5 = table.Column<int>(type: "int", nullable: true, defaultValueSql: "((0))"),
                    Statement6 = table.Column<int>(type: "int", nullable: true, defaultValueSql: "((0))"),
                    Statement7 = table.Column<int>(type: "int", nullable: true, defaultValueSql: "((0))")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SentMsg", x => x.SentMsgId);
                });

            migrationBuilder.CreateTable(
                name: "SentMsgExt",
                schema: "sent",
                columns: table => new
                {
                    SentMsgExtId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SentMsgId = table.Column<int>(type: "int", nullable: false),
                    Lp = table.Column<int>(type: "int", nullable: false),
                    GoodsCodeEanClassification = table.Column<string>(type: "varchar(13)", unicode: false, maxLength: 13, nullable: true),
                    GoodsCodeEanClassificationDesc = table.Column<string>(type: "varchar(4000)", unicode: false, maxLength: 4000, nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SentMsgExt", x => x.SentMsgExtId);
                });

            migrationBuilder.CreateTable(
                name: "SentMsgGasPumps",
                schema: "sent",
                columns: table => new
                {
                    SentMsgGasPumpsId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SentMsgId = table.Column<int>(type: "int", nullable: false),
                    Lp = table.Column<int>(type: "int", nullable: false),
                    GasPumpNumber = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    GasPumpMeter = table.Column<double>(type: "float", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SentMsgGasPumpsId", x => x.SentMsgGasPumpsId);
                });

            migrationBuilder.CreateTable(
                name: "SentTrader",
                schema: "sent",
                columns: table => new
                {
                    SentTraderId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SentMainId = table.Column<int>(type: "int", nullable: false),
                    Type = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: false),
                    IdSisc = table.Column<string>(type: "varchar(17)", unicode: false, maxLength: 17, nullable: true),
                    TraderName = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    TraderIdentityType = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    TraderIdentityNumber = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    PlannedStartCarriageDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    TraderId = table.Column<int>(type: "int", nullable: true),
                    Street = table.Column<string>(type: "varchar(80)", unicode: false, maxLength: 80, nullable: true),
                    HouseNumber = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    FlatNumber = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    City = table.Column<string>(type: "varchar(52)", unicode: false, maxLength: 52, nullable: true),
                    Country = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    PostalCode = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    EmailAddress = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    NumberOfLicense = table.Column<string>(type: "varchar(70)", unicode: false, maxLength: 70, nullable: true),
                    AuthorityName = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    Latitude = table.Column<double>(type: "float", nullable: true),
                    Longitude = table.Column<double>(type: "float", nullable: true),
                    Province = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    OilHeatingAddressId = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SentTrader", x => x.SentTraderId);
                });

            migrationBuilder.CreateTable(
                name: "SERVICE_CHECK",
                columns: table => new
                {
                    ID_SERVICE_CHECK = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SERVICE_CODE = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: false, defaultValueSql: "('')", comment: "Kod serwisu"),
                    SERVICE_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: false, defaultValueSql: "('')", comment: "Pełna nazwa serwisu"),
                    LAST_RUN = table.Column<DateTime>(type: "datetime", nullable: true, comment: "DataCzas ostatniego uruchomienia"),
                    ALARM_AFTER = table.Column<int>(type: "int", nullable: true, comment: "Liczba minut od ostatniej aktywności, która inicjuje alarm")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SERVICE_CHECK", x => x.ID_SERVICE_CHECK);
                });

            migrationBuilder.CreateTable(
                name: "SEZONY",
                columns: table => new
                {
                    ID_SEZONY = table.Column<int>(type: "int", nullable: false),
                    NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Nazwa sezonu"),
                    SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Symbol sezonu"),
                    AKTYWNY = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy sezon jest aktywny"),
                    STY = table.Column<int>(type: "int", nullable: true, comment: "Styczeń"),
                    LUT = table.Column<int>(type: "int", nullable: true, comment: "Luty"),
                    MAR = table.Column<int>(type: "int", nullable: true, comment: "Marzec"),
                    KWI = table.Column<int>(type: "int", nullable: true, comment: "Kwiecień"),
                    MAJ = table.Column<int>(type: "int", nullable: true, comment: "Maj"),
                    CZE = table.Column<int>(type: "int", nullable: true, comment: "Czerwiec"),
                    LIP = table.Column<int>(type: "int", nullable: true, comment: "Lipiec"),
                    SIE = table.Column<int>(type: "int", nullable: true, comment: "Sierpień"),
                    WRZ = table.Column<int>(type: "int", nullable: true, comment: "Wrzesień"),
                    PAZ = table.Column<int>(type: "int", nullable: true, comment: "Październik"),
                    LIS = table.Column<int>(type: "int", nullable: true, comment: "Listopad"),
                    GRU = table.Column<int>(type: "int", nullable: true, comment: "Grudzień")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SEZONY", x => x.ID_SEZONY);
                },
                comment: "Definicje sezonów akywności kontrahentów");

            migrationBuilder.CreateTable(
                name: "SFM_ACTIVITY",
                columns: table => new
                {
                    ID_SFM_ACTIVITY = table.Column<int>(type: "int", nullable: false),
                    TYP_TERM = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "typ terminala"),
                    ID_SFM_POS = table.Column<int>(type: "int", nullable: true, comment: "id pozycji GPS"),
                    ID_SFM_SYSTEM = table.Column<int>(type: "int", nullable: true, comment: "ID systemu telematycznego"),
                    ID_SFM_TERM = table.Column<int>(type: "int", nullable: true, comment: "id terminala"),
                    ID_TABOR = table.Column<int>(type: "int", nullable: true, comment: "id taboru SPEED"),
                    ID_KIEROWCY1 = table.Column<int>(type: "int", nullable: true, comment: "id 1. kierowcy SPEED"),
                    ID_KIEROWCY2 = table.Column<int>(type: "int", nullable: true, comment: "id 2. kierowcy SPEED"),
                    DT_SAVE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas utworzenia / zapisu do BD"),
                    DT_START = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas początku aktywności"),
                    DT_STOP = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas końca aktywności"),
                    LID = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: true, comment: "unikalne ID aktywności w syst.zewn."),
                    ACTIVITY = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "kod aktywności w syst.zewn."),
                    ACTIVITY_ID = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "ident. aktywności w syst.zewn."),
                    DRIVE_DURATION = table.Column<int>(type: "int", nullable: true, comment: "czas trwania jazdy [s]"),
                    LKM_START = table.Column<int>(type: "int", nullable: true, comment: "początkowy licznik kilometrów [km]"),
                    LKM_STOP = table.Column<int>(type: "int", nullable: true, comment: "końcowy licznik kilometrów [km]"),
                    TFU_START = table.Column<int>(type: "int", nullable: true, comment: "początkowy stan zużytego paliwa [L]"),
                    TFU_STOP = table.Column<int>(type: "int", nullable: true, comment: "końcowy stan zużytego paliwa [L]")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_ACTIVITY", x => x.ID_SFM_ACTIVITY);
                });

            migrationBuilder.CreateTable(
                name: "SFM_ACTIVITY_DRV",
                columns: table => new
                {
                    ID_SFM_ACTIVITY_DRV = table.Column<int>(type: "int", nullable: false),
                    ID_SFM_ACTIVITY = table.Column<int>(type: "int", nullable: true, comment: "id aktywności pojazdu"),
                    ID_KIEROWCY = table.Column<int>(type: "int", nullable: true, comment: "id kierowcy"),
                    DT_START = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas dołączenia do aktywności"),
                    DT_STOP = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas wyłączenia z aktywności"),
                    LOGINMODE = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true, comment: "\"D\"-kierowca/\"P\"-pasażer")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_ACTIVITY_DRV", x => x.ID_SFM_ACTIVITY_DRV);
                });

            migrationBuilder.CreateTable(
                name: "SFM_ALARM",
                columns: table => new
                {
                    ID_SFM_ALARM = table.Column<int>(type: "int", nullable: false),
                    ID_SFM_SYSTEM = table.Column<int>(type: "int", nullable: true, comment: "źródło: ID systemu telematycznego"),
                    ID_SFM_MSG = table.Column<int>(type: "int", nullable: true),
                    ID_SFM_TERM = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    TYP_TERM = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    SYMBOL_TERM = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    ID_SFM_TABOR = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ID_TABOR = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    NR_REJ = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_INWENT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ID_KIEROWCY = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ID_GRUPY = table.Column<int>(type: "int", nullable: true),
                    ID_UZYTK = table.Column<int>(type: "int", nullable: true),
                    NAZWAUZYTK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ID_ZLECENIA = table.Column<int>(type: "int", nullable: true),
                    NRZLEC = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ID_ZA = table.Column<int>(type: "int", nullable: true),
                    ID_WY = table.Column<int>(type: "int", nullable: true),
                    ID_SFM_POS = table.Column<int>(type: "int", nullable: true),
                    TYP = table.Column<int>(type: "int", nullable: true),
                    ZRODLO = table.Column<short>(type: "smallint", nullable: true),
                    SYSTEMOWY = table.Column<short>(type: "smallint", nullable: true),
                    POPUP = table.Column<short>(type: "smallint", nullable: true),
                    TEKST = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    STATUS = table.Column<short>(type: "smallint", nullable: true),
                    DT_ZAPIS = table.Column<DateTime>(type: "datetime", nullable: true),
                    DT_ALARM = table.Column<DateTime>(type: "datetime", nullable: true),
                    DT_START = table.Column<DateTime>(type: "datetime", nullable: true),
                    DT_KONIEC = table.Column<DateTime>(type: "datetime", nullable: true),
                    S_ID_UZYTK = table.Column<int>(type: "int", nullable: true),
                    S_NAZWAUZYTK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    K_ID_UZYTK = table.Column<int>(type: "int", nullable: true),
                    K_NAZWAUZYTK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_ALARM", x => x.ID_SFM_ALARM);
                });

            migrationBuilder.CreateTable(
                name: "SFM_ALARM_POPUP",
                columns: table => new
                {
                    ID_SFM_ALARM_POPUP = table.Column<int>(type: "int", nullable: false),
                    ID_SFM_ALARM = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ID_UZYTK = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    DT_ZAPIS = table.Column<DateTime>(type: "datetime", nullable: true),
                    DT_TERMIN = table.Column<DateTime>(type: "datetime", nullable: true),
                    DT_ODCZYT = table.Column<DateTime>(type: "datetime", nullable: true),
                    PRZECZYTANY = table.Column<short>(type: "smallint", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_ALARM_POPUP", x => x.ID_SFM_ALARM_POPUP);
                });

            migrationBuilder.CreateTable(
                name: "SFM_ALERT",
                columns: table => new
                {
                    ID_SFM_ALERT = table.Column<int>(type: "int", nullable: false),
                    ZROBIONE = table.Column<short>(type: "smallint", nullable: true, comment: "0/1-czy przetworzone/ 2-pominięte"),
                    TYP_TERM = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "typ terminala"),
                    ID_SFM_SYSTEM = table.Column<int>(type: "int", nullable: true, comment: "ID systemu telematycznego"),
                    ID_SFM_TERM = table.Column<int>(type: "int", nullable: true, comment: "id terminala"),
                    ID_SFM_POS = table.Column<int>(type: "int", nullable: true, comment: "id pozycji GPS"),
                    ID_SFM_MSG = table.Column<int>(type: "int", nullable: true, comment: "id utworzonego alertu"),
                    ID_TABOR = table.Column<int>(type: "int", nullable: true, comment: "id taboru SPEED"),
                    ID_NACZEPY = table.Column<int>(type: "int", nullable: true, comment: "id naczepy taboru SPEED"),
                    ID_KIEROWCY = table.Column<int>(type: "int", nullable: true, comment: "id kierowcy SPEED"),
                    ID_SFM_GEOFENCE = table.Column<int>(type: "int", nullable: true, comment: "id utworzonego zdarzenia geofencingu"),
                    DT_SAVE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas utworzenia / zapisu do BD"),
                    DT_EVENT = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas zdarzenia"),
                    LON = table.Column<double>(type: "float", nullable: true, comment: "gps zdarzenia: LON"),
                    LAT = table.Column<double>(type: "float", nullable: true, comment: "gps zdarzenia: LAT"),
                    ALARM_TYPE = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "typ alarmu"),
                    ALARM_MSG = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "treść alarmu")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_ALERT", x => x.ID_SFM_ALERT);
                });

            migrationBuilder.CreateTable(
                name: "SFM_COSTS",
                columns: table => new
                {
                    ID_SFM_COSTS = table.Column<int>(type: "int", nullable: false),
                    ID_SFM_SYSTEM = table.Column<int>(type: "int", nullable: true),
                    ID_SFM_TERM = table.Column<int>(type: "int", nullable: true),
                    TYP_TERM = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    ID_TABOR = table.Column<int>(type: "int", nullable: true),
                    REC_ID = table.Column<string>(type: "varchar(25)", unicode: false, maxLength: 25, nullable: true),
                    COSTTYPE = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    DT_EVENT = table.Column<DateTime>(type: "datetime", nullable: true),
                    DT_SAVE = table.Column<DateTime>(type: "datetime", nullable: true),
                    ODOMETER = table.Column<double>(type: "float", nullable: true),
                    DURATION = table.Column<int>(type: "int", nullable: true),
                    ARTICLE_CNT = table.Column<double>(type: "float", nullable: true),
                    ARTICLE_UNIT = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true),
                    COSTCUR = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    COSTVAL = table.Column<double>(type: "float", nullable: true),
                    BASE_COSTCUR = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    BASE_COSTVAL = table.Column<double>(type: "float", nullable: true),
                    RODZ_PLATN = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    RACHUNEK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    INFO = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    STAN = table.Column<int>(type: "int", nullable: true),
                    TANK_DO_PELNA = table.Column<int>(type: "int", nullable: true),
                    FAKTURA_ID = table.Column<int>(type: "int", nullable: true),
                    FAKTURA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZLECENIE_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    WYJAZD_ID = table.Column<int>(type: "int", nullable: true),
                    WYJAZD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    FORMA_PLATNOSCI = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    KARTA_ID = table.Column<int>(type: "int", nullable: true),
                    KARTA_TYP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    KARTA_NR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DELEGACJA_ID = table.Column<int>(type: "int", nullable: true),
                    DELEGACJA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZALICZKA_ID = table.Column<int>(type: "int", nullable: true),
                    ZALICZKA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NOTREADY = table.Column<short>(type: "smallint", nullable: true),
                    COSTCODE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KIEROWCA_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    KRAJ_KOSZTU = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    ID_SFM_POS = table.Column<int>(type: "int", nullable: true),
                    OP_STATUS = table.Column<int>(type: "int", nullable: true),
                    OP_UWAGI = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DEKRET = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REJ_RECZNA = table.Column<int>(type: "int", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    LISTY_LINIOWE_ID = table.Column<int>(type: "int", nullable: true),
                    LISTY_LINIOWE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: true),
                    KONTRAH = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FV = table.Column<int>(type: "int", nullable: true),
                    KARTY_TRANSAKCJE_ID = table.Column<int>(type: "int", nullable: true),
                    ZATW_UZYTK_ID = table.Column<int>(type: "int", nullable: true),
                    ZATW_DT = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true, comment: "Liczba załączników")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_COSTS", x => x.ID_SFM_COSTS);
                });

            migrationBuilder.CreateTable(
                name: "SFM_DRV_SESSION",
                columns: table => new
                {
                    ID_SFM_DRV_SESSION = table.Column<int>(type: "int", nullable: false),
                    STATUS = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "0-zalogowany/1-wylogowany"),
                    ID_KIEROWCY = table.Column<int>(type: "int", nullable: true, comment: "id kierowcy SPEED"),
                    ID_TABOR = table.Column<int>(type: "int", nullable: true, comment: "id taboru SPEED"),
                    ID_SFM_TERM = table.Column<int>(type: "int", nullable: true, comment: "id terminala"),
                    ID_SFM_SYSTEM = table.Column<int>(type: "int", nullable: true, comment: "ID systemu telematycznego"),
                    DRIVERID = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "identyfikator kierowcy"),
                    LOGINTYPE = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "rodzaj logowania: \"PWD\"-hasło/\"ID\"-id_karty/\"AUTO\"/\"SWITCH\""),
                    LOGINMODE = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true, comment: "\"D\"-kierowca/\"P\"-pasażer"),
                    DT_LOGIN = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas zalogowania kierowcy"),
                    DT_START = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas początku pracy w LoginMode"),
                    DT_STOP = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas końca pracy w LoginMode")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_DRV_SESSION", x => x.ID_SFM_DRV_SESSION);
                });

            migrationBuilder.CreateTable(
                name: "SFM_ETA",
                columns: table => new
                {
                    ID_SFM_ETA = table.Column<int>(type: "int", nullable: false),
                    ID_SFM_SYSTEM = table.Column<int>(type: "int", nullable: true, comment: "ID systemu telematycznego"),
                    ID_SFM_TERM = table.Column<int>(type: "int", nullable: true, comment: "id terminala"),
                    ID_SFM_POS = table.Column<int>(type: "int", nullable: true, comment: "id pozycji GPS"),
                    TYP_TERM = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "typ terminala"),
                    ID_TABOR = table.Column<int>(type: "int", nullable: true, comment: "id taboru SPEED"),
                    ID_NACZEPY = table.Column<int>(type: "int", nullable: true, comment: "id naczepy taboru SPEED"),
                    ID_KIEROWCY = table.Column<int>(type: "int", nullable: true, comment: "id kierowcy SPEED"),
                    ZROBIONE = table.Column<short>(type: "smallint", nullable: true, comment: "0/1-czy przetworzone/ 2-pominięte"),
                    DT_SAVE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas utworzenia / zapisu do BD"),
                    DT_EVENT = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas zdarzenia"),
                    DT_ETA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "planowany termin dotarcia na miejsce"),
                    ID_OBJ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "obiekt - id tablicy"),
                    ID_REC = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "id w obiekcie (patrz ID_OBJ)"),
                    ID_SFM_MSG = table.Column<int>(type: "int", nullable: true, comment: "id utworzonego alertu"),
                    SRC_LON = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')", comment: "gps:LON miejsca startowego"),
                    SRC_LAT = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')", comment: "gps:LAT miejsca startowego"),
                    DEST_LON = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')", comment: "gps:LON miejsca docelowego"),
                    DEST_LAT = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')", comment: "gps:LAT miejsca docelowego"),
                    DEST_DIST = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')", comment: "odległość do miejsca docelowego"),
                    ID_Kierowcy2 = table.Column<int>(type: "int", nullable: true, comment: "id kierowcy 2 SPEED"),
                    Drive_TIME = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')", comment: "wymagany czas dojazdu do miejsca docelowego [dni]"),
                    Wait = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "oczekiwanie na zdarzenie w minutach"),
                    Delay = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "spóźnienie na zdarzenie w minutach")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_ETA", x => x.ID_SFM_ETA);
                });

            migrationBuilder.CreateTable(
                name: "SFM_EVENT_PARAM",
                columns: table => new
                {
                    ID_SFM_EVENT_PARAM = table.Column<int>(type: "int", nullable: false),
                    ID_TABOR = table.Column<int>(type: "int", nullable: true, comment: "id taboru SPEED"),
                    ID_SFM_TERM = table.Column<int>(type: "int", nullable: true, comment: "id terminala"),
                    OPERATOR = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "typ terminala"),
                    DT_REJ = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas rejestracji"),
                    TYP = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true, comment: "E-Event; P-Param"),
                    KOD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "kod zdarzenia/parametru"),
                    ID_SFM_Pos = table.Column<int>(type: "int", nullable: true, comment: "id pozycji gps"),
                    Wartosc = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "wartość parametru")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_EVENT_PARAM", x => x.ID_SFM_EVENT_PARAM);
                });

            migrationBuilder.CreateTable(
                name: "SFM_EVENT_PARAM_EXT",
                columns: table => new
                {
                    ID_SFM_EVENT_PARAM = table.Column<int>(type: "int", nullable: false),
                    OPIS = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "opis zdarzenia/ wartość parametru")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_EVENT_PARAM_EXT", x => x.ID_SFM_EVENT_PARAM);
                });

            migrationBuilder.CreateTable(
                name: "SFM_EVENT_SIE",
                columns: table => new
                {
                    ID_SFM_EVENT = table.Column<int>(type: "int", nullable: false),
                    ID_SFM_SYSTEM = table.Column<int>(type: "int", nullable: true, comment: "ID systemu w bazie SFM"),
                    RECID = table.Column<long>(type: "bigint", nullable: true),
                    VEHID = table.Column<int>(type: "int", nullable: true),
                    DRIVERID = table.Column<int>(type: "int", nullable: true),
                    DT_START = table.Column<DateTime>(type: "datetime", nullable: true),
                    DT_STOP = table.Column<DateTime>(type: "datetime", nullable: true),
                    EVENTTYPE = table.Column<short>(type: "smallint", nullable: true),
                    DISTANCE = table.Column<int>(type: "int", nullable: true),
                    STARTPOSID = table.Column<int>(type: "int", nullable: true),
                    STARTODOMETER = table.Column<int>(type: "int", nullable: true),
                    ENDPOSID = table.Column<int>(type: "int", nullable: true),
                    ENDODOMETER = table.Column<int>(type: "int", nullable: true),
                    DESCRIPTIONID = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DESCRIPTION = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    FUELUSED = table.Column<int>(type: "int", nullable: true),
                    OCCURRANCES = table.Column<int>(type: "int", nullable: true),
                    TOTALDURATION = table.Column<int>(type: "int", nullable: true),
                    VALUESTR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    VALUEFMT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_EVENT_SIE", x => x.ID_SFM_EVENT);
                });

            migrationBuilder.CreateTable(
                name: "SFM_EVENTS_LOG",
                columns: table => new
                {
                    ID_SFM_EVENTS_LOG = table.Column<int>(type: "int", nullable: false),
                    AKCJA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "typ operacji OLD/INS/UPD/SPL"),
                    ID_TABOR = table.Column<int>(type: "int", nullable: true, comment: "id pojazdu"),
                    ID_ZLECENIA = table.Column<int>(type: "int", nullable: true, comment: "id zlecenia"),
                    ID_WYJAZDY = table.Column<int>(type: "int", nullable: true, comment: "id wyjazdu"),
                    ID_WYJAZDY_ZDARZENIA = table.Column<int>(type: "int", nullable: true, comment: "id zdarzenia"),
                    TYP = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "typ zdarzenia"),
                    MIEJSCE_ID = table.Column<int>(type: "int", nullable: true, comment: "id POI"),
                    MIEJSCE = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "miejsce zdarzenia"),
                    MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "miasto zdarzenia"),
                    KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "kraj zdarzenia"),
                    CZAS_TRWANIA = table.Column<double>(type: "float", nullable: true, comment: "czas trwania zdarzenia (godz)"),
                    CZAS_P = table.Column<DateTime>(type: "datetime", nullable: true, comment: "data-godz początku zdarzenia"),
                    CZAS_K = table.Column<DateTime>(type: "datetime", nullable: true, comment: "data-godz końca zdarzenia"),
                    LKM_P = table.Column<double>(type: "float", nullable: true, comment: "licznik początkowy"),
                    LKM_K = table.Column<double>(type: "float", nullable: true, comment: "licznik końcowy"),
                    PALIWO = table.Column<double>(type: "float", nullable: true, comment: "spalone paliwo"),
                    LON = table.Column<double>(type: "float", nullable: true, comment: "długość geograficzna"),
                    LAT = table.Column<double>(type: "float", nullable: true, comment: "szerokość geograficzna")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_EVENTS_LOG", x => x.ID_SFM_EVENTS_LOG);
                },
                comment: "rejestrowanie dodawania/aktualizacji GWY/GWJ/P/W/JAZ");

            migrationBuilder.CreateTable(
                name: "SFM_GEOFENCE",
                columns: table => new
                {
                    ID_SFM_GEOFENCE = table.Column<int>(type: "int", nullable: false),
                    ZROBIONE = table.Column<short>(type: "smallint", nullable: true, comment: "0/1-czy przetworzone/ 2-pominięte"),
                    ID_GEOFENCING = table.Column<int>(type: "int", nullable: true, comment: "relacja do tabeli GeoFencing (opcjonalnie)"),
                    ID_SFM_SYSTEM = table.Column<int>(type: "int", nullable: true, comment: "ID systemu telematycznego"),
                    ID_SFM_TERM = table.Column<int>(type: "int", nullable: true, comment: "id terminala"),
                    ID_SFM_POS = table.Column<int>(type: "int", nullable: true, comment: "id pozycji GPS"),
                    ID_SFM_MSG = table.Column<int>(type: "int", nullable: true, comment: "id utworzonego alertu"),
                    TYP_TERM = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "typ terminala"),
                    ID_TABOR = table.Column<int>(type: "int", nullable: true, comment: "id taboru SPEED"),
                    ID_NACZEPY = table.Column<int>(type: "int", nullable: true, comment: "id naczepy taboru SPEED"),
                    ID_KIEROWCY = table.Column<int>(type: "int", nullable: true, comment: "id kierowcy SPEED"),
                    DT_SAVE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas utworzenia / zapisu do BD"),
                    DT_EVENT = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas zdarzenia"),
                    GF_ENTEREXIT = table.Column<short>(type: "smallint", nullable: true, comment: "0-wjazd/ 1-wyjazd/ 2-inne"),
                    GF_LON = table.Column<double>(type: "float", nullable: true, comment: "gps geofencingu: LON"),
                    GF_LAT = table.Column<double>(type: "float", nullable: true, comment: "gps geofencingu: LAT"),
                    GF_REGION = table.Column<short>(type: "smallint", nullable: true, comment: "0-koło /1-prostokąt /2-nieregularny"),
                    GF_RADIUS_X = table.Column<int>(type: "int", nullable: true, comment: "promień koła / 0.5 podstawy prostokąta (w metrach)"),
                    GF_RADIUS_Y = table.Column<int>(type: "int", nullable: true, comment: "0.5 wysokości prostokąta (w metrach)"),
                    LON = table.Column<double>(type: "float", nullable: true, comment: "gps zdarzenia: LON"),
                    LAT = table.Column<double>(type: "float", nullable: true, comment: "gps zdarzenia: LAT"),
                    ID_OBJ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "obiekt - id tablicy"),
                    ID_REC = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "id w obiekcie (patrz ID_OBJ)"),
                    EXT_ID_TYP = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "typ zewnętrznego id"),
                    EXT_ID = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "zewnętrzne id"),
                    EXT_NAME = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "nazwa geofencingu"),
                    DRIVERMSG = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true, comment: "treść alarmu z geofencingu dla kierowcy"),
                    STATUS_D = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_GEOFENCE", x => x.ID_SFM_GEOFENCE);
                });

            migrationBuilder.CreateTable(
                name: "SFM_GRUPYODB",
                columns: table => new
                {
                    ID_SFM_GRUPYODB = table.Column<int>(type: "int", nullable: false),
                    NAZWA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: false),
                    ID_UZYTK = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_GRUPYODB", x => x.ID_SFM_GRUPYODB);
                });

            migrationBuilder.CreateTable(
                name: "SFM_IC_ACTION",
                columns: table => new
                {
                    ID_SFM_IC_ACTION = table.Column<int>(type: "int", nullable: false),
                    FUNCTION_ID = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "ID funkcji interfejsu"),
                    ISACTIVE = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('1')", comment: "(0/1) aktywny"),
                    AID = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "identyfikator akcji funkcji"),
                    ACTIONINDEX = table.Column<short>(type: "smallint", nullable: true, comment: "kolejność wykonywania"),
                    ACTIONTYPE = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true, comment: "rodzaj wykonywanej akcji (I-insert/U-update/S-skrypt/F-funkcja)"),
                    TABLENAME = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "nazwa tabeli SPEED"),
                    FIELDLIST = table.Column<string>(type: "text", nullable: true, comment: "lista aktualizowanych pól tabeli"),
                    SQL_WHERE = table.Column<string>(type: "text", nullable: true, comment: "warunek dla akcji \"update\""),
                    SQL = table.Column<string>(type: "text", nullable: true, comment: "skrypt SQL"),
                    DESCR = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "opis akcji funkcji"),
                    FUNCTIONNAME = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "nazwa funkcji SPEED")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_IC_ACTION", x => x.ID_SFM_IC_ACTION);
                },
                comment: "funkcja interfejsu po stronie SPEED");

            migrationBuilder.CreateTable(
                name: "SFM_IC_DEF_HEADER",
                columns: table => new
                {
                    ID_SFM_IC_DEF_HEADER = table.Column<int>(type: "int", nullable: false),
                    ISACTIVE = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('1')", comment: "aktywny - (0-nie/1-tak)"),
                    TERMTYPE = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "typ terminala - kod operatora"),
                    ID = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "identyfikator definicji"),
                    VERSION = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "wersja definicji"),
                    QID_START = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "punkt startowy ścieżki pytań"),
                    DESCR = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "opis definicji interfejsu"),
                    DT_CREATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas utworzenia"),
                    DT_MODIFY = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas ostatniej modyfikacji"),
                    ID_SFM_SYSTEM = table.Column<int>(type: "int", nullable: true, comment: "ID systemu telematycznego"),
                    ISIMPORTED = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('1')", comment: "importowany - (0-nie/1-tak)")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_IC_DEF_HEADER", x => x.ID_SFM_IC_DEF_HEADER);
                },
                comment: "nagłówek definicji interfejsu");

            migrationBuilder.CreateTable(
                name: "SFM_IC_DEF_OPTION",
                columns: table => new
                {
                    ID_SFM_IC_DEF_OPTION = table.Column<int>(type: "int", nullable: false),
                    HEADER_ID = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "ID nagłówka"),
                    QUESTION_ID = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "ID pytania"),
                    LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "liczba porządkowa"),
                    OID = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "identyfikator odpowiedzi"),
                    TEXT = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "tekst przy odpowiedzi"),
                    VAL_HIDE = table.Column<short>(type: "smallint", nullable: true, comment: "(0/1) odpowiedź ukryta"),
                    VAL_TYPE = table.Column<short>(type: "smallint", nullable: true, comment: "typ wartości"),
                    VAL_DEFAULT = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "wartość domyślna"),
                    QID_NEXT = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "następny punkt ścieżki pytań")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_IC_DEF_OPTION", x => x.ID_SFM_IC_DEF_OPTION);
                },
                comment: "pytania - pozycje definicji interfejsu");

            migrationBuilder.CreateTable(
                name: "SFM_IC_DEF_QUESTION",
                columns: table => new
                {
                    ID_SFM_IC_DEF_QUESTION = table.Column<int>(type: "int", nullable: false),
                    HEADER_ID = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "ID nagłówka"),
                    LP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "liczba porządkowa"),
                    QID = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "identyfikator pytania"),
                    TEXT = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "tekst pytania"),
                    HIDE = table.Column<short>(type: "smallint", nullable: true, comment: "(0/1) pytanie ukryte"),
                    SEL_MODEL = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true, defaultValueSql: "('N')", comment: "rodzaj odpowiedzi (N-none/S-single/M-multi)"),
                    SEL_DEFAULT = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "domyślna odpowiedź z listy"),
                    QID_NEXT = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "następny punkt ścieżki pytań"),
                    QID_ORG = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "orginalny identyfikator pytania")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_IC_DEF_QUESTION", x => x.ID_SFM_IC_DEF_QUESTION);
                },
                comment: "pytania - pozycje definicji interfejsu");

            migrationBuilder.CreateTable(
                name: "SFM_IC_FILES",
                columns: table => new
                {
                    ID_SFM_IC_FILES = table.Column<int>(type: "int", nullable: false),
                    ID = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "identyfikator definicji"),
                    VERSION = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "wersja definicji"),
                    ID_SFM_TERM = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "id terminala SFM"),
                    TERMTYPE = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "typ terminala - kod operatora"),
                    TERMID = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "symbol terminala w syst. zewnętrznym"),
                    ID_VEHICLE = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "id pojazdu - tabor SPEED"),
                    ID_TRAILER = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "id naczepy/przyczepy - tabor SPEED"),
                    ID_DRIVER = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "id kierowcy SPEED"),
                    ID_OBJ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "id obiektu SPEED"),
                    ID_REC = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "id rekordu obiektu SPEED"),
                    ID_SFM_POS = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "id pozycji GPS"),
                    ID_EVENT = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "zdarzenie: ID"),
                    DT_EVENT = table.Column<DateTime>(type: "datetime", nullable: true, comment: "zdarzenie: czas wystąpienia"),
                    DT_SAVE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas rejestracji w bazie SPEED"),
                    DT_EXEC = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas przetwarzania danych"),
                    EXECTIME = table.Column<int>(type: "int", nullable: true, comment: "czas wykontwania przetwarzania [ms]"),
                    STATUS = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('1')", comment: "status/folder pliku - (0-nowe/10-Wczytane/20-Inne/99-Bledy)"),
                    FILENAME = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true, comment: "nazwa pliku z danymi"),
                    ID_EXT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "ID źródłowe (format: \"M:id\")"),
                    FOLDER = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true, comment: "katalog do dziennego grupowania plików"),
                    ID_REF = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    reportXml = table.Column<byte[]>(type: "varbinary(max)", nullable: true),
                    logXml = table.Column<byte[]>(type: "varbinary(max)", nullable: true),
                    traceXml = table.Column<byte[]>(type: "varbinary(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_IC_FILES", x => x.ID_SFM_IC_FILES);
                },
                comment: "pliki obrabiane przez interfejs");

            migrationBuilder.CreateTable(
                name: "SFM_IC_FUNCTION",
                columns: table => new
                {
                    ID_SFM_IC_FUNCTION = table.Column<int>(type: "int", nullable: false),
                    ISACTIVE = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('1')", comment: "(0/1) aktywny"),
                    FID = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "identyfikator funkcji"),
                    VERSION = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "wersja definicji"),
                    DESCR = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "opis funkcji"),
                    DT_CREATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas utworzenia"),
                    DT_MODIFY = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas ostatniej modyfikacji"),
                    ISIMPORTED = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('1')", comment: "importowana - (0-nie/1-tak)")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_IC_FUNCTION", x => x.ID_SFM_IC_FUNCTION);
                },
                comment: "funkcja interfejsu po stronie SPEED");

            migrationBuilder.CreateTable(
                name: "SFM_IC_INTERFACE",
                columns: table => new
                {
                    ID_SFM_IC_INTERFACE = table.Column<int>(type: "int", nullable: false),
                    FUNCTION_ID = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "ID funkcji interfejsu"),
                    HEADER_ID = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "ID nagłówka definicji interfejsu"),
                    ISACTIVE = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('1')", comment: "(0/1) aktywny"),
                    SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "symbol interfejsu"),
                    DESCR = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "opis interfejsu"),
                    XML = table.Column<string>(type: "text", nullable: true, comment: "definicje powiązań interfejsu"),
                    DT_CREATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas utworzenia"),
                    DT_MODIFY = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas ostatniej modyfikacji"),
                    ISIMPORTED = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('1')", comment: "importowany - (0-nie/1-tak)")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_IC_INTERFACE", x => x.ID_SFM_IC_INTERFACE);
                },
                comment: "relacje między SFM_IC_Def_Header i SFM_IC_Function");

            migrationBuilder.CreateTable(
                name: "SFM_KIEROWCY",
                columns: table => new
                {
                    ID_SFM_KIEROWCY = table.Column<int>(type: "int", nullable: false),
                    ID_KIEROWCY = table.Column<int>(type: "int", nullable: true, comment: "ID kierowcy w SPEED"),
                    ID_EXT = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true, comment: "ID kierowcy w syst. zewnętrznym"),
                    ID_SFM_SYSTEM = table.Column<int>(type: "int", nullable: true, comment: "ID systemu w bazie SFM"),
                    SENDTOTERM = table.Column<short>(type: "smallint", nullable: true, comment: "(0/1) wysłać do syst. zewnętrznego?"),
                    SENDSTATUS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "status wysyłki danych kierowcy")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_KIEROWCY", x => x.ID_SFM_KIEROWCY);
                });

            migrationBuilder.CreateTable(
                name: "SFM_LAST_MARKER",
                columns: table => new
                {
                    ID_SFM_LAST_MARKER = table.Column<int>(type: "int", nullable: false),
                    ID_SFM_SYSTEM = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "ID systemu telematycznego"),
                    ID_SFM_TERM = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "ID terminala"),
                    TYP_TERM = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "typ terminala - kod operatora"),
                    ACTION = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "akcja serwera SFM (np. MSG/POS/TACHO/itp.)"),
                    MARKER = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: true, comment: "marker pobierania danych telematycznych"),
                    ISACTIVE = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "marker pobierania danych telematycznych"),
                    DT = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "('0')", comment: "data rejestracji")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_LAST_MARKER", x => x.ID_SFM_LAST_MARKER);
                },
                comment: "rejestrowanie ostatniego znacznika pobierania");

            migrationBuilder.CreateTable(
                name: "SFM_MSG",
                columns: table => new
                {
                    ID_SFM_MSG = table.Column<int>(type: "int", nullable: false),
                    ID_MSG_FWD = table.Column<int>(type: "int", nullable: true, comment: "ID wiadomości źródłowej"),
                    MACRO_NR = table.Column<int>(type: "int", nullable: true, comment: "macro number"),
                    MACRO_VER = table.Column<int>(type: "int", nullable: true, comment: "macro version"),
                    ID_SFM_TERM = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    TYP_TERM = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "typ terminala (operator)"),
                    SYMBOL_TERM = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "symbol terminala (Entity_ID)"),
                    ID_SFM_TABOR = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ID_TABOR = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    NR_REJ = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_INWENT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ID_KIEROWCY = table.Column<int>(type: "int", nullable: true, comment: "id kierowcy"),
                    KIEROWCA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "nazwisko kierowcy"),
                    ID_UZYTK = table.Column<int>(type: "int", nullable: true, comment: "id dyspozytora"),
                    NAZWAUZYTK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "nazwisko dyspozytora"),
                    ID_ZLECENIA = table.Column<int>(type: "int", nullable: true, comment: "id zlecenia"),
                    NRZLEC = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "numer zlecenia"),
                    ID_ZA = table.Column<int>(type: "int", nullable: true, comment: "id załadunku"),
                    ID_WY = table.Column<int>(type: "int", nullable: true, comment: "id wyładunku"),
                    ID_SFM_POS = table.Column<int>(type: "int", nullable: true, comment: "ID pozycji GPS"),
                    TYP = table.Column<short>(type: "smallint", nullable: true, comment: "typ wiadomości: 0-odbiór/ 1-nadawanie/ 2-wysł.zlecenie/ 3-wiad.systemowa(makro)"),
                    PRIORYTET = table.Column<short>(type: "smallint", nullable: true, comment: "0-default/ 1-important/ 2-sleepy/ 3-sleepy important/ 9-emergency/ 255-alert"),
                    POTWIERDZ = table.Column<short>(type: "smallint", nullable: true, comment: "1 - żądanie potwierdzenia/odpowiedzi"),
                    POTWIERDZOK = table.Column<short>(type: "smallint", nullable: true, comment: "1 - odbiór potwierdzony"),
                    DT_PLAN = table.Column<DateTime>(type: "datetime", nullable: true, comment: "planowany czas wysłania wiadomości"),
                    DT_ZAPIS = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas zapisu do bazy danych"),
                    DT_WYSL = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas wysłania (z samochodu/dyspozytorni)"),
                    DT_ODB = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas odbioru/dostarczenia"),
                    DT_PRZECZYT = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas przeczytania wiadomości"),
                    DT_TERMIN = table.Column<DateTime>(type: "datetime", nullable: true, comment: "termin dostarczenia wiadomości"),
                    MSGSHORT = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "skrót wiadomości"),
                    MSG = table.Column<string>(type: "text", nullable: true, comment: "Wiadomość"),
                    MSGLEN = table.Column<int>(type: "int", nullable: true, comment: "długość komunikatu"),
                    MSGTYPE = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true, comment: "('T'/'B') typ wiadomości"),
                    MSGSTAT = table.Column<short>(type: "smallint", nullable: true, comment: "status wiadomości"),
                    MSGBLAD = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "tekst lub numer błędu"),
                    MSG_FOLDER = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "folder wiadomości"),
                    BEZPL = table.Column<short>(type: "smallint", nullable: true, comment: "(0/1) - tekst bez polskich znaków"),
                    RODZAJ = table.Column<short>(type: "smallint", nullable: true, comment: "rodzaj danych wiadomości:\r\n- przychodząca:  0-wiadomość/ 1-stat itp./ 2-raport SMS\r\n- wychodząca:  0-wiadomość/ 1-zlec./ 2-dane kierowcy"),
                    ZROBIONE = table.Column<short>(type: "smallint", nullable: true, comment: "0-nowe/ 1-zrobione (przetworzone)"),
                    PRZEKIEROWANE = table.Column<short>(type: "smallint", nullable: true, comment: "0-nowe/ 1-wykonane przekierowanie"),
                    ID_SFM_MSG_MASTER = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "ID wiadomości głównej (gdy do wielu"),
                    LICZBAODBIORCOW = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('1')", comment: "Liczba odbiorców"),
                    ID_SFM_MSG_KATEGORIA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "ID kategorii wiadomości"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "kod lokalizacji"),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "kod działu"),
                    FORMATKA = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true, comment: "symbol formatki odpowiedzi (PNC:wiad.strukturalne)"),
                    ID_OBJ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "obiekt - id tablicy"),
                    ID_REC = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "id w obiekcie (patrz ID_OBJ)"),
                    SENDCOUNT = table.Column<short>(type: "smallint", nullable: true, comment: "licznik wysyłki wiadomości/zlecenia (np. po błędnej wysyłce)"),
                    CONSOLEFONT = table.Column<short>(type: "smallint", nullable: true, comment: "określa font wyświetlania (0-\"Tahoma\" /1-\"Lucida Console\")"),
                    DT_SENT_UTC = table.Column<DateTime>(type: "datetime", nullable: true),
                    ID_SFM_SYSTEM = table.Column<int>(type: "int", nullable: true),
                    ExternalId = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ExternalReplyId = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ExtraInfo = table.Column<string>(type: "xml", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_MSG", x => x.ID_SFM_MSG);
                },
                comment: "Komunikaty wymieniane między spedytorem/dyspozytorem i kierowcą");

            migrationBuilder.CreateTable(
                name: "SFM_MSG_ATR",
                columns: table => new
                {
                    ID_SFM_MSG = table.Column<int>(type: "int", nullable: false),
                    ID_SFM_SYSTEM = table.Column<int>(type: "int", nullable: true, comment: "ID systemu w bazie SFM"),
                    MSGID = table.Column<int>(type: "int", nullable: true, comment: "ID wiadomości ATROM"),
                    MSGORGID = table.Column<int>(type: "int", nullable: true, comment: "ID wiadomości, na którą odpowiedziano"),
                    MSGTYP = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true, comment: "typ wiadomości (I-info/ T-trasa/ P-/ S-system)"),
                    VEHID = table.Column<int>(type: "int", nullable: true, comment: "ID terminala ATROM"),
                    USRID = table.Column<int>(type: "int", nullable: true, comment: "ID użytkownika ATROM")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_MSG_ATR", x => x.ID_SFM_MSG);
                });

            migrationBuilder.CreateTable(
                name: "SFM_MSG_CMA",
                columns: table => new
                {
                    ID_SFM_MSG = table.Column<int>(type: "int", nullable: false),
                    ID_SFM_SYSTEM = table.Column<int>(type: "int", nullable: true, comment: "ID systemu w bazie SFM"),
                    DEV_ID = table.Column<int>(type: "int", nullable: true),
                    MSG_ID = table.Column<int>(type: "int", nullable: true),
                    STAT_ID = table.Column<int>(type: "int", nullable: true),
                    DEL_STAT = table.Column<int>(type: "int", nullable: true),
                    REF_TASK = table.Column<int>(type: "int", nullable: true),
                    TASK_STAT = table.Column<int>(type: "int", nullable: true),
                    ORDER_ID = table.Column<int>(type: "int", nullable: true),
                    DRIVER_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_MSG_CMA", x => x.ID_SFM_MSG);
                });

            migrationBuilder.CreateTable(
                name: "SFM_MSG_DSM",
                columns: table => new
                {
                    ID_SFM_MSG = table.Column<int>(type: "int", nullable: false),
                    TERMINAL_IP = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true),
                    TERMINAL_PORT = table.Column<int>(type: "int", nullable: true),
                    MACRO = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true),
                    WATEK = table.Column<int>(type: "int", nullable: true),
                    MD5 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_MSG_DSM", x => x.ID_SFM_MSG);
                });

            migrationBuilder.CreateTable(
                name: "SFM_MSG_ELC",
                columns: table => new
                {
                    ID_SFM_MSG = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_MSG_ELC", x => x.ID_SFM_MSG);
                });

            migrationBuilder.CreateTable(
                name: "SFM_MSG_EML",
                columns: table => new
                {
                    ID_SFM_MSG = table.Column<int>(type: "int", nullable: false),
                    ID_SFM_SYSTEM = table.Column<int>(type: "int", nullable: true, comment: "ID systemu w bazie SFM"),
                    MAIL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "adres nadawcy/odbiorcy"),
                    SENDER_TYP = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true, comment: "EML: źródło danych o serwerze mailowym (/U-użytkownik /L-lokalizacja /S-system /{empty}-default )"),
                    SENDER_ID = table.Column<int>(type: "int", nullable: true, comment: "EML: relacja do odpowiedniej tabeli zawierającej źródło danych o serwerze mailowym"),
                    COPYTOSENDER = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "0/1 - wyślij kopię do nadawcy"),
                    DBMAIL_MAILITEM_ID = table.Column<int>(type: "int", nullable: true, comment: "ID wiadomości wysyłanej przez DBMAIL")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_MSG_EML", x => x.ID_SFM_MSG);
                });

            migrationBuilder.CreateTable(
                name: "SFM_MSG_EXTVAL",
                columns: table => new
                {
                    ID_SFM_MSG = table.Column<int>(type: "int", nullable: false),
                    NAZWA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "nazwa wartości dodatkowych"),
                    EXTVAL = table.Column<string>(type: "text", nullable: true, comment: "wartości dodatkowe"),
                    ID_OBJ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "obiekt - id tablicy"),
                    ID_REC = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "id w obiekcie (patrz ID_OBJ)"),
                    ID_STATUSY = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "id statusu (z tab. STATUSY) związanego z ID_REC")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_MSG_EXTVAL", x => x.ID_SFM_MSG);
                });

            migrationBuilder.CreateTable(
                name: "SFM_MSG_FLC",
                columns: table => new
                {
                    ID_SFM_MSG = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_MSG_FLC", x => x.ID_SFM_MSG);
                });

            migrationBuilder.CreateTable(
                name: "SFM_MSG_GBX",
                columns: table => new
                {
                    ID_SFM_MSG = table.Column<int>(type: "int", nullable: false),
                    ID_SFM_SYSTEM = table.Column<short>(type: "smallint", nullable: true, comment: "ID systemu w bazie SFM"),
                    GPSTIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas UTC wiadomości"),
                    RECID = table.Column<int>(type: "int", nullable: true, comment: "GBX - unikalny identyfikator wiadomości"),
                    EXTID = table.Column<long>(type: "bigint", nullable: true, comment: "GBX - unikalny identyfikator wiadomości")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_MSG_GBX", x => x.ID_SFM_MSG);
                });

            migrationBuilder.CreateTable(
                name: "SFM_MSG_KATEGORIA",
                columns: table => new
                {
                    ID_SFM_MSG_KATEGORIA = table.Column<int>(type: "int", nullable: false),
                    AKTYWNA = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('1')", comment: "Pokaż ilość wiad. u góry ekranu"),
                    NAZWA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "nazwa kategorii"),
                    OPIS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "opis kategorii"),
                    IKONA = table.Column<byte[]>(type: "image", nullable: true, comment: "ikona max. 32x32"),
                    KOLOR = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('536870912')", comment: "kolor tła"),
                    FONT = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, defaultValueSql: "('536870912')", comment: "kolor tekstu i definicja czcionki"),
                    WAV = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "ścieżka do pliku z dźwiękiem"),
                    POPUP = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "Pokaż popup w prawym dolnym rogu ekranu")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_MSG_KATEGORIA", x => x.ID_SFM_MSG_KATEGORIA);
                },
                comment: "kategorie komunikatów określające sposób prezentacji komunikatu");

            migrationBuilder.CreateTable(
                name: "SFM_MSG_KER",
                columns: table => new
                {
                    ID_SFM_MSG = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_MSG_KER", x => x.ID_SFM_MSG);
                });

            migrationBuilder.CreateTable(
                name: "SFM_MSG_LOG",
                columns: table => new
                {
                    ID_SFM_MSG = table.Column<int>(type: "int", nullable: false),
                    TXT = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true, comment: "treść logu")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_MSG_LOG", x => x.ID_SFM_MSG);
                },
                comment: "log przebiegu wykonania procedury składowanej dla makra SMS");

            migrationBuilder.CreateTable(
                name: "SFM_MSG_OUT",
                columns: table => new
                {
                    ID_SFM_MSG = table.Column<int>(type: "int", nullable: false),
                    XML = table.Column<string>(type: "text", nullable: true, comment: "wynik w postaci XML")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_MSG_OUT", x => x.ID_SFM_MSG);
                },
                comment: "wynik wykonania np. procedury składowanej dla makra SMS");

            migrationBuilder.CreateTable(
                name: "SFM_MSG_PDA",
                columns: table => new
                {
                    ID_SFM_MSG = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_MSG_PDA", x => x.ID_SFM_MSG);
                });

            migrationBuilder.CreateTable(
                name: "SFM_MSG_PNC",
                columns: table => new
                {
                    ID_SFM_MSG = table.Column<int>(type: "int", nullable: false),
                    MSGID = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: true, comment: "identyfikator wiadomości/zdarzenia"),
                    VEHID = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "identyfikator terminala"),
                    TASKSTATE = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "nazwa statusu zdarzenia"),
                    MSGORGID = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: true, comment: "identyfikator wiadomości źródłowej")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_MSG_PNC", x => x.ID_SFM_MSG);
                });

            migrationBuilder.CreateTable(
                name: "SFM_MSG_QFV",
                columns: table => new
                {
                    ID_SFM_MSG = table.Column<int>(type: "int", nullable: false),
                    ID_SFM_SYSTEM = table.Column<short>(type: "smallint", nullable: true, comment: "ID systemu w bazie SFM"),
                    RECID = table.Column<long>(type: "bigint", nullable: true, comment: "QFV - unikalny identyfikator wiadomości"),
                    VEHID = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true, comment: "ID terminala"),
                    GPSTIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas UTC wiadomości")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_MSG_QFV", x => x.ID_SFM_MSG);
                });

            migrationBuilder.CreateTable(
                name: "SFM_MSG_QUA",
                columns: table => new
                {
                    ID_SFM_MSG = table.Column<int>(type: "int", nullable: false),
                    FORWARDGMH = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    GMH = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    NO_MSG = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    TIME_MSG = table.Column<DateTime>(type: "datetime", nullable: true),
                    TIME_NMC = table.Column<DateTime>(type: "datetime", nullable: true),
                    TRIPSTATUS = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    MCTFIRMWAREVER = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    BINARYCHANNEL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_MSG_QUA", x => x.ID_SFM_MSG);
                });

            migrationBuilder.CreateTable(
                name: "SFM_MSG_READLOG",
                columns: table => new
                {
                    ID_SFM_MSG_READLOG = table.Column<int>(type: "int", nullable: false),
                    ID_SFM_MSG = table.Column<int>(type: "int", nullable: true, comment: "id wiadomości"),
                    ID_UZYTK = table.Column<int>(type: "int", nullable: true, comment: "id dyspozytora"),
                    NAZWAUZYTK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "nazwisko dyspozytora"),
                    DT_PRZECZYT = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas przeczytania wiadomości")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_MSG_READLOG", x => x.ID_SFM_MSG_READLOG);
                });

            migrationBuilder.CreateTable(
                name: "SFM_MSG_SET",
                columns: table => new
                {
                    ID_SFM_MSG = table.Column<int>(type: "int", nullable: false),
                    ID_SFM_SYSTEM = table.Column<short>(type: "smallint", nullable: true, comment: "ID systemu w bazie SFM"),
                    GPSTIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas UTC wiadomości"),
                    EXTID = table.Column<long>(type: "bigint", nullable: true, comment: "SET - unikalny identyfikator wiadomości")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_MSG_SET", x => x.ID_SFM_MSG);
                });

            migrationBuilder.CreateTable(
                name: "SFM_MSG_SIE",
                columns: table => new
                {
                    ID_SFM_MSG = table.Column<int>(type: "int", nullable: false),
                    ID_SFM_SYSTEM = table.Column<int>(type: "int", nullable: true, comment: "ID systemu w bazie SFM"),
                    DEV_ID = table.Column<int>(type: "int", nullable: true),
                    MSGTYPE = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    MSGID = table.Column<int>(type: "int", nullable: true),
                    DT = table.Column<DateTime>(type: "datetime", nullable: true),
                    RECID = table.Column<long>(type: "bigint", nullable: true),
                    MSGKIND = table.Column<short>(type: "smallint", nullable: true),
                    DT_EXPIRY = table.Column<DateTime>(type: "datetime", nullable: true),
                    JOBNUMBER = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DT_JOBSTART = table.Column<DateTime>(type: "datetime", nullable: true),
                    LATESTSTATUS = table.Column<short>(type: "smallint", nullable: true),
                    DT_LATESTSTAT = table.Column<DateTime>(type: "datetime", nullable: true),
                    URGENT = table.Column<short>(type: "smallint", nullable: true),
                    JOBLOCIDLIST = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_MSG_SIE", x => x.ID_SFM_MSG);
                });

            migrationBuilder.CreateTable(
                name: "SFM_MSG_SMS",
                columns: table => new
                {
                    ID_SFM_MSG = table.Column<int>(type: "int", nullable: false),
                    TELEFON = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true),
                    PHONENO = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true),
                    MSGREF = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true),
                    STAT = table.Column<int>(type: "int", nullable: true),
                    MD5 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    MSGTXT = table.Column<string>(type: "text", nullable: true),
                    ID_SFM_SYSTEM = table.Column<int>(type: "int", nullable: true, comment: "ID systemu w bazie SFM"),
                    REF_ID = table.Column<long>(type: "bigint", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_MSG_SMS", x => x.ID_SFM_MSG);
                });

            migrationBuilder.CreateTable(
                name: "SFM_MSG_TR2",
                columns: table => new
                {
                    ID_SFM_MSG = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_MSG_TR2", x => x.ID_SFM_MSG);
                });

            migrationBuilder.CreateTable(
                name: "SFM_MSG_TRA",
                columns: table => new
                {
                    ID_SFM_MSG = table.Column<int>(type: "int", nullable: false),
                    ID_SFM_SYSTEM = table.Column<int>(type: "int", nullable: true, comment: "ID systemu w bazie SFM"),
                    SMSC = table.Column<short>(type: "smallint", nullable: true),
                    KIND = table.Column<short>(type: "smallint", nullable: true),
                    MSG_SRC = table.Column<short>(type: "smallint", nullable: true),
                    TNR_ID_FWD = table.Column<int>(type: "int", nullable: true),
                    TNR_ID = table.Column<int>(type: "int", nullable: true),
                    TNR_DISP = table.Column<int>(type: "int", nullable: true),
                    TNR_DRIVER = table.Column<int>(type: "int", nullable: true),
                    TNR_PRIVE_DISP = table.Column<int>(type: "int", nullable: true),
                    TNR_CODRIVER = table.Column<int>(type: "int", nullable: true),
                    TNR_MAT = table.Column<int>(type: "int", nullable: true),
                    TNR_TRAILER = table.Column<int>(type: "int", nullable: true),
                    ADRES = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    STATUS_VEH = table.Column<short>(type: "smallint", nullable: true),
                    SPEED = table.Column<double>(type: "float", nullable: true),
                    PROP = table.Column<string>(type: "varchar(16)", unicode: false, maxLength: 16, nullable: true),
                    PTO = table.Column<string>(type: "varchar(16)", unicode: false, maxLength: 16, nullable: true),
                    DT_DELIVERED = table.Column<DateTime>(type: "datetime", nullable: true),
                    DT_MADE = table.Column<DateTime>(type: "datetime", nullable: true),
                    DT_PC = table.Column<DateTime>(type: "datetime", nullable: true),
                    DT_READCHAUF = table.Column<DateTime>(type: "datetime", nullable: true),
                    DT_READDEADLINE = table.Column<DateTime>(type: "datetime", nullable: true),
                    DT_SEND = table.Column<DateTime>(type: "datetime", nullable: true),
                    DT_TRAILER = table.Column<DateTime>(type: "datetime", nullable: true),
                    NR_SYSTEM = table.Column<short>(type: "smallint", nullable: true),
                    NR_VERSION = table.Column<short>(type: "smallint", nullable: true),
                    TNR_TRIPINFO = table.Column<int>(type: "int", nullable: true),
                    L_ANOMALY = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_MSG_TRA", x => x.ID_SFM_MSG);
                });

            migrationBuilder.CreateTable(
                name: "SFM_MSG_TRO",
                columns: table => new
                {
                    ID_SFM_MSG = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_MSG_TRO", x => x.ID_SFM_MSG);
                });

            migrationBuilder.CreateTable(
                name: "SFM_MSG_TTM",
                columns: table => new
                {
                    ID_SFM_MSG = table.Column<int>(type: "int", nullable: false),
                    ID_SFM_SYSTEM = table.Column<int>(type: "int", nullable: true, comment: "ID systemu w bazie SFM"),
                    RECID = table.Column<long>(type: "bigint", nullable: true, comment: "unikalny identyfikator pozycji"),
                    DRIVERID = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "identyfikator kierowcy"),
                    VEHID = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "identyfikator terminala"),
                    GPSTIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas UTC z pozycji GPS"),
                    TRIPMODE = table.Column<short>(type: "smallint", nullable: true, comment: "0-Unknown/ 1-Private /2-Business /3-Way-to-work /4-Correction"),
                    MSGCLASS = table.Column<short>(type: "smallint", nullable: true, comment: "0-unknown /1-system /2-text /3-polling /4-timer event /5-gps event /6-input event /7-set output /8-data /9-configuration /10-trip /11-order"),
                    ORDERTYPE = table.Column<short>(type: "smallint", nullable: true, comment: "typ zlecenia: 1-service /2-pickup /3-delivery"),
                    ORDERNO = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "identyfikator zlecenia"),
                    ORDERSTATE = table.Column<int>(type: "int", nullable: true, comment: "status zlecenia")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_MSG_TTM", x => x.ID_SFM_MSG);
                });

            migrationBuilder.CreateTable(
                name: "SFM_MSG_VDF",
                columns: table => new
                {
                    ID_SFM_MSG = table.Column<int>(type: "int", nullable: false),
                    ID_SFM_SYSTEM = table.Column<int>(type: "int", nullable: true, comment: "ID systemu w bazie SFM"),
                    USR_ID = table.Column<int>(type: "int", nullable: true),
                    DEV_ID = table.Column<int>(type: "int", nullable: true),
                    MSG_ID = table.Column<int>(type: "int", nullable: true),
                    ORDER_ID = table.Column<int>(type: "int", nullable: true),
                    TASK_STAT = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_MSG_VDF", x => x.ID_SFM_MSG);
                });

            migrationBuilder.CreateTable(
                name: "SFM_MSGDEFMENU",
                columns: table => new
                {
                    ID_SFM_MSGDEFMENU = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    LP = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "indeks do sortowania opcji w menu"),
                    ACTIVE = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "(0/1) czy definicja jest aktywna (gotowa do użycia)"),
                    CAPTION = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true, comment: "nazwa opcji wyświetlana w menu"),
                    HINT = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true, comment: "opis opcji menu wyświetlany w postaci hinta"),
                    IDOBJ = table.Column<int>(type: "int", nullable: true, comment: "ID obiektu SPEED"),
                    PREPAREPROC = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, defaultValueSql: "('536870912')", comment: "PS do przygotowania listy wiadomości"),
                    SENDPROC = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, defaultValueSql: "('536870912')", comment: "PS do wysyłki wiadomości"),
                    ONEMSGFORALL = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "(0/1) czy utworzyć jedną wiadomość dla wszystkich zaznaczonych rekordów")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_MSGDEFMENU", x => x.ID_SFM_MSGDEFMENU);
                },
                comment: "definicje menu do wysyłki wiadomości w kontekście obiektów SPEED");

            migrationBuilder.CreateTable(
                name: "SFM_NOTIFY",
                columns: table => new
                {
                    ID_SFM_NOTIFY = table.Column<int>(type: "int", nullable: false),
                    ID_SFM_MSG = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "relacja do utworzonej wiadomości"),
                    OBJ_TYP = table.Column<int>(type: "int", nullable: true, comment: "typ obiektu SPEED"),
                    OBJ_ID = table.Column<int>(type: "int", nullable: true, comment: "relacja do obiektu SPEED"),
                    SENDER_TYP = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true, comment: "EML: źródło danych o serwerze mailowym (/U-użytkownik /L-lokalizacja /S-system)"),
                    SENDER_ID = table.Column<int>(type: "int", nullable: true, comment: "EML: relacja do odpowiedniej tabeli zawierającej źródło danych o serwerze mailowym"),
                    COPYTOSENDER = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "0/1 - wyślij kopię do nadawcy"),
                    MSG_TYPE = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "typ powiadomienia SMS/EML/..."),
                    MSG_ADDRESS = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true, comment: "nr telefonu. lub adres e-mail na jaki zostanie wysłane powiadomienie"),
                    MSG_SUBJECT = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "temat wiadomości EML"),
                    MSG_BODY = table.Column<string>(type: "varchar(7500)", unicode: false, maxLength: 7500, nullable: true, comment: "treść wiadomości"),
                    DT_CREATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "data utworzenia powiadomoenia"),
                    ID_UZYTK = table.Column<int>(type: "int", nullable: true, comment: "id dyspozytora"),
                    NAZWAUZYTK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "nazwisko dyspozytora"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "kod lokalizacji"),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "kod działu")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_NOTIFY", x => x.ID_SFM_NOTIFY);
                },
                comment: "powiadomienia w kontekście obiektu SPEED");

            migrationBuilder.CreateTable(
                name: "SFM_OBJREF",
                columns: table => new
                {
                    ID_SFM_OBJREF = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_SFM_SYSTEM = table.Column<short>(type: "smallint", nullable: false, defaultValueSql: "('0')", comment: "ID systemu telematycznego"),
                    OBJTYPE = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "rodzaj obiektu"),
                    OBJINTERNALID = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "identyfikator w syst. InterLAN"),
                    OBJEXTERNALID = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "identyfikator w syst. zewnętrznym"),
                    ExtInfo = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true, comment: "info dodatkowe do referencji")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_OBJREF", x => x.ID_SFM_OBJREF);
                },
                comment: "popwiącanie id obiektów SPEED z systemem zewnętrznym");

            migrationBuilder.CreateTable(
                name: "SFM_ODBIORCY",
                columns: table => new
                {
                    ID_SFM_ODBIORCY = table.Column<int>(type: "int", nullable: false),
                    ID_SFM_GRUPYODB = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ID_SFM_TERM = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    TYP_TERM = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: false),
                    SYMBOL_TERM = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: false),
                    ID_SFM_TABOR = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ID_TABOR = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    NR_REJ = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_INWENT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ID_KIEROWCY = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_ODBIORCY", x => x.ID_SFM_ODBIORCY);
                });

            migrationBuilder.CreateTable(
                name: "SFM_POS",
                columns: table => new
                {
                    ID_SFM_POS = table.Column<int>(type: "int", nullable: false),
                    ZAPYTANIE = table.Column<short>(type: "smallint", nullable: true),
                    ID_SFM_TERM = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    TYP_TERM = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    ID_KIEROWCY = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ID_NACZEPY = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    CRC = table.Column<int>(type: "int", nullable: true),
                    CZAS = table.Column<DateTime>(type: "datetime", nullable: true),
                    LAT = table.Column<double>(type: "float", nullable: true),
                    LON = table.Column<double>(type: "float", nullable: true),
                    KIERUNEK = table.Column<short>(type: "smallint", nullable: true),
                    SILNIK = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    PREDKOSC = table.Column<int>(type: "int", nullable: true),
                    OBROTY = table.Column<int>(type: "int", nullable: true),
                    ZROBIONE = table.Column<short>(type: "smallint", nullable: true),
                    ODL_OD_TRASY = table.Column<int>(type: "int", nullable: true),
                    ID_KIEROWCY2 = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    ID_TABOR = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    Obj_Id = table.Column<int>(type: "int", nullable: true),
                    Rec_Id = table.Column<int>(type: "int", nullable: true),
                    DeviceInfo = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SourceInfo = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    Angle = table.Column<double>(type: "float", nullable: true),
                    Done = table.Column<int>(type: "int", nullable: true),
                    Satellite = table.Column<int>(type: "int", nullable: true),
                    Battery = table.Column<double>(type: "float", nullable: true),
                    Odl_LAT = table.Column<double>(type: "float", nullable: true),
                    Odl_LON = table.Column<double>(type: "float", nullable: true),
                    DT_SAVE = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    TotalAxleLoad = table.Column<double>(type: "float", nullable: true),
                    DoorsOpen = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_POS", x => x.ID_SFM_POS);
                });

            migrationBuilder.CreateTable(
                name: "SFM_POS_ATR",
                columns: table => new
                {
                    ID_SFM_POS = table.Column<int>(type: "int", nullable: false),
                    ID_SFM_SYSTEM = table.Column<int>(type: "int", nullable: true, comment: "ID systemu w bazie SFM"),
                    GPSTIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas z pozycji GPS"),
                    POSID = table.Column<int>(type: "int", nullable: true, comment: "ID pozycji ATROM"),
                    VEHID = table.Column<int>(type: "int", nullable: true, comment: "ID terminala ATROM"),
                    USRID = table.Column<int>(type: "int", nullable: true, comment: "ID użytkownika ATROM"),
                    TFU = table.Column<double>(type: "float", nullable: true, comment: "Total Fuel Consumption")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_POS_ATR", x => x.ID_SFM_POS);
                });

            migrationBuilder.CreateTable(
                name: "SFM_POS_CMA",
                columns: table => new
                {
                    ID_SFM_POS = table.Column<int>(type: "int", nullable: false),
                    ID_SFM_SYSTEM = table.Column<int>(type: "int", nullable: true, comment: "ID systemu w bazie SFM"),
                    LOC_ID = table.Column<int>(type: "int", nullable: true),
                    DEV_ID = table.Column<int>(type: "int", nullable: true),
                    WYSOKOSC = table.Column<int>(type: "int", nullable: true),
                    DYSTANS = table.Column<double>(type: "float", nullable: true),
                    OPIS = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DRV_ID = table.Column<int>(type: "int", nullable: true),
                    TRA_ID = table.Column<int>(type: "int", nullable: true),
                    TRA_NR = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_POS_CMA", x => x.ID_SFM_POS);
                });

            migrationBuilder.CreateTable(
                name: "SFM_POS_DSM",
                columns: table => new
                {
                    ID_SFM_POS = table.Column<int>(type: "int", nullable: false),
                    SATELITY = table.Column<short>(type: "smallint", nullable: true),
                    CZUJKI = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    DYSTANS = table.Column<double>(type: "float", nullable: true),
                    NAPIECIE_GL = table.Column<int>(type: "int", nullable: true),
                    NAPIECIE_REZ = table.Column<int>(type: "int", nullable: true),
                    PALIWO1 = table.Column<int>(type: "int", nullable: true),
                    PALIWO1_MIN = table.Column<int>(type: "int", nullable: true),
                    PALIWO1_MAX = table.Column<int>(type: "int", nullable: true),
                    PALIWO2 = table.Column<int>(type: "int", nullable: true),
                    PALIWO2_MIN = table.Column<int>(type: "int", nullable: true),
                    PALIWO2_MAX = table.Column<int>(type: "int", nullable: true),
                    WARTX = table.Column<short>(type: "smallint", nullable: true),
                    INNE1 = table.Column<short>(type: "smallint", nullable: true),
                    INNE2 = table.Column<short>(type: "smallint", nullable: true),
                    INNE3 = table.Column<short>(type: "smallint", nullable: true),
                    INNE4 = table.Column<short>(type: "smallint", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_POS_DSM", x => x.ID_SFM_POS);
                });

            migrationBuilder.CreateTable(
                name: "SFM_POS_ELC",
                columns: table => new
                {
                    ID_SFM_POS = table.Column<int>(type: "int", nullable: false),
                    ID_SFM_SYSTEM = table.Column<int>(type: "int", nullable: true, comment: "ID systemu w bazie SFM")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_POS_ELC", x => x.ID_SFM_POS);
                });

            migrationBuilder.CreateTable(
                name: "SFM_POS_EXT",
                columns: table => new
                {
                    ID_SFM_POS = table.Column<int>(type: "int", nullable: false),
                    KRAJ = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "symbol kraju"),
                    LKM = table.Column<int>(type: "int", nullable: true, comment: "licznik kilometrów [km]"),
                    ID_REVERSEGEOCODING = table.Column<int>(type: "int", nullable: true, comment: "id znalezionego adresu"),
                    DISTANCE = table.Column<int>(type: "int", nullable: true, comment: "odległość w metrach od znalezionego adresu"),
                    TFU = table.Column<int>(type: "int", nullable: true, comment: "licznik paliwa [L]"),
                    FLA = table.Column<double>(type: "float", nullable: true, comment: "poziom paliwa w zbiorniku [L]"),
                    DTUTC = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas pomiaru pozycji [UTC]"),
                    VEHID = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "id pojazdu (syst. zewn.)"),
                    TRAID = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "id naczepy (syst. zewn.)"),
                    DRVID1 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "id kierowcy1 (syst. zewn.)"),
                    DRVID2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "id kierowcy2 (syst. zewn.)"),
                    DeltaDistance = table.Column<int>(type: "int", nullable: true, comment: "droga w metrach między aktualną pozycją a poprzednią")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_POS_EXT", x => x.ID_SFM_POS);
                });

            migrationBuilder.CreateTable(
                name: "SFM_POS_FLC",
                columns: table => new
                {
                    ID_SFM_POS = table.Column<int>(type: "int", nullable: false),
                    ID_SFM_SYSTEM = table.Column<int>(type: "int", nullable: true, comment: "ID systemu w bazie SFM"),
                    GPSTIME = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_POS_FLC", x => x.ID_SFM_POS);
                });

            migrationBuilder.CreateTable(
                name: "SFM_POS_GBX",
                columns: table => new
                {
                    ID_SFM_POS = table.Column<int>(type: "int", nullable: false),
                    ID_SFM_SYSTEM = table.Column<short>(type: "smallint", nullable: true, comment: "ID systemu w bazie SFM"),
                    GPSTIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas UTC pozycji GPS"),
                    EXTID = table.Column<long>(type: "bigint", nullable: true, comment: "GBX - unikalny identyfikator pozycji")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_POS_GBX", x => x.ID_SFM_POS);
                });

            migrationBuilder.CreateTable(
                name: "SFM_POS_KER",
                columns: table => new
                {
                    ID_SFM_POS = table.Column<int>(type: "int", nullable: false),
                    ID_SFM_SYSTEM = table.Column<int>(type: "int", nullable: true, comment: "ID systemu w bazie SFM"),
                    RECID = table.Column<long>(type: "bigint", nullable: true),
                    OBJID = table.Column<long>(type: "bigint", nullable: true),
                    GPSTIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    GPSSATNUM = table.Column<short>(type: "smallint", nullable: true),
                    GPSDIR = table.Column<short>(type: "smallint", nullable: true),
                    GPSSTATUS = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    SENSORBIN = table.Column<int>(type: "int", nullable: true),
                    ALARMSTATE = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_POS_KER", x => x.ID_SFM_POS);
                });

            migrationBuilder.CreateTable(
                name: "SFM_POS_MEC",
                columns: table => new
                {
                    ID_SFM_POS = table.Column<int>(type: "int", nullable: false),
                    ID_SFM_SYSTEM = table.Column<short>(type: "smallint", nullable: true, comment: "ID systemu w bazie SFM"),
                    RECID = table.Column<long>(type: "bigint", nullable: true, comment: "MEC - unikalny identyfikator pozycji"),
                    GPSTIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas UTC pozycji GPS"),
                    ALTITUDE = table.Column<int>(type: "int", nullable: true, comment: "wysokość nad poziomem morza [m]")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_POS_MEC", x => x.ID_SFM_POS);
                });

            migrationBuilder.CreateTable(
                name: "SFM_POS_NOV",
                columns: table => new
                {
                    ID_SFM_POS = table.Column<int>(type: "int", nullable: false),
                    ID_SFM_SYSTEM = table.Column<short>(type: "smallint", nullable: true, comment: "ID systemu w bazie SFM"),
                    GPSTIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas UTC pozycji GPS"),
                    MODEM = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "numer modemu"),
                    BOGIE_LOAD = table.Column<double>(type: "float", nullable: true, comment: "waga ładunku"),
                    PWR_BATTERY = table.Column<double>(type: "float", nullable: true, comment: "stan naładowania baterii"),
                    PWR_MODE = table.Column<short>(type: "smallint", nullable: true, comment: "tryb zasilania (1-External /0-inne)"),
                    PWR_P1 = table.Column<double>(type: "float", nullable: true, comment: "stan zasilania P1"),
                    PWR_P2 = table.Column<double>(type: "float", nullable: true, comment: "stan zasilania P2")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_POS_NOV", x => x.ID_SFM_POS);
                });

            migrationBuilder.CreateTable(
                name: "SFM_POS_PNC",
                columns: table => new
                {
                    ID_SFM_POS = table.Column<int>(type: "int", nullable: false),
                    ID_SFM_SYSTEM = table.Column<int>(type: "int", nullable: true, comment: "ID systemu w bazie SFM"),
                    GPSTIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas z pozycji GPS"),
                    DRIVERID = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "identyfikator kierowcy"),
                    VEHID = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "identyfikator terminala"),
                    TRACETYPE = table.Column<int>(type: "int", nullable: true, comment: "typ aktywności"),
                    TRAID = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true, comment: "identyfikator naczepy"),
                    ID_OBJ = table.Column<int>(type: "int", nullable: true, comment: "typ obiektu SPEED"),
                    ID_REC = table.Column<int>(type: "int", nullable: true, comment: "id obiektu SPEED"),
                    FLA = table.Column<double>(type: "float", nullable: true, comment: "poziom paliwa w zbiorniku pojazdu [L]")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_POS_PNC", x => x.ID_SFM_POS);
                });

            migrationBuilder.CreateTable(
                name: "SFM_POS_QFV",
                columns: table => new
                {
                    ID_SFM_POS = table.Column<int>(type: "int", nullable: false),
                    ID_SFM_SYSTEM = table.Column<short>(type: "smallint", nullable: true, comment: "ID systemu w bazie SFM"),
                    RECID = table.Column<long>(type: "bigint", nullable: true, comment: "QFV - unikalny identyfikator pozycji"),
                    RECREFTYPE = table.Column<short>(type: "smallint", nullable: true, comment: "0-HTRACS /1-ETA /2-MSG /3-POS /4-TTRACS /5-STRACS"),
                    VEHID = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true, comment: "ID terminala"),
                    GPSTIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas UTC pozycji GPS"),
                    ALTITUDE = table.Column<int>(type: "int", nullable: true, comment: "wysokość nad poziomem morza [m]")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_POS_QFV", x => x.ID_SFM_POS);
                });

            migrationBuilder.CreateTable(
                name: "SFM_POS_QUA",
                columns: table => new
                {
                    ID_SFM_POS = table.Column<int>(type: "int", nullable: false),
                    HMN = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    GMH = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    MCT = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    POSITIONTYPE = table.Column<short>(type: "smallint", nullable: true),
                    PLACETYPE = table.Column<short>(type: "smallint", nullable: true),
                    PLACEALIAS = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PLACECITY = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PLACEID = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    PLACENAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PLACEPOSTALCODE = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true),
                    PLACESTATE = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    TRIPSTATUS = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    DISTANCE = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true),
                    DISTANCE_UNIT = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    DIRECTION = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_POS_QUA", x => x.ID_SFM_POS);
                });

            migrationBuilder.CreateTable(
                name: "SFM_POS_SET",
                columns: table => new
                {
                    ID_SFM_POS = table.Column<int>(type: "int", nullable: false),
                    ID_SFM_SYSTEM = table.Column<short>(type: "smallint", nullable: true, comment: "ID systemu w bazie SFM"),
                    GPSTIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas UTC pozycji GPS"),
                    EXTID = table.Column<long>(type: "bigint", nullable: true, comment: "SET - unikalny identyfikator pozycji")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_POS_SET", x => x.ID_SFM_POS);
                });

            migrationBuilder.CreateTable(
                name: "SFM_POS_SIE",
                columns: table => new
                {
                    ID_SFM_POS = table.Column<int>(type: "int", nullable: false),
                    ID_SFM_SYSTEM = table.Column<int>(type: "int", nullable: true, comment: "ID systemu w bazie SFM"),
                    RECID = table.Column<long>(type: "bigint", nullable: true),
                    VEHID = table.Column<int>(type: "int", nullable: true),
                    DRIVERID = table.Column<int>(type: "int", nullable: true),
                    GPSTIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    SATELLITES = table.Column<short>(type: "smallint", nullable: true),
                    ALTITUDE = table.Column<int>(type: "int", nullable: true),
                    DISTANCE = table.Column<int>(type: "int", nullable: true),
                    HDOP = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_POS_SIE", x => x.ID_SFM_POS);
                });

            migrationBuilder.CreateTable(
                name: "SFM_POS_TR2",
                columns: table => new
                {
                    ID_SFM_POS = table.Column<int>(type: "int", nullable: false),
                    ID_SFM_SYSTEM = table.Column<int>(type: "int", nullable: true, comment: "ID systemu w bazie SFM")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_POS_TR2", x => x.ID_SFM_POS);
                });

            migrationBuilder.CreateTable(
                name: "SFM_POS_TRA",
                columns: table => new
                {
                    ID_SFM_POS = table.Column<int>(type: "int", nullable: false),
                    ID_SFM_SYSTEM = table.Column<int>(type: "int", nullable: true, comment: "ID systemu w bazie SFM"),
                    TNR_ID = table.Column<int>(type: "int", nullable: true),
                    TNR_MAT = table.Column<int>(type: "int", nullable: true),
                    TNR_TRAILER = table.Column<int>(type: "int", nullable: true),
                    TNR_PERSON = table.Column<int>(type: "int", nullable: true),
                    CODRIVER = table.Column<short>(type: "smallint", nullable: true),
                    SMSC = table.Column<short>(type: "smallint", nullable: true),
                    DT_BEGIN = table.Column<DateTime>(type: "datetime", nullable: true),
                    DT_PC = table.Column<DateTime>(type: "datetime", nullable: true),
                    PTO = table.Column<string>(type: "varchar(16)", unicode: false, maxLength: 16, nullable: true),
                    KM = table.Column<int>(type: "int", nullable: true),
                    POS1 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    POS2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    POS3 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    POS4 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_POS_TRA", x => x.ID_SFM_POS);
                });

            migrationBuilder.CreateTable(
                name: "SFM_POS_TRO",
                columns: table => new
                {
                    ID_SFM_POS = table.Column<int>(type: "int", nullable: false),
                    ID_SFM_SYSTEM = table.Column<int>(type: "int", nullable: true, comment: "ID systemu w bazie SFM"),
                    IDD = table.Column<int>(type: "int", nullable: true, comment: "TRO - identyfikacja Dallas"),
                    IDENT = table.Column<int>(type: "int", nullable: true, comment: "TRO - identyfikator sterownika"),
                    DEV_SN = table.Column<int>(type: "int", nullable: true, comment: "TRO - numer seryjny sterownika"),
                    SATELITY = table.Column<short>(type: "smallint", nullable: true, comment: "TRO - ilość widzianych satelit"),
                    POMOC = table.Column<int>(type: "int", nullable: true, comment: "TRO - dane pomocnicze"),
                    CYFRWE = table.Column<int>(type: "int", nullable: true, comment: "TRO - wejście cyfrowe"),
                    CYFRWY = table.Column<int>(type: "int", nullable: true, comment: "TRO - wyjście cyfrowe"),
                    CYFRAK = table.Column<int>(type: "int", nullable: true, comment: "TRO - Ślad aktywacji (dla CyfrWE)"),
                    EXTAX = table.Column<string>(type: "varchar(16)", unicode: false, maxLength: 16, nullable: true, comment: "TRO - (Atrax77) dane rozszerzeń (16 bajtów)"),
                    TMP1 = table.Column<short>(type: "smallint", nullable: true, comment: "TRO - (Atrax77) temperatura1"),
                    TMP2 = table.Column<short>(type: "smallint", nullable: true, comment: "TRO - (Atrax77) temperatura2"),
                    V_GL = table.Column<short>(type: "smallint", nullable: true, comment: "TRO - napięcie główne [V*10]"),
                    V_REZ = table.Column<short>(type: "smallint", nullable: true, comment: "TRO - napięcie rezerwowe [V*10]"),
                    PALIWO = table.Column<int>(type: "int", nullable: true, comment: "TRO - paliwo całkowite [L*10]"),
                    SKOKPALIWA = table.Column<short>(type: "smallint", nullable: true, comment: "TRO - skok paliwa (-/0-brak/1-tank/2-ubytek)")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_POS_TRO", x => x.ID_SFM_POS);
                });

            migrationBuilder.CreateTable(
                name: "SFM_POS_TTM",
                columns: table => new
                {
                    ID_SFM_POS = table.Column<int>(type: "int", nullable: false),
                    ID_SFM_SYSTEM = table.Column<int>(type: "int", nullable: true, comment: "ID systemu w bazie SFM"),
                    RECID = table.Column<long>(type: "bigint", nullable: true, comment: "unikalny identyfikator pozycji"),
                    DRIVERID = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "identyfikator kierowcy"),
                    VEHID = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "identyfikator terminala"),
                    GPSTIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas UTC z pozycji GPS"),
                    TRIPMODE = table.Column<short>(type: "smallint", nullable: true, comment: "0-Unknown/ 1-Private /2-Business /3-Way-to-work /4-Correction"),
                    MSGCLASS = table.Column<short>(type: "smallint", nullable: true, comment: "0-unknown /1-system /2-text /3-polling /4-timer event /5-gps event /6-input event /7-set output /8-data /9-configuration /10-trip /11-order")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_POS_TTM", x => x.ID_SFM_POS);
                });

            migrationBuilder.CreateTable(
                name: "SFM_POS_VDF",
                columns: table => new
                {
                    ID_SFM_POS = table.Column<int>(type: "int", nullable: false),
                    ID_SFM_SYSTEM = table.Column<int>(type: "int", nullable: true, comment: "ID systemu w bazie SFM"),
                    DEV_ID = table.Column<int>(type: "int", nullable: true),
                    WYSOKOSC = table.Column<double>(type: "float", nullable: true),
                    KIERUNEK = table.Column<double>(type: "float", nullable: true),
                    LICZNIK = table.Column<int>(type: "int", nullable: true),
                    ZUZYTEPALIWO = table.Column<int>(type: "int", nullable: true),
                    TEMP1 = table.Column<int>(type: "int", nullable: true),
                    TEMP2 = table.Column<int>(type: "int", nullable: true),
                    TEMP3 = table.Column<int>(type: "int", nullable: true),
                    TEMP4 = table.Column<int>(type: "int", nullable: true),
                    TEMP5 = table.Column<int>(type: "int", nullable: true),
                    TEMP6 = table.Column<int>(type: "int", nullable: true),
                    TEMP7 = table.Column<int>(type: "int", nullable: true),
                    TEMP8 = table.Column<int>(type: "int", nullable: true),
                    DRIVERACTIV = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    DRIVER_ID = table.Column<int>(type: "int", nullable: true),
                    CZAS_J = table.Column<int>(type: "int", nullable: true),
                    CZAS_O = table.Column<int>(type: "int", nullable: true),
                    CZAS_P = table.Column<int>(type: "int", nullable: true),
                    CZAS_C = table.Column<int>(type: "int", nullable: true),
                    OSPRZOD = table.Column<int>(type: "int", nullable: true),
                    OSTYL = table.Column<int>(type: "int", nullable: true),
                    MASA = table.Column<int>(type: "int", nullable: true),
                    NACZ_OSPRZOD = table.Column<int>(type: "int", nullable: true),
                    NACZ_OSTYL = table.Column<int>(type: "int", nullable: true),
                    NACZ_MASA = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_POS_VDF", x => x.ID_SFM_POS);
                });

            migrationBuilder.CreateTable(
                name: "SFM_POSPOOL",
                columns: table => new
                {
                    ID_SFM_POSPOOL = table.Column<int>(type: "int", nullable: false),
                    CZAS = table.Column<DateTime>(type: "datetime", nullable: true),
                    ID_SFM_TERM = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    TYP_TERM = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    ID_UZYTK = table.Column<int>(type: "int", nullable: true),
                    NAZWAUZYTK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    STAT = table.Column<short>(type: "smallint", nullable: true),
                    BLAD = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ID_SFM_POS = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_POSPOOL", x => x.ID_SFM_POSPOOL);
                });

            migrationBuilder.CreateTable(
                name: "SFM_PTO",
                columns: table => new
                {
                    ID_SFM_PTO = table.Column<int>(type: "int", nullable: false),
                    ID_TABOR = table.Column<int>(type: "int", nullable: true, comment: "id taboru SPEED"),
                    ID_SFM_TERM = table.Column<int>(type: "int", nullable: true, comment: "id terminala"),
                    ID_SFM_POS_START = table.Column<int>(type: "int", nullable: true, comment: "id początkowej pozycji GPS"),
                    ID_SFM_POS_STOP = table.Column<int>(type: "int", nullable: true, comment: "id końcowej pozycji GPS"),
                    PTO = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "PTO_ID"),
                    DT_SAVE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas utworzenia / zapisu do BD"),
                    DT_START = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas początku aktywności"),
                    DT_STOP = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas końca aktywności")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_PTO", x => x.ID_SFM_PTO);
                },
                comment: "rejestracja zdarzeń z przystawki mocy pojazdu");

            migrationBuilder.CreateTable(
                name: "SFM_ROUTE",
                columns: table => new
                {
                    ID_SFM_ROUTE = table.Column<int>(type: "int", nullable: false),
                    ID_TABOR = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "ID taboru"),
                    CORRIDOR = table.Column<short>(type: "smallint", nullable: true, comment: "0/1 - Corridor Control"),
                    DT_START = table.Column<DateTime>(type: "datetime", nullable: true, comment: "DT początku trasy"),
                    DT_STOP = table.Column<DateTime>(type: "datetime", nullable: true, comment: "DT końca trasy"),
                    DT_ALERT = table.Column<DateTime>(type: "datetime", nullable: true, comment: "DT ostatniego alarmu CC"),
                    DISTANCE = table.Column<int>(type: "int", nullable: true, comment: "długość trasy [km]"),
                    MAPTYPE = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "typ serwera mapy"),
                    ROUTE_ID = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "ID wyznaczonej trasy"),
                    ISSEND = table.Column<short>(type: "smallint", nullable: true, comment: "0/1 - wysłana do pojazdu"),
                    ISTOUPDATE = table.Column<short>(type: "smallint", nullable: true, comment: "0/1 - wymagana ponowna kalkulacja"),
                    VEHPROFILE = table.Column<string>(type: "text", nullable: true, comment: "profil pojazdu do wyznaczania trasy"),
                    ISTODELETE = table.Column<short>(type: "smallint", nullable: true, comment: "0/1 - do usunięcia na terminalu"),
                    RouteDetails = table.Column<string>(type: "xml", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_ROUTE", x => x.ID_SFM_ROUTE);
                });

            migrationBuilder.CreateTable(
                name: "SFM_ROUTE_EVENT",
                columns: table => new
                {
                    ID_SFM_ROUTE_EVENT = table.Column<int>(type: "int", nullable: false),
                    ID_SFM_ROUTE = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "ID wyznaczonej trasy"),
                    ID_SFM_ROUTE_POI = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "ID pozycji na wyznaczonej trasie"),
                    ID_OBJ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "typ obiektu SPEED"),
                    ID_REC = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "id obiektu SPEED (patrz ID_OBJ)")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_ROUTE_EVENT", x => x.ID_SFM_ROUTE_EVENT);
                });

            migrationBuilder.CreateTable(
                name: "SFM_Route_Obj",
                columns: table => new
                {
                    id_SFM_Route_Obj = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    id_Obj = table.Column<int>(type: "int", nullable: false),
                    id_Rec = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__SFM_Rout__6901CF13D33F1BB2", x => x.id_SFM_Route_Obj);
                });

            migrationBuilder.CreateTable(
                name: "SFM_Route_Obj_back2",
                columns: table => new
                {
                    id_SFM_Route_Obj = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    id_Obj = table.Column<int>(type: "int", nullable: false),
                    id_Rec = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__SFM_Rout__6901CF13783BCB41", x => x.id_SFM_Route_Obj);
                });

            migrationBuilder.CreateTable(
                name: "SFM_ROUTE_POI",
                columns: table => new
                {
                    ID_SFM_ROUTE_POI = table.Column<int>(type: "int", nullable: false),
                    ID_SFM_ROUTE = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "ID wyznaczonej trasy"),
                    LON = table.Column<double>(type: "float", nullable: true, comment: "GPS E/W (+/-)"),
                    LAT = table.Column<double>(type: "float", nullable: true, comment: "GPS N/S (+/-)"),
                    DIRECTION = table.Column<int>(type: "int", nullable: true, comment: "kierunek względem pólnocy (0-360)"),
                    KIND = table.Column<short>(type: "smallint", nullable: true, comment: "rodzaj punktu (0-via /1-POI /2-detail)"),
                    DESCRIPTION = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "opis punktu trasy")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_ROUTE_POI", x => x.ID_SFM_ROUTE_POI);
                });

            migrationBuilder.CreateTable(
                name: "SFM_RUNSTATUS",
                columns: table => new
                {
                    ID_SFM_RUNSTATUS = table.Column<int>(type: "int", nullable: false),
                    ID_SFM_SYSTEM = table.Column<int>(type: "int", nullable: true, comment: "ID systemu telematycznego"),
                    TYP_TERM = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    DT = table.Column<DateTime>(type: "datetime", nullable: true),
                    AKTYWNY = table.Column<short>(type: "smallint", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_RUNSTATUS", x => x.ID_SFM_RUNSTATUS);
                });

            migrationBuilder.CreateTable(
                name: "SFM_SetObjStat",
                columns: table => new
                {
                    ID_SFM_SetObjStat = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_SFM_System = table.Column<int>(type: "int", nullable: true, defaultValueSql: "((0))"),
                    ExternalId = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    dtEvent = table.Column<DateTime>(type: "datetime", nullable: true),
                    StatusSFM = table.Column<int>(type: "int", nullable: true),
                    OrderType = table.Column<int>(type: "int", nullable: true),
                    OrderId = table.Column<int>(type: "int", nullable: true),
                    TaskType = table.Column<int>(type: "int", nullable: true),
                    TaskId = table.Column<int>(type: "int", nullable: true),
                    IsForceSet = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "((0))"),
                    IsDone = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "((0))"),
                    ExtraFields = table.Column<string>(type: "xml", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_SetObjStat", x => x.ID_SFM_SetObjStat);
                });

            migrationBuilder.CreateTable(
                name: "SFM_SLO",
                columns: table => new
                {
                    ID_SFM_SLO = table.Column<int>(type: "int", nullable: false),
                    SLOWNIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: false, comment: "kod słownika"),
                    WYROZNIK = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: false, comment: "kod słownika - wyróżnik dodatkowy"),
                    KOD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: false, comment: "kod elementu słownika"),
                    OPIS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "opis elementu słownika"),
                    PARAMETRY = table.Column<string>(type: "text", nullable: true, defaultValueSql: "('0')", comment: "parametry dodatkowe")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_SLO", x => x.ID_SFM_SLO);
                },
                comment: "listy słownikowe - detal (SFM_SLO_Def.Kod <=> SFM_SLO.Slownik)");

            migrationBuilder.CreateTable(
                name: "SFM_SLO_DEF",
                columns: table => new
                {
                    ID_SFM_SLO_DEF = table.Column<int>(type: "int", nullable: false),
                    KOD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: false, comment: "kod słownika"),
                    OPIS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "opis słownika"),
                    PARAMETRY = table.Column<string>(type: "text", nullable: true, defaultValueSql: "('0')", comment: "definicja parametrów dodatkowych")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_SLO_DEF", x => x.ID_SFM_SLO_DEF);
                },
                comment: "definicje list słowników");

            migrationBuilder.CreateTable(
                name: "SFM_STAT",
                columns: table => new
                {
                    ID_SFM_STAT = table.Column<int>(type: "int", nullable: false),
                    ID_SFM_MSG = table.Column<int>(type: "int", nullable: true),
                    MACRO_NR = table.Column<int>(type: "int", nullable: true),
                    MACRO_VER = table.Column<int>(type: "int", nullable: true),
                    ID_SFM_TERM = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    TYP_TERM = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    SYMBOL_TERM = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    ID_SFM_TABOR = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ID_TABOR = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    NR_REJ = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_INWENT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ID_KIEROWCY = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ID_KIEROWCY2 = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA2 = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ID_ZLECENIA = table.Column<int>(type: "int", nullable: true),
                    NRZLEC = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ID_ZA = table.Column<int>(type: "int", nullable: true),
                    ID_WY = table.Column<int>(type: "int", nullable: true),
                    ID_SFM_POS = table.Column<int>(type: "int", nullable: true),
                    DT_ZAPIS = table.Column<DateTime>(type: "datetime", nullable: true),
                    DT_STAT = table.Column<DateTime>(type: "datetime", nullable: true),
                    STAT_KONIEC = table.Column<short>(type: "smallint", nullable: true),
                    STAT_KIEROWCA = table.Column<int>(type: "int", nullable: true),
                    STAT_KIEROWCA2 = table.Column<int>(type: "int", nullable: true),
                    STAT_TABOR = table.Column<int>(type: "int", nullable: true),
                    STAT_TABOR2 = table.Column<int>(type: "int", nullable: true),
                    STAT_WARTOSC = table.Column<double>(type: "float", nullable: true),
                    STAT_ZLEC = table.Column<int>(type: "int", nullable: true),
                    STAT_TEKST = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    DRUGIKIEROWCA = table.Column<short>(type: "smallint", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_STAT", x => x.ID_SFM_STAT);
                });

            migrationBuilder.CreateTable(
                name: "SFM_STATUS",
                columns: table => new
                {
                    ID_SFM_STATUS = table.Column<int>(type: "int", nullable: false),
                    NR_STAT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "numer statusu SFM"),
                    GRUPA = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "grupa statusu"),
                    SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "skrócona nazwa statusu"),
                    OPIS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "opis statusu"),
                    AKTYWNY = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('1')", comment: "0/1 Daje możliwość wyłączenia obsługi statusu"),
                    HISTORIA = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('1')", comment: "0/1 dodaj do historii statusów (SFM_StatusHist)"),
                    WWW = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "0/1 wyświetlaj na stronie www"),
                    AKCJA_ZLEC = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "akcja dla zlecenia"),
                    AKCJA_ZAWY = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "akcja dla zdarzeń zlecenia"),
                    AKCJA_PW = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "akcja dla polecenia wyjazdu"),
                    AKCJA_TABOR = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "akcja dla taboru"),
                    AKCJA_KIER1 = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "akcja dla kierowcy 1"),
                    AKCJA_KIER2 = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "akcja dla kierowcy 2"),
                    AKCJA_ZAWY_GL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "akcja dla zdarzeń zlec. głównego"),
                    AKCJA_ZAWY_ND = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "akcja dla zdarzeń zlec. nadrzędnego"),
                    ALERT_MSG = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "0/1 utworz wiadomość typu alert"),
                    ID_OBJ_WZORZEC = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "ID wzorca do utworzenia wiadomości"),
                    POZIOM_ZLEC = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "poziom akcji zlecenia"),
                    POZIOM_ZAWY = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "poziom akcji zdarzeń zlecenia"),
                    POZIOM_ZAWY_GL = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "poziom akcji zdarzeń zlec. głównego"),
                    POZIOM_ZAWY_ND = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "poziom akcji zdarzeń zlec. nadrzędnego"),
                    POZIOM_PW = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "poziom akcji polecenia wyjazdu"),
                    POZIOM_TABOR = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "poziom akcji taboru"),
                    POZIOM_KIER1 = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "poziom akcji kierowcy 1"),
                    POZIOM_KIER2 = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "poziom akcji kierowcy 2"),
                    ALERTDATY = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('1')", comment: "0/1 generuj alert gdy błędny czas statusu (SFM_Msg)"),
                    NADAJSTATSPEED = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('1')", comment: "0/1 nanieś status SPEED na rekord zlecenia")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_STATUS", x => x.ID_SFM_STATUS);
                });

            migrationBuilder.CreateTable(
                name: "SFM_STATUSAKCJE",
                columns: table => new
                {
                    ID_SFM_STATUSAKCJE = table.Column<int>(type: "int", nullable: false),
                    NR_STAT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "numer statusu SFM"),
                    GRUPA = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "grupa statusu"),
                    AKCJA = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, defaultValueSql: "('0')", comment: "symbol akcji dla statusu"),
                    OPIS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "opis akcji"),
                    AKCJA_ZLEC = table.Column<short>(type: "smallint", nullable: true, comment: "0/1 dla zlecenia"),
                    AKCJA_ZAWY = table.Column<short>(type: "smallint", nullable: true, comment: "0/1 dla zdarzeń zlecenia"),
                    AKCJA_PW = table.Column<short>(type: "smallint", nullable: true, comment: "0/1 dla polecenia wyjazdu"),
                    AKCJA_TABOR = table.Column<short>(type: "smallint", nullable: true, comment: "0/1 dla taboru"),
                    AKCJA_KIER1 = table.Column<short>(type: "smallint", nullable: true, comment: "0/1 dla kierowcy 1"),
                    AKCJA_KIER2 = table.Column<short>(type: "smallint", nullable: true, comment: "0/1 dla kierowcy 2"),
                    AKCJA_ZAWY_GL = table.Column<short>(type: "smallint", nullable: true, comment: "0/1 dla zdarzeń zlec. głównego"),
                    AKCJA_ZAWY_ND = table.Column<short>(type: "smallint", nullable: true, comment: "0/1 dla zdarzeń zlec. nadrzędnego")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_STATUSAKCJE", x => x.ID_SFM_STATUSAKCJE);
                });

            migrationBuilder.CreateTable(
                name: "SFM_STATUSHIST",
                columns: table => new
                {
                    ID_SFM_STATUSHIST = table.Column<int>(type: "int", nullable: false),
                    ID_SFM_STATUS = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "id statusu SFM"),
                    NR_STAT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "numer statusu SFM"),
                    GRUPA = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "grupa statusu"),
                    DT_STAT = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas statusu"),
                    DT_ZAPIS = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas zapisu statusu"),
                    UZYTKOWNIK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "użytkownik zapisu"),
                    ID_TABOR = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "id pojazdu"),
                    ID_KIEROWCY1 = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "id pierwszego kierowcy"),
                    ID_KIEROWCY2 = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "id drugiego kierowcy"),
                    ID_ZLECENIA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "id zlecenia"),
                    ID_ZLECENIA_ZA_WY = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "id zdarzenia zlecenia"),
                    ID_WYJAZDY = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "id polecenia wyjazdu"),
                    ID_SFM_POS = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "id pozycji GPS"),
                    ID_SFM_MSG = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "id komunikatu z tabeli SFM_Msg"),
                    LON = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')", comment: "długość geograficzna"),
                    LAT = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')", comment: "szerokość geograficzna"),
                    LKM = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')", comment: "stan licznika kilometrów [km]"),
                    PALIWO = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')", comment: "stan paliwa [L]"),
                    KRAJ = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "kod kraju (wg ISO)"),
                    CMR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "numer i data CMR"),
                    INFO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "inf. dodatkowe"),
                    TYP_OBJ = table.Column<string>(type: "varchar(35)", unicode: false, maxLength: 35, nullable: true, comment: "nazwa tabeli objektu związanego z makrem"),
                    ID_OBJ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "id objektu związanego z makrem"),
                    WYKONANO = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "liczba wykonanych akcji"),
                    REF1 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "zlec.REF_NAD"),
                    REF2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "zlec.REF_ODB"),
                    REF3 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "zlec.REF_POS"),
                    REF4 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "zlec.REF_4"),
                    REF5 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "zlec.REF_5"),
                    ID_SFM_TERM = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "id terminala"),
                    NIEZGODNY = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "0/1 Flaga, czy akcja jest zgodna z procesem"),
                    STATUS_ID = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "id statusu zlecenia przed akcją (tab. STATUS)"),
                    STATUS_POZIOM = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('-1')", comment: "poziom statusu zlecenia przed akcją (tab. STATUS)"),
                    STATUS_A_ID = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "id statusu zlecenia po akcji (tab. STATUS)"),
                    STATUS_A_POZIOM = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('-1')", comment: "poziom statusu zlecenia po akcji (tab. STATUS)"),
                    POZIOM_ZLEC = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('-1')", comment: "poziom akcji zlecenia"),
                    POZIOM_ZAWY = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('-1')", comment: "poziom akcji zdarzeń zlecenia"),
                    POZIOM_ZAWY_GL = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('-1')", comment: "poziom akcji zdarzeń zlec. głównego"),
                    POZIOM_ZAWY_ND = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('-1')", comment: "poziom akcji zdarzeń zlec. nadrzędnego"),
                    POZIOM_PW = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('-1')", comment: "poziom akcji polecenia wyjazdu"),
                    POZIOM_TABOR = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('-1')", comment: "poziom akcji taboru"),
                    POZIOM_KIER1 = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('-1')", comment: "poziom akcji kierowcy 1"),
                    POZIOM_KIER2 = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('-1')", comment: "poziom akcji kierowcy 2"),
                    TEMP = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "rzeczywista temp. przewozu"),
                    WAGA = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')", comment: "waga rzeczywista"),
                    WAGAJM = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "jednostka wagi (T lub KG)"),
                    RESULT_XML = table.Column<string>(type: "text", nullable: true, comment: "LOG wykonania wszystkich akcji w postaci XML"),
                    TFU = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')", comment: "stan licznika zużytego paliwa [L]"),
                    FLA = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')", comment: "poziom paliwa w zbiorniku pojazdu [L]")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_STATUSHIST", x => x.ID_SFM_STATUSHIST);
                });

            migrationBuilder.CreateTable(
                name: "SFM_SysParam",
                columns: table => new
                {
                    ID_SFM_System = table.Column<int>(type: "int", nullable: false),
                    Name = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: false),
                    Value = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_SysParam", x => new { x.ID_SFM_System, x.Name });
                });

            migrationBuilder.CreateTable(
                name: "SFM_SYSTEM",
                columns: table => new
                {
                    ID_SFM_SYSTEM = table.Column<int>(type: "int", nullable: false),
                    WYLACZ = table.Column<short>(type: "smallint", nullable: true, comment: "=1 wyłącza obsługę operatora"),
                    KOD = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "kod operatora"),
                    NAZWA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "nazwa operatora"),
                    STATUS = table.Column<int>(type: "int", nullable: true, comment: "status operatora"),
                    LOGIN = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "użytkownik u operatora"),
                    HASLO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "hasło użytkownika u operatora"),
                    COMPANY_ID = table.Column<int>(type: "int", nullable: true, comment: "QUA: id firmy"),
                    PROVIDER = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa Provider'a [SMTP_SERVER]"),
                    SERWER = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Nazwa lub IP"),
                    PORT = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "port             [SMTP_PORT]"),
                    BAZA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Nazwa bazy danych"),
                    SYSTEM_NR = table.Column<int>(type: "int", nullable: true, comment: "numer systemu"),
                    ID_MSG = table.Column<int>(type: "int", nullable: true, comment: "startowy ID kom. przychodzącego"),
                    ID_REPLY = table.Column<int>(type: "int", nullable: true, comment: "startowy ID odpowiedzi kierowcy"),
                    STARTARCH = table.Column<DateTime>(type: "datetime", nullable: true, comment: "DataSystem: pliki: data początkowa pobierania"),
                    DELETEFILES = table.Column<short>(type: "smallint", nullable: true, comment: "DataSystem: =1 włącza usuwanie wczytanych plików"),
                    FILTERMINTIME = table.Column<int>(type: "int", nullable: true, comment: "DataSystem: min. częstotliwość pozycji [min]"),
                    FILTERMINDISTANCE0 = table.Column<int>(type: "int", nullable: true, comment: "DataSystem: min. zmiana poz. na postoju [m]"),
                    FILTERMINDISTANCE1 = table.Column<int>(type: "int", nullable: true, comment: "DataSystem: min. zmiana poz. w ruchu [m]"),
                    L_COMMENT = table.Column<int>(type: "int", nullable: true, comment: "startowy licznik dla komentarzy"),
                    L_MESSAGE = table.Column<int>(type: "int", nullable: true, comment: "startowy licznik stat. komunikatów"),
                    L_PLACE = table.Column<int>(type: "int", nullable: true, comment: "startowy licznik stat. zleceń"),
                    URL_PROD = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "CMA/QHT: URL produkcyjny"),
                    URL_TEST = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "CMA: URL testowy"),
                    URL_INNY = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "CMA: URL inny"),
                    LOGINKEY = table.Column<string>(type: "varchar(128)", unicode: false, maxLength: 128, nullable: true, comment: "klucz dostępu klienta (np. dla TRONIK)"),
                    CUSTOMER = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "HourTRACS: Customer"),
                    MACROMAP = table.Column<string>(type: "text", nullable: true, comment: "QUA: Przypisanie akcji do numerów makr"),
                    CERT = table.Column<byte[]>(type: "image", nullable: true, comment: "bramka SMS (Multiinfo): dane certyfikatru"),
                    FILENAME = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "bramka SMS (Multiinfo): nazwa pliku certyfikatu"),
                    SMTP_MAIL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SMTP_AUTH = table.Column<int>(type: "int", nullable: true),
                    COPY_ODO2LKM = table.Column<short>(type: "smallint", nullable: true),
                    DRIVEACTIVITIES = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "aktywności dla zdarzeń JAZ - kody rozdzielone średnikiem"),
                    REVERSEGEOCODE = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "=1 włącza funkcję odwrotnego geokodowania pozycji"),
                    SYSMSG_NOTREAD = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "=1 wyłącza ustawianie statusu \"przeczytana\" dla wiad.syst."),
                    BCI_TACHO = table.Column<short>(type: "smallint", nullable: true, comment: "żródło danych tacho 0-TRA_REG /1-BCI_TACHO"),
                    USE_CONFIGXML = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "=1 włącza pobieranie instrukcji TRA wg konfiguracji XML"),
                    DISABLE_ETA = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "=1 wyłącza pobieranie zdarzeń ETA z nawigacji"),
                    JAZ_TRA_REG = table.Column<short>(type: "smallint", nullable: true, comment: "pobieranie zdarzeń JAZ z danymi 0-TACHO /1-osobnym kanałem"),
                    DOWNLOAD_FILES = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "=1 włącza pobieranie plików (np. skanów od kierowców)"),
                    USE_WEBSERVICE = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "=1 włącza alternatywny interfejs oparty o WebService"),
                    ALT_ALARMS = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "=1 włącza alternatywne pobieranie alarmów"),
                    ALT_LOCATIONS = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "=1 włącza alternatywne pobieranie pozycji GPS"),
                    ALT_MESSAGES = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "=1 włącza alternatywne pobieranie wiadomości"),
                    ALT_MSGSTAT = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "=1 włącza alternatywne pobieranie statusów wiadomości"),
                    ALT_SENDMSG = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "=1 włącza alternatywne wysyłanie wiadomości"),
                    ALT_SENDORDER = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "=1 włącza alternatywne wysyłanie zleceń FTL"),
                    ALT_POOLFILES = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "=1 włącza alternatywne pobieranie skanów dokumentów"),
                    ALT_REPORTS = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "=1 włącza alternatywne pobieranie raportów (IS - Instruction Set)"),
                    IS_PW_START = table.Column<int>(type: "int", nullable: true, comment: "Kod dla \"Nowa karta drogowa\""),
                    IS_PW_STOP = table.Column<int>(type: "int", nullable: true, comment: "Kod dla \"Zakończ kartę drogową\""),
                    CONFIG = table.Column<string>(type: "text", nullable: true, comment: "dodatkowa konfiguracja systemu telematycznego"),
                    ALT_DRIVINGDATA = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "=1 włącza alternatywne pobieranie zdarzeń JAZDA"),
                    ALT_STATOP = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "=1 włącza alternatywne pobieranie statusów operacyjnych pojazdu"),
                    ALT_TACHODATA = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "=1 włącza alternatywne pobieranie danych TACHO"),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    ALT_CORRIDOR = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "=1 włącza alternatywne wysyłanie trasy do nawigacji (kontrola korytarza)"),
                    IS_SKIP_TASKS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "kody pomijanych zdarzeń ZA/WY, np: 'NN','PW+','PW-'"),
                    SMTP_SSL = table.Column<int>(type: "int", nullable: true),
                    IS_ZA = table.Column<int>(type: "int", nullable: true, comment: "Kod dla \"Załadunek\""),
                    IS_WY = table.Column<int>(type: "int", nullable: true, comment: "Kod dla \"Wyładunek\""),
                    ALT_ACTIVITYPTO = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "=1 włącza pobieranie danych aktywności PTO"),
                    USE_INTERNALETA = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "=1 włącza wyznaczanie ETA funkcją interLAN"),
                    IsDefault = table.Column<short>(type: "smallint", nullable: true, comment: "=1 oznacza, że system jest domyślny dla wysyłki wiadomości"),
                    proxy = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true, comment: "konfiguracja PROXY(typ|host|port|user|pass)"),
                    Alt_SendFile = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "=1 włącza wysyłanie plików/załączników (wiadomości/zlecenia)"),
                    SendFileMaxSize = table.Column<int>(type: "int", nullable: true, comment: "max. wielkość pliku wysyłanego załącznika [B]"),
                    ClientId = table.Column<string>(type: "varchar(128)", unicode: false, maxLength: 128, nullable: true, comment: "np. API/Client Id")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_SYSTEM", x => x.ID_SFM_SYSTEM);
                },
                comment: "definicje systemów telematycznych");

            migrationBuilder.CreateTable(
                name: "SFM_SYSTEM_History",
                columns: table => new
                {
                    Id_SFM_SYSTEM_History = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Register_Date = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    Command_Type = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    Session_Info = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    ID_SFM_SYSTEM = table.Column<int>(type: "int", nullable: true),
                    WYLACZ = table.Column<short>(type: "smallint", nullable: true),
                    KOD = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    NAZWA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    STATUS = table.Column<int>(type: "int", nullable: true),
                    LOGIN = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    HASLO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    COMPANY_ID = table.Column<int>(type: "int", nullable: true),
                    PROVIDER = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SERWER = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PORT = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    BAZA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SYSTEM_NR = table.Column<int>(type: "int", nullable: true),
                    ID_MSG = table.Column<int>(type: "int", nullable: true),
                    ID_REPLY = table.Column<int>(type: "int", nullable: true),
                    STARTARCH = table.Column<DateTime>(type: "datetime", nullable: true),
                    DELETEFILES = table.Column<short>(type: "smallint", nullable: true),
                    FILTERMINTIME = table.Column<int>(type: "int", nullable: true),
                    FILTERMINDISTANCE0 = table.Column<int>(type: "int", nullable: true),
                    FILTERMINDISTANCE1 = table.Column<int>(type: "int", nullable: true),
                    L_COMMENT = table.Column<int>(type: "int", nullable: true),
                    L_MESSAGE = table.Column<int>(type: "int", nullable: true),
                    L_PLACE = table.Column<int>(type: "int", nullable: true),
                    URL_PROD = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    URL_TEST = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    URL_INNY = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    LOGINKEY = table.Column<string>(type: "varchar(128)", unicode: false, maxLength: 128, nullable: true),
                    CUSTOMER = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    MACROMAP = table.Column<string>(type: "text", nullable: true),
                    CERT = table.Column<byte[]>(type: "image", nullable: true),
                    FILENAME = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SMTP_MAIL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SMTP_AUTH = table.Column<int>(type: "int", nullable: true),
                    COPY_ODO2LKM = table.Column<short>(type: "smallint", nullable: true),
                    DRIVEACTIVITIES = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    REVERSEGEOCODE = table.Column<short>(type: "smallint", nullable: true),
                    SYSMSG_NOTREAD = table.Column<short>(type: "smallint", nullable: true),
                    BCI_TACHO = table.Column<short>(type: "smallint", nullable: true),
                    USE_CONFIGXML = table.Column<short>(type: "smallint", nullable: true),
                    DISABLE_ETA = table.Column<short>(type: "smallint", nullable: true),
                    JAZ_TRA_REG = table.Column<short>(type: "smallint", nullable: true),
                    DOWNLOAD_FILES = table.Column<short>(type: "smallint", nullable: true),
                    USE_WEBSERVICE = table.Column<short>(type: "smallint", nullable: true),
                    ALT_ALARMS = table.Column<short>(type: "smallint", nullable: true),
                    ALT_LOCATIONS = table.Column<short>(type: "smallint", nullable: true),
                    ALT_MESSAGES = table.Column<short>(type: "smallint", nullable: true),
                    ALT_MSGSTAT = table.Column<short>(type: "smallint", nullable: true),
                    ALT_SENDMSG = table.Column<short>(type: "smallint", nullable: true),
                    ALT_SENDORDER = table.Column<short>(type: "smallint", nullable: true),
                    ALT_POOLFILES = table.Column<short>(type: "smallint", nullable: true),
                    ALT_REPORTS = table.Column<short>(type: "smallint", nullable: true),
                    IS_PW_START = table.Column<int>(type: "int", nullable: true),
                    IS_PW_STOP = table.Column<int>(type: "int", nullable: true),
                    CONFIG = table.Column<string>(type: "text", nullable: true),
                    ALT_DRIVINGDATA = table.Column<short>(type: "smallint", nullable: true),
                    ALT_STATOP = table.Column<short>(type: "smallint", nullable: true),
                    ALT_TACHODATA = table.Column<short>(type: "smallint", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    ALT_CORRIDOR = table.Column<short>(type: "smallint", nullable: true),
                    IS_SKIP_TASKS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SMTP_SSL = table.Column<int>(type: "int", nullable: true),
                    IS_ZA = table.Column<int>(type: "int", nullable: true),
                    IS_WY = table.Column<int>(type: "int", nullable: true),
                    ALT_ACTIVITYPTO = table.Column<short>(type: "smallint", nullable: true),
                    USE_INTERNALETA = table.Column<short>(type: "smallint", nullable: true),
                    IsDefault = table.Column<short>(type: "smallint", nullable: true),
                    proxy = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__SFM_SYST__15FE12E19E8ED391", x => x.Id_SFM_SYSTEM_History);
                });

            migrationBuilder.CreateTable(
                name: "SFM_TABOR",
                columns: table => new
                {
                    ID_SFM_TABOR = table.Column<int>(type: "int", nullable: false),
                    ID_TABOR = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ILOSC_PLAN = table.Column<int>(type: "int", nullable: true),
                    ILOSC_WYK = table.Column<int>(type: "int", nullable: true),
                    P_OPER = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    P_DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    P_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    P_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    P_MIEJSCE = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    P_ZLECNIA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    A_OPER = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    A_DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    A_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    A_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    A_MIEJSCE = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    A_ZLECNIA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    A_OPISTW = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    STATUS_POZ = table.Column<short>(type: "smallint", nullable: true),
                    DATA_POZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    POZYCJA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    POZ_LONLAT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    LON = table.Column<double>(type: "float", nullable: true),
                    LAT = table.Column<double>(type: "float", nullable: true),
                    STATUS_WIAD = table.Column<short>(type: "smallint", nullable: true),
                    DATA_WIAD = table.Column<DateTime>(type: "datetime", nullable: true),
                    WIADOMOSC = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    W_STATUS_WIAD = table.Column<short>(type: "smallint", nullable: true),
                    W_DATA_WIAD = table.Column<DateTime>(type: "datetime", nullable: true),
                    W_WIADOMOSC = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    ALARM = table.Column<short>(type: "smallint", nullable: true),
                    DT_AKTUALIZACJI = table.Column<DateTime>(type: "datetime", nullable: true),
                    CORRIDOR = table.Column<short>(type: "smallint", nullable: true),
                    SFM_KIEROWCA_DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    SFM_KIEROWCA_ID = table.Column<int>(type: "int", nullable: true),
                    SFM_KIEROWCA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PLANZLECEN = table.Column<short>(type: "smallint", nullable: true),
                    ID_SFM_POS = table.Column<int>(type: "int", nullable: true),
                    NR_REJ_NACZEPY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_INWENT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    AKTYWNY = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    UZYTKOWNIK_ID = table.Column<int>(type: "int", nullable: true),
                    UZYTKOWNIK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    GRUPA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MARKA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MODEL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    LADOWNOSC = table.Column<double>(type: "float", nullable: true),
                    DLUGOSC = table.Column<double>(type: "float", nullable: true),
                    WYSOKOSC = table.Column<double>(type: "float", nullable: true),
                    SZEROKOSC = table.Column<double>(type: "float", nullable: true),
                    MIEJSCA_PALETOWE = table.Column<int>(type: "int", nullable: true),
                    TYP_ZABUDOWY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SPOSOB_LADOWANIA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    STATUS_DT = table.Column<DateTime>(type: "datetime", nullable: true),
                    ALERT_STAT = table.Column<short>(type: "smallint", nullable: true),
                    ALERT_DT = table.Column<DateTime>(type: "datetime", nullable: true),
                    ALERT_TXT = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    AKTYWNOSC = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Kod aktywności na pojeździe"),
                    AKTYWNOSC_DT = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data aktywności"),
                    SFM_KIEROWCA2_DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    SFM_KIEROWCA2_ID = table.Column<int>(type: "int", nullable: true),
                    SFM_KIEROWCA2 = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ETA_OPER = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    ETA_OPER_DT = table.Column<DateTime>(type: "datetime", nullable: true),
                    ETA_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    ETA_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    ETA_MIEJSCE = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    ETA_ZLECNIA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ETA_OPISTW = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ETA_DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    ETA_DT = table.Column<DateTime>(type: "datetime", nullable: true),
                    ETA_CZAS = table.Column<double>(type: "float", nullable: true),
                    ETA_KM = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_TABOR", x => x.ID_SFM_TABOR);
                });

            migrationBuilder.CreateTable(
                name: "SFM_TaborParams",
                columns: table => new
                {
                    ID_SFM_TaborParams = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_Tabor = table.Column<int>(type: "int", nullable: true),
                    ID_SFM_System = table.Column<int>(type: "int", nullable: true),
                    ParamName = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ParamValue = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__SFM_Tabo__3B2E9922031CF62F", x => x.ID_SFM_TaborParams);
                });

            migrationBuilder.CreateTable(
                name: "SFM_TemperatureControl",
                columns: table => new
                {
                    Id_SFM_TemperatureControl = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Id_SFM_System = table.Column<int>(type: "int", nullable: true),
                    IdTrailerSpeed = table.Column<int>(type: "int", nullable: true),
                    IdTrailerExt = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    OrderType = table.Column<int>(type: "int", nullable: true),
                    OrderId = table.Column<int>(type: "int", nullable: true),
                    TaskType = table.Column<int>(type: "int", nullable: true),
                    TaskId = table.Column<int>(type: "int", nullable: true),
                    DT_Create = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    DT_Event = table.Column<DateTime>(type: "datetime", nullable: true),
                    DT_Status = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    TemperatureZone = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TemperatureMin = table.Column<double>(type: "float", nullable: true),
                    TemperatureMax = table.Column<double>(type: "float", nullable: true),
                    Status = table.Column<int>(type: "int", nullable: true, defaultValueSql: "((0))"),
                    Error = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, defaultValueSql: "('')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__SFM_Temp__213C10208F069A11", x => x.Id_SFM_TemperatureControl);
                });

            migrationBuilder.CreateTable(
                name: "SFM_TERM",
                columns: table => new
                {
                    ID_SFM_TERM = table.Column<int>(type: "int", nullable: false),
                    WYLACZ = table.Column<short>(type: "smallint", nullable: true),
                    ID_TABOR = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ID_SFM_TABOR = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ID = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NUMER = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ID_SFM_SYSTEM = table.Column<int>(type: "int", nullable: true, comment: "ID systemu telematycznego"),
                    TYP_TERM = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    OPERATOR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    STARTARCH = table.Column<DateTime>(type: "datetime", nullable: true),
                    MAX_CZAS_POBRANIA = table.Column<int>(type: "int", nullable: true),
                    ALGORYTM = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    ID_SFM_POS = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    STATUS = table.Column<int>(type: "int", nullable: true),
                    REJ_CZAS = table.Column<DateTime>(type: "datetime", nullable: true),
                    REJ_CIAGLA = table.Column<short>(type: "smallint", nullable: true),
                    REJ_DELTA = table.Column<int>(type: "int", nullable: true),
                    MSGDSM = table.Column<short>(type: "smallint", nullable: true),
                    TERMINAL_IP = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true),
                    TERMINAL_PORT = table.Column<int>(type: "int", nullable: true),
                    COPY_ODO2LKM = table.Column<short>(type: "smallint", nullable: true),
                    ID_KIEROWCY = table.Column<int>(type: "int", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    NOMESSAGES = table.Column<short>(type: "smallint", nullable: true),
                    PTO_WEBASTO = table.Column<short>(type: "smallint", nullable: true),
                    Numer_Ext = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_TERM", x => x.ID_SFM_TERM);
                });

            migrationBuilder.CreateTable(
                name: "SFM_TRASA",
                columns: table => new
                {
                    ID_SFM_TRASA = table.Column<int>(type: "int", nullable: false),
                    ID_SFM_TABOR = table.Column<int>(type: "int", nullable: true),
                    NR_INWENT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_REJ = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ID_PW = table.Column<int>(type: "int", nullable: true),
                    ID_ZLECENIA = table.Column<int>(type: "int", nullable: true),
                    NRZLEC = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATAPLANSTART = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATAPLANSTOP = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATASTART = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATASTOP = table.Column<DateTime>(type: "datetime", nullable: true),
                    PROBLEMY = table.Column<int>(type: "int", nullable: true),
                    STATUS = table.Column<int>(type: "int", nullable: true),
                    OPIS = table.Column<string>(type: "varchar(2255)", unicode: false, maxLength: 2255, nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_TRASA", x => x.ID_SFM_TRASA);
                });

            migrationBuilder.CreateTable(
                name: "SFM_TRASA_P",
                columns: table => new
                {
                    ID_SFM_TRASA_P = table.Column<int>(type: "int", nullable: false),
                    ID_SFM_TABOR = table.Column<int>(type: "int", nullable: true),
                    ID_PW = table.Column<int>(type: "int", nullable: true),
                    ID_ZLECENIA = table.Column<int>(type: "int", nullable: true),
                    NRZLEC = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZDARZENIE = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    ID_ZAWY = table.Column<int>(type: "int", nullable: true),
                    KRAJ = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    KOD = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true),
                    MIEJSCOWOSC = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ADRES = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    POZOPIS = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    POZMIEJSC = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    POZKOD = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true),
                    POZKRAJ = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    LON = table.Column<double>(type: "float", nullable: true),
                    LAT = table.Column<double>(type: "float", nullable: true),
                    CZAS = table.Column<DateTime>(type: "datetime", nullable: true),
                    CZASPOBYTU = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATAPLANPRZYJ = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATAPLANWYJ = table.Column<DateTime>(type: "datetime", nullable: true),
                    POTWPRZYJ = table.Column<int>(type: "int", nullable: true),
                    DATAPRZYJ = table.Column<DateTime>(type: "datetime", nullable: true),
                    POTWWYJ = table.Column<int>(type: "int", nullable: true),
                    DATAWYJ = table.Column<DateTime>(type: "datetime", nullable: true),
                    STATUS = table.Column<int>(type: "int", nullable: true),
                    ID_SFM_TRASA = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    ODLEGLOSC = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_TRASA_P", x => x.ID_SFM_TRASA_P);
                });

            migrationBuilder.CreateTable(
                name: "SFM_USER",
                columns: table => new
                {
                    ID_UZYTK = table.Column<int>(type: "int", nullable: false),
                    NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    DYSPOZYTOR = table.Column<short>(type: "smallint", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_USER", x => x.ID_UZYTK);
                });

            migrationBuilder.CreateTable(
                name: "SFM_USER_TABOR",
                columns: table => new
                {
                    ID_SFM_UT = table.Column<int>(type: "int", nullable: false),
                    ID_UZYTK = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ID_TABOR = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ID_SFM_TABOR = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_USER_TABOR", x => x.ID_SFM_UT);
                });

            migrationBuilder.CreateTable(
                name: "SFM_VDF_ZAWY_STAT",
                columns: table => new
                {
                    ID_SFM_VDF_ZAWY_STAT = table.Column<int>(type: "int", nullable: false),
                    ID_SFM_SYSTEM = table.Column<int>(type: "int", nullable: true, comment: "ID systemu w bazie SFM"),
                    ID_SFM_TERM = table.Column<int>(type: "int", nullable: true, comment: "ID terminala w bazie SFM"),
                    ID_SFM_MSG = table.Column<int>(type: "int", nullable: true, comment: "ID wiadomości źródłowej"),
                    NR_STAT = table.Column<int>(type: "int", nullable: true, comment: "liczbowe oznaczenie statusu Volvo"),
                    DT_STAT = table.Column<DateTime>(type: "datetime", nullable: true, comment: "data/czas statusu Volvo"),
                    DT_ZAPIS = table.Column<DateTime>(type: "datetime", nullable: true, comment: "data/czas zapisu rekordu")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_VDF_ZAWY_STAT", x => x.ID_SFM_VDF_ZAWY_STAT);
                });

            migrationBuilder.CreateTable(
                name: "SFM_VEH_EVENTS",
                columns: table => new
                {
                    ID_SFM_VEH_EVENTS = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_SFM_SYSTEM = table.Column<int>(type: "int", nullable: true, comment: "ID systemu telematycznego"),
                    ID_SFM_TERM = table.Column<int>(type: "int", nullable: true, comment: "ID terminala"),
                    TYP_TERM = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "typ terminala (operator)"),
                    ID_TABOR = table.Column<int>(type: "int", nullable: true, comment: "ID taboru"),
                    ID_NACZEPA = table.Column<int>(type: "int", nullable: true, comment: "ID naczepy"),
                    ID_KIEROWCY1 = table.Column<int>(type: "int", nullable: true, comment: "ID pierwszego kierowcy"),
                    ID_KIEROWCY2 = table.Column<int>(type: "int", nullable: true, comment: "ID drugiego kierowcy"),
                    TYP = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "typ zdarzenia"),
                    DT = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas zdarzenia"),
                    LON = table.Column<double>(type: "float", nullable: true, comment: "GPS E/W (+/-)"),
                    LAT = table.Column<double>(type: "float", nullable: true, comment: "GPS N/S (+/-)"),
                    LKM = table.Column<int>(type: "int", nullable: true, comment: "licznik kilometrów [km]"),
                    P0_ID_SFM_POS = table.Column<int>(type: "int", nullable: true, comment: "P0 - ID pozycji"),
                    P0_MIEJSCE_ID = table.Column<int>(type: "int", nullable: true, comment: "P0 - ID_MIEJSCA_ZA_ROZLADUNKU"),
                    P0_KRAJ = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "P0 - Kraj"),
                    P0_MIASTO = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "P0 - Miasto"),
                    P1_ID_SFM_POS = table.Column<int>(type: "int", nullable: true, comment: "P1 - ID pozycji"),
                    P1_MIEJSCE_ID = table.Column<int>(type: "int", nullable: true, comment: "P1 - ID_MIEJSCA_ZA_ROZLADUNKU"),
                    P1_KRAJ = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "P1 - Kraj"),
                    P1_MIASTO = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "P1 - Miasto"),
                    STATUS = table.Column<short>(type: "smallint", nullable: true, comment: "status zdarzenia (-1-nowe /0-gotowe /1-przetworzone /99-błąd)"),
                    STATUSTXT = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "treść błędu")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_VEH_EVENTS", x => x.ID_SFM_VEH_EVENTS);
                },
                comment: "wybrane zdarzenia z pojazdu (np granice)");

            migrationBuilder.CreateTable(
                name: "SFM_ZLECENIA_ZA_WY",
                columns: table => new
                {
                    ID_ZLECENIA_ZA_WY = table.Column<int>(type: "int", nullable: false),
                    STATUS = table.Column<short>(type: "smallint", nullable: true, comment: "0-nowy/ 1-przetworzony/ 2-przypisany/ 3-anulowany"),
                    TYP_TERM = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "typ terminala (operator)"),
                    ID_SFM_TERM = table.Column<int>(type: "int", nullable: true, comment: "id terminala"),
                    ID_TABOR = table.Column<int>(type: "int", nullable: true, comment: "id taboru"),
                    ID_NACZEPA = table.Column<int>(type: "int", nullable: true, comment: "id naczepy"),
                    ID_KIEROWCY = table.Column<int>(type: "int", nullable: true, comment: "id kierowcy"),
                    ID_SFM_MSG = table.Column<int>(type: "int", nullable: true, comment: "id utworzonej wiadomości"),
                    DT = table.Column<DateTime>(type: "datetime", nullable: true, comment: "data utworzenia"),
                    NUMER = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "numer nadany przez kierowcę"),
                    EXT_ID = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "id w syst. zewnętrznym"),
                    EXT_TYP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "rodzaj aktywności - nr"),
                    EXT_TYP_OPIS = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "rodzaj aktywności - opis"),
                    XML = table.Column<string>(type: "text", nullable: true, comment: "zawartość źródła XML zdarzenia"),
                    ID_SFM_IC_Files = table.Column<int>(type: "int", nullable: true, comment: "id powiązanego raportu z danymi")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_ZLECENIA_ZA_WY", x => x.ID_ZLECENIA_ZA_WY);
                });

            migrationBuilder.CreateTable(
                name: "SFMCheck",
                schema: "iLAN",
                columns: table => new
                {
                    SFMCheckID = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    LastDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Status = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "SfmStatusForActivity",
                columns: table => new
                {
                    IdSfmStatusForActivity = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    statOrder = table.Column<int>(type: "int", nullable: true),
                    Id_SFM_System = table.Column<int>(type: "int", nullable: true),
                    activityId = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    activityDescr = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    SfmStatusNo = table.Column<int>(type: "int", nullable: true),
                    SfmStatusActivityKindId = table.Column<int>(type: "int", nullable: true),
                    SfmStatusSourceDateKindId = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__SfmStatu__427810B3596120EA", x => x.IdSfmStatusForActivity);
                });

            migrationBuilder.CreateTable(
                name: "ShapeType",
                schema: "geo",
                columns: table => new
                {
                    ShapeTypeId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Code = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    Description = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ShapeType", x => x.ShapeTypeId);
                });

            migrationBuilder.CreateTable(
                name: "SID",
                columns: table => new
                {
                    ID_SID = table.Column<int>(type: "int", nullable: false),
                    ID_KLIENTA = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kontrahenta - tab: KONTRAHENCI (w SPEED nie wykorzystywane)"),
                    NAZWA = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true, comment: "Nazwa schematu importu danych"),
                    OPIS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Opis"),
                    FORMAT = table.Column<int>(type: "int", nullable: true, comment: "Format danych"),
                    TYP = table.Column<int>(type: "int", nullable: true, comment: "Typ danych"),
                    ZNAKI = table.Column<int>(type: "int", nullable: true, comment: "Kodowanie znaków"),
                    NAGLOWEK = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy plik zawiera nagłówek"),
                    STOPKA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy plik zawiera stopkę"),
                    SCIEZKA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Domyślna ścieżka skąd pobierany będzie plik"),
                    PLIK = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Nazwa domyślnego pliku"),
                    SKRYPT = table.Column<byte[]>(type: "image", nullable: true, comment: "Definicja SID"),
                    ARCH_SCIEZKA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Ścieżka archiwum"),
                    ARCH_PRZENIES = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy przenosić do archiwum"),
                    ARCH_Z_DATA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy dodawać datę do nazwy przy przenoszeniu do archiwum"),
                    AUTO_ODCZYT = table.Column<int>(type: "int", nullable: true, comment: "Flaga, automatyczny odczyt danych z pliku bez potwierdzania"),
                    AUTO_ZAPIS = table.Column<int>(type: "int", nullable: true, comment: "Flaga, automatyczny zapis danych do bazy bez potwierdzania"),
                    PROCEDURA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Nazwa procedury skladowanej wykorzystywanej jako czarna skrzynka poza zapisie rekordu danych do bazy"),
                    CZY_UPDATE = table.Column<int>(type: "int", nullable: true, comment: "Flaga czy aktualizować istniejące już rekordy w bazie danych "),
                    CZY_PROCEDURA = table.Column<int>(type: "int", nullable: true, comment: "Flaga czy wywolac procedure skladowana dla kazdego z zapisanych przez SID rekordow"),
                    CZY_CENNIK_SQL = table.Column<int>(type: "int", nullable: true, comment: "Flaga czy wywolac procedure cennika dla kazdego z zapisanych przez SID rekordow"),
                    CENNIK_SQL_ID = table.Column<int>(type: "int", nullable: true, comment: "Id cennika wykorzystywanego po zapisie rekordu danych do bazy"),
                    CENNIK_SQL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Nazwa cennika wykorzystywanego po zapisie rekordu danych do bazy"),
                    CZY_EDI = table.Column<int>(type: "int", nullable: true, comment: "Flaga czy sid ma byc wykorzystywany przez serwer edi"),
                    CZY_WALIDACJA = table.Column<int>(type: "int", nullable: true, comment: "Flaga czy dane maja podlegac dodatkowej walidacji"),
                    ARCH_KOPIUJ = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy skopiowac do archiwum"),
                    CZY_ZADLUZENIE = table.Column<int>(type: "int", nullable: true, comment: "Flaga czy zadluzenie kontrahenta ma podlegac walidacji"),
                    SEPARATOR = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "separator pliku"),
                    POI_GPS = table.Column<int>(type: "int", nullable: true, comment: "Przepisanie gps z POI na ZA WY"),
                    TYP_DOWOLNY = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Typ danych widoczny dla typu dowolny"),
                    ARCH_SCIEZKA_BLAD = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Ścieżka blad"),
                    GDPR_SOURCE_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SID", x => x.ID_SID);
                },
                comment: "Definicje SID - Schemty Importu Danych");

            migrationBuilder.CreateTable(
                name: "SID_PRAWA",
                columns: table => new
                {
                    ID_SID_PRAWA = table.Column<int>(type: "int", nullable: false),
                    SID_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do SID"),
                    UZYTKOWNIK_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SID_PRAWA", x => x.ID_SID_PRAWA);
                },
                comment: "Definicje praw do SID - Schemty Importu Danych");

            migrationBuilder.CreateTable(
                name: "SIM",
                columns: table => new
                {
                    ID_SIM = table.Column<int>(type: "int", nullable: false),
                    NUMER = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    NUMER_SIM = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    OPERATOR = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TARYFA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    ROAMING = table.Column<int>(type: "int", nullable: true),
                    UM_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    UM_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    HASLO = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    MODEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TYP = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_SER = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DATA_PROD = table.Column<DateTime>(type: "datetime", nullable: true),
                    PIN = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    PIN2 = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    PUK1 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    PUK2 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    IMEI = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KIEROWCA_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KIEROWCA_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    TABOR = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TABOR_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    PRYWATNY = table.Column<int>(type: "int", nullable: true),
                    AKTYWNY = table.Column<int>(type: "int", nullable: true),
                    OPERATOR_ID = table.Column<int>(type: "int", nullable: true),
                    KRAJ = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    UWAGI = table.Column<string>(type: "text", nullable: true),
                    NR_LOKALIZATORA_GPS = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SIM", x => x.ID_SIM);
                });

            migrationBuilder.CreateTable(
                name: "SIM_APARAT_HIST",
                columns: table => new
                {
                    ID_SIM_APARAT_HIST = table.Column<int>(type: "int", nullable: false),
                    SIM_ID = table.Column<int>(type: "int", nullable: true),
                    DATA_WYMIANY = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TYP = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DATA_PROD = table.Column<DateTime>(type: "datetime", nullable: true),
                    IMEI = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SIM_APARAT_HIST", x => x.ID_SIM_APARAT_HIST);
                });

            migrationBuilder.CreateTable(
                name: "SIM_HIST",
                columns: table => new
                {
                    ID_SIM_HIST = table.Column<int>(type: "int", nullable: false),
                    SIM_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KIEROWCA_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    KIEROWCA_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    TABOR = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TABOR_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    TABOR_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    SIM = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DATA_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    OBIEKT = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    INFO_DOD = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SIM_HIST", x => x.ID_SIM_HIST);
                });

            migrationBuilder.CreateTable(
                name: "SKORCN08",
                columns: table => new
                {
                    ID_SKORCN08 = table.Column<int>(type: "int", nullable: false),
                    CN = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    NAZWA = table.Column<string>(type: "varchar(35)", unicode: false, maxLength: 35, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(250)", unicode: false, maxLength: 250, nullable: true),
                    PKWIU = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    VAT = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SKORCN08", x => x.ID_SKORCN08);
                });

            migrationBuilder.CreateTable(
                name: "SKORCN10",
                columns: table => new
                {
                    ID_SKORCN10 = table.Column<int>(type: "int", nullable: false),
                    CN = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    NAZWA = table.Column<string>(type: "varchar(35)", unicode: false, maxLength: 35, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(250)", unicode: false, maxLength: 250, nullable: true),
                    PKWIU = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    VAT = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SKORCN10", x => x.ID_SKORCN10);
                });

            migrationBuilder.CreateTable(
                name: "SLOWNIK",
                columns: table => new
                {
                    ID_SLOWNIK = table.Column<int>(type: "int", nullable: false),
                    SYMBOL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KOD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SLOWNIK", x => x.ID_SLOWNIK);
                });

            migrationBuilder.CreateTable(
                name: "SLOWNIKADRMIARA",
                columns: table => new
                {
                    KOD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: false),
                    OPIS = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SLOWNIKADRMIARA", x => x.KOD);
                });

            migrationBuilder.CreateTable(
                name: "SLOWNIKADROPISOPAK",
                columns: table => new
                {
                    KOD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: false),
                    OPIS = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SLOWNIKADROPISOPAK", x => x.KOD);
                });

            migrationBuilder.CreateTable(
                name: "SLOWNIKI_SENT",
                columns: table => new
                {
                    ID_SLOWNIKI_SENT = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    code = table.Column<int>(type: "int", nullable: true, comment: "Kod słownika"),
                    version = table.Column<int>(type: "int", nullable: true, comment: "Wersja słownika"),
                    name = table.Column<string>(type: "varchar(250)", unicode: false, maxLength: 250, nullable: true, comment: "Nazwa słownika"),
                    file_name = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Nazwa pliku"),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SLOWNIKI_SENT", x => x.ID_SLOWNIKI_SENT);
                });

            migrationBuilder.CreateTable(
                name: "SolverCarriers",
                schema: "opti",
                columns: table => new
                {
                    SolverTaskId = table.Column<int>(type: "int", nullable: false),
                    SolverCarrierId = table.Column<int>(type: "int", nullable: false),
                    CarrierCode = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: false),
                    Share = table.Column<double>(type: "float", nullable: true),
                    VehiclesCount = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SolverCarriers", x => new { x.SolverTaskId, x.SolverCarrierId });
                });

            migrationBuilder.CreateTable(
                name: "SolverCountries",
                schema: "opti",
                columns: table => new
                {
                    SolverTaskId = table.Column<int>(type: "int", nullable: false),
                    CountryCode2 = table.Column<string>(type: "char(2)", unicode: false, fixedLength: true, maxLength: 2, nullable: false),
                    CountryCode3 = table.Column<string>(type: "char(3)", unicode: false, fixedLength: true, maxLength: 3, nullable: false),
                    VehicleCode = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: false),
                    Name = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SolverCountries", x => new { x.SolverTaskId, x.CountryCode2 });
                });

            migrationBuilder.CreateTable(
                name: "SolverEventCostTypes",
                schema: "opti",
                columns: table => new
                {
                    CostTypeId = table.Column<int>(type: "int", nullable: false),
                    Name = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: false),
                    Description = table.Column<string>(type: "nvarchar(500)", maxLength: 500, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SolverEventCostTypes", x => x.CostTypeId);
                });

            migrationBuilder.CreateTable(
                name: "SolverEventTypes",
                schema: "opti",
                columns: table => new
                {
                    EventTypeId = table.Column<int>(type: "int", nullable: false),
                    EventTypeScope = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: false),
                    Name = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SolverEventTypes", x => new { x.EventTypeId, x.EventTypeScope });
                });

            migrationBuilder.CreateTable(
                name: "SolverFleet2OrdersMatrix",
                schema: "opti",
                columns: table => new
                {
                    SolverTaskId = table.Column<int>(type: "int", nullable: false),
                    MatrixId = table.Column<int>(type: "int", nullable: false),
                    MatrixRank = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SolverFleet2OrdersMatrix", x => new { x.SolverTaskId, x.MatrixId });
                });

            migrationBuilder.CreateTable(
                name: "SolverFleetFeatureTypes",
                schema: "opti",
                columns: table => new
                {
                    FleetFeatureTypeId = table.Column<int>(type: "int", nullable: false),
                    FleetFeatureName = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    Description = table.Column<string>(type: "nvarchar(500)", maxLength: 500, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SolverFleetFeatureTypes", x => x.FleetFeatureTypeId);
                });

            migrationBuilder.CreateTable(
                name: "SolverMessageTypes",
                schema: "opti",
                columns: table => new
                {
                    MessageTypeId = table.Column<int>(type: "int", nullable: false),
                    MessageTypeName = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: false),
                    Description = table.Column<string>(type: "nvarchar(500)", maxLength: 500, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__SolverMe__9BA1E2BA278E651C", x => x.MessageTypeId);
                });

            migrationBuilder.CreateTable(
                name: "SolverOrdersFeatureTypes",
                schema: "opti",
                columns: table => new
                {
                    FeatureTypeId = table.Column<int>(type: "int", nullable: false),
                    FeatureTypeName = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: false),
                    Description = table.Column<string>(type: "nvarchar(500)", maxLength: 500, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SolverOrdersFeatureTypes", x => x.FeatureTypeId);
                });

            migrationBuilder.CreateTable(
                name: "SolverOrdersItemsBundleTypes",
                schema: "opti",
                columns: table => new
                {
                    BundleTypeId = table.Column<int>(type: "int", nullable: false),
                    BundleTypeName = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: false),
                    Description = table.Column<string>(type: "nvarchar(500)", maxLength: 500, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SolverOrdersItemsBundleTypes", x => x.BundleTypeId);
                });

            migrationBuilder.CreateTable(
                name: "SolverOrdersRelationRestrictionTypes",
                schema: "opti",
                columns: table => new
                {
                    RestrictionTypeId = table.Column<int>(type: "int", nullable: false),
                    RestrictionName = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SolverOrdersRelationRestrictionTypes", x => x.RestrictionTypeId);
                });

            migrationBuilder.CreateTable(
                name: "SolverOrderTypes",
                schema: "opti",
                columns: table => new
                {
                    OrderTypeId = table.Column<int>(type: "int", nullable: false),
                    OrderTypeName = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SolverOrderTypes", x => x.OrderTypeId);
                });

            migrationBuilder.CreateTable(
                name: "SolverPoi2PoiMatrixTypes",
                schema: "opti",
                columns: table => new
                {
                    MatrixTypeId = table.Column<int>(type: "int", nullable: false),
                    Name = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: false),
                    Description = table.Column<string>(type: "nvarchar(500)", maxLength: 500, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SolverPoi2PoiMatrixTypes", x => x.MatrixTypeId);
                });

            migrationBuilder.CreateTable(
                name: "SolverPoiRelationTypes",
                schema: "opti",
                columns: table => new
                {
                    PoiRelationTypeId = table.Column<int>(type: "int", nullable: false),
                    PoiRelationName = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    Description = table.Column<string>(type: "nvarchar(500)", maxLength: 500, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SolverPoiRelationTypes", x => x.PoiRelationTypeId);
                });

            migrationBuilder.CreateTable(
                name: "SolverPricelistFeatureTypes",
                schema: "opti",
                columns: table => new
                {
                    PricelistFeatureTypeId = table.Column<int>(type: "int", nullable: false),
                    PricelistFeatureName = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    Description = table.Column<string>(type: "nvarchar(500)", maxLength: 500, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SolverPricelistFeatureTypes", x => x.PricelistFeatureTypeId);
                });

            migrationBuilder.CreateTable(
                name: "SolverPricelistTypes",
                schema: "opti",
                columns: table => new
                {
                    PricelistTypeId = table.Column<int>(type: "int", nullable: false),
                    PricelistTypeName = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SolverPricelistTypes", x => x.PricelistTypeId);
                });

            migrationBuilder.CreateTable(
                name: "SolverRouteRelationTypes",
                schema: "opti",
                columns: table => new
                {
                    RouteRelationTypeId = table.Column<int>(type: "int", nullable: false),
                    RouteRelationName = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    Description = table.Column<string>(type: "nvarchar(500)", maxLength: 500, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SolverRouteRelationTypes", x => x.RouteRelationTypeId);
                });

            migrationBuilder.CreateTable(
                name: "SolverTaskStatuses",
                schema: "opti",
                columns: table => new
                {
                    SolverTaskStatusId = table.Column<int>(type: "int", nullable: false),
                    Name = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SolverTaskStatuses", x => x.SolverTaskStatusId);
                });

            migrationBuilder.CreateTable(
                name: "SolverTaskTypes",
                schema: "opti",
                columns: table => new
                {
                    SolverTaskTypeId = table.Column<int>(type: "int", nullable: false),
                    Name = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: false),
                    Description = table.Column<string>(type: "nvarchar(500)", maxLength: 500, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SolverTaskTypes", x => x.SolverTaskTypeId);
                });

            migrationBuilder.CreateTable(
                name: "SolverTimeWindowTypes",
                schema: "opti",
                columns: table => new
                {
                    SolverTimeWindowTypeId = table.Column<int>(type: "int", nullable: false),
                    Name = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: false),
                    Description = table.Column<string>(type: "nvarchar(500)", maxLength: 500, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SolverTimeWindowTypes", x => x.SolverTimeWindowTypeId);
                });

            migrationBuilder.CreateTable(
                name: "SolverTruckProfile",
                schema: "opti",
                columns: table => new
                {
                    SolverTruckProfileId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SolverTaskId = table.Column<int>(type: "int", nullable: false),
                    ExtProfileId = table.Column<int>(type: "int", nullable: false),
                    MaxWeight = table.Column<double>(type: "float", nullable: true),
                    MaxVolume = table.Column<double>(type: "float", nullable: true),
                    MaxNumber = table.Column<double>(type: "float", nullable: true),
                    MaxVehicleNumber = table.Column<double>(type: "float", nullable: true),
                    EquipmentName = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    CostPerKM = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SolverTruckProfile", x => new { x.SolverTaskId, x.SolverTruckProfileId });
                });

            migrationBuilder.CreateTable(
                name: "SPEED_LOG",
                columns: table => new
                {
                    ID_SPEED_LOG = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    STANOWISKO = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: true),
                    TERMINAL = table.Column<int>(type: "int", nullable: true),
                    UZYTKOWNIK_ID = table.Column<int>(type: "int", nullable: true),
                    UZYTKOWNIK_LOGIN = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    UZYTKOWNIK_NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DATACZAS = table.Column<DateTime>(type: "datetime", nullable: true),
                    KOMPUTER_NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KOMPUTER_IP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    PROGRAM_KATALOG = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    PROGRAM_NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PROGRAM_WERSJA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BAZA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    LICENCJA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SPEED_LOG", x => x.ID_SPEED_LOG);
                });

            migrationBuilder.CreateTable(
                name: "SPEED_LOG_HIST",
                columns: table => new
                {
                    ID_SPEED_LOG_HIST = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    STANOWISKO = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: true),
                    TERMINAL = table.Column<int>(type: "int", nullable: true),
                    UZYTKOWNIK_ID = table.Column<int>(type: "int", nullable: true),
                    UZYTKOWNIK_LOGIN = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    UZYTKOWNIK_NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DATACZAS = table.Column<DateTime>(type: "datetime", nullable: true),
                    KOMPUTER_NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KOMPUTER_IP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    PROGRAM_KATALOG = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    PROGRAM_NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PROGRAM_WERSJA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    BAZA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    LICENCJA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SPEED_LOG_HIST", x => x.ID_SPEED_LOG_HIST);
                });

            migrationBuilder.CreateTable(
                name: "SPEED_LOG_POZ",
                columns: table => new
                {
                    ID_SPEED_LOG_POZ = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SPEED_LOG_ID = table.Column<int>(type: "int", nullable: true),
                    PROFIL_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SPEED_LOG_POZ", x => x.ID_SPEED_LOG_POZ);
                });

            migrationBuilder.CreateTable(
                name: "SPEED_Metadata",
                columns: table => new
                {
                    SchemaName = table.Column<string>(type: "nvarchar(128)", maxLength: 128, nullable: false),
                    TableName = table.Column<string>(type: "nvarchar(128)", maxLength: 128, nullable: false),
                    FieldName = table.Column<string>(type: "nvarchar(128)", maxLength: 128, nullable: false),
                    FieldType = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    FieldSize = table.Column<int>(type: "int", nullable: true),
                    IsIdentity = table.Column<int>(type: "int", nullable: true),
                    FieldDesc = table.Column<object>(type: "sql_variant", nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "SPEED_PARAMS",
                columns: table => new
                {
                    ID_SPEED_PARAMS = table.Column<int>(type: "int", nullable: false),
                    AKTUALIZACJA = table.Column<int>(type: "int", nullable: true),
                    SAP_INTF = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SPEED_PARAMS", x => x.ID_SPEED_PARAMS);
                });

            migrationBuilder.CreateTable(
                name: "STATISTICS_LOG",
                columns: table => new
                {
                    ID_STATISTICS_LOG = table.Column<int>(type: "int", nullable: false),
                    APPNAME = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Nazwa aplikacji"),
                    APPVER = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Wersja aplikacji"),
                    USER_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika - tab: UZYTKOWNIK"),
                    USER_NAME = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Symbol użytkownika"),
                    STATION_NAME = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Nazwa stacji/komputera"),
                    STATION_IP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "IP stacji/komputera"),
                    USE_DT_FIRST = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data pierwszego użycia"),
                    USE_DT_LAST = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniego użycia"),
                    USE_COUNT = table.Column<int>(type: "int", nullable: true, comment: "Licznik użycia"),
                    STAT_GROUP = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Grupa statystyk"),
                    STAT_INFO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Info (np. nazwa modułu)"),
                    STAT_RESULT = table.Column<int>(type: "int", nullable: true, comment: "Rezultat testu (np. moduł jest w licencji)")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_STATISTICS_LOG", x => x.ID_STATISTICS_LOG);
                },
                comment: "Logi do tworzenia statystyk użytkowania programu");

            migrationBuilder.CreateTable(
                name: "STATUS",
                columns: table => new
                {
                    ID_STATUS = table.Column<int>(type: "int", nullable: false),
                    TYP = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Typ: FT, DR, LL, OF, PA, SZ, PR, RP, RS, PW"),
                    LP = table.Column<int>(type: "int", nullable: true, comment: "Lp, dawniej okrślało ważność statusu, teraz po prostu Lp"),
                    KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Kod statusu"),
                    OPIS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Opis statusu"),
                    SYSTEMOWY = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy status systemowy - zdefiniowany przez InterLAN"),
                    TYLKO_ODCZYT = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy obiekt z tym statusem ma być tylko do odczytu"),
                    KTO_MOZE = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true, comment: "Lista symboli użytkowników rozdzielonych średnikami, którzy mogą nadawac dany status"),
                    AKTYWNY = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy status aktywny"),
                    POZIOM = table.Column<int>(type: "int", nullable: true, comment: "Ważność, hierarchia statusu"),
                    NASTEPNIKI = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true, comment: "*pole nie używane*"),
                    ROWNIEZ_NA_PRZESYLKI = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy propagować statu na przesyłki (tylko dla TYP=LL i ZT)"),
                    SLOT_1 = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy ustawiać slot dodatkowy 1"),
                    SLOT_1_NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Etykieta/znaczenie slotu dodatkowego 1"),
                    SLOT_2 = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy ustawiać slot dodatkowy 2"),
                    SLOT_2_NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Etykieta/znaczenie slotu dodatkowego 2"),
                    SLOT_3 = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy ustawiać slot dodatkowy 3"),
                    SLOT_3_NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Etykieta/znaczenie slotu dodatkowego 3"),
                    SLOT_4 = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy ustawiać slot dodatkowy 4"),
                    SLOT_4_NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Etykieta/znaczenie slotu dodatkowego 4"),
                    SLOT_5 = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy ustawiać slot dodatkowy 5"),
                    SLOT_5_NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Etykieta/znaczenie slotu dodatkowego 5"),
                    SKAN = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy status pochodzi z procesu skanowania"),
                    ROWNIEZ_NA_PRZESYLKI_JAKI = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Jaki status na przesyłki ma byc propagowany"),
                    WYMAGANA_ANOMALIA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy wymagane jest podanie anomalii przy nadawaniu statusu"),
                    WWW = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy status widoczny poprzez aplikację WWW"),
                    NADANIE = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy status jest podjęciem"),
                    DORECZENIE = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy status jest doreczeniem"),
                    IS_STATUS_SFM = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy ma zmapowanie statusu SFM"),
                    STATUS_SFM = table.Column<int>(type: "int", nullable: true, comment: "Mapowanie statusu SFM"),
                    USTAW_DATE_ZAL = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy ustawiać na obiekcie załadunku/podjęcia"),
                    USTAW_DATE_ROZ = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy ustawiać na obiekcie datę rozładunku/doręczenia"),
                    USTAW_DATE_POTW = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy ustawiać na obiekcie datę potwierdzenia"),
                    USTAW_PONOWNE_PLAN = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy ustawiać na obiekcie ponowne planowanie"),
                    ETYKIETA_PL = table.Column<string>(type: "varchar(250)", unicode: false, maxLength: 250, nullable: true, comment: "Etykieta statusu PL"),
                    ETYKIETA_EN = table.Column<string>(type: "varchar(250)", unicode: false, maxLength: 250, nullable: true, comment: "Etykieta statusu EN"),
                    MOZLIWA_ZM_CZASU = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy możliwa jest zmiana daty i godziny statusu"),
                    OBJ_ID = table.Column<int>(type: "int", nullable: true, comment: "ID obiektu: 1-DR, 2_FT, 3-PA, 4-OF, 5-PR, 6-LL, 7-SZ, 8-RP, 9-RS, 10-PW"),
                    USTAW_ANULOWANIE = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy ustawiać na obiekcie anulowanie"),
                    USTAW_ROZL_DOKUM = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy ustawiać na obiekcie stan rozl. dokumentów"),
                    USTAW_NIEDORECZONE = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy ustawiać na obiekcie niedoreczenie"),
                    KOLOR_RAMKI = table.Column<int>(type: "int", nullable: true, comment: "Kolor ramki w gridzie"),
                    KOLOR_TEKSTU = table.Column<int>(type: "int", nullable: true, comment: "Kolor tekstu w ramce grida"),
                    DO_PLANOWANIA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy ustawić flage PLANOWANA"),
                    ROWNIEZ_NA_PACZKI = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy propagować statu na paczki (tylko dla TYP=DR)"),
                    USTAW_STOP = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy ustawiać na obiekcie flage STOP"),
                    MOZNA_ANULOWAC = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy można anulować przy tym statusie"),
                    USTAW_WYKONANIE = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy ustawiać na obiekcie flage wykonania (tylko dla ZT)"),
                    USTAW_KOL_WYK = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy ustawiać na obiekcie kolejność wykonania (tylko dla ZT)"),
                    USTAW_STATUS_WIND_FV = table.Column<int>(type: "int", nullable: true, comment: "Czy i jaki ustawiać status windykacyjny na fakturze"),
                    DO_ZAPLANOWANYCH = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy ustawić flagę ZAPLANOWANA"),
                    USTAW_NIEPODJETE = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy ustawiać na obiekcie niepodjęcie"),
                    CZY_USTAW_STATUS_WIND_FV = table.Column<int>(type: "int", nullable: true, comment: "Czy ustawiać status windykacyjny na fakturze"),
                    USTAW_TERM_PLATN_FV = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy zmienić termin płatnosci na FV, w oparciu o date statusu"),
                    USTAW_BEZ_KSIEGOWANIA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy ustawiać flage \"Bez księgowania\""),
                    PROCEDURA_DB = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Procedura bazodanowa odpalana po nadaniu statusu"),
                    ROWNIEZ_NA_SKONSOLIDOWANE = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy propagować statu na przes. skonsolidowane (tylko dla TYP=DR)"),
                    USTAW_AKTYWNY = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy ustawiać flage \"Aktywny\""),
                    USTAW_BLOKADE = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy ustawiać flage \"Blokada ręczna\""),
                    TRYB = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Tryb statusów - dodatkowy wyróżnik np dla listy zleceń W, ST lub faktur K, P etc"),
                    CZY_KOLOR_RAMKI = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy ustawiać kolor ramki w gridzie"),
                    CZY_KOLOR_TEKSTU = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy ustawiać kolor tekstu w ramce grida"),
                    USTAW_OCENE_PRZEW = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy ustawiać na obiekcie ocenę przewoźnika"),
                    ANULOWANIE_COD = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy anulować COD"),
                    USTAW_NIE_FAKTURUJ = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy ustawiać na obiekcie flagę NIE FAKTURUJ"),
                    TERMINOWOSC = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy status do terminowosci"),
                    MOZLIWA_ZM_CZASU_WYMUS = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy wymuszać reczne wprowadzenie daty i godz"),
                    WYM_OPIS_UZUP = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy wymuszać reczne opisu uzup."),
                    DOT_POWIADOMIEN = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy status ma sie pojawiac w powiadomieniach jako wyzwalacz"),
                    SFM = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy status ma sie pojawiac w SFM"),
                    ZEZW_NA_RKTNP = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy zezwalac na rozbicie kosztó trasy na przesyłki"),
                    USTAW_STAN_AUTO_FV = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy ustawiać na obiekcie stan autofakturowania"),
                    MOZLIWA_DATA_PRZYSZLA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy można ustawic datew przyszłości"),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    CZYSC_TRASY = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy wyczyscic trasy dla anulowanej przesyłki"),
                    USTAW_ZAGROZENIE = table.Column<int>(type: "int", nullable: true),
                    MOBILE = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy status widoczny poprzez aplikację MOBILE"),
                    USTAW_SENT = table.Column<int>(type: "int", nullable: true),
                    ZAMKNIJ_TECZKE = table.Column<int>(type: "int", nullable: true),
                    NIE_WYMAGAJ_DT = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy wymagać podania daty i godz"),
                    MobileGpsSensor = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy wykonac akcje na sensorze GPS"),
                    DictionaryId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TextId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_STATUS", x => x.ID_STATUS);
                },
                comment: "Słownik statusów");

            migrationBuilder.CreateTable(
                name: "STATUS_UPRAWNIENIA",
                columns: table => new
                {
                    ID_STATUS_UPRAWNIENIA = table.Column<int>(type: "int", nullable: false),
                    STATUS_ID = table.Column<int>(type: "int", nullable: false, comment: "Relacja do statusu, tab: STATUS"),
                    TYP = table.Column<int>(type: "int", nullable: false, comment: "Typ uprawnienia 0 - user, 1 - profil"),
                    OBIEKT_ID = table.Column<int>(type: "int", nullable: false, comment: "Relacja do użytkownika, profilu")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_STATUS_UPRAWNIENIA", x => x.ID_STATUS_UPRAWNIENIA);
                },
                comment: "Uprawnienia do statusów");

            migrationBuilder.CreateTable(
                name: "STATUS_WIND",
                columns: table => new
                {
                    ID_STATUS_WIND = table.Column<int>(type: "int", nullable: false),
                    AKTYWNY = table.Column<int>(type: "int", nullable: false, comment: "Flaga, czy status aktywny"),
                    SYSTEMOWY = table.Column<int>(type: "int", nullable: false, comment: "Flaga, czy status systemowy"),
                    KOD = table.Column<int>(type: "int", nullable: false, comment: "Kod statusu"),
                    OPIS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: false, comment: "Opis statusu"),
                    KOLOR_RAMKI = table.Column<int>(type: "int", nullable: true, comment: "Kolor ramki w gridzie"),
                    KOLOR_TEKSTU = table.Column<int>(type: "int", nullable: true, comment: "Kolor tekstu w ramce grida"),
                    CZY_KOLOR_RAMKI = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy ustawiać kolor ramki w gridzie"),
                    CZY_KOLOR_TEKSTU = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy ustawiać kolor tekstu w ramce grida"),
                    DictionaryId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TextId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_STATUS_WIND", x => x.ID_STATUS_WIND);
                },
                comment: "Słownik statusów");

            migrationBuilder.CreateTable(
                name: "StatusOfStopOutsideMin",
                schema: "geo",
                columns: table => new
                {
                    StatusOfStopOutsideMinId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    CreateTime = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    ObjectTypeId = table.Column<int>(type: "int", nullable: true),
                    ObjectId = table.Column<int>(type: "int", nullable: true),
                    PositionId = table.Column<int>(type: "int", nullable: true),
                    Alert = table.Column<int>(type: "int", nullable: true, defaultValueSql: "((0))")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_StatusOfStopOutsideMin", x => x.StatusOfStopOutsideMinId);
                });

            migrationBuilder.CreateTable(
                name: "STATUSY",
                columns: table => new
                {
                    ID_STATUSY = table.Column<int>(type: "int", nullable: false),
                    STATUS = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Kod statusu"),
                    STATUS_POPRZ = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Kod poprzedniego statusu"),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data nadania"),
                    CZAS = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina nadania"),
                    ID_UZYTKOW = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Relacja do użytkownika - tab: UZYTKOWNIK"),
                    UZYTKOW = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Symbol użytkownika"),
                    ID_OBJ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "ID obiektu: 1-DR, 2_FT, 3-PA, 4-OF, 5-PR, 6-LL, 7-SZ, 8-RP, 9-RS, 10-PW"),
                    ID_REC = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "ID rekordu danego typu obiektu"),
                    INFO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Dowolna informacja do statusu"),
                    TYP = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "*pole nie używane*"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja"),
                    SLOT_1_ = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_2_ = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_3_ = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_4_ = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_5_ = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_1_N = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Slot dodatkowy 1"),
                    SLOT_2_N = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Slot dodatkowy 2"),
                    SLOT_3_N = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Slot dodatkowy 3"),
                    SLOT_4_N = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Slot dodatkowy 4"),
                    SLOT_5_N = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Slot dodatkowy 5"),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dział"),
                    ZDARZENIE = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "*pole nie używane*"),
                    SKAN = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy status pochodzi z procesu skanowania"),
                    KTO_SKAN_ID = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Relacja do użytkownika który skanował - tab: UZYTKOWNIK"),
                    KTO_SKAN = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Symbol użytwkownika który skanował"),
                    USZK = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy status dotyczy uszkodzenia"),
                    SYMBOL_USZK = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Symbol uszkodzenia - tab: SYMBOLE_ANOMALII"),
                    OPIS_USZK = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true, comment: "Opis uszkodzenia"),
                    OPIS_USZK_UZUP = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true, comment: "Uzupełniający opis uszkodzenia"),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Ilosć załączników do statusu"),
                    IS_EXPORTED = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy wyeksport. dane np. SAE (0-nie sprocesowano, 1-tak, 2-nie, bo nie trzeba było, -1-nie, bo był bład)"),
                    IS_EXPORTED_DT = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data eksportu pliku"),
                    IS_EXPORTED_FILE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Nazwa utworzonego pliku"),
                    WWW = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy status widoczny poprzez aplikację WWW"),
                    NADANIE = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy status oznacza podjecie"),
                    DORECZENIE = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy status oznacza doręczenie"),
                    NADRZ_TYP = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Typ obiektu nadrzednego np. LL,PZ,WZ"),
                    NADRZ_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do obiektu nadrzędnego"),
                    NADRZ_NR = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Numer obiektu nadrzędnego"),
                    NADRZ_ZDARZ = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Zdarzenie nadrz np. ZA,WY,IN,PZ,WZ,MM"),
                    LISTY_LINIOWE_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do przewozu - tab: LISTY_LINIOWE"),
                    SFM_SRV_STATE = table.Column<int>(type: "int", nullable: true, comment: "SFM Srv: 0-oczekuje, 1-zrobione"),
                    NIEZGODNY = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy status jest zgodny z procesem"),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    DOT_OPAKOWAN = table.Column<short>(type: "smallint", nullable: true, comment: "Flaga, czy status dotyczy opakowania"),
                    ILOSC = table.Column<double>(type: "float", nullable: true, comment: "Jakiej ilośc dotyczy status, 0 - domyślnie - oznacza WSZYSTKIE"),
                    STATUS_ID = table.Column<int>(type: "int", nullable: true, comment: "Relcja do statusu - tab: STATUSY"),
                    STATUSY_ZDARZ = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Kod zdarzenia"),
                    MAGAZYN_ZDARZENIA_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do dok. mag. - tab: MAGAZYN_ZDARZENIA"),
                    NADRZ_STATUSY_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do statusu nadrzędnego"),
                    EMI_STATE = table.Column<int>(type: "int", nullable: true),
                    W_STREFIE_KLIENTA = table.Column<int>(type: "int", nullable: true),
                    LON = table.Column<double>(type: "float", nullable: true),
                    LAT = table.Column<double>(type: "float", nullable: true),
                    ORG_STATUS_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_STATUSY", x => x.ID_STATUSY);
                },
                comment: "Tabela zawierajaca statusy dla wszystkich obiektówe w systemie");

            migrationBuilder.CreateTable(
                name: "STATUSY_JPK",
                columns: table => new
                {
                    ID_STATUSY_JPK = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    CODE = table.Column<int>(type: "int", nullable: true),
                    DESCRIPTION = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true, comment: "Opis statusu"),
                    DETAILS = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true, comment: "Szczegóły zdarzenia"),
                    UPO = table.Column<string>(type: "text", nullable: true, comment: "Treść Urzędowego Poświadczenia Odbioru"),
                    TIME_STAMP = table.Column<DateTime>(type: "datetime", nullable: true),
                    REFERENCE_NUMBER = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_STATUSY_JPK", x => x.ID_STATUSY_JPK);
                });

            migrationBuilder.CreateTable(
                name: "STATUSY_ZDARZ",
                columns: table => new
                {
                    ID_STATUSY_ZDARZ = table.Column<int>(type: "int", nullable: false),
                    OBIEKT = table.Column<int>(type: "int", nullable: true),
                    KOD_ZDARZ = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    STATUS = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    INFO_ZDARZ = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    STATUS_ORG = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_STATUSY_ZDARZ", x => x.ID_STATUSY_ZDARZ);
                });

            migrationBuilder.CreateTable(
                name: "Statystyki",
                schema: "opti",
                columns: table => new
                {
                    SessionId = table.Column<int>(type: "int", nullable: true),
                    MacierzZleceniaTaborId = table.Column<int>(type: "int", nullable: true),
                    driver_id = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    calculate_dt = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    start_of_week_dt = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    start_of_day_dt = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    last_activity_dt = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    last_tacho_dt = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    last_tacho_status = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    last_tacho_time = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    drive_10h_used = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    drive_10h_left = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    drive_10h_max = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    rest_9h_used = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    rest_9h_left = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    rest_9h_max = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    work_day_used = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    duty_day_used = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    drive_4h30_used = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    drive_4h30_left = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    drive_4h30_max = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    drive_day_used = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    drive_day_left = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    drive_day_max = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    drive_one_week_used = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    drive_one_week_left = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    drive_one_week_max = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    drive_two_weeks_used = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    drive_two_weeks_left = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    drive_two_weeks_max = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    daily_rest_used = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    daily_rest_left = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    daily_rest_min = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    daily_rest_next = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    weekly_rest_used = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    weekly_rest_left = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    weekly_rest_min = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    weekly_rest_next = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    weekly_rest_last_used = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    weekly_rest_shortened = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    weekly_rest_time_to_next = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "STAWKI_VAT",
                columns: table => new
                {
                    ID_STAWKI_VAT = table.Column<int>(type: "int", nullable: false),
                    LP = table.Column<int>(type: "int", nullable: true, comment: "Lp"),
                    KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Kod stawki VAT"),
                    STAWKA = table.Column<double>(type: "float", nullable: true, comment: "Stawka VAT"),
                    WIDOCZNY = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('1')", comment: "Flaga, czy dana stawka jest widoczna w systemie"),
                    KOD_DRUK_FISK = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Kody dla drukarki fiskalnej np.: A, B etc"),
                    WYR_KONTA = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Wyróżnik dla konta księgowego")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_STAWKI_VAT", x => x.ID_STAWKI_VAT);
                },
                comment: "Słownik stawek VAT");

            migrationBuilder.CreateTable(
                name: "SUBKONTO_MNEMONIC",
                columns: table => new
                {
                    ID_SUBKONTO_MNEMONIC = table.Column<int>(type: "int", nullable: false),
                    BANK = table.Column<string>(type: "varchar(8)", unicode: false, maxLength: 8, nullable: false, comment: "Numer banku"),
                    BANK_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: false, comment: "Nazwa banku"),
                    MNEMONIC = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: false, comment: "Bank w którym prowadzony jest rachunek"),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: false, comment: "Waluta rachunku"),
                    SWIFT_CODE = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Kod SWIFT - dla operacji miedzynarodowych"),
                    KRAJ_IBAN = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "Oznaczenie kraju dla formatu IBAN")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SUBKONTO_MNEMONIC", x => x.ID_SUBKONTO_MNEMONIC);
                },
                comment: "Numery mnemonic dla generatora subkont");

            migrationBuilder.CreateTable(
                name: "SYMBOLE_ANOMALII",
                columns: table => new
                {
                    ID_SYMBOLE_ANOMALII = table.Column<int>(type: "int", nullable: false),
                    KOD = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Kod anomalii"),
                    OPIS = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true, comment: "Opis anomalii"),
                    WYM_OPIS_DOD = table.Column<short>(type: "smallint", nullable: true, comment: "Flaga, czy dana anomalia wymaga podania opisu dodatkowego"),
                    DOT_OPAKOWAN = table.Column<short>(type: "smallint", nullable: true, comment: "Flaga, czy dana anomalia dotyczy opakowania"),
                    WYM_ILOSC = table.Column<short>(type: "smallint", nullable: true, comment: "Flaga, czy dana anomalia wymaga podania ilości"),
                    BRAK = table.Column<short>(type: "smallint", nullable: true, comment: "Flaga, czy zaznaczyć brak na trasie"),
                    SKANER = table.Column<short>(type: "smallint", nullable: true, comment: "Flaga, czy udostępnić w skanerze"),
                    BRAK_WY = table.Column<short>(type: "smallint", nullable: true, comment: "Flaga, czy zaznaczyć brak na trasie"),
                    WINNY = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Kto winny anomalii"),
                    ROZLICZ = table.Column<short>(type: "smallint", nullable: true, comment: "Jak rozliczyć za anomalie"),
                    UWAGA = table.Column<short>(type: "smallint", nullable: true, comment: "Flaga, czy dotyczy uwagi"),
                    MOBILE = table.Column<short>(type: "smallint", nullable: true, comment: "Flaga, czy dotyczy mSPEED"),
                    MOBILE_VERSION = table.Column<int>(type: "int", nullable: true, comment: "Wersja na mobile-u"),
                    AKTYWNY = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy kod aktywny"),
                    MobilePhotoDoc = table.Column<short>(type: "smallint", nullable: true, comment: "Flaga, czy dotyczy mSPEED"),
                    DictionaryId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TextId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SYMBOLE_ANOMALII", x => x.ID_SYMBOLE_ANOMALII);
                },
                comment: "Symbole anomalii");

            migrationBuilder.CreateTable(
                name: "SYMBOLE_ANOMALII_STAT",
                columns: table => new
                {
                    ID_SYMBOLE_ANOMALII_STAT = table.Column<int>(type: "int", nullable: false),
                    SYMBOLE_ANOMALII_ID = table.Column<int>(type: "int", nullable: false, comment: "Relacja do SYMBOLE_ANOMALII"),
                    STATUS_ID = table.Column<int>(type: "int", nullable: false, comment: "Relacja do statusu"),
                    DOMYSLNY = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Domyślny"),
                    MOBILE = table.Column<short>(type: "smallint", nullable: true, comment: "Flaga, czy dotyczy mSPEED"),
                    MOBILE_VERSION = table.Column<int>(type: "int", nullable: true, comment: "Wersja na mobile-u"),
                    AKTYWNY = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy kod aktywny"),
                    WYM_OPIS_DOD = table.Column<short>(type: "smallint", nullable: true, comment: "Flaga, czy dana anomalia wymaga podania opisu dodatkowego"),
                    DOT_OPAKOWAN = table.Column<short>(type: "smallint", nullable: true, comment: "Flaga, czy dana anomalia dotyczy opakowania"),
                    WYM_ILOSC = table.Column<short>(type: "smallint", nullable: true, comment: "Flaga, czy dana anomalia wymaga podania ilości"),
                    BRAK = table.Column<short>(type: "smallint", nullable: true, comment: "Flaga, czy zaznaczyć brak na trasie"),
                    BRAK_WY = table.Column<short>(type: "smallint", nullable: true, comment: "Flaga, czy zaznaczyć brak na trasie"),
                    SKANER = table.Column<short>(type: "smallint", nullable: true, comment: "Flaga, czy udostępnić w skanerze"),
                    UWAGA = table.Column<short>(type: "smallint", nullable: true, comment: "Flaga, czy dotyczy uwagi"),
                    MobilePhotoDoc = table.Column<short>(type: "smallint", nullable: true, comment: "Flaga, czy dotyczy mSPEED")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SYMBOLE_ANOMALII_STAT", x => x.ID_SYMBOLE_ANOMALII_STAT);
                },
                comment: "Symbole anomalii - powiązanie ze statusami");

            migrationBuilder.CreateTable(
                name: "SYMBOLE_TRAFIKOW",
                columns: table => new
                {
                    ID_SYMBOLE_TRAFIKOW = table.Column<int>(type: "int", nullable: false),
                    KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: false, comment: "Symbol trafiku"),
                    OPIS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Opis"),
                    KRAJ = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "Kraj"),
                    IDENT_PACZKI = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy każda paczka z tego trafiku jest identyfikowalna"),
                    DictionaryId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TextId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SYMBOLE_TRAFIKOW", x => x.ID_SYMBOLE_TRAFIKOW);
                },
                comment: "Słownik symboli trafików");

            migrationBuilder.CreateTable(
                name: "SYST_WYM_DANYCH",
                columns: table => new
                {
                    ID_SYST_WYM_DANYCH = table.Column<int>(type: "int", nullable: false),
                    KOD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    TYP = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    GENERUJ_ALERT = table.Column<int>(type: "int", nullable: true),
                    GENERUJ_EMAIL = table.Column<int>(type: "int", nullable: true),
                    GENERUJ_POPUP = table.Column<int>(type: "int", nullable: true),
                    EMAIL_LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    EMAIL_ODBIORCY = table.Column<string>(type: "varchar(250)", unicode: false, maxLength: 250, nullable: true),
                    POPUP_USERS = table.Column<string>(type: "varchar(250)", unicode: false, maxLength: 250, nullable: true),
                    PROCEDURA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa procedury skladowanej wykorzystywanej jako czarna skrzynka po zapisie rekordu danych do bazy"),
                    CZY_PROCEDURA = table.Column<int>(type: "int", nullable: true, comment: "Flaga czy wywolac procedure skladowana dla kazdego z zapisanych przez system rekordow")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SYST_WYM_DANYCH", x => x.ID_SYST_WYM_DANYCH);
                });

            migrationBuilder.CreateTable(
                name: "SYST_WYM_DANYCH_LOG",
                columns: table => new
                {
                    ID_SYST_WYM_DANYCH_LOG = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SYST_WYM_DANYCH_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do systemów wymiany danych - tab: SYST_WYM_DANYCH"),
                    DT = table.Column<DateTime>(type: "datetime", nullable: true),
                    TYP = table.Column<int>(type: "int", nullable: true),
                    OBIEKT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OPIS = table.Column<string>(type: "text", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SYST_WYM_DANYCH_LOG", x => x.ID_SYST_WYM_DANYCH_LOG);
                });

            migrationBuilder.CreateTable(
                name: "SYST_WYM_DANYCH_PARAMS",
                columns: table => new
                {
                    ID_SYST_WYM_DANYCH_PARAMS = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SYST_WYM_DANYCH_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do systemów wymiany danych - tab: SYST_WYM_DANYCH"),
                    PARAMETR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    WARTOSC = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    GRUPA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PARAMETR_TYP = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    PARAMETR_DICT = table.Column<string>(type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SYST_WYM_DANYCH_PARAMS", x => x.ID_SYST_WYM_DANYCH_PARAMS);
                });

            migrationBuilder.CreateTable(
                name: "SYSTEM_USE",
                columns: table => new
                {
                    ID_SYSTEM_USE = table.Column<int>(type: "int", nullable: false),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    CZAS = table.Column<DateTime>(type: "datetime", nullable: true),
                    IDENTYFIKATOR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OSOBA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PROGRAM = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PROGRAM_LOGIN = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PROGRAM_OSOBA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    IP_ADRES = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    KOMPUTER = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: true),
                    UZYTKOWNIK = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: true),
                    UZYTKOWNIK_OSOBA = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: true),
                    MAC = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    WINDOWS = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: true),
                    LICENCJA = table.Column<int>(type: "int", nullable: true),
                    SYSTEM = table.Column<int>(type: "int", nullable: true),
                    MODULY = table.Column<byte[]>(type: "image", nullable: true),
                    UZYTEMODULY = table.Column<byte[]>(type: "image", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SYSTEM_USE", x => x.ID_SYSTEM_USE);
                });

            migrationBuilder.CreateTable(
                name: "SystemVersion",
                schema: "app",
                columns: table => new
                {
                    SystemVersionId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    VersionName = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    Version = table.Column<int>(type: "int", nullable: true),
                    Codename = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    Locked = table.Column<int>(type: "int", nullable: false),
                    LockedUser = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    Information = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SystemVersion", x => x.SystemVersionId);
                });

            migrationBuilder.CreateTable(
                name: "SZ_ZLEC_INSTR_DOD",
                columns: table => new
                {
                    ID_SZ_ZLEC_INSTR_DOD = table.Column<int>(type: "int", nullable: false),
                    SZABLONY_ZLECEN_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Relacja do przesyłki, tab: SZABLONY_ZLECEN"),
                    KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Redundantnie na podstwie słownika INSTRUKCJE_DOD"),
                    WYMAGANY_OPIS = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Redundantnie na podstwie słownika INSTRUKCJE_DOD"),
                    UWAGI = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    WYMAGANA_DATA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Redundantnie na podstwie słownika INSTRUKCJE_DOD"),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    WYMAGANA_KWOTA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Redundantnie na podstwie słownika INSTRUKCJE_DOD"),
                    KWOTA = table.Column<double>(type: "float", nullable: true),
                    KWOTA_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    COD = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Redundantnie na podstwie słownika INSTRUKCJE_DOD"),
                    CENNIK = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Redundantnie na podstwie słownika INSTRUKCJE_DOD"),
                    OPCJONALNA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Redundantnie na podstwie słownika INSTRUKCJE_DOD"),
                    WYMAGANA_ILOSC = table.Column<int>(type: "int", nullable: true),
                    ILOSC = table.Column<double>(type: "float", nullable: true),
                    WYMAGANA_JT = table.Column<int>(type: "int", nullable: true),
                    JT = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    WYMAGANY_CHECKBOX = table.Column<int>(type: "int", nullable: true),
                    CHECKBOX = table.Column<double>(type: "float", nullable: true),
                    ILOSC_JT = table.Column<double>(type: "float", nullable: true),
                    WYMAGANY_OPIS_DOD = table.Column<int>(type: "int", nullable: true),
                    OPIS_DOD = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DOT_KLIENTA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Redundantnie na podstwie słownika INSTRUKCJE_DOD"),
                    DOT_PRZEWOZNIKA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Redundantnie na podstwie słownika INSTRUKCJE_DOD")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SZ_ZLEC_INSTR_DOD", x => x.ID_SZ_ZLEC_INSTR_DOD);
                });

            migrationBuilder.CreateTable(
                name: "SZABLONY_ZLECEN",
                columns: table => new
                {
                    ID_SZABLONY_ZLECEN = table.Column<int>(type: "int", nullable: false),
                    OZNACZENIE_WZORCA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TYP = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    KLIENT_ID = table.Column<int>(type: "int", nullable: true),
                    KLIENT_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KLIENT_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KLIENT_ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KLIENT_MIASTO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KLIENT_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    KLIENT_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KLIENT_NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    KLIENT_TEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KLIENT_KONT = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PLATNIK_ID = table.Column<int>(type: "int", nullable: true),
                    PLATNIK_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    PLATNIK_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    PLATNIK_ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    PLATNIK_MIASTO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    PLATNIK_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    PLATNIK_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    PLATNIK_NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    PRZEWOZNIK_ID = table.Column<int>(type: "int", nullable: true),
                    PRZEWOZNIK_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    PRZEWOZNIK_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    PRZEWOZNIK_ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    PRZEWOZNIK_MIASTO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    PRZEWOZNIK_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    PRZEWOZNIK_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    PRZEWOZNIK_NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    PRZEWOZNIK_TEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PRZEWOZNIK_KONT = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    WARUNKI_DOSTAWY = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    TYP_ZLECENIA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    OPIS_TOWARU = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true),
                    OPIS_WYMAG_TABORU = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true),
                    ODPRAWA_CELNA_WYWOZ_ID = table.Column<int>(type: "int", nullable: true),
                    ODPRAWA_CELNA_WYWOZ = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true),
                    ODPRAWA_CELNA_WWOZ_ID = table.Column<int>(type: "int", nullable: true),
                    ODPRAWA_CELNA_WWOZ = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true),
                    ODPRAWA_GRANICZNA_ID = table.Column<int>(type: "int", nullable: true),
                    ODPRAWA_GRANICZNA = table.Column<string>(type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    TRASA_ID = table.Column<int>(type: "int", nullable: true),
                    TRASA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    TRASA_ODL = table.Column<double>(type: "float", nullable: true),
                    JEDN_WAGI = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    WAGA_LADUNKU = table.Column<double>(type: "float", nullable: true),
                    OBJETOSC_LADUNKU = table.Column<double>(type: "float", nullable: true),
                    WYSOKOSC = table.Column<double>(type: "float", nullable: true),
                    SZEROKOSC = table.Column<double>(type: "float", nullable: true),
                    DLUGOSC = table.Column<double>(type: "float", nullable: true),
                    TYP_OPAKOWANIA = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    ILOSC_OPAKOWAN = table.Column<double>(type: "float", nullable: true),
                    WARTOSC_LADUNKU = table.Column<double>(type: "float", nullable: true),
                    WARTOSC_LADUNKU_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    DOD_OPAKOWANIA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SAMOCHOD_ID = table.Column<int>(type: "int", nullable: true),
                    SAMOCHOD = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    NACZEPA_ID = table.Column<int>(type: "int", nullable: true),
                    NACZEPA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    INFO_DOD = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true),
                    INFO_DOD_KL = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true),
                    KIEROWCA1_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA1 = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    KIEROWCA2_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA2 = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    KWOTA_K = table.Column<double>(type: "float", nullable: true),
                    WALUTA_K = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    FORMA_PLATNOSCI_K = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TERMIN_K = table.Column<int>(type: "int", nullable: true),
                    ODC_KRAJOWY_KM_K = table.Column<int>(type: "int", nullable: true),
                    ODC_KRAJOWY_K = table.Column<double>(type: "float", nullable: true),
                    ODC_KRAJOWY_VAT_K = table.Column<double>(type: "float", nullable: true),
                    ODC_KRAJOWY_VAT_ID_K = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    ODC_UE_KM_K = table.Column<int>(type: "int", nullable: true),
                    ODC_UE_K = table.Column<double>(type: "float", nullable: true),
                    ODC_UE_VAT_K = table.Column<double>(type: "float", nullable: true),
                    ODC_UE_VAT_ID_K = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    ODC_ZAGRANICZNY_KM_K = table.Column<int>(type: "int", nullable: true),
                    ODC_ZAGRANICZNY_K = table.Column<double>(type: "float", nullable: true),
                    ODC_ZAGRANICZNY_VAT_K = table.Column<double>(type: "float", nullable: true),
                    ODC_ZAGRANICZNY_VAT_ID_K = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    KWOTA_P = table.Column<double>(type: "float", nullable: true),
                    WALUTA_P = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    FORMA_PLATNOSCI_P = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TERMIN_P = table.Column<int>(type: "int", nullable: true),
                    ODC_KRAJOWY_KM_P = table.Column<int>(type: "int", nullable: true),
                    ODC_KRAJOWY_P = table.Column<double>(type: "float", nullable: true),
                    ODC_KRAJOWY_VAT_P = table.Column<double>(type: "float", nullable: true),
                    ODC_KRAJOWY_VAT_ID_P = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    ODC_UE_KM_P = table.Column<int>(type: "int", nullable: true),
                    ODC_UE_P = table.Column<double>(type: "float", nullable: true),
                    ODC_UE_VAT_P = table.Column<double>(type: "float", nullable: true),
                    ODC_UE_VAT_ID_P = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    ODC_ZAGRANICZNY_KM_P = table.Column<int>(type: "int", nullable: true),
                    ODC_ZAGRANICZNY_P = table.Column<double>(type: "float", nullable: true),
                    ODC_ZAGRANICZNY_VAT_P = table.Column<double>(type: "float", nullable: true),
                    ODC_ZAGRANICZNY_VAT_ID_P = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    USTALENIA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    USTALENIA_POTW = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    TEMP_PRZEWOZU = table.Column<double>(type: "float", nullable: true),
                    TEMP_PRZEWOZU_O = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SPEDYTOR_ID = table.Column<int>(type: "int", nullable: true),
                    SPEDYTOR = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    OPIEKUN = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    TABOR_PROFIL_ID = table.Column<int>(type: "int", nullable: true),
                    TABOR_PROFIL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DATA_AKTYW = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_DEAKT = table.Column<DateTime>(type: "datetime", nullable: true),
                    AKTYWNY = table.Column<int>(type: "int", nullable: true),
                    FRM_ID = table.Column<int>(type: "int", nullable: true),
                    JEZYK_ZLECENIA = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, defaultValueSql: "('PL')"),
                    RODZ_ZLEC = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    ODDZIAL_ID = table.Column<int>(type: "int", nullable: true),
                    ODDZIAL_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    ODDZIAL_ADRES = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ODDZIAL_MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ODDZIAL_KOD = table.Column<string>(type: "varchar(6)", unicode: false, maxLength: 6, nullable: true),
                    ODDZIAL_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    ZA_MIEJSCE = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    ZA_MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZA_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    ZA_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    WY_MIEJSCE = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WY_MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    WY_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    WY_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    VAT_NA_SADZIE = table.Column<int>(type: "int", nullable: true),
                    TRASA_DOJAZDU = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    TRASA_EDYCJA = table.Column<int>(type: "int", nullable: true),
                    TRASA_DOLAD = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    TRASA_ODL_DOJAZD = table.Column<double>(type: "float", nullable: true),
                    TRASA_ODL_GL = table.Column<double>(type: "float", nullable: true),
                    TRASA_ZLEC_ODL = table.Column<double>(type: "float", nullable: true),
                    TRASA_ZLEC_ODL_DOJAZD = table.Column<double>(type: "float", nullable: true),
                    TRASA_ZLEC_ODL_GL = table.Column<double>(type: "float", nullable: true),
                    TRASA_ODL_ROZN = table.Column<double>(type: "float", nullable: true),
                    OPIS_TOWARU_UN = table.Column<string>(type: "varchar(35)", unicode: false, maxLength: 35, nullable: true),
                    OPIS_TOWARU_HACCP = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OPIS_TOWARU_SQAS = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ADR = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    CYSTERNA_DO_PELNA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    PROM = table.Column<int>(type: "int", nullable: true),
                    MYJNIA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    WYMIANA_PALET = table.Column<int>(type: "int", nullable: true),
                    DOD_JM = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DOD_IL = table.Column<int>(type: "int", nullable: true),
                    KUBATURA_POJAZDU = table.Column<int>(type: "int", nullable: true),
                    SAMOCHOD_NR_BOCZNY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NACZEPA_KLIENTA = table.Column<int>(type: "int", nullable: true),
                    NACZEPA_NR_BOCZNY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KIEROWCA1_TEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KIEROWCA2_TEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    CENNIK_FTL_ID = table.Column<int>(type: "int", nullable: true),
                    CENNIK_FTL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    CENNIK_FTL_P_ID = table.Column<int>(type: "int", nullable: true),
                    CENNIK_FTL_P = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TYP_KURS_K = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    TYP_KURS_P = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    REF_NAD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_ODB = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_POS = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KWOTA_K_USTALONA = table.Column<double>(type: "float", nullable: true),
                    STAWKA_ZA_KM = table.Column<double>(type: "float", nullable: true),
                    STAWKA_ZA_WAGA_KM = table.Column<double>(type: "float", nullable: true),
                    KWOTA_P_USTALONA = table.Column<double>(type: "float", nullable: true),
                    STAWKA_ZA_KM_P = table.Column<double>(type: "float", nullable: true),
                    STAWKA_ZA_WAGA_KM_P = table.Column<double>(type: "float", nullable: true),
                    ORG_FRACHT_P = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')"),
                    DOD_FRACHT_WEWN = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_ZAWY = table.Column<double>(type: "float", nullable: true),
                    CENA_ZA_M_ZAWY = table.Column<double>(type: "float", nullable: true),
                    CENA_ZA_M_ZAWY_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    INFO_DLA_KSIEG = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WAGA_LADUNKU_RZ = table.Column<double>(type: "float", nullable: true),
                    INFO_SFM = table.Column<string>(type: "text", nullable: true, comment: "Informacje dla SFM-a"),
                    TYP_TAB_K = table.Column<int>(type: "int", nullable: true),
                    TYP_TAB_P = table.Column<int>(type: "int", nullable: true),
                    WALUTA_FV_K = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    WALUTA_FV_P = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    TRASA_MAP_ODL = table.Column<double>(type: "float", nullable: true),
                    TRASA_MAP_ODL_DOJAZD = table.Column<double>(type: "float", nullable: true),
                    TRASA_MAP_ODL_GL = table.Column<double>(type: "float", nullable: true),
                    CLENIE = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    REF_4 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_5 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    BEZ_SFM = table.Column<int>(type: "int", nullable: true),
                    KURS_WG_K = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    KURS_Z_DNIA_P_K = table.Column<int>(type: "int", nullable: true),
                    KURS_WG_P = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    KURS_Z_DNIA_P_P = table.Column<int>(type: "int", nullable: true),
                    ROZ_KIER_FRACHT = table.Column<double>(type: "float", nullable: true),
                    TRASA_MAP_MYTO = table.Column<double>(type: "float", nullable: true),
                    TRASA_MAP_KM_PLATNE = table.Column<double>(type: "float", nullable: true),
                    DYSPOZYTOR_ID = table.Column<int>(type: "int", nullable: true),
                    DYSPOZYTOR = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    VAT_W_PLN_K = table.Column<int>(type: "int", nullable: true),
                    VAT_W_PLN_P = table.Column<int>(type: "int", nullable: true),
                    TRASA_CC_ODL = table.Column<double>(type: "float", nullable: true),
                    TRASA_CC_ODL_DOJAZD = table.Column<double>(type: "float", nullable: true),
                    TRASA_CC_ODL_GL = table.Column<double>(type: "float", nullable: true),
                    PRZEWOZNIK_EMAIL = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    TrybPracyAgregatu = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SZABLONY_ZLECEN", x => x.ID_SZABLONY_ZLECEN);
                });

            migrationBuilder.CreateTable(
                name: "SZABLONY_ZLECEN_CYST",
                columns: table => new
                {
                    ID_SZABLONY_ZLECEN = table.Column<int>(type: "int", nullable: false),
                    KOMORA_1 = table.Column<int>(type: "int", nullable: true),
                    LADUNEK_1 = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WAGA_1 = table.Column<double>(type: "float", nullable: true),
                    JEDN_WAGI_1 = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    OBJ_1 = table.Column<double>(type: "float", nullable: true),
                    ADR_1 = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    GESTOSC_1 = table.Column<double>(type: "float", nullable: true),
                    KOMORA_2 = table.Column<int>(type: "int", nullable: true),
                    LADUNEK_2 = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WAGA_2 = table.Column<double>(type: "float", nullable: true),
                    JEDN_WAGI_2 = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    OBJ_2 = table.Column<double>(type: "float", nullable: true),
                    ADR_2 = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    GESTOSC_2 = table.Column<double>(type: "float", nullable: true),
                    KOMORA_3 = table.Column<int>(type: "int", nullable: true),
                    LADUNEK_3 = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WAGA_3 = table.Column<double>(type: "float", nullable: true),
                    JEDN_WAGI_3 = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    OBJ_3 = table.Column<double>(type: "float", nullable: true),
                    ADR_3 = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    GESTOSC_3 = table.Column<double>(type: "float", nullable: true),
                    KOMORA_4 = table.Column<int>(type: "int", nullable: true),
                    LADUNEK_4 = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WAGA_4 = table.Column<double>(type: "float", nullable: true),
                    JEDN_WAGI_4 = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    OBJ_4 = table.Column<double>(type: "float", nullable: true),
                    ADR_4 = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    GESTOSC_4 = table.Column<double>(type: "float", nullable: true),
                    KOMORA_5 = table.Column<int>(type: "int", nullable: true),
                    LADUNEK_5 = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WAGA_5 = table.Column<double>(type: "float", nullable: true),
                    JEDN_WAGI_5 = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    OBJ_5 = table.Column<double>(type: "float", nullable: true),
                    ADR_5 = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    GESTOSC_5 = table.Column<double>(type: "float", nullable: true),
                    KOMORA_6 = table.Column<int>(type: "int", nullable: true),
                    LADUNEK_6 = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WAGA_6 = table.Column<double>(type: "float", nullable: true),
                    JEDN_WAGI_6 = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    OBJ_6 = table.Column<double>(type: "float", nullable: true),
                    ADR_6 = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    GESTOSC_6 = table.Column<double>(type: "float", nullable: true),
                    KOMORA_7 = table.Column<int>(type: "int", nullable: true),
                    LADUNEK_7 = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WAGA_7 = table.Column<double>(type: "float", nullable: true),
                    JEDN_WAGI_7 = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    OBJ_7 = table.Column<double>(type: "float", nullable: true),
                    ADR_7 = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    GESTOSC_7 = table.Column<double>(type: "float", nullable: true),
                    WAGA_RZ_1 = table.Column<double>(type: "float", nullable: true),
                    CISN_1 = table.Column<double>(type: "float", nullable: true),
                    JEDN_CISN_1 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    TEMP_1 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TEMP_RZ_1 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    WAGA_ZEST_1 = table.Column<double>(type: "float", nullable: true),
                    WAGA_BRUTTO_1 = table.Column<double>(type: "float", nullable: true),
                    WAGA_RZ_2 = table.Column<double>(type: "float", nullable: true),
                    CISN_2 = table.Column<double>(type: "float", nullable: true),
                    JEDN_CISN_2 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    TEMP_2 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TEMP_RZ_2 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    WAGA_ZEST_2 = table.Column<double>(type: "float", nullable: true),
                    WAGA_BRUTTO_2 = table.Column<double>(type: "float", nullable: true),
                    WAGA_RZ_3 = table.Column<double>(type: "float", nullable: true),
                    CISN_3 = table.Column<double>(type: "float", nullable: true),
                    JEDN_CISN_3 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    TEMP_3 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TEMP_RZ_3 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    WAGA_ZEST_3 = table.Column<double>(type: "float", nullable: true),
                    WAGA_BRUTTO_3 = table.Column<double>(type: "float", nullable: true),
                    WAGA_RZ_4 = table.Column<double>(type: "float", nullable: true),
                    CISN_4 = table.Column<double>(type: "float", nullable: true),
                    JEDN_CISN_4 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    TEMP_4 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TEMP_RZ_4 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    WAGA_ZEST_4 = table.Column<double>(type: "float", nullable: true),
                    WAGA_BRUTTO_4 = table.Column<double>(type: "float", nullable: true),
                    WAGA_RZ_5 = table.Column<double>(type: "float", nullable: true),
                    CISN_5 = table.Column<double>(type: "float", nullable: true),
                    JEDN_CISN_5 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    TEMP_5 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TEMP_RZ_5 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    WAGA_ZEST_5 = table.Column<double>(type: "float", nullable: true),
                    WAGA_BRUTTO_5 = table.Column<double>(type: "float", nullable: true),
                    WAGA_RZ_6 = table.Column<double>(type: "float", nullable: true),
                    CISN_6 = table.Column<double>(type: "float", nullable: true),
                    JEDN_CISN_6 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    TEMP_6 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TEMP_RZ_6 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    WAGA_ZEST_6 = table.Column<double>(type: "float", nullable: true),
                    WAGA_BRUTTO_6 = table.Column<double>(type: "float", nullable: true),
                    WAGA_RZ_7 = table.Column<double>(type: "float", nullable: true),
                    CISN_7 = table.Column<double>(type: "float", nullable: true),
                    JEDN_CISN_7 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    TEMP_7 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TEMP_RZ_7 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    WAGA_ZEST_7 = table.Column<double>(type: "float", nullable: true),
                    WAGA_BRUTTO_7 = table.Column<double>(type: "float", nullable: true),
                    OBJ_RZ_1 = table.Column<double>(type: "float", nullable: true),
                    OBJ_RZ_2 = table.Column<double>(type: "float", nullable: true),
                    OBJ_RZ_3 = table.Column<double>(type: "float", nullable: true),
                    OBJ_RZ_4 = table.Column<double>(type: "float", nullable: true),
                    OBJ_RZ_5 = table.Column<double>(type: "float", nullable: true),
                    OBJ_RZ_6 = table.Column<double>(type: "float", nullable: true),
                    OBJ_RZ_7 = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SZABLONY_ZLECEN_CYST", x => x.ID_SZABLONY_ZLECEN);
                });

            migrationBuilder.CreateTable(
                name: "SZABLONY_ZLECEN_DOKUMENTY",
                columns: table => new
                {
                    ID_SZABLONY_ZLECEN_DOKUMENTY = table.Column<int>(type: "int", nullable: false),
                    SZABLONY_ZLECEN_ID = table.Column<int>(type: "int", nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    KOD = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WYMAGANY = table.Column<int>(type: "int", nullable: true),
                    WPLYNAL = table.Column<int>(type: "int", nullable: true),
                    DATA_WPLYWU = table.Column<DateTime>(type: "datetime", nullable: true),
                    UZYTKOWNIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    ROD = table.Column<int>(type: "int", nullable: true),
                    ROD_DO = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    ROD_WYSZEDL = table.Column<int>(type: "int", nullable: true),
                    ROD_DATA_WYJSCIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    ROD_UZYTKOWNIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    EROD = table.Column<int>(type: "int", nullable: true),
                    UZYTKOWNIK_POTW = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SZABLONY_ZLECEN_DOKUMENTY", x => x.ID_SZABLONY_ZLECEN_DOKUMENTY);
                });

            migrationBuilder.CreateTable(
                name: "SZABLONY_ZLECEN_EXT",
                columns: table => new
                {
                    ID_SZABLONY_ZLECEN = table.Column<int>(type: "int", nullable: false),
                    INFO_SFM = table.Column<string>(type: "text", nullable: true, comment: "Informacje dla SFM-a"),
                    MAP_ROUTEID = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: true, comment: "Trasa zlecenia - id z mapy"),
                    MAP_PROFIL_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do profilu użytego do obliczeń trasy"),
                    SA_DOD_POZ_K = table.Column<short>(type: "smallint", nullable: true, comment: "Flaga, czy są dodatkowe pozycje kosztów"),
                    SA_DOD_POZ_P = table.Column<short>(type: "smallint", nullable: true, comment: "Flaga, czy są dodatkowe pozycje przychodu"),
                    POTW_PRZEN_WAR = table.Column<short>(type: "smallint", nullable: true, comment: "Dedykowane: TARGOR"),
                    CZAS_TRWANIA_ZLECENIA = table.Column<double>(type: "float", nullable: true, comment: "Czas trwania zlecenia na potrzeby rozliczeń m-okresowych"),
                    FV_NA_PLATNIKA = table.Column<short>(type: "smallint", nullable: true, comment: "Flaga, czy faktura na płatnika"),
                    NIEZGODNOSC = table.Column<short>(type: "smallint", nullable: true, comment: "Flaga, czy jest niezgodnosc"),
                    REKLAMACJA = table.Column<short>(type: "smallint", nullable: true, comment: "Flaga, czy jest reklamacja"),
                    PRZEWOZNIK_ODDZIAL_ID = table.Column<int>(type: "int", nullable: true),
                    PRZEWOZNIK_ODDZIAL_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    PRZEWOZNIK_ODDZIAL_ADRES = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PRZEWOZNIK_ODDZIAL_MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PRZEWOZNIK_ODDZIAL_KOD = table.Column<string>(type: "varchar(6)", unicode: false, maxLength: 6, nullable: true),
                    PRZEWOZNIK_ODDZIAL_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    PROCEDURA_MYCIA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    INFO_KIER = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true, comment: "Informacje dla kierowcy"),
                    INFO_SPED = table.Column<string>(type: "text", nullable: true, comment: "Informacje dla spedytora"),
                    NIE_FAKTURUJ = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy nie fakturować"),
                    ZLEC_KOSZERNE = table.Column<short>(type: "smallint", nullable: true),
                    MYCIE_KOSZERNE = table.Column<short>(type: "smallint", nullable: true),
                    HereAverageKmCost = table.Column<double>(type: "float", nullable: true, comment: "Średni koszt za km"),
                    HereAverageHourCost = table.Column<double>(type: "float", nullable: true, comment: "Średni koszt godziny"),
                    HereRouteCost = table.Column<double>(type: "float", nullable: true, comment: "Koszt stały na trasę"),
                    HereCostCurrency = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    HereRouteCalculateType = table.Column<int>(type: "int", nullable: true, comment: "Wyznaczenie trasy: 1=szybka, 2=krótka, 3=optymalna"),
                    HereTollCalculate = table.Column<int>(type: "int", nullable: true, comment: "Liczy myto: 1=EUR"),
                    HereViolation = table.Column<int>(type: "int", nullable: true, comment: "Naruszanie ograniczeń: 1=zgoda, 0=brak zgody, 2=unikaj"),
                    HereFerries = table.Column<int>(type: "int", nullable: true, comment: "Unikaj promów"),
                    HereHighways = table.Column<int>(type: "int", nullable: true, comment: "Unikaj autostrad"),
                    HerePayments = table.Column<int>(type: "int", nullable: true, comment: "Unikaj płatności"),
                    HereTunels = table.Column<int>(type: "int", nullable: true, comment: "Unikaj tuneli"),
                    HereHazardous = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true, comment: "towary niebezpieczne"),
                    HereTollCalculateBaseCurr = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    HereTollCalculateOtherCurr = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MapLink = table.Column<string>(type: "varchar(4000)", unicode: false, maxLength: 4000, nullable: true),
                    SENT = table.Column<int>(type: "int", nullable: true),
                    RESTRICTED_COUNTRIES = table.Column<string>(type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    RESTRICTED_AREAS = table.Column<string>(type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SZABLONY_ZLECEN_EXT", x => x.ID_SZABLONY_ZLECEN);
                });

            migrationBuilder.CreateTable(
                name: "SZABLONY_ZLECEN_POWIADOMIENIA",
                columns: table => new
                {
                    ID_SZABLONY_ZLECEN_POWIADOMIENIA = table.Column<int>(type: "int", nullable: false),
                    SZABLONY_ZLECEN_ID = table.Column<int>(type: "int", nullable: true),
                    KTO = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Do kogo np. ZLEC, PLATN, PRZEWOZNIK, INNY"),
                    TYP = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true, comment: "Typ powiadomienia np. SMS, EMAIL etc"),
                    CO_WYZWALA = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true, comment: "Statusy wyzwalające zapisane jako ciąg rozdzielany ;"),
                    EMAIL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true, comment: "Adres email na jaki zostanie wysłane powiadomienie"),
                    KRAJ = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "Symbol kraju"),
                    TEL_PREFIX = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Prefix telefonu"),
                    TEL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nr telefonu"),
                    TRESC = table.Column<string>(type: "varchar(600)", unicode: false, maxLength: 600, nullable: true, comment: "Treść komunikatu")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SZABLONY_ZLECEN_POWIADOMIENIA", x => x.ID_SZABLONY_ZLECEN_POWIADOMIENIA);
                });

            migrationBuilder.CreateTable(
                name: "SZABLONY_ZLECEN_POZ_FAKT",
                columns: table => new
                {
                    ID_SZABLONY_ZLECEN_POZ_FAKT = table.Column<int>(type: "int", nullable: false),
                    SZABLONY_ZLECEN_ID = table.Column<int>(type: "int", nullable: true),
                    KLIENT_ID = table.Column<int>(type: "int", nullable: true),
                    KLIENT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TYP = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    RODZ_PRZYCHODOW = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    RODZ_KOSZTOW = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: true),
                    KONTRAH = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TYTUL_ID = table.Column<int>(type: "int", nullable: true),
                    TYTUL = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    TYTUL_OPIS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    PKWIU = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    JM = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    ILOSC = table.Column<double>(type: "float", nullable: true),
                    CENA_JEDN = table.Column<double>(type: "float", nullable: true),
                    NETTO_WARTOSC = table.Column<double>(type: "float", nullable: true),
                    VAT_ID = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    VAT_STAWKA = table.Column<double>(type: "float", nullable: true),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    WALUTA_FV = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    FAKTURY_ID = table.Column<int>(type: "int", nullable: true),
                    FAKTURY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PROMY_ID = table.Column<int>(type: "int", nullable: true),
                    RM = table.Column<int>(type: "int", nullable: true),
                    RO = table.Column<int>(type: "int", nullable: true),
                    TYTUL_KOD = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    KURS_WALUTY = table.Column<double>(type: "float", nullable: true),
                    KURSY_WALUT_ID = table.Column<int>(type: "int", nullable: true),
                    NR_TABELI_KURSOW = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    DATA_TABELI_KURSOW = table.Column<DateTime>(type: "datetime", nullable: true),
                    KOR_DO_ZERA = table.Column<short>(type: "smallint", nullable: true),
                    JAK_ROZL = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "FV/NO/RW")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SZABLONY_ZLECEN_POZ_FAKT", x => x.ID_SZABLONY_ZLECEN_POZ_FAKT);
                });

            migrationBuilder.CreateTable(
                name: "SZABLONY_ZLECEN_SAM",
                columns: table => new
                {
                    ID_SZABLONY_ZLECEN_SAM = table.Column<int>(type: "int", nullable: false),
                    SZABLONY_ZLECEN_ID = table.Column<int>(type: "int", nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    MARKA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MODEL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    NADWOZIE = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    VIN = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ROK_PROD = table.Column<int>(type: "int", nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    M_ZAL_ID = table.Column<int>(type: "int", nullable: true),
                    M_ROZ_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SZABLONY_ZLECEN_SAM", x => x.ID_SZABLONY_ZLECEN_SAM);
                });

            migrationBuilder.CreateTable(
                name: "SZABLONY_ZLECEN_WYM_TABORU",
                columns: table => new
                {
                    ID_SZABLONY_ZLECEN_WYM_TABORU = table.Column<int>(type: "int", nullable: false),
                    SZABLONY_ZLECEN_ID = table.Column<int>(type: "int", nullable: true),
                    NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    ILOSC = table.Column<int>(type: "int", nullable: true),
                    TYP = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "WYM.WYP, TYP.ZAB, SP.LAD"),
                    ZAMIENNIK = table.Column<int>(type: "int", nullable: true),
                    NIE_BLOKUJ = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SZABLONY_ZLECEN_WYM_TABORU", x => x.ID_SZABLONY_ZLECEN_WYM_TABORU);
                });

            migrationBuilder.CreateTable(
                name: "SZABLONY_ZLECEN_ZA_WY",
                columns: table => new
                {
                    ID_SZABLONY_ZLECEN_ZA_WY = table.Column<int>(type: "int", nullable: false),
                    TYP = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    SZABLONY_ZLECEN_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true),
                    MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TELEFONY = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_RZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_RZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    DOD_OPIS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DOD_OPIS_RZ = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPOZNIENIE = table.Column<double>(type: "float", nullable: true),
                    OPOZNIENIE_POWOD = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    LADUNEK = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    LICZNIK = table.Column<double>(type: "float", nullable: true),
                    WAGA = table.Column<double>(type: "float", nullable: true),
                    JEDN_WAGI = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    PALETY = table.Column<double>(type: "float", nullable: true),
                    JM = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PALIWO = table.Column<double>(type: "float", nullable: true, comment: "zużyte paliwo w trakcie zdarzenia"),
                    WYJAZD_ID = table.Column<int>(type: "int", nullable: true),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    GEO_LONGI = table.Column<double>(type: "float", nullable: true),
                    GEO_LAT = table.Column<double>(type: "float", nullable: true),
                    INNE_UWAGI = table.Column<string>(type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    CZAS_TRWANIA = table.Column<double>(type: "float", nullable: true),
                    MAX_OPOZN = table.Column<double>(type: "float", nullable: true),
                    WYSYLAC_UWAGI = table.Column<int>(type: "int", nullable: true),
                    TEMP_PRZEWOZU_O = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PALETY_WYM = table.Column<double>(type: "float", nullable: true),
                    DATA_RZ_K = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_RZ_K = table.Column<DateTime>(type: "datetime", nullable: true),
                    PUSTY = table.Column<int>(type: "int", nullable: true),
                    GODZ_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_RZ_P = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_RZ_P = table.Column<DateTime>(type: "datetime", nullable: true),
                    LADUNEK_ID = table.Column<int>(type: "int", nullable: true),
                    WAGA_ZESTAWU = table.Column<double>(type: "float", nullable: true),
                    TEMP_PRZEWOZU_O_RZ = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    WAGA_RZ = table.Column<double>(type: "float", nullable: true),
                    DYSP_GODZ_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DYSP_GODZ_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    KOR_GODZ = table.Column<int>(type: "int", nullable: true),
                    KONTENER_ID = table.Column<int>(type: "int", nullable: true),
                    KONTENER = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KONTENER2_ID = table.Column<int>(type: "int", nullable: true),
                    KONTENER2 = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    GEO_LONGI_RZ = table.Column<double>(type: "float", nullable: true),
                    GEO_LAT_RZ = table.Column<double>(type: "float", nullable: true),
                    ANUL_ZL = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    ANUL_PW = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    PROMY_ID = table.Column<int>(type: "int", nullable: true),
                    PALIWO_LICZNIK = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')", comment: "końcowy stan licznika paliwa"),
                    PIETROWANIE = table.Column<int>(type: "int", nullable: true),
                    GF_DEF_ID = table.Column<int>(type: "int", nullable: true, comment: "id definicji geofencingu (referencja do tabeli GF_DEF)"),
                    ILOSC_RZ = table.Column<double>(type: "float", nullable: true),
                    DLUGOSC = table.Column<double>(type: "float", nullable: true),
                    WYSOKOSC = table.Column<double>(type: "float", nullable: true),
                    SZEROKOSC = table.Column<double>(type: "float", nullable: true),
                    OBJ = table.Column<double>(type: "float", nullable: true),
                    LDM = table.Column<double>(type: "float", nullable: true),
                    EMAIL = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true),
                    KONTAKT = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    DATA_RZ_W = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_RZ_W = table.Column<DateTime>(type: "datetime", nullable: true),
                    REF_1 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_3 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_4 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_5 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ADRES = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true),
                    TRASA_KM = table.Column<int>(type: "int", nullable: true),
                    TRASA_KM_ROSN = table.Column<int>(type: "int", nullable: true),
                    TRASA_CZAS = table.Column<int>(type: "int", nullable: true),
                    TRASA_CZAS_ROSN = table.Column<int>(type: "int", nullable: true),
                    AWIZACJA_PRZED = table.Column<DateTime>(type: "datetime", nullable: true),
                    ETA = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SZABLONY_ZLECEN_ZA_WY", x => x.ID_SZABLONY_ZLECEN_ZA_WY);
                });

            migrationBuilder.CreateTable(
                name: "SZABLONY_ZLECEN_ZA_WY_CYST",
                columns: table => new
                {
                    ID_SZABLONY_ZLECEN_ZA_WY = table.Column<int>(type: "int", nullable: false),
                    SZABLONY_ZLECEN_ID = table.Column<int>(type: "int", nullable: true),
                    KOMORA_1 = table.Column<int>(type: "int", nullable: true),
                    LADUNEK_1 = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WAGA_1 = table.Column<double>(type: "float", nullable: true),
                    JEDN_WAGI_1 = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    OBJ_1 = table.Column<double>(type: "float", nullable: true),
                    ADR_1 = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    GESTOSC_1 = table.Column<double>(type: "float", nullable: true),
                    KOMORA_2 = table.Column<int>(type: "int", nullable: true),
                    LADUNEK_2 = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WAGA_2 = table.Column<double>(type: "float", nullable: true),
                    JEDN_WAGI_2 = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    OBJ_2 = table.Column<double>(type: "float", nullable: true),
                    ADR_2 = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    GESTOSC_2 = table.Column<double>(type: "float", nullable: true),
                    KOMORA_3 = table.Column<int>(type: "int", nullable: true),
                    LADUNEK_3 = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WAGA_3 = table.Column<double>(type: "float", nullable: true),
                    JEDN_WAGI_3 = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    OBJ_3 = table.Column<double>(type: "float", nullable: true),
                    ADR_3 = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    GESTOSC_3 = table.Column<double>(type: "float", nullable: true),
                    KOMORA_4 = table.Column<int>(type: "int", nullable: true),
                    LADUNEK_4 = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WAGA_4 = table.Column<double>(type: "float", nullable: true),
                    JEDN_WAGI_4 = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    OBJ_4 = table.Column<double>(type: "float", nullable: true),
                    ADR_4 = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    GESTOSC_4 = table.Column<double>(type: "float", nullable: true),
                    KOMORA_5 = table.Column<int>(type: "int", nullable: true),
                    LADUNEK_5 = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WAGA_5 = table.Column<double>(type: "float", nullable: true),
                    JEDN_WAGI_5 = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    OBJ_5 = table.Column<double>(type: "float", nullable: true),
                    ADR_5 = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    GESTOSC_5 = table.Column<double>(type: "float", nullable: true),
                    KOMORA_6 = table.Column<int>(type: "int", nullable: true),
                    LADUNEK_6 = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WAGA_6 = table.Column<double>(type: "float", nullable: true),
                    JEDN_WAGI_6 = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    OBJ_6 = table.Column<double>(type: "float", nullable: true),
                    ADR_6 = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    GESTOSC_6 = table.Column<double>(type: "float", nullable: true),
                    KOMORA_7 = table.Column<int>(type: "int", nullable: true),
                    LADUNEK_7 = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WAGA_7 = table.Column<double>(type: "float", nullable: true),
                    JEDN_WAGI_7 = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    OBJ_7 = table.Column<double>(type: "float", nullable: true),
                    ADR_7 = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    GESTOSC_7 = table.Column<double>(type: "float", nullable: true),
                    WAGA_RZ_1 = table.Column<double>(type: "float", nullable: true),
                    CISN_1 = table.Column<double>(type: "float", nullable: true),
                    JEDN_CISN_1 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    TEMP_1 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TEMP_RZ_1 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    WAGA_ZEST_1 = table.Column<double>(type: "float", nullable: true),
                    WAGA_BRUTTO_1 = table.Column<double>(type: "float", nullable: true),
                    WAGA_RZ_2 = table.Column<double>(type: "float", nullable: true),
                    CISN_2 = table.Column<double>(type: "float", nullable: true),
                    JEDN_CISN_2 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    TEMP_2 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TEMP_RZ_2 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    WAGA_ZEST_2 = table.Column<double>(type: "float", nullable: true),
                    WAGA_BRUTTO_2 = table.Column<double>(type: "float", nullable: true),
                    WAGA_RZ_3 = table.Column<double>(type: "float", nullable: true),
                    CISN_3 = table.Column<double>(type: "float", nullable: true),
                    JEDN_CISN_3 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    TEMP_3 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TEMP_RZ_3 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    WAGA_ZEST_3 = table.Column<double>(type: "float", nullable: true),
                    WAGA_BRUTTO_3 = table.Column<double>(type: "float", nullable: true),
                    WAGA_RZ_4 = table.Column<double>(type: "float", nullable: true),
                    CISN_4 = table.Column<double>(type: "float", nullable: true),
                    JEDN_CISN_4 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    TEMP_4 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TEMP_RZ_4 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    WAGA_ZEST_4 = table.Column<double>(type: "float", nullable: true),
                    WAGA_BRUTTO_4 = table.Column<double>(type: "float", nullable: true),
                    WAGA_RZ_5 = table.Column<double>(type: "float", nullable: true),
                    CISN_5 = table.Column<double>(type: "float", nullable: true),
                    JEDN_CISN_5 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    TEMP_5 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TEMP_RZ_5 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    WAGA_ZEST_5 = table.Column<double>(type: "float", nullable: true),
                    WAGA_BRUTTO_5 = table.Column<double>(type: "float", nullable: true),
                    WAGA_RZ_6 = table.Column<double>(type: "float", nullable: true),
                    CISN_6 = table.Column<double>(type: "float", nullable: true),
                    JEDN_CISN_6 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    TEMP_6 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TEMP_RZ_6 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    WAGA_ZEST_6 = table.Column<double>(type: "float", nullable: true),
                    WAGA_BRUTTO_6 = table.Column<double>(type: "float", nullable: true),
                    WAGA_RZ_7 = table.Column<double>(type: "float", nullable: true),
                    CISN_7 = table.Column<double>(type: "float", nullable: true),
                    JEDN_CISN_7 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    TEMP_7 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TEMP_RZ_7 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    WAGA_ZEST_7 = table.Column<double>(type: "float", nullable: true),
                    WAGA_BRUTTO_7 = table.Column<double>(type: "float", nullable: true),
                    OBJ_RZ_1 = table.Column<double>(type: "float", nullable: true),
                    OBJ_RZ_2 = table.Column<double>(type: "float", nullable: true),
                    OBJ_RZ_3 = table.Column<double>(type: "float", nullable: true),
                    OBJ_RZ_4 = table.Column<double>(type: "float", nullable: true),
                    OBJ_RZ_5 = table.Column<double>(type: "float", nullable: true),
                    OBJ_RZ_6 = table.Column<double>(type: "float", nullable: true),
                    OBJ_RZ_7 = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SZABLONY_ZLECEN_ZA_WY_CYST", x => x.ID_SZABLONY_ZLECEN_ZA_WY);
                });

            migrationBuilder.CreateTable(
                name: "SZKODY",
                columns: table => new
                {
                    ID_SZKODY = table.Column<int>(type: "int", nullable: false),
                    POLISA_ID = table.Column<int>(type: "int", nullable: true),
                    POLISA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TYP_SZKODY = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    TABOR = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KIEROWCA_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    WINA_KIEROWCY = table.Column<int>(type: "int", nullable: true),
                    RODZAJ = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NUMER_SZKODY = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DATA_ZDARZENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_ZDARZENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    UWAGI = table.Column<string>(type: "text", nullable: true),
                    KWOTA_KALKULACJI = table.Column<double>(type: "float", nullable: true),
                    KWOTA_KOSZTOW = table.Column<double>(type: "float", nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    MAX_DATA_ZGLOSZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZGLOSZONA = table.Column<int>(type: "int", nullable: true),
                    STATUS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    UBEZPIECZYCIEL_ID = table.Column<int>(type: "int", nullable: true),
                    UBEZPIECZYCIEL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    NR_SZKODY = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    NR_SZKODY_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    NR_SZKODY_ROK = table.Column<int>(type: "int", nullable: true),
                    NR_SZKODY_MIES = table.Column<int>(type: "int", nullable: true),
                    SPRAWCA_IMIE_NAZWISKO = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SPRAWCA_ADRES = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SPRAWCA_MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SPRAWCA_KRAJ = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    SPRAWCA_POJAZD = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    SPRAWCA_PESEL = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    SPRAWCA_NR_PRAWA_J = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    SPRAWCA_NR_POLISY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SPRAWCA_UBEZP = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SPRAWCA_TEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OCP = table.Column<int>(type: "int", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TABOR_NR_BOCZNY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    UWAGI_2 = table.Column<string>(type: "text", nullable: true),
                    DATA_ZGLOSZENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_DZIAL_TECHNICZNY = table.Column<DateTime>(type: "datetime", nullable: true),
                    STATUS_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    STATUS_UWAGI = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    SAMOLIKWIDACJA = table.Column<int>(type: "int", nullable: true),
                    KOSZTY_WYLACZENIA = table.Column<double>(type: "float", nullable: true),
                    KOSZTY_INNE = table.Column<double>(type: "float", nullable: true),
                    SZKODA_TRANSPORTOWA = table.Column<int>(type: "int", nullable: true),
                    VIN = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MARKA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MODEL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KWOTA_KALKULACJI_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KWOTA_KOSZTOW_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KOSZTY_WYLACZENIA_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KOSZTY_INNE_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    SPOSOB_LIKW = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true),
                    SPOSOB_LIKW_POLISA = table.Column<string>(type: "varchar(35)", unicode: false, maxLength: 35, nullable: true),
                    SPOSOB_LIKW_UBEZP = table.Column<string>(type: "varchar(70)", unicode: false, maxLength: 70, nullable: true),
                    UWAGI_3 = table.Column<string>(type: "text", nullable: true),
                    POLICJA = table.Column<int>(type: "int", nullable: true),
                    STATUS_EMISJA = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    SPRAWCA_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    POSZKODOWANY_IMIE_NAZWISKO = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    POSZKODOWANY_ADRES = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    POSZKODOWANY_MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    POSZKODOWANY_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    POSZKODOWANY_KRAJ = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    POSZKODOWANY_POJAZD = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    POSZKODOWANY_PESEL = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    POSZKODOWANY_TEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SZKODY", x => x.ID_SZKODY);
                });

            migrationBuilder.CreateTable(
                name: "SZKODY_DOKUMENTY",
                columns: table => new
                {
                    ID_SZKODY_DOKUMENTY = table.Column<int>(type: "int", nullable: false),
                    SZKODY_ID = table.Column<int>(type: "int", nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    KOD = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WYMAGANY = table.Column<int>(type: "int", nullable: true),
                    WPLYNAL = table.Column<int>(type: "int", nullable: true),
                    DATA_WPLYWU = table.Column<DateTime>(type: "datetime", nullable: true),
                    UZYTKOWNIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    GRUPA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    STATUS = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    UZYTKOWNIK_POTW = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SZKODY_DOKUMENTY", x => x.ID_SZKODY_DOKUMENTY);
                });

            migrationBuilder.CreateTable(
                name: "SZKODY_DZIALANIA",
                columns: table => new
                {
                    ID_SZKODY_DZIALANIA = table.Column<int>(type: "int", nullable: false),
                    SZKODY_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    OPIS = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true),
                    ZAMKNIETE = table.Column<int>(type: "int", nullable: true),
                    KOD = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    DATA_ZAM = table.Column<DateTime>(type: "datetime", nullable: true),
                    REKLAMACJE_ID = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    UWAGI_DOD = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SZKODY_DZIALANIA", x => x.ID_SZKODY_DZIALANIA);
                });

            migrationBuilder.CreateTable(
                name: "SZKODY_PRZYCZYNY",
                columns: table => new
                {
                    ID_SZKODY_PRZYCZYNY = table.Column<int>(type: "int", nullable: false),
                    SZKODY_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    OPIS = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true),
                    KOD = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    REKLAMACJE_ID = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SZKODY_PRZYCZYNY", x => x.ID_SZKODY_PRZYCZYNY);
                });

            migrationBuilder.CreateTable(
                name: "SZKODY_REFERENCJE",
                columns: table => new
                {
                    ID_SZKODY_REFERENCJE = table.Column<int>(type: "int", nullable: false),
                    SZKODY_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    TYP = table.Column<short>(type: "smallint", nullable: false, defaultValueSql: "('0')"),
                    OBIEKT_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    NUMER = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SZKODY_REFERENCJE", x => x.ID_SZKODY_REFERENCJE);
                });

            migrationBuilder.CreateTable(
                name: "SZKODY_ROZLICZENIA",
                columns: table => new
                {
                    ID_SZKODY_ROZLICZENIA = table.Column<int>(type: "int", nullable: false),
                    SZKODY_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    TYP = table.Column<short>(type: "smallint", nullable: false, defaultValueSql: "('0')"),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    KWOTA = table.Column<double>(type: "float", nullable: true),
                    OPIS = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    PLATNIK = table.Column<string>(type: "varchar(35)", unicode: false, maxLength: 35, nullable: true),
                    WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KWOTA_WAL = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SZKODY_ROZLICZENIA", x => x.ID_SZKODY_ROZLICZENIA);
                });

            migrationBuilder.CreateTable(
                name: "SZKODY_STATUSY",
                columns: table => new
                {
                    ID_SZKODY_STATUSY = table.Column<int>(type: "int", nullable: false),
                    SZKODY_ID = table.Column<int>(type: "int", nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    STATUS = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    UZYTKOWNIK_ID = table.Column<int>(type: "int", nullable: true),
                    UZYTKOWNIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    STATUS_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    CREATE_DT = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SZKODY_STATUSY", x => x.ID_SZKODY_STATUSY);
                });

            migrationBuilder.CreateTable(
                name: "SZKODY_ZDARZENIA",
                columns: table => new
                {
                    ID_SZKODY_ZDARZENIA = table.Column<int>(type: "int", nullable: false),
                    SZKODY_ID = table.Column<int>(type: "int", nullable: true),
                    SZKODY = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TABOR = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    TYP_ID = table.Column<int>(type: "int", nullable: true),
                    TYP = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    OPIS = table.Column<string>(type: "text", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SZKODY_ZDARZENIA", x => x.ID_SZKODY_ZDARZENIA);
                });

            migrationBuilder.CreateTable(
                name: "T_TACHO",
                columns: table => new
                {
                    ID_TACHO = table.Column<int>(type: "int", nullable: false),
                    ID_FIRMA = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: false),
                    ID_KIEROWCY = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ID_TABORU = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ZATWIERDZONY = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    SRODEK_X = table.Column<int>(type: "int", nullable: true),
                    SRODEK_Y = table.Column<int>(type: "int", nullable: true),
                    ODCHYLENIE = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KM_KONCOWE = table.Column<int>(type: "int", nullable: true),
                    KM_POCZATKOWE = table.Column<int>(type: "int", nullable: true),
                    CZAS_ROZPOCZECIA = table.Column<double>(type: "float", nullable: true),
                    ADNOTACJE = table.Column<string>(type: "text", nullable: true),
                    CZAS_JAZDY = table.Column<double>(type: "float", nullable: true),
                    CZAS_PRACY = table.Column<double>(type: "float", nullable: true),
                    CZAS_DYZURU = table.Column<double>(type: "float", nullable: true),
                    CZAS_POSTOJU = table.Column<double>(type: "float", nullable: true),
                    ALL_KM = table.Column<double>(type: "float", nullable: true),
                    ERROR_1 = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    ERROR_2 = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    ERROR_3 = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    ERROR_4 = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    ZESPOLOWA = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    ZASWIADCZENIE = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    CYFROWE = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    CZAS_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    CZAS_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    KOD_NIEOBECNOSCI = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    SKAN = table.Column<byte[]>(type: "image", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_T_TACHO", x => x.ID_TACHO);
                });

            migrationBuilder.CreateTable(
                name: "T_TACHO_ZDARZENIA",
                columns: table => new
                {
                    ID_TACHO_ZDARZENIA = table.Column<int>(type: "int", nullable: false),
                    ID_TACHO = table.Column<int>(type: "int", nullable: false),
                    ID_KIEROWCY = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ID_TABORU = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    DATACZAS_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATACZAS_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    TRYB = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "tryb pracy (JAZDA/PRACA/DYZUR/POSTOJ/NIEZNANY)"),
                    CZAS_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    CZAS_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    CZAS_TRWANIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    KM = table.Column<double>(type: "float", nullable: true, comment: "ilość kilometrów"),
                    X_START = table.Column<int>(type: "int", nullable: true),
                    X_STOP = table.Column<int>(type: "int", nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "uwagi o czasie jazdy"),
                    ZESPOLOWA = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    LKM = table.Column<double>(type: "float", nullable: true, comment: "końcowy licznik kilometrów"),
                    ZROBIONE = table.Column<short>(type: "smallint", nullable: true, comment: "0-otwarte /1-zamknięcie okresu /2-przetworzona JAZDA"),
                    TYP_TERM = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "typ terminala (źródła danych)"),
                    CRC = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    DT_CREATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas utworzenia rekordu"),
                    DT_MODIFY = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas ostatniej aktualizacji rekordu"),
                    ID_SFM_TERM = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "ID terminala SFM"),
                    EXTID = table.Column<long>(type: "bigint", nullable: true, defaultValueSql: "('0')", comment: "ID danych w systemie zewnętrznym"),
                    SRC = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true, comment: "źródło danych M-message /F-ftp /U-user"),
                    DT_FILTER = table.Column<DateTime>(type: "datetime", nullable: true, computedColumnSql: "(CONVERT([datetime],case when [DATACZAS_DO] IS NULL OR [DATACZAS_OD]>[DATACZAS_DO] then [DATACZAS_OD] else [DATACZAS_DO] end,(0)))", stored: false),
                    ID_SFM_System = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "ID definicji systemu telematycznego"),
                    CoDriver = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "((0))", comment: "0/1 - czy to drugi kierowca przy jeździe w zespole"),
                    Country = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "kod kraju rozpoczęcia aktywności")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_T_TACHO_ZDARZENIA", x => x.ID_TACHO_ZDARZENIA);
                });

            migrationBuilder.CreateTable(
                name: "TAB_KONW_KONTRAH",
                columns: table => new
                {
                    ID_TAB_KONW_KONTRAH = table.Column<int>(type: "int", nullable: false),
                    SYST_WYM_DANYCH_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do systemów wymiany danych - tab: SYST_WYM_DANYCH"),
                    INTF_NAME = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Nazwa interfejsu"),
                    SLOWNIK = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Nazwa słownika"),
                    SPEED_ID = table.Column<int>(type: "int", nullable: true, comment: "Identyfikator w SPEED"),
                    SPEED_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Symbol w SPEED"),
                    EXT_ID = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dane zewn. - ID"),
                    EXT_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dane zewn. - Symbol"),
                    EXT_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Dane zewn. - Nazwa"),
                    EXT_ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Dane zewn. - Adres"),
                    EXT_KOD_P = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dane zewn. - Kod pocztowy"),
                    EXT_MIASTO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Dane zewn. - Miasto"),
                    EXT_KRAJ = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "Dane zewn. - Kraj"),
                    EXT_NIP = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true, comment: "Dane zewn. - NIP"),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TAB_KONW_KONTRAH", x => x.ID_TAB_KONW_KONTRAH);
                },
                comment: "Tabele konwersji danych kontrahentów - na potrzeby interfejsów");

            migrationBuilder.CreateTable(
                name: "TABELA_KONWERSJI",
                columns: table => new
                {
                    ID_TABELA_KONWERSJI = table.Column<int>(type: "int", nullable: false),
                    POLE1 = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    POLE2 = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TABELA_KONWERSJI", x => x.ID_TABELA_KONWERSJI);
                });

            migrationBuilder.CreateTable(
                name: "TABELA_KURSY",
                columns: table => new
                {
                    ID = table.Column<int>(type: "int", nullable: false),
                    NAZWA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    TYP = table.Column<short>(type: "smallint", nullable: false, defaultValueSql: "('0')"),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_OGLOSZENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    ROK = table.Column<short>(type: "smallint", nullable: true),
                    NR = table.Column<short>(type: "smallint", nullable: true),
                    NET = table.Column<short>(type: "smallint", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TABELA_KURSY", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "TABELA_KURSY_D",
                columns: table => new
                {
                    ID = table.Column<int>(type: "int", nullable: false),
                    NAZWA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    TYP = table.Column<short>(type: "smallint", nullable: false, defaultValueSql: "('0')"),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_OGLOSZENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    ROK = table.Column<short>(type: "smallint", nullable: true),
                    NR = table.Column<short>(type: "smallint", nullable: true),
                    NET = table.Column<short>(type: "smallint", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TABELA_KURSY_D", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "TABELE_KONWERSJI",
                columns: table => new
                {
                    ID_TABELE_KONWERSJI = table.Column<int>(type: "int", nullable: false),
                    INTF_NAME = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Nazwa interfejsu"),
                    SLOWNIK = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Nazwa słownika"),
                    KOD_SPEED = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Kod SPEED. 1"),
                    KOD_EXT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Kod zewn. 1"),
                    KOD_EXT2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Kod zewn. 2"),
                    SYST_WYM_DANYCH_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do systemów wymiany danych - tab: SYST_WYM_DANYCH"),
                    KOD_SPEED2 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Kod SPEED. 2"),
                    OPIS_EXT = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true, comment: "Opis do pozycji słownikowej zewnetrznej"),
                    BLOKADA_STOP = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy blokować wysyłanie")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TABELE_KONWERSJI", x => x.ID_TABELE_KONWERSJI);
                },
                comment: "Tabele konwersji danych - na potrzeby interfejsów");

            migrationBuilder.CreateTable(
                name: "TABKURSOW_DEF",
                columns: table => new
                {
                    ID_TABKURSOW_DEF = table.Column<int>(type: "int", nullable: false),
                    TYP = table.Column<short>(type: "smallint", nullable: true, comment: "typ tabeli (liczone od 3)"),
                    SYMBOL = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true, comment: "symbol tabeli - nazwa zakładki na liście tabel kursów"),
                    NAZWA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "opis tabeli"),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, defaultValueSql: "('PLN')", comment: "waluta bazowa tabeli (domyślnie PLN)"),
                    UKRYJ = table.Column<short>(type: "smallint", nullable: true, comment: "nie pokazuj zakładki"),
                    KURS = table.Column<short>(type: "smallint", nullable: true, comment: "0/1 - włącza obsługę kursu średniego"),
                    KUPNO = table.Column<short>(type: "smallint", nullable: true, comment: "0/1 - włącza obsługę kursu kupna"),
                    SPRZEDAZ = table.Column<short>(type: "smallint", nullable: true, comment: "0/1 - włącza obsługę kursu sprzedaży")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TABKURSOW_DEF", x => x.ID_TABKURSOW_DEF);
                },
                comment: "definicja typu tabeli");

            migrationBuilder.CreateTable(
                name: "TABKURSOW_WALUTY",
                columns: table => new
                {
                    ID_TABKURSOW_WALUTY = table.Column<int>(type: "int", nullable: false),
                    TYP = table.Column<short>(type: "smallint", nullable: true, comment: "typ tabeli (liczone od 3)"),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "kod waluty"),
                    NAZWA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "nazwa waluty"),
                    KURS_NA = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('1')", comment: "przelicznik waluty")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TABKURSOW_WALUTY", x => x.ID_TABKURSOW_WALUTY);
                },
                comment: "lista walut rejestrowanych w tabeli");

            migrationBuilder.CreateTable(
                name: "TABOR",
                columns: table => new
                {
                    ID_TABORU = table.Column<int>(type: "int", nullable: false),
                    NR_REJ = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: false),
                    NR_REJ_NACZEPY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ID_NACZEPY = table.Column<int>(type: "int", nullable: true),
                    HIST_TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    HIST = table.Column<int>(type: "int", nullable: true),
                    IS_ADR = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    IS_WINDA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    AKTYWNY = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    GRUPA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MARKA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MODEL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ROK_PRODUKCJI = table.Column<int>(type: "int", nullable: true),
                    NR_SILNIKA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_PODWOZIA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_INWENT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NORMA = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    POJ_SILNIKA = table.Column<double>(type: "float", nullable: true),
                    MOC_SILNIKA = table.Column<double>(type: "float", nullable: true),
                    POJ_ZBIORNIKA = table.Column<double>(type: "float", nullable: true),
                    POJ_DOD_ZBIORNIKA = table.Column<double>(type: "float", nullable: true),
                    TYP_POJAZDU_ID = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    TYP_POJAZDU = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TYP_POJAZDU_EXT = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    TYP_POJAZDU_EXT2 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    MASA_WLASNA = table.Column<double>(type: "float", nullable: true),
                    LADOWNOSC = table.Column<double>(type: "float", nullable: true),
                    DLUGOSC = table.Column<double>(type: "float", nullable: true),
                    WYSOKOSC = table.Column<double>(type: "float", nullable: true),
                    SZEROKOSC = table.Column<double>(type: "float", nullable: true),
                    MIEJSCA_PALETOWE = table.Column<int>(type: "int", nullable: true),
                    WYP_DOD = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    LICZBA_KOMOR = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_OSI = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    UBEZP_AC_SKL_1 = table.Column<double>(type: "float", nullable: true),
                    UBEZP_AC_DATA_1 = table.Column<DateTime>(type: "datetime", nullable: true),
                    UBEZP_AC_SKL_1_OK = table.Column<int>(type: "int", nullable: true),
                    UBEZP_OC_SKL_1 = table.Column<double>(type: "float", nullable: true),
                    UBEZP_OC_DATA_1 = table.Column<DateTime>(type: "datetime", nullable: true),
                    UBEZP_OC_SKL_1_OK = table.Column<int>(type: "int", nullable: true),
                    UBEZP_AC_SKL_2 = table.Column<double>(type: "float", nullable: true),
                    UBEZP_AC_DATA_2 = table.Column<DateTime>(type: "datetime", nullable: true),
                    UBEZP_AC_SKL_2_OK = table.Column<int>(type: "int", nullable: true),
                    UBEZP_OC_SKL_2 = table.Column<double>(type: "float", nullable: true),
                    UBEZP_OC_DATA_2 = table.Column<DateTime>(type: "datetime", nullable: true),
                    UBEZP_OC_SKL_2_OK = table.Column<int>(type: "int", nullable: true),
                    UBEZP_AC_SKL_3 = table.Column<double>(type: "float", nullable: true),
                    UBEZP_AC_DATA_3 = table.Column<DateTime>(type: "datetime", nullable: true),
                    UBEZP_AC_SKL_3_OK = table.Column<int>(type: "int", nullable: true),
                    UBEZP_OC_SKL_3 = table.Column<double>(type: "float", nullable: true),
                    UBEZP_OC_DATA_3 = table.Column<DateTime>(type: "datetime", nullable: true),
                    UBEZP_OC_SKL_3_OK = table.Column<int>(type: "int", nullable: true),
                    UBEZP_AC_SKL_4 = table.Column<double>(type: "float", nullable: true),
                    UBEZP_AC_DATA_4 = table.Column<DateTime>(type: "datetime", nullable: true),
                    UBEZP_AC_SKL_4_OK = table.Column<int>(type: "int", nullable: true),
                    UBEZP_OC_SKL_4 = table.Column<double>(type: "float", nullable: true),
                    UBEZP_OC_DATA_4 = table.Column<DateTime>(type: "datetime", nullable: true),
                    UBEZP_OC_SKL_4_OK = table.Column<int>(type: "int", nullable: true),
                    WARTOSC_POLISY = table.Column<double>(type: "float", nullable: true),
                    DATA_POLISY = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_ZAKUPU = table.Column<DateTime>(type: "datetime", nullable: true),
                    CENA_ZAKUPU = table.Column<double>(type: "float", nullable: true),
                    DATA_SPRZEDAZY = table.Column<DateTime>(type: "datetime", nullable: true),
                    CENA_SPRZEDAZY = table.Column<double>(type: "float", nullable: true),
                    DATA_REJESTRACJI = table.Column<DateTime>(type: "datetime", nullable: true),
                    CENNIK_FTL_ID = table.Column<int>(type: "int", nullable: true),
                    CENNIK_FTL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    RODZ_PALIWA = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    OSOBNY_LICZNIK_KM = table.Column<int>(type: "int", nullable: true),
                    OSOBNY_ZB_PALIWA = table.Column<int>(type: "int", nullable: true),
                    AGREGAT = table.Column<int>(type: "int", nullable: true),
                    KABINA_OGRZ_PALIWEM = table.Column<int>(type: "int", nullable: true),
                    NORMA_ZUZ_OLEJU = table.Column<double>(type: "float", nullable: true),
                    NORMA_ZUZ_PALIWA_PU = table.Column<double>(type: "float", nullable: true),
                    NORMA_ZUZ_PALIWA_Z = table.Column<double>(type: "float", nullable: true),
                    NORMA_ZUZ_PALIWA_BEZ = table.Column<double>(type: "float", nullable: true),
                    NORMA_DOD_OBC = table.Column<double>(type: "float", nullable: true),
                    NORMA_DOD_MIASTO = table.Column<double>(type: "float", nullable: true),
                    NORMA_OGRZ_KABINY = table.Column<double>(type: "float", nullable: true),
                    NORMA_AGREGAT = table.Column<double>(type: "float", nullable: true),
                    ADR_ZESTAW_ID = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    ADR_ZESTAW = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ADR_ZESTAW_SYMBOL = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KONTO_FK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    STAN_LICZNIKA = table.Column<int>(type: "int", nullable: true),
                    STAN_LICZNIKA_DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    WLASCICIEL_ID = table.Column<int>(type: "int", nullable: true),
                    WLASCICIEL = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    SYMBOL_KABINY = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    RODZAJ_KABINY = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ILOSC_MIEJSC = table.Column<int>(type: "int", nullable: true),
                    KOLOR = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    RODZAJ_TARCZY_TACHO = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    TYP_ZABUDOWY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SPOSOB_LADOWANIA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    PALECIARKA = table.Column<int>(type: "int", nullable: true),
                    DECYZ_SANEPID = table.Column<int>(type: "int", nullable: true),
                    DECYZ_WETERYN = table.Column<int>(type: "int", nullable: true),
                    UZYTKOWNIK_ID = table.Column<int>(type: "int", nullable: true),
                    UZYTKOWNIK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PROG_KM = table.Column<double>(type: "float", nullable: true),
                    PROG_FRACHT = table.Column<double>(type: "float", nullable: true),
                    SR_ZA_KM = table.Column<double>(type: "float", nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    TELEMATYKA = table.Column<int>(type: "int", nullable: true),
                    PROFIL_ID = table.Column<int>(type: "int", nullable: true),
                    PROFIL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    WERSJA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MARKA_ID = table.Column<int>(type: "int", nullable: true),
                    MODEL_ID = table.Column<int>(type: "int", nullable: true),
                    WERSJA_ID = table.Column<int>(type: "int", nullable: true),
                    CENNIK_DOMYSLNY = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    OBCY = table.Column<int>(type: "int", nullable: true),
                    DMC = table.Column<double>(type: "float", nullable: true),
                    DMC_ZESP = table.Column<double>(type: "float", nullable: true),
                    NACISK_OSI = table.Column<double>(type: "float", nullable: true),
                    DATA_ROZP_UZYTK = table.Column<DateTime>(type: "datetime", nullable: true),
                    POCZ_STAN_LICZNIKA = table.Column<int>(type: "int", nullable: true),
                    DOK_ZAKUPU = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    NR_SR_TRWALEGO = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DOK_SPRZEDAZY = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    GWARANCJA_TERMIN = table.Column<DateTime>(type: "datetime", nullable: true),
                    GWARANCJA_LIMIT_KM = table.Column<int>(type: "int", nullable: true),
                    DATA_P_REJESTRACJI = table.Column<DateTime>(type: "datetime", nullable: true),
                    KIEROWCA_OBCY_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA_OBCY = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SFM_TERM_ID = table.Column<int>(type: "int", nullable: true),
                    PROG_FRACHT_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    SR_ZA_KM_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    MAP_CC_ACTIVE = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "0/1 - czy aktywny korytarz dla pojazdu ?"),
                    MAP_CC_DT_START = table.Column<DateTime>(type: "datetime", nullable: true, comment: "data od której uwzględniać punkty z GPS (aby nie kontrolować zbyt starych) - zwykle bieżąca"),
                    MAP_CC_DT_STOP = table.Column<DateTime>(type: "datetime", nullable: true, comment: "data do (jak MAP_CC_DT_START) - zwykle maksymalne zaplanowane juz zdarzenie na trasie"),
                    MAP_CC_ROUTEID = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: true, comment: "identyfikator trasy"),
                    TACHO_DROGA_PIK_1 = table.Column<int>(type: "int", nullable: true),
                    TACHO_DROGA_PIK_2 = table.Column<int>(type: "int", nullable: true),
                    NORMA_ADBLUE = table.Column<double>(type: "float", nullable: true),
                    ADBLUE = table.Column<int>(type: "int", nullable: true),
                    MAP_CC_DT_ALERT = table.Column<DateTime>(type: "datetime", nullable: true, comment: "data ostatnio zarejestrowanego opuszczenia korytarza (jest czyszczona jeśli pojazd powróci na obszar korytarza)"),
                    OBJ_KOM_1 = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    OBJ_KOM_2 = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    OBJ_KOM_3 = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    OBJ_KOM_4 = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    OBJ_KOM_5 = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    OBJ_KOM_6 = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    OBJ_KOM_7 = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    NADGABARYTY = table.Column<int>(type: "int", nullable: true),
                    OBJ_CALKOWITA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    STAN_LICZNIKA_MTG = table.Column<double>(type: "float", nullable: true),
                    STAN_LICZNIKA_MTG_DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    KIEROWCA1_DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    KIEROWCA1_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA1 = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KIEROWCA2_DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    KIEROWCA2_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA2 = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    POJ_ZBIORNIKA_ADBLUE = table.Column<double>(type: "float", nullable: true),
                    IS_ZASTAW = table.Column<int>(type: "int", nullable: true),
                    IS_LEASING = table.Column<int>(type: "int", nullable: true),
                    LIMIT_KWOTA_SZKODA = table.Column<double>(type: "float", nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    POLE_DOD_1 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    POLE_DOD_2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    POLE_DOD_3 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    UWAGI = table.Column<string>(type: "text", nullable: true),
                    OBCY_UMOWA = table.Column<int>(type: "int", nullable: true),
                    GWARANCJA_UKL_NAP = table.Column<DateTime>(type: "datetime", nullable: true),
                    GWARANCJA_LAKIER = table.Column<DateTime>(type: "datetime", nullable: true),
                    GWARANCJA_ZB_GL = table.Column<DateTime>(type: "datetime", nullable: true),
                    KLASY_ADR = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DZIERZAWA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    NORMA_MTH = table.Column<double>(type: "float", nullable: true),
                    KM_PREMIA = table.Column<double>(type: "float", nullable: true),
                    KM_PREMIA_PROC_LAD = table.Column<double>(type: "float", nullable: true),
                    SR_CENA_PALIWA = table.Column<double>(type: "float", nullable: true),
                    SR_CENA_ADBLUE = table.Column<double>(type: "float", nullable: true),
                    SR_CENA_PALIWA_PW_ID = table.Column<int>(type: "int", nullable: true),
                    WYS_PRZES_BOK = table.Column<double>(type: "float", nullable: true),
                    WYS_PRZES_TYL = table.Column<double>(type: "float", nullable: true),
                    DR_CENA_ZA_AKTYWNY = table.Column<int>(type: "int", nullable: true),
                    DR_CENA_ZA_KM = table.Column<double>(type: "float", nullable: true),
                    DR_CENA_ZA_KM_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    DR_CENA_ZA_KM_PUSTE = table.Column<double>(type: "float", nullable: true),
                    DR_CENA_ZA_KM_PUSTE_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    DR_CENA_ZA_M_ZAWY = table.Column<double>(type: "float", nullable: true),
                    DR_CENA_ZA_M_ZAWY_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    DR_CENA_ZA_KG = table.Column<double>(type: "float", nullable: true),
                    DR_CENA_ZA_KG_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    LOKALIZACJA_PRZEK_DO = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KOD_KRESKOWY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DATA_CZAS_WYCOF = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_WYREJESTROWANIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_PON_DOP = table.Column<DateTime>(type: "datetime", nullable: true),
                    ADR_KOD_POJAZDU = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    LEASING_ILE_MIES = table.Column<int>(type: "int", nullable: true),
                    LEASING_DATA_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    LEASING_DATA_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    LEASING_KWOTA_WYKUPU = table.Column<double>(type: "float", nullable: true),
                    LEASING_RATA_MIES = table.Column<double>(type: "float", nullable: true),
                    LEASING_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KOR_ZUZ_PAL_GPS = table.Column<double>(type: "float", nullable: true),
                    ZDJECIE = table.Column<byte[]>(type: "image", nullable: true),
                    KAT_POJ = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ENA_PRZEPLYWOMIERZ = table.Column<int>(type: "int", nullable: true),
                    ENA_PRZEPL_TYLKO_ZUZ = table.Column<int>(type: "int", nullable: true),
                    ENA_BEZ_LICZN_MTH = table.Column<int>(type: "int", nullable: true),
                    FTL_CENA_ZA_AKTYWNY = table.Column<int>(type: "int", nullable: true),
                    FTL_CENA_ZA_KM_P = table.Column<double>(type: "float", nullable: true),
                    FTL_CENA_ZA_WAGA_P = table.Column<double>(type: "float", nullable: true),
                    FTL_CENA_ZA_WAGA_KM_P = table.Column<double>(type: "float", nullable: true),
                    PLAN_ZGODA_INNA_LOK = table.Column<int>(type: "int", nullable: true),
                    PLAN_ZGODA_INNY_DZIAL = table.Column<int>(type: "int", nullable: true),
                    AGREGAT_NR_SER = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    AGREGAT_TYP = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    AGREGAT_MARKA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ILOSC_OPON = table.Column<int>(type: "int", nullable: true),
                    LEASING_NR_UMOWY = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    ENA_ZM_LOK = table.Column<int>(type: "int", nullable: true),
                    FRM_ID = table.Column<int>(type: "int", nullable: true),
                    GRUPA_ID = table.Column<int>(type: "int", nullable: true),
                    OBJ = table.Column<double>(type: "float", nullable: true),
                    KONTENER_ID = table.Column<int>(type: "int", nullable: true),
                    UZYTKOWANY_PRZEZ_ID = table.Column<int>(type: "int", nullable: true),
                    UZYTKOWANY_PRZEZ = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    UZYTKOWANY_PRZEZ_O_ID = table.Column<int>(type: "int", nullable: true),
                    UZYTKOWANY_PRZEZ_O = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    WLASCICIEL_OPIEKUN_ID = table.Column<int>(type: "int", nullable: true),
                    WLASCICIEL_OPIEKUN = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    PODATEK_DROG = table.Column<int>(type: "int", nullable: true),
                    PODATEK_DROG_STAWKA = table.Column<double>(type: "float", nullable: true),
                    PODATEK_DROG_DO_ID = table.Column<int>(type: "int", nullable: true),
                    PODATEK_DROG_DO = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    CZYNSZ_KWOTA = table.Column<double>(type: "float", nullable: true),
                    CZYNSZ_KWOTA_WAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    PLAN_WYMIANA = table.Column<DateTime>(type: "datetime", nullable: true),
                    AMORT_KWOTA = table.Column<double>(type: "float", nullable: true),
                    AMORT_KWOTA_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    ILU_CODE = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    STREFA = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TEMP_PLUS = table.Column<int>(type: "int", nullable: true),
                    INELO_UPDATE = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "czy modyfikacja z INELO"),
                    HACCP = table.Column<int>(type: "int", nullable: true),
                    EMI_ORG_ID = table.Column<int>(type: "int", nullable: true),
                    NORMA_DOD_ZIMOWE = table.Column<double>(type: "float", nullable: true),
                    UWZGL_WAGE_NACZ = table.Column<int>(type: "int", nullable: true),
                    PODWYKONAWCA_ID = table.Column<int>(type: "int", nullable: true),
                    PODWYKONAWCA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    NR_LOKALIZATORA_GPS = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    SFM_INFO_1 = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true, comment: "info(1) wyświetlane w Aktualnym planie"),
                    SFM_INFO_2 = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true, comment: "info(2) wyświetlane w Aktualnym planie"),
                    REJON = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    VIP = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy VIP"),
                    STATUS = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Status"),
                    SLOT_1 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Status - SLOT 1"),
                    SLOT_2 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Status - SLOT 2"),
                    SLOT_3 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Status - SLOT 3"),
                    SLOT_4 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Status - SLOT 4"),
                    SLOT_5 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Status - SLOT 5")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TABOR", x => x.ID_TABORU);
                });

            migrationBuilder.CreateTable(
                name: "TABOR_ADR_SPRZET",
                columns: table => new
                {
                    ID_TABOR_ADR_SPRZET = table.Column<int>(type: "int", nullable: false),
                    TABOR_ID = table.Column<int>(type: "int", nullable: false),
                    NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: false),
                    OPIS = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    DATA_WAZNOSCI = table.Column<DateTime>(type: "datetime", nullable: true),
                    ARCH = table.Column<int>(type: "int", nullable: true),
                    DATA_ARCH = table.Column<DateTime>(type: "datetime", nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TABOR_ADR_SPRZET", x => x.ID_TABOR_ADR_SPRZET);
                });

            migrationBuilder.CreateTable(
                name: "TABOR_AKUM",
                columns: table => new
                {
                    ID_TABOR_AKUM = table.Column<int>(type: "int", nullable: false),
                    NR_SERYJNY = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Numer seryjny akumulatora"),
                    NR_FABRYCZNY = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Numer fabryczny akumulatora"),
                    RODZAJ = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Rodzaj akumulatora"),
                    MARKA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Marka akumulatora"),
                    ADRES_HTTP = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Adres strony producenta"),
                    UWAGI_DOD = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Dowolne uwagi"),
                    NORMA = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Norma"),
                    AH = table.Column<double>(type: "float", nullable: true, comment: "Pojemność w Ah"),
                    EN = table.Column<double>(type: "float", nullable: true, comment: "Prąd rozruchu"),
                    DL = table.Column<double>(type: "float", nullable: true, comment: "Długość"),
                    SZ = table.Column<double>(type: "float", nullable: true, comment: "Szerokość"),
                    WY = table.Column<double>(type: "float", nullable: true, comment: "Wysokość"),
                    PLUS_PRAWA = table.Column<int>(type: "int", nullable: true, comment: "Znacznik, czy zacisk dodatni znajduje sie po prawej stronie"),
                    OST_TYP_OBSL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Ostatnie zdarzenie - typ"),
                    OST_TABOR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Ostatnie zdarzenie - nr rejstracyjny pojazdu"),
                    OST_TABOR_ID = table.Column<int>(type: "int", nullable: true, comment: "Ostatnie zdarzenie - relacja do pojazdu - tab: TABOR"),
                    OST_NAPIECIE = table.Column<double>(type: "float", nullable: true, comment: "Ostatnie zdarzenie - napięcie"),
                    OST_GESTOSC = table.Column<double>(type: "float", nullable: true, comment: "Ostatnie zdarzenie - gęstość elektrolitu"),
                    OST_DATA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Ostatnie zdarzenie - data"),
                    DATA_ZALOZENIA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data montażu akumulatora"),
                    DATA_ZUZYCIA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data zużycia akumulatora"),
                    DATA_GWARANCJI = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data gwarancji"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja"),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true, comment: "Ilość załączników"),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    OST_TABOR_NR_B = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Ostatnie zdarzenie - nr boczny pojazdu")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TABOR_AKUM", x => x.ID_TABOR_AKUM);
                },
                comment: "Akumulatory");

            migrationBuilder.CreateTable(
                name: "TABOR_AKUM_OBSL",
                columns: table => new
                {
                    ID_TABOR_AKUM_OBSL = table.Column<int>(type: "int", nullable: false),
                    TABOR_AKUM_ID = table.Column<int>(type: "int", nullable: false, comment: "Relacja do akumulatora - tab: TABOR_AKUM"),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do pojazdu - tab: TABOR"),
                    TABOR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Nr rejestracyjny pojazdu"),
                    TYP_OBSL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Typ obsługi"),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data zdarzenia"),
                    GODZ = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina zdarzenia"),
                    LICZNIK = table.Column<double>(type: "float", nullable: true, comment: "Licznik pojazdu w momencie zdarzenia"),
                    NAPIECIE = table.Column<double>(type: "float", nullable: true, comment: "Napięcie"),
                    GESTOSC = table.Column<double>(type: "float", nullable: true, comment: "Gęstość elektrolitu"),
                    UWAGI = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Dowolne uwagi do zdarzenia"),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kontrahenta - tab: KONTRAHENCI"),
                    KONTRAH = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Symbol kontrahenta"),
                    TABOR_NR_B = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer boczny pojazdu")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TABOR_AKUM_OBSL", x => x.ID_TABOR_AKUM_OBSL);
                },
                comment: "Pozycje obsługi akumulatorów");

            migrationBuilder.CreateTable(
                name: "TABOR_CERTYFIKATY",
                columns: table => new
                {
                    ID_TABOR_CERTYFIKATY = table.Column<int>(type: "int", nullable: false),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    CERTYFIKAT_ID = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    CERTYFIKAT = table.Column<string>(type: "varchar(120)", unicode: false, maxLength: 120, nullable: true),
                    DATA_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    NR_DOKUMENTU = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TABOR_CERTYFIKATY", x => x.ID_TABOR_CERTYFIKATY);
                });

            migrationBuilder.CreateTable(
                name: "TABOR_EXT",
                columns: table => new
                {
                    ID_TABORU = table.Column<int>(type: "int", nullable: false),
                    OST_ALARM = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    AKT_MIASTO_START = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    AKT_LICZNIK_START = table.Column<int>(type: "int", nullable: true),
                    AKT_MIASTO_STOP = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    AKT_LICZNIK_STOP = table.Column<int>(type: "int", nullable: true),
                    AKT_POZYCJA = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    AKT_NACZEPA_ID = table.Column<int>(type: "int", nullable: true),
                    AKT_NACZEPA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    AKT_KIEROWCA_ID = table.Column<int>(type: "int", nullable: true),
                    AKT_KIEROWCA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    AKT_KIEROWCA_TEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    AKTYWNE_SLEDZENIE = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TABOR_EXT", x => x.ID_TABORU);
                });

            migrationBuilder.CreateTable(
                name: "TABOR_FILTRY",
                columns: table => new
                {
                    ID_TABOR_FILTRY = table.Column<int>(type: "int", nullable: false),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    RODZAJ = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MARKA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SYMBOL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TABOR_FILTRY", x => x.ID_TABOR_FILTRY);
                });

            migrationBuilder.CreateTable(
                name: "TABOR_GRUPY",
                columns: table => new
                {
                    ID_TABOR_GRUPY = table.Column<int>(type: "int", nullable: false),
                    NAZWA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true),
                    KONTO_FK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DictionaryId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TextId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TABOR_GRUPY", x => x.ID_TABOR_GRUPY);
                });

            migrationBuilder.CreateTable(
                name: "TABOR_GRUPY_HIST",
                columns: table => new
                {
                    ID_TABOR_GRUPY_HIST = table.Column<int>(type: "int", nullable: false),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    TABOR_GRUPY_ID = table.Column<int>(type: "int", nullable: true),
                    DATA_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    LICZNIK = table.Column<int>(type: "int", nullable: true),
                    LICZNIK_MTH = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TABOR_GRUPY_HIST", x => x.ID_TABOR_GRUPY_HIST);
                });

            migrationBuilder.CreateTable(
                name: "TABOR_GRUPY_SPEDYTORZY",
                columns: table => new
                {
                    ID_TABOR_GRUPY_SPEDYTORZY = table.Column<int>(type: "int", nullable: false),
                    TABOR_GRUPY_ID = table.Column<int>(type: "int", nullable: true),
                    SPEDYTOR_ID = table.Column<int>(type: "int", nullable: true),
                    SPEDYTOR = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DT_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DT_DO = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TABOR_GRUPY_SPEDYTORZY", x => x.ID_TABOR_GRUPY_SPEDYTORZY);
                });

            migrationBuilder.CreateTable(
                name: "TABOR_HAMULCE",
                columns: table => new
                {
                    ID_TABOR_HAMULCE = table.Column<int>(type: "int", nullable: false),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    NR_OSI = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    TARCZOWE_BEBNOWE = table.Column<int>(type: "int", nullable: true),
                    RODZAJ = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MARKA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    NR_ID = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TARCZA_RODZAJ = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TARCZA_ROZM = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TARCZA_NR = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ZACISK_RODZAJ = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ZACISK_ROZM = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ZACISK_NR = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TARCZA_DATA_GWARANCJI = table.Column<DateTime>(type: "datetime", nullable: true),
                    TARCZA_KM_GWARANCJI = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TABOR_HAMULCE", x => x.ID_TABOR_HAMULCE);
                });

            migrationBuilder.CreateTable(
                name: "TABOR_HISTLOG",
                columns: table => new
                {
                    ID_TABOR_HISTLOG = table.Column<int>(type: "int", nullable: false),
                    ID_TABOR = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "ID pojazdu"),
                    ID_KIEROWCA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "ID kierowcy"),
                    DT_INFO = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas zdarzenia"),
                    DT_ZAPIS = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas pierwszego zapisu zdarzenia"),
                    DT_KONIEC = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas potwierdzenia/anulowania zdarzenia"),
                    TYP = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: false, comment: "rodzaj zdarzenia"),
                    INFO = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true, comment: "opis/temat/parametry"),
                    INFO_EX = table.Column<string>(type: "text", nullable: true, comment: "dodatkowy opis/parametry"),
                    ID_ZLECENIA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "ID zlecenia"),
                    ID_ZLECENIA_ZA_WY = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "ID zdarzenia zlecenia"),
                    ZROBIONE = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "0/1/2 - nowe/zatwierdzone/anulowane (wartości ujemne, to statusy nadawane automatycznie)"),
                    LKM = table.Column<double>(type: "float", nullable: true, comment: "licznik kilometrów"),
                    AUTOMAT = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "Automat(0/1): nowe/obsłużone"),
                    ILOSC = table.Column<double>(type: "float", nullable: true, comment: "ilość towaru"),
                    JM = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true, comment: "jednostka ilości"),
                    ID_SFM_MSG = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "ID wiadomości")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TABOR_HISTLOG", x => x.ID_TABOR_HISTLOG);
                });

            migrationBuilder.CreateTable(
                name: "TABOR_KAT",
                columns: table => new
                {
                    ID_TABOR_KAT = table.Column<int>(type: "int", nullable: false),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do pojazdu - tab: TABOR"),
                    KAT_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kategorii - tab: KATEGORIE - TYP=TA")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TABOR_KAT", x => x.ID_TABOR_KAT);
                },
                comment: "Przypisanie taboru do kategorii");

            migrationBuilder.CreateTable(
                name: "TABOR_KIEROWCY",
                columns: table => new
                {
                    ID_TABOR_KIEROWCY = table.Column<int>(type: "int", nullable: false),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    NR_REJ = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KIEROWCA_ID = table.Column<int>(type: "int", nullable: true),
                    NAZWISKO_IMIE_KIER = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DATA_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    STAN_LICZNIKA_OD = table.Column<int>(type: "int", nullable: true),
                    STAN_LICZNIKA_DO = table.Column<int>(type: "int", nullable: true),
                    PALIWO_OD = table.Column<int>(type: "int", nullable: true),
                    PALIWO_DO = table.Column<int>(type: "int", nullable: true),
                    INFO_DOD = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    WYP_P = table.Column<string>(type: "text", nullable: true),
                    WYP_Z = table.Column<string>(type: "text", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    TABOR_NACZEPY_ID = table.Column<int>(type: "int", nullable: true),
                    NR_REJ_NACZEPY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    STAN_LICZNIKA_MTG_OD = table.Column<int>(type: "int", nullable: true),
                    STAN_LICZNIKA_MTG_DO = table.Column<int>(type: "int", nullable: true),
                    PALIWO_MTG_OD = table.Column<int>(type: "int", nullable: true),
                    PALIWO_MTG_DO = table.Column<int>(type: "int", nullable: true),
                    ADBLUE_OD = table.Column<int>(type: "int", nullable: true),
                    ADBLUE_DO = table.Column<int>(type: "int", nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    STATUS = table.Column<int>(type: "int", nullable: true),
                    ZEWNETRZNE = table.Column<int>(type: "int", nullable: true),
                    PRZEWOZNIK_ID = table.Column<int>(type: "int", nullable: true),
                    PRZEWOZNIK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    NR_DOK_KIEROWCY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    LP_KIEROWCY = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TABOR_KIEROWCY", x => x.ID_TABOR_KIEROWCY);
                });

            migrationBuilder.CreateTable(
                name: "TABOR_KIEROWCY_TECZKA",
                columns: table => new
                {
                    ID_TABOR_KIEROWCY_TECZKA = table.Column<int>(type: "int", nullable: false),
                    TABOR_KIEROWCY_ID = table.Column<int>(type: "int", nullable: true),
                    TYP = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    ILOSC = table.Column<int>(type: "int", nullable: true),
                    DATA_WAZNOSCI = table.Column<DateTime>(type: "datetime", nullable: true),
                    SAM_NACZ = table.Column<int>(type: "int", nullable: true),
                    ZRODLO = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TABOR_KIEROWCY_TECZKA", x => x.ID_TABOR_KIEROWCY_TECZKA);
                });

            migrationBuilder.CreateTable(
                name: "TABOR_KIEROWCY_UPR",
                columns: table => new
                {
                    ID_TABOR_KIEROWCY_UPR = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA_ID = table.Column<int>(type: "int", nullable: true),
                    DT_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DT_DO = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TABOR_KIEROWCY_UPR", x => x.ID_TABOR_KIEROWCY_UPR);
                });

            migrationBuilder.CreateTable(
                name: "TABOR_KIEROWCY_WYP",
                columns: table => new
                {
                    ID_TABOR_KIEROWCY_WYP = table.Column<int>(type: "int", nullable: false),
                    TABOR_KIEROWCY_ID = table.Column<int>(type: "int", nullable: true),
                    TYP = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    ILOSC = table.Column<int>(type: "int", nullable: true),
                    DATA_WAZNOSCI = table.Column<DateTime>(type: "datetime", nullable: true),
                    SAM_NACZ = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TABOR_KIEROWCY_WYP", x => x.ID_TABOR_KIEROWCY_WYP);
                });

            migrationBuilder.CreateTable(
                name: "TABOR_KM_MIES",
                columns: table => new
                {
                    ID_TABOR_KM_MIES = table.Column<int>(type: "int", nullable: false),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    ROK = table.Column<int>(type: "int", nullable: true),
                    MIESIAC = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TYP = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    LICZNIK_OD = table.Column<int>(type: "int", nullable: true),
                    LICZNIK_DO = table.Column<int>(type: "int", nullable: true),
                    KM = table.Column<double>(type: "float", nullable: true),
                    TONAZ = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TABOR_KM_MIES", x => x.ID_TABOR_KM_MIES);
                });

            migrationBuilder.CreateTable(
                name: "TABOR_KONTRAKT",
                columns: table => new
                {
                    ID_TABOR_KONTRAKT = table.Column<int>(type: "int", nullable: false),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    DT_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DT_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    TABOR_ZASTEPUJACY_ID = table.Column<int>(type: "int", nullable: true),
                    TABOR_ZASTEPOWANY_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TABOR_KONTRAKT", x => x.ID_TABOR_KONTRAKT);
                });

            migrationBuilder.CreateTable(
                name: "TABOR_LOK_HIST",
                columns: table => new
                {
                    ID_TABOR_LOK_HIST = table.Column<int>(type: "int", nullable: false),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DATA_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    LICZNIK = table.Column<int>(type: "int", nullable: true),
                    LICZNIK_MTH = table.Column<int>(type: "int", nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KONTO_FK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SPEDYTOR_ID = table.Column<int>(type: "int", nullable: true),
                    SPEDYTOR = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TABOR_LOK_HIST", x => x.ID_TABOR_LOK_HIST);
                });

            migrationBuilder.CreateTable(
                name: "TABOR_NADGABARYTY",
                columns: table => new
                {
                    ID_TABORU = table.Column<int>(type: "int", nullable: false),
                    N_DL_POKL_D = table.Column<double>(type: "float", nullable: true),
                    N_DL_BALK_G = table.Column<double>(type: "float", nullable: true),
                    N_DL_BALK_D = table.Column<double>(type: "float", nullable: true),
                    N_MAKS_ROZC = table.Column<double>(type: "float", nullable: true),
                    N_DL_CALK = table.Column<double>(type: "float", nullable: true),
                    N_ROZST_OSI = table.Column<double>(type: "float", nullable: true),
                    C_OS_NAPED = table.Column<int>(type: "int", nullable: true),
                    C_ROZST_OSI_1_2 = table.Column<double>(type: "float", nullable: true),
                    C_ROZST_OSI_2_3 = table.Column<double>(type: "float", nullable: true),
                    C_ROZST_OSI_3_4 = table.Column<double>(type: "float", nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true),
                    N_BEZ_LADUNKU_ROZST_OSI = table.Column<double>(type: "float", nullable: true),
                    C_OS_KIEROWANA = table.Column<int>(type: "int", nullable: true),
                    C_BEZ_LADUNKU_ROZST_OSI_1_2 = table.Column<double>(type: "float", nullable: true),
                    C_BEZ_LADUNKU_ROZST_OSI_2_3 = table.Column<double>(type: "float", nullable: true),
                    C_BEZ_LADUNKU_ROZST_OSI_3_4 = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TABOR_NADGABARYTY", x => x.ID_TABORU);
                });

            migrationBuilder.CreateTable(
                name: "TABOR_O",
                columns: table => new
                {
                    ID_TABORU_O = table.Column<int>(type: "int", nullable: false),
                    NR_REJ = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: false),
                    NR_REJ_NACZEPY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_INWENT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KLIENT_ID = table.Column<int>(type: "int", nullable: true),
                    KLIENT = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    ID_NACZEPY = table.Column<int>(type: "int", nullable: true),
                    IS_ADR = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    IS_WINDA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    AKTYWNY = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    MARKA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ROK_PRODUKCJI = table.Column<int>(type: "int", nullable: true),
                    TYP_POJAZDU_ID = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    TYP_POJAZDU = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MASA_WLASNA = table.Column<double>(type: "float", nullable: true),
                    LADOWNOSC = table.Column<double>(type: "float", nullable: true),
                    DLUGOSC = table.Column<double>(type: "float", nullable: true),
                    WYSOKOSC = table.Column<double>(type: "float", nullable: true),
                    MIEJSCA_PALETOWE = table.Column<int>(type: "int", nullable: true),
                    SZEROKOSC = table.Column<double>(type: "float", nullable: true),
                    WYP_DOD = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    CENNIK_DOMYSLNY = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    RODZ_PALIWA = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    LICZBA_KOMOR = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    ADR_ZESTAW_ID = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    ADR_ZESTAW = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ADR_ZESTAW_SYMBOL = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    MARKA_ID = table.Column<int>(type: "int", nullable: true),
                    MODEL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MODEL_ID = table.Column<int>(type: "int", nullable: true),
                    WERSJA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    WERSJA_ID = table.Column<int>(type: "int", nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TABOR_O", x => x.ID_TABORU_O);
                });

            migrationBuilder.CreateTable(
                name: "TABOR_O_ADR_SPRZET",
                columns: table => new
                {
                    ID_TABOR_O_ADR_SPRZET = table.Column<int>(type: "int", nullable: false),
                    TABOR_O_ID = table.Column<int>(type: "int", nullable: false),
                    NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: false),
                    OPIS = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    DATA_WAZNOSCI = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TABOR_O_ADR_SPRZET", x => x.ID_TABOR_O_ADR_SPRZET);
                });

            migrationBuilder.CreateTable(
                name: "TABOR_O_CENNIK_KGKM",
                columns: table => new
                {
                    ID_TABOR_O_CENNIK_KGKM = table.Column<int>(type: "int", nullable: false),
                    TABOR_O_ID = table.Column<int>(type: "int", nullable: true),
                    WAGA_OD = table.Column<double>(type: "float", nullable: true),
                    WAGA_DO = table.Column<double>(type: "float", nullable: true),
                    STAWKA = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TABOR_O_CENNIK_KGKM", x => x.ID_TABOR_O_CENNIK_KGKM);
                });

            migrationBuilder.CreateTable(
                name: "TABOR_O_CENNIK_TRASA",
                columns: table => new
                {
                    ID_TABOR_O_CENNIK_TRASA = table.Column<int>(type: "int", nullable: false),
                    TABOR_O_ID = table.Column<int>(type: "int", nullable: true),
                    TRASA_ID = table.Column<int>(type: "int", nullable: true),
                    TRASA = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    STAWKA = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TABOR_O_CENNIK_TRASA", x => x.ID_TABOR_O_CENNIK_TRASA);
                });

            migrationBuilder.CreateTable(
                name: "TABOR_O_CERTYFIKATY",
                columns: table => new
                {
                    ID_TABOR_O_CERTYFIKATY = table.Column<int>(type: "int", nullable: false),
                    TABOR_O_ID = table.Column<int>(type: "int", nullable: true),
                    CERTYFIKAT_ID = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    CERTYFIKAT = table.Column<string>(type: "varchar(120)", unicode: false, maxLength: 120, nullable: true),
                    DATA_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_DO = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TABOR_O_CERTYFIKATY", x => x.ID_TABOR_O_CERTYFIKATY);
                });

            migrationBuilder.CreateTable(
                name: "TABOR_O_KIEROWCY",
                columns: table => new
                {
                    ID_TABOR_O_KIEROWCY = table.Column<int>(type: "int", nullable: false),
                    TABOR_O_ID = table.Column<int>(type: "int", nullable: true),
                    IMIE_NAZWISKO = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    TELEFON = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    INFO_DOD = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TABOR_O_KIEROWCY", x => x.ID_TABOR_O_KIEROWCY);
                });

            migrationBuilder.CreateTable(
                name: "TABOR_O_TERMIN",
                columns: table => new
                {
                    ID_TABOR_O_TERMIN = table.Column<int>(type: "int", nullable: false),
                    TABOR_O_ID = table.Column<int>(type: "int", nullable: true),
                    CZYNNOSC_ID = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    CZYNNOSC = table.Column<string>(type: "varchar(120)", unicode: false, maxLength: 120, nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TABOR_O_TERMIN", x => x.ID_TABOR_O_TERMIN);
                });

            migrationBuilder.CreateTable(
                name: "TABOR_OPONY",
                columns: table => new
                {
                    ID_TABOR_OPONY = table.Column<int>(type: "int", nullable: false),
                    NR_SERYJNY = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Numer seryjny opony"),
                    NR_FABRYCZNY = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Numer fabryczny opony"),
                    RODZAJ = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Rodzaj opony"),
                    ROZMIAR = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Rozmiar opony"),
                    MARKA = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Marka opony"),
                    BIEZNIK = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Rodzaj bieżnika"),
                    PARAM_DOD = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Parametry dodatkowe - mapa bitowa"),
                    UWAGI_DOD = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Dowolne uwagi dodatkowe"),
                    NORMA_PRZEBIEGU = table.Column<int>(type: "int", nullable: true, comment: "Norma przebiegu dla opony"),
                    OST_TYP_OBSL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Ostatnie zdarzenie - typ"),
                    OST_TABOR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Ostatnie zdarzenie - nr rejstracyjny pojazdu"),
                    OST_TABOR_ID = table.Column<int>(type: "int", nullable: true, comment: "Ostatnie zdarzenie - relacja do pojazdu - tab: TABOR"),
                    OST_NR_OSI = table.Column<int>(type: "int", nullable: true, comment: "Ostatnie zdarzenie - numer osi pojazdu"),
                    OST_STRONA = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "Ostatnie zdarzenie - strona montażu"),
                    DATA_ZALOZENIA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data założenia opony"),
                    DATA_ZUZYCIA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data zużycia opony"),
                    OST_CISNIENIE = table.Column<double>(type: "float", nullable: true, comment: "Ostatnie zdarzenie - ciśnienie"),
                    OST_WYS_BIEZN = table.Column<double>(type: "float", nullable: true, comment: "Ostatnie zdarzenie - wysokość bieżnika"),
                    OST_DATA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Ostatnie zdarzenie - data"),
                    MAGAZYN = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Magazyn"),
                    W_MAG_TOWARY_ID = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Relacja do tabeli towarów w warsztacie - tab: W_MAG_TOWARY"),
                    W_MAG_PRZYJECIA_ID = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Relacja do nagłówka PZ w warsztacie - tab: W_MAG_PRZYJECIA"),
                    W_MAG_PRZYJECIA_POZ_ID = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Relacja do pozycji PZ w warsztacie - tab: W_MAG_PRZYJECIA_POZ"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja"),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true, comment: "Ilość załączników"),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    OST_TABOR_NR_B = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Ostatnie zdarzenie - nr boczny pojazdu"),
                    OST_LICZNIK = table.Column<double>(type: "float", nullable: true, comment: "Ostatnie zdarzenie - licznik pojazdu"),
                    PRZEBIEG_PW = table.Column<int>(type: "int", nullable: true, comment: "Przebieg opony na podstawie PW"),
                    KONTROLA_CO = table.Column<int>(type: "int", nullable: true, comment: "Przebieg, po jakim powinna nastąpić kontrola"),
                    KONTROLA_NAST = table.Column<int>(type: "int", nullable: true, comment: "Przebieg następnej kontroli"),
                    PRZEBIEG_BO = table.Column<int>(type: "int", nullable: true, comment: "Przebieg opony BO"),
                    PRZYP_DO_TABOR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Przypisanie do pojazdu"),
                    PRZYP_DO_TABOR_ID = table.Column<int>(type: "int", nullable: true, comment: "Przypisanie do pojazdu - tab: TABOR"),
                    TABOR_OPONY_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do opony pierwotnej - tab: TABOR_OPONY"),
                    AKTYWNA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('1')", comment: "Flaga, czy opona aktywna"),
                    OST_REKLAMACJA = table.Column<int>(type: "int", nullable: true, comment: "Ostatnie zdarzenie - reklamacja"),
                    POWOD_ZUZYCIA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Powód zużycia"),
                    DO_BIEZNIKOWANIA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, do bieżnikowania"),
                    OST_WYS_BIEZN2 = table.Column<double>(type: "float", nullable: true, comment: "Ostatnie zdarzenie - wysokość bieżnika 2"),
                    OST_WYS_BIEZN3 = table.Column<double>(type: "float", nullable: true, comment: "Ostatnie zdarzenie - wysokość bieżnika 3")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TABOR_OPONY", x => x.ID_TABOR_OPONY);
                },
                comment: "Opony");

            migrationBuilder.CreateTable(
                name: "TABOR_OPONY_KAT",
                columns: table => new
                {
                    ID_TABOR_OPONY_KAT = table.Column<int>(type: "int", nullable: false),
                    TABOR_OPONY_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do opony - tab: TABOR_OPONY"),
                    KAT_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kategorii - tab: KATEGORIE - TYP=KO")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TABOR_OPONY_KAT", x => x.ID_TABOR_OPONY_KAT);
                },
                comment: "Przypisanie opony do kategorii");

            migrationBuilder.CreateTable(
                name: "TABOR_OPONY_KM_PW",
                columns: table => new
                {
                    ID_TABOR_OPONY_KM_PW = table.Column<int>(type: "int", nullable: false),
                    TABOR_OPONY_ID = table.Column<int>(type: "int", nullable: false, comment: "Relacja do opony - tab: TABOR_OPONY"),
                    WYJAZDY_ID = table.Column<int>(type: "int", nullable: false, comment: "Relacja do wyjazdu - tab: WYJAZDY"),
                    ODLEGLOSC = table.Column<int>(type: "int", nullable: false, comment: "Przejechane km")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TABOR_OPONY_KM_PW", x => x.ID_TABOR_OPONY_KM_PW);
                },
                comment: "Przebiegi dla opon wg PW");

            migrationBuilder.CreateTable(
                name: "TABOR_OPONY_OBSL",
                columns: table => new
                {
                    ID_TABOR_OPONY_OBSL = table.Column<int>(type: "int", nullable: false),
                    TABOR_OPONY_ID = table.Column<int>(type: "int", nullable: false, comment: "Relacja do opony - tab: TABOR_OPONY"),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do pojazdu - tab: TABOR"),
                    TABOR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Nr rejestracyjny pojazdu"),
                    TYP_OBSL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Typ zdarzenia obsługi"),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data zdarzenia"),
                    GODZ = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina zdarzenia"),
                    LICZNIK = table.Column<double>(type: "float", nullable: true, comment: "Licznik pojazdu w chwili kontroli"),
                    CISNIENIE = table.Column<double>(type: "float", nullable: true, comment: "Ciśnienie w oponie w chwili kontroli"),
                    WYS_BIEZN = table.Column<double>(type: "float", nullable: true, comment: "Wysokość bieżnika w chwili kontroli"),
                    UWAGI = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Dowolne uwagi do pozycji obsługi"),
                    NR_OSI = table.Column<int>(type: "int", nullable: true, comment: "Numer osi pojazdu"),
                    STRONA = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "Strona montażu opony"),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kontrahenta - tab: KONTRAHENCI"),
                    KONTRAH = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Symbol kontrahenta"),
                    W_ZLECENIA_ID = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Relacja do nagłówka zlecenia warsztatowego - tab: W_ZLECENIA"),
                    W_ZLECENIA_POZ_ID = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Relacja do pozycji zlecenia warsztatowego - tab: W_ZLECENIA_POZ"),
                    TABOR_NR_B = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer boczny pojazdu"),
                    REKLAMACJA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy reklamacja"),
                    WYS_BIEZN2 = table.Column<double>(type: "float", nullable: true, comment: "Wysokość bieżnika w chwili kontroli 2"),
                    WYS_BIEZN3 = table.Column<double>(type: "float", nullable: true, comment: "Wysokość bieżnika w chwili kontroli 3"),
                    OBWOD_OPONY = table.Column<double>(type: "float", nullable: true, comment: "Obwód opony przy legalizacji tacho")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TABOR_OPONY_OBSL", x => x.ID_TABOR_OPONY_OBSL);
                },
                comment: "Pozycje obsługi opon");

            migrationBuilder.CreateTable(
                name: "TABOR_OSIE",
                columns: table => new
                {
                    ID_TABOR_OSIE = table.Column<int>(type: "int", nullable: false),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    NR_OSI = table.Column<int>(type: "int", nullable: true),
                    TYP = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    RODZAJ = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PIASTA_NR = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PIASTA_TYP = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    LOZYSKO_NR = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    LOZYSKO_ROZM = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    USZCZELNIACZ_NR = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    USZCZELNIACZ_ROZM = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DATA_GWARANCJI = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TABOR_OSIE", x => x.ID_TABOR_OSIE);
                });

            migrationBuilder.CreateTable(
                name: "TABOR_OST_LADUNKI",
                columns: table => new
                {
                    ID_TABOR_OST_LADUNKI = table.Column<int>(type: "int", nullable: false),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    KOMORA = table.Column<int>(type: "int", nullable: true),
                    LADUNEK_ID = table.Column<int>(type: "int", nullable: true),
                    LADUNEK = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true),
                    LADUNEK_GRUPA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZLECENIE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TABOR_OST_LADUNKI", x => x.ID_TABOR_OST_LADUNKI);
                });

            migrationBuilder.CreateTable(
                name: "TABOR_PARAM_TECHN",
                columns: table => new
                {
                    ID_TABORU = table.Column<int>(type: "int", nullable: false),
                    SB_I_RODZAJ = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SB_I_MARKA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SB_I_ILE_BIEGOW = table.Column<int>(type: "int", nullable: true),
                    SB_I_MA_POLBIEGI = table.Column<int>(type: "int", nullable: true),
                    SB_II_RODZAJ = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SB_II_MARKA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SB_II_ILE_BIEGOW = table.Column<int>(type: "int", nullable: true),
                    SB_II_MA_POLBIEGI = table.Column<int>(type: "int", nullable: true),
                    ZAW_RODZAJ = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZAW_MECH = table.Column<int>(type: "int", nullable: true),
                    ZAW_PNEUMAT = table.Column<int>(type: "int", nullable: true),
                    ZAW_RODZ_POD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SIL_RODZAJ = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SIL_MARKA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SIL_WTRYSKI = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KAB_ZAWIESZENIE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KAB_RODZ_POD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KAB_RODZ_OGRZ = table.Column<int>(type: "int", nullable: true),
                    KAB_MARKA_OGRZ_POST = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SIODLO_REGUL = table.Column<int>(type: "int", nullable: true),
                    SIODLO_WYS = table.Column<double>(type: "float", nullable: true),
                    NAPIECIE_12 = table.Column<int>(type: "int", nullable: true),
                    NAPIECIE_24 = table.Column<int>(type: "int", nullable: true),
                    NAPED_PRZOD = table.Column<int>(type: "int", nullable: true),
                    NAPED_TYL = table.Column<int>(type: "int", nullable: true),
                    SYST_BEZP = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SIODLO_NACISK = table.Column<double>(type: "float", nullable: true),
                    PRZEL_TYL_MOST = table.Column<int>(type: "int", nullable: true),
                    PRZEL_TYL_MOST_INFO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TABOR_PARAM_TECHN", x => x.ID_TABORU);
                });

            migrationBuilder.CreateTable(
                name: "TABOR_PROFIL",
                columns: table => new
                {
                    ID_TABOR_PROFIL = table.Column<int>(type: "int", nullable: false),
                    KOD = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPIS = table.Column<string>(type: "text", nullable: true),
                    SR_PREDKOSC_K = table.Column<double>(type: "float", nullable: true),
                    SR_PREDKOSC_Z = table.Column<double>(type: "float", nullable: true),
                    MAX_ILOSC = table.Column<double>(type: "float", nullable: true),
                    MAX_OBJ = table.Column<double>(type: "float", nullable: true),
                    MAX_WAGA = table.Column<double>(type: "float", nullable: true),
                    CYSTERNA = table.Column<int>(type: "int", nullable: true),
                    CHLODNIA = table.Column<int>(type: "int", nullable: true),
                    ILOSC_KOMOR = table.Column<int>(type: "int", nullable: true),
                    OPTIMIZATION = table.Column<int>(type: "int", nullable: true),
                    USEFERRIES = table.Column<int>(type: "int", nullable: true),
                    USEMOTOWAYS = table.Column<int>(type: "int", nullable: true),
                    CALCULATEMAUT = table.Column<int>(type: "int", nullable: true),
                    SPEED1 = table.Column<int>(type: "int", nullable: true),
                    SPEED2 = table.Column<int>(type: "int", nullable: true),
                    SPEED3 = table.Column<int>(type: "int", nullable: true),
                    SPEED4 = table.Column<int>(type: "int", nullable: true),
                    SPEED5 = table.Column<int>(type: "int", nullable: true),
                    SPEED6 = table.Column<int>(type: "int", nullable: true),
                    SPEED7 = table.Column<int>(type: "int", nullable: true),
                    SPEED8 = table.Column<int>(type: "int", nullable: true),
                    SPEED9 = table.Column<int>(type: "int", nullable: true),
                    SPEED10 = table.Column<int>(type: "int", nullable: true),
                    SPEED11 = table.Column<int>(type: "int", nullable: true),
                    SPEED12 = table.Column<int>(type: "int", nullable: true),
                    ROUTECOST = table.Column<double>(type: "float", nullable: true),
                    TIMECOST = table.Column<double>(type: "float", nullable: true),
                    FIXCOST = table.Column<double>(type: "float", nullable: true),
                    LENGTH_ = table.Column<double>(type: "float", nullable: true),
                    WIDTH_ = table.Column<double>(type: "float", nullable: true),
                    HEIGHT_ = table.Column<double>(type: "float", nullable: true),
                    WEIGHT_ = table.Column<double>(type: "float", nullable: true),
                    AXLELOAD = table.Column<double>(type: "float", nullable: true),
                    AXLECOUNT = table.Column<int>(type: "int", nullable: true),
                    EMISSIONCLASS = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    TRAILERLENGTH = table.Column<double>(type: "float", nullable: true),
                    TRAILERWEIGHT = table.Column<double>(type: "float", nullable: true),
                    DOMYSLNY = table.Column<int>(type: "int", nullable: true),
                    VEHICLENAME = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OSOBOWY = table.Column<int>(type: "int", nullable: true),
                    CATEGORY = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    CALCULATEMAUTINEURO = table.Column<int>(type: "int", nullable: true),
                    EAUTOSTRADY = table.Column<int>(type: "int", nullable: true),
                    EAUTOSTRADYP = table.Column<int>(type: "int", nullable: true),
                    EAUTOSTRADYS = table.Column<double>(type: "float", nullable: true),
                    ESZYBKIE = table.Column<int>(type: "int", nullable: true),
                    ESZYBKIEP = table.Column<int>(type: "int", nullable: true),
                    ESZYBKIES = table.Column<double>(type: "float", nullable: true),
                    EKRAJOWE = table.Column<int>(type: "int", nullable: true),
                    EKRAJOWEP = table.Column<int>(type: "int", nullable: true),
                    EKRAJOWES = table.Column<double>(type: "float", nullable: true),
                    EREGIONALNE = table.Column<int>(type: "int", nullable: true),
                    EREGIONALNEP = table.Column<int>(type: "int", nullable: true),
                    EREGIONALNES = table.Column<double>(type: "float", nullable: true),
                    ELOKALNE = table.Column<int>(type: "int", nullable: true),
                    ELOKALNEP = table.Column<int>(type: "int", nullable: true),
                    ELOKALNES = table.Column<double>(type: "float", nullable: true),
                    EINNE = table.Column<int>(type: "int", nullable: true),
                    EINNEP = table.Column<int>(type: "int", nullable: true),
                    EINNES = table.Column<double>(type: "float", nullable: true),
                    EGRUNTOWE = table.Column<int>(type: "int", nullable: true),
                    EGRUNTOWEP = table.Column<int>(type: "int", nullable: true),
                    EGRUNTOWES = table.Column<double>(type: "float", nullable: true),
                    EPRZELOTOWE = table.Column<int>(type: "int", nullable: true),
                    EPRZELOTOWEP = table.Column<int>(type: "int", nullable: true),
                    EPRZELOTOWES = table.Column<double>(type: "float", nullable: true),
                    EGLOWNE = table.Column<int>(type: "int", nullable: true),
                    EGLOWNEP = table.Column<int>(type: "int", nullable: true),
                    EGLOWNES = table.Column<double>(type: "float", nullable: true),
                    EINNEULICE = table.Column<int>(type: "int", nullable: true),
                    EINNEULICEP = table.Column<int>(type: "int", nullable: true),
                    EINNEULICES = table.Column<double>(type: "float", nullable: true),
                    EPROMY = table.Column<int>(type: "int", nullable: true),
                    EPROMYP = table.Column<int>(type: "int", nullable: true),
                    EPROMYS = table.Column<double>(type: "float", nullable: true),
                    ECZASROZPOCZECIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    ECZASPRACY = table.Column<DateTime>(type: "datetime", nullable: true),
                    ECZASPRACYBEZPRZERWY = table.Column<DateTime>(type: "datetime", nullable: true),
                    ECZASPRZERWY = table.Column<DateTime>(type: "datetime", nullable: true),
                    ECZASTANKOWANIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    ECZASPRZEKROCZENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    ECZASWJAZDU = table.Column<DateTime>(type: "datetime", nullable: true),
                    EKOSZTSTALY = table.Column<double>(type: "float", nullable: true),
                    EKOSZTZAKM = table.Column<double>(type: "float", nullable: true),
                    EKOSZTZAGODZ = table.Column<double>(type: "float", nullable: true),
                    EKOSZTZAKMK = table.Column<double>(type: "float", nullable: true),
                    EKOSZTZAGODZK = table.Column<double>(type: "float", nullable: true),
                    EINFORMACJEOPALIWIE = table.Column<int>(type: "int", nullable: true),
                    EPOMIJAJKMPROMY = table.Column<int>(type: "int", nullable: true),
                    EPOMIJAJDROGIEMYTO = table.Column<int>(type: "int", nullable: true),
                    EPOBIERZSZCZEGOLYTRASY = table.Column<int>(type: "int", nullable: true),
                    EPOJEMNOSCZBIORNIKA = table.Column<double>(type: "float", nullable: true),
                    EKOSZTPALIWA = table.Column<double>(type: "float", nullable: true),
                    ERODZAJTRASY = table.Column<int>(type: "int", nullable: true),
                    ERODZAJPOJAZDU = table.Column<int>(type: "int", nullable: true),
                    EPOJEMNOSCM = table.Column<double>(type: "float", nullable: true),
                    EPOJEMNOSCT = table.Column<double>(type: "float", nullable: true),
                    ZALADUNEKCZAS = table.Column<int>(type: "int", nullable: true),
                    ROZLADUNEKCZAS = table.Column<int>(type: "int", nullable: true),
                    ADR = table.Column<int>(type: "int", nullable: true),
                    ALLOW_SEGMENT_VIOLATIONS = table.Column<int>(type: "int", nullable: true),
                    COST_OF_SEGMENT_VIOLATIONS = table.Column<int>(type: "int", nullable: true),
                    WYP_TABORU_ID = table.Column<int>(type: "int", nullable: true),
                    WYP_TABORU_OPIS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    HereProfileName = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    HereSpeed1 = table.Column<int>(type: "int", nullable: true, comment: "Średnia prędkość dla Autostrady"),
                    HereSpeed2 = table.Column<int>(type: "int", nullable: true, comment: "Średnia prędkość dla Ekspresowej"),
                    HereSpeed3 = table.Column<int>(type: "int", nullable: true, comment: "Średnia prędkość dla Krajowej"),
                    HereSpeed4 = table.Column<int>(type: "int", nullable: true, comment: "Średnia prędkość dla Wojewódzkiej"),
                    HereSpeed5 = table.Column<int>(type: "int", nullable: true, comment: "Średnia prędkość dla Lokalnej"),
                    HereAverageKmCost = table.Column<double>(type: "float", nullable: true, comment: "Średni koszt za km"),
                    HereAverageHourCost = table.Column<double>(type: "float", nullable: true, comment: "Średni koszt godziny"),
                    HereRouteCost = table.Column<double>(type: "float", nullable: true, comment: "Koszt stały na trasę"),
                    HereRouteCalculateType = table.Column<int>(type: "int", nullable: true, comment: "Wyznaczenie trasy: 1=szybka, 2=krótka, 3=optymalna"),
                    HereTollCalculate = table.Column<int>(type: "int", nullable: true, comment: "Liczy myto: 1=EUR"),
                    HereViolation = table.Column<int>(type: "int", nullable: true, comment: "Naruszanie ograniczeń: 1=zgoda, 0=brak zgody, 2=unikaj"),
                    HereFerries = table.Column<int>(type: "int", nullable: true, comment: "Unikaj promów"),
                    HereHighways = table.Column<int>(type: "int", nullable: true, comment: "Unikaj autostrad"),
                    HerePayments = table.Column<int>(type: "int", nullable: true, comment: "Unikaj płatności"),
                    HereTunels = table.Column<int>(type: "int", nullable: true, comment: "Unikaj tuneli"),
                    HereCostCurrency = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    HereHazardous = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true, comment: "towary niebezpieczne"),
                    TrailerAxleCount = table.Column<int>(type: "int", nullable: true),
                    HereTollCalculateBaseCurr = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Licz myto: waluta bazowa"),
                    HereTollCalculateOtherCurr = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Licz myto: waluty dodatkowe"),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    TypeOfPower = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TABOR_PROFIL", x => x.ID_TABOR_PROFIL);
                });

            migrationBuilder.CreateTable(
                name: "TABOR_REZERWACJE",
                columns: table => new
                {
                    ID_TABOR_REZERWACJE = table.Column<int>(type: "int", nullable: false),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do pojazdu - tab: TABOR"),
                    TABOR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer rejestracyjny pojazdu"),
                    KLIENT_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kontrahenta - tab: KONTRAHENCI"),
                    KLIENT = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Symbol kontrahenta"),
                    TYP = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Typ rezerwacji"),
                    DATA_OD = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Rezerwacja od dnia"),
                    GODZ_OD = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Rezerwacja od godziny"),
                    DATA_DO = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Rezerwacja do dnia"),
                    GODZ_DO = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Rezerwacja do godziny"),
                    UWAGI = table.Column<string>(type: "text", nullable: true, comment: "Dowolne uwagi do rezerwacji"),
                    DATA_REJ = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data rejestracji rezerwacji"),
                    WAZNOSC = table.Column<int>(type: "int", nullable: true, comment: "Skala ważności"),
                    STATUS = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Status rezerwacji (N-Nowe P-Zaplanowane R-Realizowane Z-Zakończone)"),
                    W_ZLECENIE_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do zlecenia warsztatowego - tab: W_ZLECENIA"),
                    W_ZLECENIE = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Numer zlecenia warsztatowego"),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true, comment: "Ilość załączników"),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    TABOR_NR_B = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer boczny pojazdu"),
                    KLIENT_MIASTO = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Miasto kontrahenta"),
                    KLIENT_ODDZIAL_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do oddziału kontrahenta - tab: KONTRAHENCI_ODDZIALY"),
                    KLIENT_ODDZIAL = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true, comment: "Oddział kontrahenta"),
                    DATA_OD_RZ = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Rezerwacja od dnia"),
                    GODZ_OD_RZ = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Rezerwacja od godziny"),
                    DATA_DO_RZ = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Rezerwacja do dnia"),
                    GODZ_DO_RZ = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Rezerwacja do godziny"),
                    POI = table.Column<int>(type: "int", nullable: true),
                    POI_ID = table.Column<int>(type: "int", nullable: true),
                    POI_NAZWA = table.Column<string>(type: "varchar(120)", unicode: false, maxLength: 120, nullable: true, comment: "Nazwa POI-a"),
                    POI_ADRES = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true, comment: "Adres POI-a"),
                    POI_MIASTO = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true, comment: "Miejscowość POI-a"),
                    POI_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Kod pocztowy POI-a"),
                    POI_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Kraj POI-a"),
                    POI_LON = table.Column<double>(type: "float", nullable: true, comment: "GPS - długość"),
                    POI_LAT = table.Column<double>(type: "float", nullable: true, comment: "GPS - szerokość"),
                    NACZEPA_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do naczepy - tab: TABOR"),
                    KIEROWCA_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kierowcy 1 - tab: KIEROWCY"),
                    KIEROWCA2_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kierowcy 2 - tab: KIEROWCY"),
                    RODZAJ = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Rodzaj rezerwacji"),
                    W_ZLECENIA_OFERTY_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do oferty warsztatowej - tab: W_ZLECENIA_OFERTY"),
                    Z_LADUNKIEM = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TABOR_REZERWACJE", x => x.ID_TABOR_REZERWACJE);
                },
                comment: "Rezerwacje i naprawy pojazdów");

            migrationBuilder.CreateTable(
                name: "TABOR_REZERWACJE_POI",
                columns: table => new
                {
                    ID_TABOR_REZERWACJE_POI = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    TABOR_REZERWACJE_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCA_ZA_ROZLADUNKU_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TABOR_REZERWACJE_POI", x => x.ID_TABOR_REZERWACJE_POI);
                });

            migrationBuilder.CreateTable(
                name: "TABOR_TECZKA_KIEROWCY",
                columns: table => new
                {
                    ID_TABOR_TECZKA_KIEROWCY = table.Column<int>(type: "int", nullable: false),
                    TABOR_ID = table.Column<int>(type: "int", nullable: false),
                    NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    ILOSC = table.Column<int>(type: "int", nullable: true),
                    DATA_WAZNOSCI = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_WYSTAWIENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    ARCH = table.Column<int>(type: "int", nullable: true),
                    DATA_ARCH = table.Column<DateTime>(type: "datetime", nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TABOR_TECZKA_KIEROWCY", x => x.ID_TABOR_TECZKA_KIEROWCY);
                });

            migrationBuilder.CreateTable(
                name: "TABOR_TECZKA_SZABLON",
                columns: table => new
                {
                    ID_TABOR_TECZKA_SZABLON = table.Column<int>(type: "int", nullable: false),
                    NAZWA_SZABLONU = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TABOR_TECZKA_SZABLON", x => x.ID_TABOR_TECZKA_SZABLON);
                });

            migrationBuilder.CreateTable(
                name: "TABOR_TECZKA_SZABLON_POZ",
                columns: table => new
                {
                    ID_TABOR_TECZKA_SZABLON_POZ = table.Column<int>(type: "int", nullable: false),
                    TABOR_TECZKA_SZABLON_ID = table.Column<int>(type: "int", nullable: true),
                    NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    ILOSC = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TABOR_TECZKA_SZABLON_POZ", x => x.ID_TABOR_TECZKA_SZABLON_POZ);
                });

            migrationBuilder.CreateTable(
                name: "TABOR_TERMIN",
                columns: table => new
                {
                    ID_TABOR_TERMIN = table.Column<int>(type: "int", nullable: false),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    CZYNNOSC_ID = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    CZYNNOSC = table.Column<string>(type: "varchar(120)", unicode: false, maxLength: 120, nullable: true),
                    WSKAZNIK = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    LICZNIK = table.Column<int>(type: "int", nullable: true),
                    INTERWAL = table.Column<int>(type: "int", nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    WERYFIKACJA = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TABOR_TERMIN", x => x.ID_TABOR_TERMIN);
                });

            migrationBuilder.CreateTable(
                name: "TABOR_TERMIN_HIST",
                columns: table => new
                {
                    ID_TABOR_TERMIN_HIST = table.Column<int>(type: "int", nullable: false),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    CZYNNOSC_ID = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    CZYNNOSC = table.Column<string>(type: "varchar(120)", unicode: false, maxLength: 120, nullable: true),
                    WSKAZNIK = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    DATA_PLAN = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_WYK = table.Column<DateTime>(type: "datetime", nullable: true),
                    LICZNIK_PLAN = table.Column<int>(type: "int", nullable: true),
                    LICZNIK_WYK = table.Column<int>(type: "int", nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TABOR_TERMIN_HIST", x => x.ID_TABOR_TERMIN_HIST);
                });

            migrationBuilder.CreateTable(
                name: "TABOR_TERMIN_SZABLON",
                columns: table => new
                {
                    ID_TABOR_TERMIN_SZABLON = table.Column<int>(type: "int", nullable: false),
                    NAZWA_SZABLONU = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TABOR_TERMIN_SZABLON", x => x.ID_TABOR_TERMIN_SZABLON);
                });

            migrationBuilder.CreateTable(
                name: "TABOR_TERMIN_SZABLON_POZ",
                columns: table => new
                {
                    ID_TABOR_TERMIN_SZABLON_POZ = table.Column<int>(type: "int", nullable: false),
                    TABOR_TERMIN_SZABLON_ID = table.Column<int>(type: "int", nullable: true),
                    CZYNNOSC_ID = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    CZYNNOSC = table.Column<string>(type: "varchar(120)", unicode: false, maxLength: 120, nullable: true),
                    WSKAZNIK = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    INTERWAL = table.Column<int>(type: "int", nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    WERYFIKACJA = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TABOR_TERMIN_SZABLON_POZ", x => x.ID_TABOR_TERMIN_SZABLON_POZ);
                });

            migrationBuilder.CreateTable(
                name: "TABOR_UBEZP",
                columns: table => new
                {
                    ID_TABOR_UBEZP = table.Column<int>(type: "int", nullable: false),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    RODZAJ_SKL = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    RATA = table.Column<int>(type: "int", nullable: true),
                    SKLADKA = table.Column<double>(type: "float", nullable: true),
                    DATA_PLATNOSCI = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_ZAPLATY = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZAPLACONA = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TABOR_UBEZP", x => x.ID_TABOR_UBEZP);
                });

            migrationBuilder.CreateTable(
                name: "TABOR_WYPOS_SZABLON",
                columns: table => new
                {
                    ID_TABOR_WYPOS_SZABLON = table.Column<int>(type: "int", nullable: false),
                    NAZWA_SZABLONU = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TABOR_WYPOS_SZABLON", x => x.ID_TABOR_WYPOS_SZABLON);
                });

            migrationBuilder.CreateTable(
                name: "TABOR_WYPOS_SZABLON_POZ",
                columns: table => new
                {
                    ID_TABOR_WYPOS_SZABLON_POZ = table.Column<int>(type: "int", nullable: false),
                    TABOR_WYPOS_SZABLON_ID = table.Column<int>(type: "int", nullable: true),
                    NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    ILOSC = table.Column<int>(type: "int", nullable: true),
                    DO_PLANOWANIA = table.Column<int>(type: "int", nullable: true),
                    DO_ROZLICZENIA = table.Column<int>(type: "int", nullable: true),
                    TYP = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "WYM.WYP, TYP.ZAB, SP.LAD"),
                    WYP_TABORU_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TABOR_WYPOS_SZABLON_POZ", x => x.ID_TABOR_WYPOS_SZABLON_POZ);
                });

            migrationBuilder.CreateTable(
                name: "TABOR_WYPOSAZENIE",
                columns: table => new
                {
                    ID_TABOR_WYPOSAZENIE = table.Column<int>(type: "int", nullable: false),
                    TABOR_ID = table.Column<int>(type: "int", nullable: false),
                    NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    ILOSC = table.Column<int>(type: "int", nullable: true),
                    DATA_WAZNOSCI = table.Column<DateTime>(type: "datetime", nullable: true),
                    DO_PLANOWANIA = table.Column<int>(type: "int", nullable: true),
                    DO_ROZLICZENIA = table.Column<int>(type: "int", nullable: true),
                    W_MAG_WYDANIA_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    ARCH = table.Column<int>(type: "int", nullable: true),
                    DATA_ARCH = table.Column<DateTime>(type: "datetime", nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    TYP = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "WYM.WYP, TYP.ZAB, SP.LAD"),
                    WYP_TABORU_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TABOR_WYPOSAZENIE", x => x.ID_TABOR_WYPOSAZENIE);
                });

            migrationBuilder.CreateTable(
                name: "TABOR_ZAWORY",
                columns: table => new
                {
                    ID_TABOR_ZAWORY = table.Column<int>(type: "int", nullable: false),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    PRODUCENT = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    STEROWANIE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    RODZAJ = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SREDNICA = table.Column<double>(type: "float", nullable: true),
                    NR_ID = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TABOR_ZAWORY", x => x.ID_TABOR_ZAWORY);
                });

            migrationBuilder.CreateTable(
                name: "TaborWyposazenie",
                schema: "opti",
                columns: table => new
                {
                    SolverTaskId = table.Column<int>(type: "int", nullable: true),
                    SessionId = table.Column<int>(type: "int", nullable: true),
                    ID_TABORU = table.Column<int>(type: "int", nullable: true),
                    TYP = table.Column<string>(type: "nvarchar(255)", maxLength: 255, nullable: true),
                    NAZWA = table.Column<string>(type: "nvarchar(255)", maxLength: 255, nullable: true),
                    ILOSC = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "TACHO",
                columns: table => new
                {
                    ID_TACHO = table.Column<int>(type: "int", nullable: false),
                    ID_FIRMA = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: false),
                    ID_KIEROWCY = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ID_TABORU = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    KIEROWCA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    SAMOCHOD = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    ZATWIERDZONY = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    SRODEK_X = table.Column<int>(type: "int", nullable: true),
                    SRODEK_Y = table.Column<int>(type: "int", nullable: true),
                    ODCHYLENIE = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KM_KONCOWE = table.Column<int>(type: "int", nullable: true),
                    KM_POCZATKOWE = table.Column<int>(type: "int", nullable: true),
                    CZAS_ROZPOCZECIA = table.Column<double>(type: "float", nullable: true),
                    ADNOTACJE = table.Column<string>(type: "text", nullable: true),
                    CZAS_JAZDY = table.Column<double>(type: "float", nullable: true),
                    CZAS_PRACY = table.Column<double>(type: "float", nullable: true),
                    CZAS_DYZURU = table.Column<double>(type: "float", nullable: true),
                    CZAS_POSTOJU = table.Column<double>(type: "float", nullable: true),
                    ALL_KM = table.Column<double>(type: "float", nullable: true),
                    ERROR_1 = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    ERROR_2 = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    ERROR_3 = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    ERROR_4 = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    ZESPOLOWA = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    ZASWIADCZENIE = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    CYFROWE = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    CZAS_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    CZAS_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    KOD_NIEOBECNOSCI = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    SKAN = table.Column<byte[]>(type: "image", nullable: true),
                    SOURCE_SKAN = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    DROGA_PIK_1 = table.Column<int>(type: "int", nullable: true),
                    DROGA_PIK_2 = table.Column<int>(type: "int", nullable: true),
                    IS_RECZNA = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    TO_RCP_ID_USER = table.Column<int>(type: "int", nullable: true),
                    TO_RCP_DATETIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    KOREKTA = table.Column<short>(type: "smallint", nullable: true),
                    KOREKTA_DT = table.Column<DateTime>(type: "datetime", nullable: true),
                    KOREKTA_USER_ID = table.Column<int>(type: "int", nullable: true),
                    DATA_OTRZYMANIA = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TACHO", x => x.ID_TACHO);
                });

            migrationBuilder.CreateTable(
                name: "TACHO_PUNKTY",
                columns: table => new
                {
                    ID_TACHO_PUNKTY = table.Column<int>(type: "int", nullable: false),
                    ID_TACHO = table.Column<int>(type: "int", nullable: false),
                    SLAD_DROGI = table.Column<int>(type: "int", nullable: true),
                    POS_X = table.Column<int>(type: "int", nullable: true),
                    POS_Y = table.Column<int>(type: "int", nullable: true),
                    POZIOM = table.Column<int>(type: "int", nullable: true),
                    ID_ZDARZENIA = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TACHO_PUNKTY", x => x.ID_TACHO_PUNKTY);
                });

            migrationBuilder.CreateTable(
                name: "TACHO_TRASY",
                columns: table => new
                {
                    ID_TACHO_TRASY = table.Column<int>(type: "int", nullable: false),
                    ID_TACHO = table.Column<int>(type: "int", nullable: false),
                    MIEJSCE_OD = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    MIEJSCE_DO = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TACHO_TRASY", x => x.ID_TACHO_TRASY);
                });

            migrationBuilder.CreateTable(
                name: "TACHO_ZDARZENIA",
                columns: table => new
                {
                    ID_TACHO_ZDARZENIA = table.Column<int>(type: "int", nullable: false),
                    ID_TACHO = table.Column<int>(type: "int", nullable: false),
                    LP = table.Column<int>(type: "int", nullable: true),
                    TRYB = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    CZAS_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    CZAS_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    CZAS_TRWANIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    KM = table.Column<double>(type: "float", nullable: true),
                    X_START = table.Column<int>(type: "int", nullable: true),
                    X_STOP = table.Column<int>(type: "int", nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ID_KIEROWCY = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ID_TABORU = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    DATACZAS_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATACZAS_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZESPOLOWA = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    CYFROWE = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    TRYB_KOREKTA = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    IS_MANUAL = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    DELTA_OD = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DELTA_DO = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TACHO_ZDARZENIA", x => x.ID_TACHO_ZDARZENIA);
                });

            migrationBuilder.CreateTable(
                name: "Task",
                schema: "app",
                columns: table => new
                {
                    TaskId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ToolId = table.Column<int>(type: "int", nullable: false),
                    Enabled = table.Column<int>(type: "int", nullable: true),
                    CreateUserId = table.Column<int>(type: "int", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    EditUserId = table.Column<int>(type: "int", nullable: true),
                    EditUser = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    EditDate = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Task", x => x.TaskId);
                });

            migrationBuilder.CreateTable(
                name: "Task",
                schema: "task",
                columns: table => new
                {
                    TaskId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: false),
                    Description = table.Column<string>(type: "nvarchar(250)", maxLength: 250, nullable: true),
                    TaskServiceTypeId = table.Column<int>(type: "int", nullable: false),
                    TaskTypeId = table.Column<int>(type: "int", nullable: false),
                    Command = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Enabled = table.Column<int>(type: "int", nullable: true),
                    CreateUserId = table.Column<int>(type: "int", nullable: false),
                    CreateUser = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: false),
                    CreateDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    EditUserId = table.Column<int>(type: "int", nullable: true),
                    EditUser = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    EditDate = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Task", x => x.TaskId);
                });

            migrationBuilder.CreateTable(
                name: "TaskRecurence",
                schema: "app",
                columns: table => new
                {
                    TaskRecurenceId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: false),
                    Description = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true),
                    Enabled = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TaskRecurence", x => x.TaskRecurenceId);
                });

            migrationBuilder.CreateTable(
                name: "TaskRecurence",
                schema: "task",
                columns: table => new
                {
                    TaskRecurenceId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: false),
                    Description = table.Column<string>(type: "nvarchar(250)", maxLength: 250, nullable: true),
                    Enabled = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TaskRecurence", x => x.TaskRecurenceId);
                });

            migrationBuilder.CreateTable(
                name: "TaskScheduler",
                schema: "app",
                columns: table => new
                {
                    TaskSchedulerId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    TaskId = table.Column<int>(type: "int", nullable: false),
                    TaskRecurenceId = table.Column<int>(type: "int", nullable: false),
                    Interval = table.Column<string>(type: "nvarchar(128)", maxLength: 128, nullable: false),
                    Increment = table.Column<int>(type: "int", nullable: true),
                    Color = table.Column<int>(type: "int", nullable: true),
                    Params = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    Configuration = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    StartDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    EndDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    StartDay = table.Column<int>(type: "int", nullable: true),
                    NextRun = table.Column<DateTime>(type: "datetime", nullable: true),
                    Enabled = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TaskScheduler", x => x.TaskSchedulerId);
                });

            migrationBuilder.CreateTable(
                name: "TaskScheduler",
                schema: "task",
                columns: table => new
                {
                    TaskSchedulerId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    TaskId = table.Column<int>(type: "int", nullable: false),
                    TaskRecurenceId = table.Column<int>(type: "int", nullable: false),
                    Color = table.Column<int>(type: "int", nullable: true),
                    Params = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    StartDate = table.Column<DateTime>(type: "datetime", nullable: false),
                    EndDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    StartDay = table.Column<int>(type: "int", nullable: true),
                    Enabled = table.Column<int>(type: "int", nullable: true),
                    NextRun = table.Column<DateTime>(type: "datetime", nullable: true),
                    Increment = table.Column<int>(type: "int", nullable: true),
                    Interval = table.Column<string>(type: "nvarchar(128)", maxLength: 128, nullable: true),
                    Configuration = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TaskScheduler", x => x.TaskSchedulerId);
                });

            migrationBuilder.CreateTable(
                name: "TaskSchedulerLog",
                schema: "app",
                columns: table => new
                {
                    TaskSchedulerLogId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SSL = table.Column<int>(type: "int", nullable: true),
                    SendStatus = table.Column<int>(type: "int", nullable: true),
                    Error = table.Column<int>(type: "int", nullable: true),
                    MailMessage = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Sender = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    Receipient = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    Subject = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    Body = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Attachment = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CreateDatetime = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TaskSchedulerLog", x => x.TaskSchedulerLogId);
                });

            migrationBuilder.CreateTable(
                name: "TaskSchedulerOutput",
                schema: "app",
                columns: table => new
                {
                    TaskSchedulerOutputId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    TaskSchedulerId = table.Column<int>(type: "int", nullable: false),
                    OutputTypeId = table.Column<int>(type: "int", nullable: false),
                    EmailId = table.Column<int>(type: "int", nullable: true),
                    FileTransferProtocolId = table.Column<int>(type: "int", nullable: true),
                    Sender = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Recipient = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Subject = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    Body = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Directory = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Output = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Enabled = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TaskSchedulerOutput", x => x.TaskSchedulerOutputId);
                });

            migrationBuilder.CreateTable(
                name: "TaskSchedulerOutput",
                schema: "task",
                columns: table => new
                {
                    TaskSchedulerOutputId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    TaskSchedulerId = table.Column<int>(type: "int", nullable: false),
                    Directory = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Layout = table.Column<byte[]>(type: "varbinary(max)", nullable: true),
                    Output = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Enabled = table.Column<int>(type: "int", nullable: true),
                    EmailId = table.Column<int>(type: "int", nullable: true),
                    Recipient = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    Subject = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    Body = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    OutputTypeId = table.Column<int>(type: "int", nullable: true),
                    Sender = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TaskSchedulerOutput", x => x.TaskSchedulerOutputId);
                });

            migrationBuilder.CreateTable(
                name: "TaskServiceType",
                schema: "task",
                columns: table => new
                {
                    TaskServiceTypeId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: false),
                    Description = table.Column<string>(type: "nvarchar(250)", maxLength: 250, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TaskServiceType", x => x.TaskServiceTypeId);
                });

            migrationBuilder.CreateTable(
                name: "TaskType",
                schema: "task",
                columns: table => new
                {
                    TaskTypeId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: false),
                    Description = table.Column<string>(type: "nvarchar(250)", maxLength: 250, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TaskType", x => x.TaskTypeId);
                });

            migrationBuilder.CreateTable(
                name: "TECZKI",
                columns: table => new
                {
                    ID_TECZKI = table.Column<int>(type: "int", nullable: false),
                    NUMER = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer teczki"),
                    NUMER_KOLEJNY = table.Column<int>(type: "int", nullable: true, comment: "Numer teczki - nr kolejny"),
                    NUMER_ROK = table.Column<int>(type: "int", nullable: true, comment: "Numer teczki - rok"),
                    NUMER_MIES = table.Column<int>(type: "int", nullable: true, comment: "Numer teczki - miesiąc"),
                    RODZAJ_TRANSPORTU = table.Column<int>(type: "int", nullable: true, comment: "Rodzaj transportu"),
                    RODZAJ_TRANSPORTU_OPIS = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Opis rodzaju transportu"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Lokalizacja"),
                    OPIS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Opis teczki"),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true, comment: "Ilość załączników"),
                    TRAFIK_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do trafiku - tab: TRAFIK"),
                    TRAFIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Symbol trafiku"),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dział"),
                    STATUS = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Status teczki: O, Z"),
                    DATA_WYSTAWIENIA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data wystawienia"),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kontrahenta - tab: KONTRAHENCI"),
                    KONTRAH = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Symbol kontrahenta"),
                    TRASA_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do trasy - tab: TRASY"),
                    TRASA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Trasa"),
                    DATA_ZAMKNIECIA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data zamknięcia")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TECZKI", x => x.ID_TECZKI);
                },
                comment: "Teczki spedycyjne");

            migrationBuilder.CreateTable(
                name: "TECZKI_RAP",
                columns: table => new
                {
                    ID_TECZKI_RAP = table.Column<int>(type: "int", nullable: false),
                    NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true),
                    TRAFIK_ID = table.Column<int>(type: "int", nullable: true),
                    TRAFIK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TECZKA_ID = table.Column<int>(type: "int", nullable: true),
                    TECZKA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    WG = table.Column<int>(type: "int", nullable: true),
                    DATA_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    ROK = table.Column<int>(type: "int", nullable: true),
                    MIESIAC = table.Column<int>(type: "int", nullable: true),
                    TECZKA_STATUS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    GRID_SETTINGS = table.Column<byte[]>(type: "image", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TECZKI_RAP", x => x.ID_TECZKI_RAP);
                });

            migrationBuilder.CreateTable(
                name: "TECZKI_RAP_POZ",
                columns: table => new
                {
                    ID_TECZKI_RAP_POZ = table.Column<int>(type: "int", nullable: false),
                    TECZKI_RAP_ID = table.Column<int>(type: "int", nullable: true),
                    TRAFIK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TECZKA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ROK = table.Column<int>(type: "int", nullable: true),
                    MIESIAC = table.Column<int>(type: "int", nullable: true),
                    RODZ_OBIEKTU = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    OBIEKT = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    P_K = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    Z_W = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    PODMIOT = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    RODZAJ_P_K = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    LOK_WEJ = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    LOK_WYJ = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    LOK_NAD = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KWOTA_PRZ_ZEWN = table.Column<double>(type: "float", nullable: true),
                    KWOTA_PRZ_ZEWN_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KWOTA_KOSZT_ZEWN = table.Column<double>(type: "float", nullable: true),
                    KWOTA_KOSZT_ZEWN_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KWOTA_PRZ_WEWN = table.Column<double>(type: "float", nullable: true),
                    KWOTA_PRZ_WEWN_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KWOTA_KOSZT_WEWN = table.Column<double>(type: "float", nullable: true),
                    KWOTA_KOSZT_WEWN_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KWOTA_PRZ_ZEWN_PLN = table.Column<double>(type: "float", nullable: true),
                    KWOTA_KOSZT_ZEWN_PLN = table.Column<double>(type: "float", nullable: true),
                    KWOTA_PRZ_WEWN_PLN = table.Column<double>(type: "float", nullable: true),
                    KWOTA_KOSZT_WEWN_PLN = table.Column<double>(type: "float", nullable: true),
                    KWOTA_DOCH_ZEWN_PLN = table.Column<double>(type: "float", nullable: true),
                    KWOTA_DOCH_WEWN_PLN = table.Column<double>(type: "float", nullable: true),
                    KWOTA_DOCH_PLN = table.Column<double>(type: "float", nullable: true),
                    ZAKSIEG = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    K_F = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TECZKI_RAP_POZ", x => x.ID_TECZKI_RAP_POZ);
                });

            migrationBuilder.CreateTable(
                name: "TEKSTY_CRM",
                columns: table => new
                {
                    ID_TEKSTY_CRM = table.Column<int>(type: "int", nullable: false),
                    SYMBOL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Symbol kontaktu CRM"),
                    KONT_CEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Cel kontaktu"),
                    TEKST = table.Column<string>(type: "text", nullable: true, comment: "Tekst wiadomości")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TEKSTY_CRM", x => x.ID_TEKSTY_CRM);
                });

            migrationBuilder.CreateTable(
                name: "TEKSTY_DO_WYDRUKOW",
                columns: table => new
                {
                    ID_TEKSTY_DO_WYDRUKOW = table.Column<int>(type: "int", nullable: false),
                    KOD = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: false, comment: "Kod tekstu"),
                    RODZAJ = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Rodzaj tekstu: Zlecenia, Faktury, Oferty"),
                    TEKST = table.Column<string>(type: "text", nullable: true, comment: "Treść"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja"),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dział"),
                    TYLKO_ADMIN = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy zmienić może tylko admin"),
                    WWW = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy pochodzi z WWW"),
                    KLIENT_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do tab. KONTRAHENCI"),
                    KLIENT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Relacja do tab. KONTRAHENCI"),
                    OBIEKT = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Obiekt powiązany")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TEKSTY_DO_WYDRUKOW", x => x.ID_TEKSTY_DO_WYDRUKOW);
                },
                comment: "Słownik tekstów do wydruków");

            migrationBuilder.CreateTable(
                name: "TERM_PLATN_KOSZT",
                columns: table => new
                {
                    ID_TERM_PLATN_KOSZT = table.Column<int>(type: "int", nullable: false),
                    DNI_OD = table.Column<int>(type: "int", nullable: true),
                    DNI_DO = table.Column<int>(type: "int", nullable: true),
                    TERMIN = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TERM_PLATN_KOSZT", x => x.ID_TERM_PLATN_KOSZT);
                });

            migrationBuilder.CreateTable(
                name: "TERMINARZ",
                columns: table => new
                {
                    ID_TERMINARZ = table.Column<int>(type: "int", nullable: false),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    RODZAJ = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    UZYTKOWNIK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    UZYTKOWNIK_WYK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DATA_WYKONANIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    KLIENT = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KLIENT_ID = table.Column<int>(type: "int", nullable: true),
                    POWTARZALNY = table.Column<int>(type: "int", nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    INTERWAL = table.Column<int>(type: "int", nullable: true),
                    INTERWAL_TYP = table.Column<int>(type: "int", nullable: true),
                    KONTRAHENCI_CRM_ID = table.Column<int>(type: "int", nullable: true),
                    KONTRAHENCI_CRM = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    TABOR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    KIEROWCA_ID = table.Column<int>(type: "int", nullable: true),
                    TABOR_B = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OBJ_TYP = table.Column<int>(type: "int", nullable: true),
                    OBJ_ID = table.Column<int>(type: "int", nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TERMINARZ", x => x.ID_TERMINARZ);
                });

            migrationBuilder.CreateTable(
                name: "TerminateAppRequest",
                columns: table => new
                {
                    IdTerminateAppRequest = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    AppName = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ForceTerminateDate = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(dateadd(minute,(5),getdate()))"),
                    ExpireDate = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(dateadd(minute,(15),getdate()))"),
                    TerminateInfo = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true),
                    RegisterDate = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    RegisterUserId = table.Column<int>(type: "int", nullable: true),
                    RegisterUserName = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    RegisterAppVersion = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    Disabled = table.Column<int>(type: "int", nullable: true, defaultValueSql: "((0))")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__Terminat__1EED5B2C21D1FAD5", x => x.IdTerminateAppRequest);
                });

            migrationBuilder.CreateTable(
                name: "Text",
                schema: "lng",
                columns: table => new
                {
                    TextId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Value = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    Hash = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true, computedColumnSql: "(CONVERT([varchar](32),hashbytes('MD5',[Value]),(2)))", stored: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Text", x => x.TextId);
                });

            migrationBuilder.CreateTable(
                name: "TextType",
                schema: "app",
                columns: table => new
                {
                    TextTypeId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Code = table.Column<string>(type: "nvarchar(20)", maxLength: 20, nullable: false),
                    Description = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TextType", x => x.TextTypeId);
                });

            migrationBuilder.CreateTable(
                name: "TIMELINE",
                columns: table => new
                {
                    TIMELINEID = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ACTIVITY = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    ACTIVITYSTART = table.Column<DateTime>(type: "datetime", nullable: true),
                    ACTIVITYSTOP = table.Column<DateTime>(type: "datetime", nullable: true),
                    USERID = table.Column<int>(type: "int", nullable: true),
                    HOST = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPERATIONTYPE = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TIMELINE", x => x.TIMELINEID);
                });

            migrationBuilder.CreateTable(
                name: "TimeSheet",
                schema: "workshop",
                columns: table => new
                {
                    TimeSheetId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    RecordId = table.Column<int>(type: "int", nullable: false),
                    PositionId = table.Column<int>(type: "int", nullable: false),
                    OperatorId = table.Column<int>(type: "int", nullable: false),
                    TimeSheetCodeId = table.Column<int>(type: "int", nullable: false),
                    Start = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    Stop = table.Column<DateTime>(type: "datetime", nullable: true),
                    LocalizationId = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TimeSheet", x => x.TimeSheetId);
                });

            migrationBuilder.CreateTable(
                name: "TimeSheetCode",
                schema: "workshop",
                columns: table => new
                {
                    TimeSheetCodeId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true),
                    Hint = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    Barcode = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: true),
                    System = table.Column<int>(type: "int", nullable: true),
                    Visible = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TimeSheetCode", x => x.TimeSheetCodeId);
                });

            migrationBuilder.CreateTable(
                name: "TMP_AWIZACJE",
                columns: table => new
                {
                    ID_TMP_AWIZACJE = table.Column<int>(type: "int", nullable: false),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true),
                    NR_AWIZACJI = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_AWIZACJI_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    NR_AWIZACJI_ROK = table.Column<int>(type: "int", nullable: true),
                    NR_AWIZACJI_MIES = table.Column<int>(type: "int", nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    OBJ_ID = table.Column<int>(type: "int", nullable: true),
                    REC_ID = table.Column<int>(type: "int", nullable: true),
                    WAGA = table.Column<double>(type: "float", nullable: true),
                    OBJ = table.Column<double>(type: "float", nullable: true),
                    ILOSC = table.Column<double>(type: "float", nullable: true),
                    ILOSC_PRZESYLEK = table.Column<double>(type: "float", nullable: true),
                    MIEJSCA_PAL = table.Column<double>(type: "float", nullable: true),
                    ILOSC_PAL = table.Column<double>(type: "float", nullable: true),
                    ILOSC_PAC = table.Column<double>(type: "float", nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    PRZEWOZNIK_ID = table.Column<int>(type: "int", nullable: true),
                    PRZEWOZNIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SAMOCHOD_ID = table.Column<int>(type: "int", nullable: true),
                    SAMOCHOD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NACZEPA_ID = table.Column<int>(type: "int", nullable: true),
                    NACZEPA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KIEROWCA_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KIEROWCA_TEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    MIEJSCE_DOSTAWY_ID = table.Column<int>(type: "int", nullable: true),
                    LISTY_LINIOWE_ZA_WY_ID = table.Column<int>(type: "int", nullable: true),
                    ODBIORCA_ID = table.Column<int>(type: "int", nullable: true),
                    ODBIORCA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DATA_DOSTAWY_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_DOSTAWY_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    STAN = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    STATUS = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    STATUS_MAIL = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    STATUS_EMISJA = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_AWIZACJE", x => x.ID_TMP_AWIZACJE);
                });

            migrationBuilder.CreateTable(
                name: "TMP_AWIZACJE_POZ",
                columns: table => new
                {
                    ID_TMP_AWIZACJE_POZ = table.Column<int>(type: "int", nullable: false),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true),
                    AWIZACJE_ID = table.Column<int>(type: "int", nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    PRZESYLKI_ID = table.Column<int>(type: "int", nullable: true),
                    WAGA = table.Column<double>(type: "float", nullable: true),
                    OBJ = table.Column<double>(type: "float", nullable: true),
                    ILOSC = table.Column<double>(type: "float", nullable: true),
                    MIEJSCA_PAL = table.Column<double>(type: "float", nullable: true),
                    ILOSC_PAL = table.Column<double>(type: "float", nullable: true),
                    ILOSC_PAC = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_AWIZACJE_POZ", x => x.ID_TMP_AWIZACJE_POZ);
                });

            migrationBuilder.CreateTable(
                name: "TMP_BankTransferPrepare",
                columns: table => new
                {
                    ID_TMP_BankTransferPrepare = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SessionId = table.Column<int>(type: "int", nullable: true),
                    RecType = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    ObjId = table.Column<int>(type: "int", nullable: true),
                    RecId = table.Column<int>(type: "int", nullable: true),
                    RecNo = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    Loc = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    ClientFromId = table.Column<int>(type: "int", nullable: true),
                    AccountFromId = table.Column<int>(type: "int", nullable: true),
                    ClientToId = table.Column<int>(type: "int", nullable: true),
                    AccountToId = table.Column<int>(type: "int", nullable: true),
                    Curr = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    Value = table.Column<double>(type: "float", nullable: true),
                    State = table.Column<int>(type: "int", nullable: true),
                    UserAction = table.Column<int>(type: "int", nullable: true),
                    TransferType = table.Column<int>(type: "int", nullable: true),
                    InfoForUser = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true),
                    CheckPointReq = table.Column<int>(type: "int", nullable: true),
                    Correction = table.Column<int>(type: "int", nullable: true),
                    CorrectionId = table.Column<int>(type: "int", nullable: true),
                    SplitPayment = table.Column<int>(type: "int", nullable: true),
                    CorrectionSourceId = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_BankTransferPrepare", x => x.ID_TMP_BankTransferPrepare);
                });

            migrationBuilder.CreateTable(
                name: "TMP_BLOKADY_ZBIORCZE",
                columns: table => new
                {
                    ID_TMP_BLOKADY_ZBIORCZE = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SessionId = table.Column<int>(type: "int", nullable: true),
                    CheckPointId = table.Column<int>(type: "int", nullable: true),
                    LockType = table.Column<int>(type: "int", nullable: true),
                    ActionType = table.Column<int>(type: "int", nullable: true),
                    TimeStamp = table.Column<DateTime>(type: "datetime", nullable: true),
                    State = table.Column<int>(type: "int", nullable: true),
                    UserId = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_BLOKADY_ZBIORCZE", x => x.ID_TMP_BLOKADY_ZBIORCZE);
                },
                comment: "Blokady obiektów - logi");

            migrationBuilder.CreateTable(
                name: "TMP_CalcCarwash",
                columns: table => new
                {
                    ID_TMP_CalcCarwash = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    sessionId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "id sesji kalkulacji"),
                    kind = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "0-via /1-start /2-stop"),
                    poiId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "id POI"),
                    objId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "id typu obiektu SPEED zdarzenia zlecenia"),
                    recId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "id zdarzenia zlecenia"),
                    orderId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "id zlecenia"),
                    lon = table.Column<double>(type: "float", nullable: true, comment: "longitude"),
                    lat = table.Column<double>(type: "float", nullable: true, comment: "latitude")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__TMP_Calc__9C94B3A9DA37AD5B", x => x.ID_TMP_CalcCarwash);
                });

            migrationBuilder.CreateTable(
                name: "TMP_CheckPointInfo",
                columns: table => new
                {
                    ID_TMP_CheckPointInfo = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    guid = table.Column<Guid>(type: "uniqueidentifier", nullable: true, defaultValueSql: "(newid())"),
                    dtCreate = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    infoActionType = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "-1-nieznany /0-false /1-true"),
                    infoDefaultResult = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "-1-nieznany /0-false /1-true"),
                    infoKind = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "0-cpikunknown /silentOK /2-info /3-warning /4-lock /5-silentError /6-infoError /7-warningError"),
                    inSilentMode = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "(0/1) PK uruchomiony w trybie \"cichym\" (bez komunikatów)"),
                    inCheckPointId = table.Column<int>(type: "int", nullable: true, comment: "id punktu kontrolnego"),
                    inSessionId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "id sesji dla tabel TMP"),
                    inClientId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "PK.param: id kontrahenta"),
                    inObjType1 = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "PK.param: typ 1 obiektu wg standardu statusowego: 1 - przesyłki, 2 zlecenia ftl etc"),
                    inObjId1 = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "PK.param: id 1 obiektu"),
                    inObjType2 = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "PK.param: typ 2 obiektu wg standardu statusowego: 1 - przesyłki, 2 zlecenia ftl etc"),
                    inObjId2 = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "PK.param: id 2 obiektu"),
                    outErrorNo = table.Column<int>(type: "int", nullable: true, comment: "PK.wynik: numer błędu"),
                    outErrorText = table.Column<string>(type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true, comment: "PK.wynik: tekst błędu/ostrzeżenia/informacji"),
                    outApprovalCode = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "PK.wynik: kod wymaganej zgody"),
                    outApprovalInfo = table.Column<string>(type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true, comment: "PK.wynik: info do wymaganej zgody"),
                    outLockTypeCode = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "PK.wynik: kod blokady"),
                    outLockId = table.Column<int>(type: "int", nullable: true, comment: "PK.wynik: id blokady"),
                    outColor = table.Column<int>(type: "int", nullable: true, comment: "PK.wynik: "),
                    outState = table.Column<int>(type: "int", nullable: true, comment: "PK.wynik: zatw. zbiorcze - stan"),
                    outAction = table.Column<int>(type: "int", nullable: true, comment: "PK.wynik: zatw. zbiorcze - akcja (0/1)"),
                    outResult = table.Column<int>(type: "int", nullable: true, comment: "PK.wynik: rezultat (-1-nieznany /0-false /1-true)"),
                    varApplyToNext = table.Column<int>(type: "int", nullable: true, comment: "(0/1)"),
                    varLockType = table.Column<int>(type: "int", nullable: true),
                    varLockTypeId = table.Column<int>(type: "int", nullable: true, comment: "id typu blokady"),
                    varLockRightsOK = table.Column<int>(type: "int", nullable: true),
                    varRunAfterExecuteSP = table.Column<int>(type: "int", nullable: true, comment: "(0/1)"),
                    varSilentResult = table.Column<int>(type: "int", nullable: true, comment: "(-1/0/1)"),
                    varSummaryConfirmation = table.Column<int>(type: "int", nullable: true, comment: "(0/1)")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__TMP_Chec__5117A628D9844075", x => x.ID_TMP_CheckPointInfo);
                });

            migrationBuilder.CreateTable(
                name: "TMP_DANE_EXT",
                columns: table => new
                {
                    ID_TMP_DANE_EXT = table.Column<int>(type: "int", nullable: false),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    TEKST_1 = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_1 = table.Column<DateTime>(type: "datetime", nullable: true),
                    LICZBA_1 = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')"),
                    BIT_1 = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    TEKST_2 = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_2 = table.Column<DateTime>(type: "datetime", nullable: true),
                    LICZBA_2 = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')"),
                    BIT_2 = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    TEKST_3 = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_3 = table.Column<DateTime>(type: "datetime", nullable: true),
                    LICZBA_3 = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')"),
                    BIT_3 = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    TEKST_4 = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_4 = table.Column<DateTime>(type: "datetime", nullable: true),
                    LICZBA_4 = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')"),
                    BIT_4 = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    TEKST_5 = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_5 = table.Column<DateTime>(type: "datetime", nullable: true),
                    LICZBA_5 = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')"),
                    BIT_5 = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    TEKST_6 = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_6 = table.Column<DateTime>(type: "datetime", nullable: true),
                    LICZBA_6 = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')"),
                    BIT_6 = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    TEKST_7 = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_7 = table.Column<DateTime>(type: "datetime", nullable: true),
                    LICZBA_7 = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')"),
                    BIT_7 = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    TEKST_8 = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_8 = table.Column<DateTime>(type: "datetime", nullable: true),
                    LICZBA_8 = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')"),
                    BIT_8 = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    TEKST_9 = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_9 = table.Column<DateTime>(type: "datetime", nullable: true),
                    LICZBA_9 = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')"),
                    BIT_9 = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    TEKST_10 = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_10 = table.Column<DateTime>(type: "datetime", nullable: true),
                    LICZBA_10 = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')"),
                    BIT_10 = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    TEKST_11 = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_11 = table.Column<DateTime>(type: "datetime", nullable: true),
                    LICZBA_11 = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')"),
                    BIT_11 = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    TEKST_12 = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_12 = table.Column<DateTime>(type: "datetime", nullable: true),
                    LICZBA_12 = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')"),
                    BIT_12 = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    TEKST_13 = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_13 = table.Column<DateTime>(type: "datetime", nullable: true),
                    LICZBA_13 = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')"),
                    BIT_13 = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    TEKST_14 = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_14 = table.Column<DateTime>(type: "datetime", nullable: true),
                    LICZBA_14 = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')"),
                    BIT_14 = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    TEKST_15 = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_15 = table.Column<DateTime>(type: "datetime", nullable: true),
                    LICZBA_15 = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')"),
                    BIT_15 = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    TEKST_16 = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_16 = table.Column<DateTime>(type: "datetime", nullable: true),
                    LICZBA_16 = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')"),
                    BIT_16 = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    TEKST_17 = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_17 = table.Column<DateTime>(type: "datetime", nullable: true),
                    LICZBA_17 = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')"),
                    BIT_17 = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    TEKST_18 = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_18 = table.Column<DateTime>(type: "datetime", nullable: true),
                    LICZBA_18 = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')"),
                    BIT_18 = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    TEKST_19 = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_19 = table.Column<DateTime>(type: "datetime", nullable: true),
                    LICZBA_19 = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')"),
                    BIT_19 = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    TEKST_20 = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA_20 = table.Column<DateTime>(type: "datetime", nullable: true),
                    LICZBA_20 = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')"),
                    BIT_20 = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_DANE_EXT", x => x.ID_TMP_DANE_EXT);
                });

            migrationBuilder.CreateTable(
                name: "TMP_DELEGACJE",
                columns: table => new
                {
                    ID_TMP_DELEGACJE = table.Column<int>(type: "int", nullable: false),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data delegacji"),
                    WYJAZD_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do PW, tab: WYJAZDY"),
                    WYJAZDY_ZDARZENIA_OD_ID = table.Column<int>(type: "int", nullable: true, comment: "Licz OD zdarzenia PW, tab: WYJAZDY_ZDARZENIA"),
                    WYJAZDY_ZDARZENIA_DO_ID = table.Column<int>(type: "int", nullable: true, comment: "Licz DO zdarzenia PW, tab: WYJAZDY_ZDARZENIA"),
                    PRACOWNIK_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do pracownika, tab: KIEROWCY"),
                    ROZLICZONO = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy rozliczono delegacje"),
                    DATA_ROZLICZENIA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data rozliczenia"),
                    KRAJ_DOCELOWY = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Kraj docelowy"),
                    KURSY_WALUT_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do tabeli kursowej dla rozliczenia"),
                    KURS = table.Column<double>(type: "float", nullable: true, comment: "Kurs waluty dla rozliczenia"),
                    KURSY_WALUT_DATA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data kursu waluty dla rozliczenia"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja"),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dział"),
                    LICZ_NOCLEGI = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy liczyć noclegi automatem"),
                    ID_DELEGACJE = table.Column<int>(type: "int", nullable: true),
                    NR_DELEGACJI = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Licznik - numer"),
                    NR_DELEGACJI_KOLEJNY = table.Column<int>(type: "int", nullable: true, comment: "Licznik - nr kolejny"),
                    NR_DELEGACJI_ROK = table.Column<int>(type: "int", nullable: true, comment: "Licznik - rok"),
                    NR_DELEGACJI_MIES = table.Column<int>(type: "int", nullable: true, comment: "Licznik - miesiąc"),
                    WYJAZD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer PW"),
                    PRACOWNIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Imię i nazwisko pracownika"),
                    CEL_WYJAZDU = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true, comment: "Cel wyjazdu"),
                    STANOWISKO = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true, comment: "Stanowisko pracownika"),
                    SRODKI_LOKOMOCJI = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true, comment: "Srodek lokomocji"),
                    MIEJSCE_DOCELOWE = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true, comment: "Miejsce docelowe"),
                    WYJAZD_OD = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Wyjazd w okresie OD"),
                    WYJAZD_DO = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Wyjazd w okresie DO"),
                    DATA_WYJAZDU = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data wyjazdu"),
                    DATA_POWROTU = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data powrotu"),
                    GODZ_WYJAZDU = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina wyjazdu"),
                    GODZ_POWROTU = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina powrotu"),
                    ZAGRANICZNA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy delegacja zagraniczna"),
                    DATA_WYJAZDU_GRANICA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data wyjazdu z kraju"),
                    DATA_POWROTU_GRANICA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data powrotu do kraju"),
                    GODZ_WYJAZDU_GRANICA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina wyjazdu z kraju"),
                    GODZ_POWROTU_GRANICA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina powrotu do kraju"),
                    DOBY_KRAJ = table.Column<int>(type: "int", nullable: true, comment: "Ilość dob delegacji krajowej"),
                    GODZINY_KRAJ = table.Column<double>(type: "float", nullable: true, comment: "Ilość godzin delegacji krajowej"),
                    DOBY_ZAGR = table.Column<int>(type: "int", nullable: true, comment: "Ilość dob delegacji zagranicznej"),
                    GODZINY_ZAGR = table.Column<double>(type: "float", nullable: true, comment: "Ilość godzin delegacji zagranicznej"),
                    NOCLEGI_KRAJ = table.Column<int>(type: "int", nullable: true, comment: "Ilość noclegów krajowych"),
                    NOCLEGI_ZAGR = table.Column<int>(type: "int", nullable: true, comment: "Ilość noclegów zagranicznych"),
                    KURSY_WALUT = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Nr tabeli kursowej dla rozliczenia"),
                    DIETA_KRAJ_WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Waluta diety krajowej"),
                    DIETA_ZAGR_WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Waluta diety zagranicznej"),
                    DIETA_KRAJ = table.Column<double>(type: "float", nullable: true, comment: "Dieta krajowa"),
                    DIETA_ZAGR = table.Column<double>(type: "float", nullable: true, comment: "Dieta zagraniczna"),
                    NOCLEG_KRAJ = table.Column<double>(type: "float", nullable: true, comment: "Noclegi krajowe"),
                    NOCLEG_ZAGR = table.Column<double>(type: "float", nullable: true, comment: "Noclegi zagraniczne"),
                    INNE_KRAJ = table.Column<double>(type: "float", nullable: true, comment: "Inne koszty krajowe"),
                    INNE_ZAGR = table.Column<double>(type: "float", nullable: true, comment: "Inne koszty zagraniczne"),
                    DIETY_RAZEM_KRAJ = table.Column<double>(type: "float", nullable: true, comment: "Diety razem - krajowe"),
                    DIETY_RAZEM_ZAGR = table.Column<double>(type: "float", nullable: true, comment: "Diety razem - zagraniczne"),
                    UWAGI = table.Column<string>(type: "text", nullable: true, comment: "Uwagi"),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_DELEGACJE", x => x.ID_TMP_DELEGACJE);
                });

            migrationBuilder.CreateTable(
                name: "TMP_DELEGACJE_DIETY",
                columns: table => new
                {
                    ID_TMP_DELEGACJE_DIETY = table.Column<int>(type: "int", nullable: false),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    ID_DELEGACJE_DIETY = table.Column<int>(type: "int", nullable: true),
                    DELEGACJA_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do nagłówka delegacji, tab: DELEGACJE"),
                    LP = table.Column<int>(type: "int", nullable: true, comment: "Lp"),
                    KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Kraj odcinka - symbol ISO"),
                    KRAJ_SL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Kraj odcinka - słownie"),
                    DATA_START = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data od"),
                    DATA_STOP = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data do"),
                    GODZ_START = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina od"),
                    GODZ_STOP = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina do"),
                    DOBY = table.Column<int>(type: "int", nullable: true, comment: "Ilość dob"),
                    GODZINY = table.Column<double>(type: "float", nullable: true, comment: "Ilość godzin"),
                    NOCLEGI = table.Column<int>(type: "int", nullable: true, comment: "Ilość noclegów"),
                    NOCLEGI_BKP = table.Column<int>(type: "int", nullable: true, comment: "Ilość noclegów - backup na potrzeby kontroli"),
                    DIETA_ILOSC = table.Column<double>(type: "float", nullable: true, comment: "Ilość diet"),
                    DIETA_WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Waluta diet"),
                    DIETA_STAWKA = table.Column<double>(type: "float", nullable: true, comment: "Stawka dla 1 diety"),
                    NOCLEG_STAWKA = table.Column<double>(type: "float", nullable: true, comment: "Stawka 1 noclegu"),
                    DIETA = table.Column<double>(type: "float", nullable: true, comment: "Łącznie diety"),
                    NOCLEG = table.Column<double>(type: "float", nullable: true, comment: "Łącznie noclegi"),
                    INNE = table.Column<double>(type: "float", nullable: true, comment: "Inne koszty"),
                    DIETY_RAZEM = table.Column<double>(type: "float", nullable: true, comment: "Diety dla odcinka razem"),
                    MIASTO = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Miasto"),
                    RAB_TYP_STAWKI = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true, comment: "RABEN - typ stawki - S - stała, M - malejaca")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_DELEGACJE_DIETY", x => x.ID_TMP_DELEGACJE_DIETY);
                });

            migrationBuilder.CreateTable(
                name: "TMP_FAKTURY",
                columns: table => new
                {
                    ID_TMP_FAKTURY = table.Column<int>(type: "int", nullable: false),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    ID_FAKTURY = table.Column<int>(type: "int", nullable: true),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: true),
                    NUMER_FAKTURY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    FAKTURA_OTRZYMANA = table.Column<int>(type: "int", nullable: true),
                    NOTA = table.Column<int>(type: "int", nullable: true),
                    NOTA_UZNANIOWA = table.Column<int>(type: "int", nullable: true),
                    DATA_WYSTAWIENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_SPRZEDAZY = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_OTRZYMANIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_PLATNOSCI = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_WYSLANIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_KSIEGOWA_1 = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_WYSLANIA_FK = table.Column<DateTime>(type: "datetime", nullable: true),
                    ROZNE_KURSY = table.Column<int>(type: "int", nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_FAKTURY", x => x.ID_TMP_FAKTURY);
                });

            migrationBuilder.CreateTable(
                name: "TMP_FAKTURY_POZYCJE",
                columns: table => new
                {
                    ID_TMP_FAKTURY_POZYCJE = table.Column<int>(type: "int", nullable: false),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    ID_FAKTURY_POZYCJE = table.Column<int>(type: "int", nullable: true),
                    FAKTURY_ID = table.Column<int>(type: "int", nullable: true),
                    ZBIORCZA = table.Column<int>(type: "int", nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    TYTUL_TYP = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    TYTUL_ID = table.Column<int>(type: "int", nullable: true),
                    TYTUL = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    TYTUL_OPIS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    TYTUL_KOD = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TYTUL_AGREG = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    JM = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    ILOSC = table.Column<double>(type: "float", nullable: true),
                    NETTO_JEDN_WAL = table.Column<double>(type: "float", nullable: true),
                    NETTO_JEDN_PLN = table.Column<double>(type: "float", nullable: true),
                    RABAT = table.Column<double>(type: "float", nullable: true),
                    RABAT_WARTOSC_PLN = table.Column<double>(type: "float", nullable: true),
                    NETTO_WARTOSC_PLN = table.Column<double>(type: "float", nullable: true),
                    VAT_ID = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    VAT_STAWKA = table.Column<double>(type: "float", nullable: true),
                    VAT_WARTOSC_PLN = table.Column<double>(type: "float", nullable: true),
                    BRUTTO_WARTOSC_PLN = table.Column<double>(type: "float", nullable: true),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KURS_WALUTY = table.Column<double>(type: "float", nullable: true),
                    KURSY_WALUT_ID = table.Column<int>(type: "int", nullable: true),
                    NR_TABELI_KURSOW = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    DATA_TABELI_KURSOW = table.Column<DateTime>(type: "datetime", nullable: true),
                    V_KURS_WALUTY = table.Column<double>(type: "float", nullable: true),
                    V_KURSY_WALUT_ID = table.Column<int>(type: "int", nullable: true),
                    V_NR_TABELI_KURSOW = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    V_DATA_TABELI_KURSOW = table.Column<DateTime>(type: "datetime", nullable: true),
                    KALKULACJE_ID = table.Column<int>(type: "int", nullable: true),
                    PRZESYLKA_ID = table.Column<int>(type: "int", nullable: true),
                    PRZESYLKA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZLEC_POZ_FAKT_ID = table.Column<int>(type: "int", nullable: true),
                    WYJAZD_ID = table.Column<int>(type: "int", nullable: true),
                    WYJAZD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZLECENIE_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZLECENIE_M_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE_M = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    LIST_LINIOWY_ID = table.Column<int>(type: "int", nullable: true),
                    LIST_LINIOWY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    TABOR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NACZEPA_ID = table.Column<int>(type: "int", nullable: true),
                    NACZEPA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KIEROWCA_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    KWIT_PAL_ID = table.Column<int>(type: "int", nullable: true),
                    KWIT_PAL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KWIT_PAL_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    PROMY_ID = table.Column<int>(type: "int", nullable: true),
                    PROMY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SZKODA_ID = table.Column<int>(type: "int", nullable: true),
                    SZKODA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ORG_KWOTA = table.Column<double>(type: "float", nullable: true),
                    ORG_WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KOR_DO_ZERA = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE_RAIL_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE_RAIL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_FAKTURY_POZYCJE", x => x.ID_TMP_FAKTURY_POZYCJE);
                });

            migrationBuilder.CreateTable(
                name: "TMP_FAKTURY_POZYCJE_ZB",
                columns: table => new
                {
                    ID_TMP_FAKTURY_POZYCJE_ZB = table.Column<int>(type: "int", nullable: false),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    ID_FAKTURY_POZYCJE_ZB = table.Column<int>(type: "int", nullable: true),
                    FAKTURY_ID = table.Column<int>(type: "int", nullable: true),
                    FAKTURY_POZYCJE_ID = table.Column<int>(type: "int", nullable: true),
                    ZRODLO = table.Column<int>(type: "int", nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    RODZ_KOSZTOW = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    UWZGL_ROZL_KIER = table.Column<int>(type: "int", nullable: true),
                    STR_ROZL_KIER = table.Column<int>(type: "int", nullable: true),
                    RODZ_PRZYCHODOW = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    TYTUL_ID = table.Column<int>(type: "int", nullable: true),
                    TYTUL = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    TYTUL_OPIS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    TYTUL_KOD = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TYTUL_AGREG = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    PKWIU = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    JM = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    ILOSC = table.Column<double>(type: "float", nullable: true),
                    NETTO_JEDN_WAL = table.Column<double>(type: "float", nullable: true),
                    NETTO_JEDN_PLN = table.Column<double>(type: "float", nullable: true),
                    RABAT = table.Column<double>(type: "float", nullable: true),
                    RABAT_WARTOSC_PLN = table.Column<double>(type: "float", nullable: true),
                    NETTO_WARTOSC_PLN = table.Column<double>(type: "float", nullable: true),
                    VAT_ID = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    VAT_STAWKA = table.Column<double>(type: "float", nullable: true),
                    VAT_WARTOSC_PLN = table.Column<double>(type: "float", nullable: true),
                    BRUTTO_WARTOSC_PLN = table.Column<double>(type: "float", nullable: true),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    WALUTA_PRZEWAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KURS_PRZEWAL = table.Column<double>(type: "float", nullable: true),
                    TABELA_PRZEWAL_ID = table.Column<int>(type: "int", nullable: true),
                    TABELA_PRZEWAL = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TABELA_PRZEWAL_DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    NETTO_JEDN_PRZEWAL = table.Column<double>(type: "float", nullable: true),
                    KURS_WSK_RECZNIE = table.Column<int>(type: "int", nullable: true),
                    KURS_WALUTY = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('1')"),
                    KURSY_WALUT_ID = table.Column<int>(type: "int", nullable: true),
                    NR_TABELI_KURSOW = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    DATA_TABELI_KURSOW = table.Column<DateTime>(type: "datetime", nullable: true),
                    V_KURS_WALUTY = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('1')"),
                    V_KURSY_WALUT_ID = table.Column<int>(type: "int", nullable: true),
                    V_NR_TABELI_KURSOW = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    V_DATA_TABELI_KURSOW = table.Column<DateTime>(type: "datetime", nullable: true),
                    WALUTOWA_NETTO_PLN = table.Column<double>(type: "float", nullable: true),
                    WALUTOWA_VAT_PLN = table.Column<double>(type: "float", nullable: true),
                    WALUTOWA_BRUTTO_PLN = table.Column<double>(type: "float", nullable: true),
                    KALKULACJE_ID = table.Column<int>(type: "int", nullable: true),
                    PRZESYLKA_ID = table.Column<int>(type: "int", nullable: true),
                    PRZESYLKA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZLEC_POZ_FAKT_ID = table.Column<int>(type: "int", nullable: true),
                    WYJAZD_ID = table.Column<int>(type: "int", nullable: true),
                    WYJAZD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZLECENIE_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZLECENIE_M_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE_M = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    LIST_LINIOWY_ID = table.Column<int>(type: "int", nullable: true),
                    LIST_LINIOWY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    TABOR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NACZEPA_ID = table.Column<int>(type: "int", nullable: true),
                    NACZEPA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TABOR_LICZNIK = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    KONTO_FK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    POZ_KOREKTA_ID = table.Column<int>(type: "int", nullable: true),
                    DATA_ZDARZENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    PROMY_ID = table.Column<int>(type: "int", nullable: true),
                    PROMY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SZKODA_ID = table.Column<int>(type: "int", nullable: true),
                    SZKODA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DOT_LOKALIZACJI = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DOT_DZIALU = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KONTENERY_ID = table.Column<int>(type: "int", nullable: true),
                    KONTENERY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KOR_DO_ZERA = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE_RAIL_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE_RAIL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_FAKTURY_POZYCJE_ZB", x => x.ID_TMP_FAKTURY_POZYCJE_ZB);
                });

            migrationBuilder.CreateTable(
                name: "TMP_FAKTURY_POZYCJE2",
                columns: table => new
                {
                    ID_TMP_FAKTURY_POZYCJE2 = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    VAT_ID = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    VAT_STAWKA = table.Column<double>(type: "float", nullable: true),
                    KURS_WSK_RECZNIE = table.Column<int>(type: "int", nullable: true),
                    KURS_WALUTY = table.Column<double>(type: "float", nullable: true),
                    KURSY_WALUT_ID = table.Column<int>(type: "int", nullable: true),
                    V_KURS_WALUTY = table.Column<double>(type: "float", nullable: true),
                    V_KURSY_WALUT_ID = table.Column<int>(type: "int", nullable: true),
                    NETTO_WARTOSC_PLN = table.Column<double>(type: "float", nullable: true),
                    VAT_WARTOSC_PLN = table.Column<double>(type: "float", nullable: true),
                    BRUTTO_WARTOSC_PLN = table.Column<double>(type: "float", nullable: true),
                    WALUTOWA_NETTO_PLN = table.Column<double>(type: "float", nullable: true),
                    WALUTOWA_VAT_PLN = table.Column<double>(type: "float", nullable: true),
                    WALUTOWA_BRUTTO_PLN = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_FAKTURY_POZYCJE2", x => x.ID_TMP_FAKTURY_POZYCJE2);
                });

            migrationBuilder.CreateTable(
                name: "TMP_FAKTURY2",
                columns: table => new
                {
                    ID_TMP_FAKTURY2 = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    WorkingCurrency = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    WorkingCountry = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    FAKTURA_OTRZYMANA = table.Column<int>(type: "int", nullable: true),
                    FAKTURA_WALUTOWA = table.Column<int>(type: "int", nullable: true),
                    ROZNE_KURSY = table.Column<int>(type: "int", nullable: true),
                    VAT_W_PLN = table.Column<int>(type: "int", nullable: true),
                    ALGORYTM_SUM = table.Column<int>(type: "int", nullable: true),
                    KURS_WALUTY = table.Column<double>(type: "float", nullable: true),
                    V_KURS_WALUTY = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_FAKTURY2", x => x.ID_TMP_FAKTURY2);
                });

            migrationBuilder.CreateTable(
                name: "TMP_GIELDA_POJAZDOW",
                columns: table => new
                {
                    ID_TMP_GIELDA_POJAZDOW = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    ID_GIELDA_POJAZDOW = table.Column<int>(type: "int", nullable: true),
                    ZRODLO = table.Column<int>(type: "int", nullable: true),
                    RODZAJ = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    ANULOWANY = table.Column<int>(type: "int", nullable: true),
                    DATA_GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_GODZ_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_GODZ_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    PRZEWOZNIK_ID = table.Column<int>(type: "int", nullable: true),
                    PRZEWOZNIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    TABOR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TABOR_NR_B = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NACZEPA_ID = table.Column<int>(type: "int", nullable: true),
                    NACZEPA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NACZEPA_NR_B = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KIEROWCA1_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA1 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KIEROWCA1_TEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KIEROWCA2_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KIEROWCA2_TEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OBIEKT_TYP = table.Column<int>(type: "int", nullable: true),
                    OBIEKT_ID = table.Column<int>(type: "int", nullable: true),
                    OBIEKT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    PRACOWNIK_ID = table.Column<int>(type: "int", nullable: true),
                    PRACOWNIK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ODESLAC = table.Column<int>(type: "int", nullable: true),
                    ADR = table.Column<int>(type: "int", nullable: true),
                    POCZ_POI_TYP = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    POCZ_POI_ID = table.Column<int>(type: "int", nullable: true),
                    POCZ_POI_NAZWA = table.Column<string>(type: "varchar(120)", unicode: false, maxLength: 120, nullable: true),
                    POCZ_POI_ADRES = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true),
                    POCZ_POI_MIASTO = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true),
                    POCZ_POI_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    POCZ_POI_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    POCZ_POI_TEL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    POCZ_POI_FAX = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    POCZ_POI_GEO_LONGI = table.Column<double>(type: "float", nullable: true),
                    POCZ_POI_GEO_LAT = table.Column<double>(type: "float", nullable: true),
                    POCZ_POI_LOKALIZACJA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    POCZ_STREFA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OST_POI_TYP = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    OST_POI_ID = table.Column<int>(type: "int", nullable: true),
                    OST_POI_NAZWA = table.Column<string>(type: "varchar(120)", unicode: false, maxLength: 120, nullable: true),
                    OST_POI_ADRES = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true),
                    OST_POI_MIASTO = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true),
                    OST_POI_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    OST_POI_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    OST_POI_TEL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OST_POI_FAX = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OST_POI_GEO_LONGI = table.Column<double>(type: "float", nullable: true),
                    OST_POI_GEO_LAT = table.Column<double>(type: "float", nullable: true),
                    OST_POI_LOKALIZACJA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    STREFA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REZ = table.Column<int>(type: "int", nullable: true),
                    REZ_DATA_GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    REZ_LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    REZ_PRACOWNIK_ID = table.Column<int>(type: "int", nullable: true),
                    REZ_PRACOWNIK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    POBR = table.Column<int>(type: "int", nullable: true),
                    POBR_DATA_GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    POBR_LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    POBR_PRACOWNIK_ID = table.Column<int>(type: "int", nullable: true),
                    POBR_PRACOWNIK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    POBR_OBIEKT_TYP = table.Column<int>(type: "int", nullable: true),
                    POBR_OBIEKT_ID = table.Column<int>(type: "int", nullable: true),
                    POBR_OBIEKT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DORAZNY = table.Column<int>(type: "int", nullable: true),
                    UWAGI_DO_POJAZDU = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    WARUNKI_DODATKOWE = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    STATUS = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_GIELDA_POJAZDOW", x => x.ID_TMP_GIELDA_POJAZDOW);
                });

            migrationBuilder.CreateTable(
                name: "TMP_KALK_STAWKI_AIR",
                columns: table => new
                {
                    ID_TMP_KALK_STAWKI_AIR = table.Column<int>(type: "int", nullable: false),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    GRUPA = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    KLIENT_ID = table.Column<int>(type: "int", nullable: true),
                    OPIS_ID = table.Column<int>(type: "int", nullable: true),
                    OPIS_DOD = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    ILOSC = table.Column<double>(type: "float", nullable: true),
                    JM = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    CENA_JEDN = table.Column<double>(type: "float", nullable: true),
                    NETTO = table.Column<double>(type: "float", nullable: true),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    INFO = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_KALK_STAWKI_AIR", x => x.ID_TMP_KALK_STAWKI_AIR);
                });

            migrationBuilder.CreateTable(
                name: "TMP_KALK_STAWKI_LTL",
                columns: table => new
                {
                    ID_TMP_KALK_STAWKI_LTL = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    GRUPA = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    KLIENT_ID = table.Column<int>(type: "int", nullable: true),
                    OPIS_ID = table.Column<int>(type: "int", nullable: true),
                    OPIS_DOD = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    ILOSC = table.Column<double>(type: "float", nullable: true),
                    JM = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    CENA_JEDN = table.Column<double>(type: "float", nullable: true),
                    NETTO = table.Column<double>(type: "float", nullable: true),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    INFO = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    CENNIK_INFO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PACZKI_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_KALK_STAWKI_LTL", x => x.ID_TMP_KALK_STAWKI_LTL);
                });

            migrationBuilder.CreateTable(
                name: "TMP_KALKULACJE",
                columns: table => new
                {
                    ID_TMP_KALKULACJE = table.Column<int>(type: "int", nullable: false),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    LP = table.Column<int>(type: "int", nullable: true),
                    OPIS_KOD = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    OPIS_ID = table.Column<int>(type: "int", nullable: true),
                    OPIS = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    OPIS_DOD = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    CENNIK_ID = table.Column<int>(type: "int", nullable: true),
                    CENNIK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KLIENT_ID = table.Column<int>(type: "int", nullable: true),
                    KLIENT = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    NETTO_K = table.Column<double>(type: "float", nullable: true),
                    VAT_ID = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    STAWKA_VAT = table.Column<double>(type: "float", nullable: true),
                    COD = table.Column<int>(type: "int", nullable: true),
                    UBEZP = table.Column<int>(type: "int", nullable: true),
                    SMS = table.Column<int>(type: "int", nullable: true),
                    OPLATA = table.Column<int>(type: "int", nullable: true),
                    TRANSPORT = table.Column<int>(type: "int", nullable: true),
                    RM = table.Column<int>(type: "int", nullable: true),
                    RO = table.Column<int>(type: "int", nullable: true),
                    TYP = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    ILOSC = table.Column<double>(type: "float", nullable: true),
                    CENA_JEDN = table.Column<double>(type: "float", nullable: true),
                    ID_KALKULACJE = table.Column<int>(type: "int", nullable: true),
                    WALUTA_FV = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    JAK_ROZL = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "FV/NO/RW"),
                    WPROW_CZAS = table.Column<DateTime>(type: "datetime", nullable: true),
                    WPROW_KTO = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    WPROW_LOK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    WPROW_DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DOTYCZY = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    RABAT = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')"),
                    RABAT_WARTOSC = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')"),
                    AKCEPT = table.Column<int>(type: "int", nullable: true),
                    VISIBLE = table.Column<int>(type: "int", nullable: true),
                    DONTSAVE = table.Column<int>(type: "int", nullable: true),
                    KURS_WG_DATY = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    TYP_TAB = table.Column<int>(type: "int", nullable: true),
                    TYP_KURS = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    JM = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    KONTENERY_TYP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Typ kontenera"),
                    CENNIK_INFO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PACZKI_ID = table.Column<int>(type: "int", nullable: true),
                    RKTNP = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy pozycja pochodzi z RKTNP (Rozliczenie Kosztów Trasy Na Przesyłki)"),
                    RKTNP_KALK_TRASY_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kalulacji na trasie (używane w RKTNP)"),
                    RKTNP_FV_POZ_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do pozycji faktury (używane w RKTNP)"),
                    RKTNP_RW_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do RW (używane w RKTNP)"),
                    OBIEKT_ID = table.Column<int>(type: "int", nullable: true),
                    KATEGORIA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KURS_WYM = table.Column<double>(type: "float", nullable: true),
                    KONTENERY_ID = table.Column<int>(type: "int", nullable: true),
                    KONTENERY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    MARZA_WART = table.Column<double>(type: "float", nullable: true),
                    MARZA_TYP = table.Column<int>(type: "int", nullable: true),
                    FAKTURA_ID = table.Column<int>(type: "int", nullable: true),
                    FAKTURA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NETTO_F = table.Column<double>(type: "float", nullable: true),
                    WALUTA_F = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    DO_ROZLICZENIA = table.Column<int>(type: "int", nullable: true),
                    TYLKO_RELACJA = table.Column<int>(type: "int", nullable: true),
                    LISTY_LINIOWE_ID = table.Column<int>(type: "int", nullable: true),
                    PROMY_ID = table.Column<int>(type: "int", nullable: true),
                    GOT_DO_FV = table.Column<int>(type: "int", nullable: true),
                    AKCEPT_CZAS = table.Column<DateTime>(type: "datetime", nullable: true),
                    AKCEPT_KTO = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    AKCEPT_LOK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    AKCEPT_DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    AKCEPT_UWAGI = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    KOR_DO_ZERA = table.Column<short>(type: "smallint", nullable: true),
                    RKTNP_PROMY_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do identyfikacji promu (używane w RKTNP)"),
                    TYP_OPLATY = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Kody typów opłat stosowane w polu 47 formularza SAD"),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_KALKULACJE", x => x.ID_TMP_KALKULACJE);
                });

            migrationBuilder.CreateTable(
                name: "TMP_KIEROWCY",
                columns: table => new
                {
                    ID_TMP_KIEROWCY = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true),
                    KOD_KRESKOWY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KOD_KRESKOWY_EXT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OBCY = table.Column<int>(type: "int", nullable: true),
                    OBCY_UMOWA = table.Column<int>(type: "int", nullable: true),
                    STATUS_EMISJA = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KIEROWCY_GRUPY_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCY_GRUPY = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    STANOWISKO = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    KIEROWCA = table.Column<int>(type: "int", nullable: true),
                    SPEDYTOR = table.Column<int>(type: "int", nullable: true),
                    DYSPOZYTOR = table.Column<int>(type: "int", nullable: true),
                    NAZWISKO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    IMIE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    AKTYWNY = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TELEFON = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    TELEFON_KOM = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    TEL_SLUZBOWY2 = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    EMAIL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DATA_ZATRUDNIENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_ZWOLNIENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    PESEL = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    KONTO_ID = table.Column<int>(type: "int", nullable: true),
                    KONTO = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    NUMER_DOWODU = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    NUMER_DOWODU_WYD = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    NUMER_DOWODU_WAZN = table.Column<DateTime>(type: "datetime", nullable: true),
                    PASZPORT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PASZPORT_WAZN = table.Column<DateTime>(type: "datetime", nullable: true),
                    PRAWO_JAZDY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PRAWO_JAZDY_KAT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PRAWO_JAZDY_WAZN = table.Column<DateTime>(type: "datetime", nullable: true),
                    SWIAD_KWALIF = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SWIAD_KWALIF_WAZN = table.Column<DateTime>(type: "datetime", nullable: true),
                    BADANIE_LEK_DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    BADANIE_LEK_WAZN = table.Column<DateTime>(type: "datetime", nullable: true),
                    BADANIE_PSYCH_DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    BADANIE_PSYCH_WAZN = table.Column<DateTime>(type: "datetime", nullable: true),
                    KURS_PRZEWOZ_RZECZY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KURS_PRZEWOZ_RZECZY_WAZN = table.Column<DateTime>(type: "datetime", nullable: true),
                    KURS_PRZEWOZ_OSOB = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KURS_PRZEWOZ_OSOB_WAZN = table.Column<DateTime>(type: "datetime", nullable: true),
                    ADR = table.Column<int>(type: "int", nullable: true),
                    KLASY_ADR = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ADR_CYSTERNA = table.Column<int>(type: "int", nullable: true),
                    HACCP = table.Column<int>(type: "int", nullable: true),
                    ADR_WAZN = table.Column<DateTime>(type: "datetime", nullable: true),
                    ILE_DNI_PRACY_C = table.Column<int>(type: "int", nullable: true),
                    ADRES = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    MIASTO = table.Column<string>(type: "varchar(80)", unicode: false, maxLength: 80, nullable: true),
                    KOD_POCZTOWY = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    KRAJ = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    DATA_UR = table.Column<DateTime>(type: "datetime", nullable: true),
                    MIEJSCE_UR = table.Column<string>(type: "varchar(80)", unicode: false, maxLength: 80, nullable: true),
                    KLIENT_ID = table.Column<int>(type: "int", nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KONTO_FK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KONTO_FK_2 = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KONTO_FK_3 = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ZAKAZ_COD = table.Column<int>(type: "int", nullable: true),
                    ZAGRANICA = table.Column<int>(type: "int", nullable: true),
                    UZYTKOWNIK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    UZYTKOWNIK_ID = table.Column<int>(type: "int", nullable: true),
                    ZATRUDNIONY_W = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ZATRUDNIONY_W_ID = table.Column<int>(type: "int", nullable: true),
                    UCZEN = table.Column<int>(type: "int", nullable: true),
                    DO_KIEDY_BYL_UCZEN = table.Column<DateTime>(type: "datetime", nullable: true),
                    INFO_DLA_OPERATORA = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true),
                    FORMA_ZATRUDNIENIA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    UMOWA = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    PLACA_PODSTAWOWA = table.Column<double>(type: "float", nullable: true),
                    STAWKA_ZA_KM = table.Column<double>(type: "float", nullable: true),
                    WL_WYNAGR = table.Column<int>(type: "int", nullable: true),
                    PROG_FRACHT = table.Column<double>(type: "float", nullable: true),
                    PROG_FRACHT_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    PROWIZJA = table.Column<double>(type: "float", nullable: true),
                    PROWIZJA_I = table.Column<double>(type: "float", nullable: true),
                    PROWIZJA_II = table.Column<double>(type: "float", nullable: true),
                    PROWIZJA_UMZL = table.Column<double>(type: "float", nullable: true),
                    PROWIZJA_MIN = table.Column<double>(type: "float", nullable: true),
                    WYNAGR_SCHEMAT_ID = table.Column<int>(type: "int", nullable: true),
                    WYNAGR_SCHEMAT = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TEL_SL_OPERATOR = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TEL_SL_TARYFA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    TEL_SL_ROAMING = table.Column<int>(type: "int", nullable: true),
                    TEL_SL_UM_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    TEL_SL_UM_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    TEL_SL_HASLO = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TEL_SLUZBOWY = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    TEL_MODEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TEL_TYP = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TEL_NR_SER = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PIN = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    PUK1 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    PUK2 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    OPT_1 = table.Column<byte[]>(type: "image", nullable: true),
                    OPT_2 = table.Column<byte[]>(type: "image", nullable: true),
                    E_TACHO_NUMER = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    E_TACHO_DATA_WAZNOSCI = table.Column<DateTime>(type: "datetime", nullable: true),
                    E_TACHO_LAST_READ = table.Column<DateTime>(type: "datetime", nullable: true),
                    E_TACHO_KRAJ = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    INELO_UPDATE = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "czy modyfikacja z INELO"),
                    SFM_Status = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    SFM_TRA_ID = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    ZDJECIE = table.Column<byte[]>(type: "image", nullable: true),
                    SA_UWAGI = table.Column<int>(type: "int", nullable: true),
                    MOBILE_ACTIVE = table.Column<int>(type: "int", nullable: true),
                    MOBILE_PASS_HASH = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    MOBILE_PROFILE = table.Column<int>(type: "int", nullable: true),
                    MOBILE_PASS_RESET_KEY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    MOBILE_PASS_RESET_INFO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    MOBILE_MODULE = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    NR_LOKALIZATORA_GPS = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    REJON = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DRIVER_KEY = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Indywidualny klucz kierowcy podawany przez Przewoźnika w przypadku korzystania z aplikacji mobilnej SENT-OIL"),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    OBYWATELSTWO = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    ForcePasswordReset = table.Column<int>(type: "int", nullable: true),
                    DT_HASLO = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_ZJAZDU = table.Column<DateTime>(type: "datetime", nullable: true),
                    LastRequest = table.Column<DateTime>(type: "datetime", nullable: true),
                    LastResponse = table.Column<DateTime>(type: "datetime", nullable: true),
                    ID_KIEROWCY = table.Column<int>(type: "int", nullable: true),
                    STATUS = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Status"),
                    SLOT_1 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Status - SLOT 1"),
                    SLOT_2 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Status - SLOT 2"),
                    SLOT_3 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Status - SLOT 3"),
                    SLOT_4 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Status - SLOT 4"),
                    SLOT_5 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Status - SLOT 5")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_KIEROWCY", x => x.ID_TMP_KIEROWCY);
                });

            migrationBuilder.CreateTable(
                name: "TMP_KONTENERY",
                columns: table => new
                {
                    ID_TMP_KONTENERY = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    ID_KONTENERY = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator kontrenera"),
                    TYP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Typ kontenera"),
                    NUMER = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Numer kontenera"),
                    LADUNEK_LP = table.Column<int>(type: "int", nullable: true),
                    OPIS_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do opisu opakowania - tab: OPISY_TOWAROW"),
                    OPIS = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true, comment: "Opis towaru"),
                    OPAKOWANIE_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do opakowania - tab: OPAKOWANIA"),
                    KOD_OPAK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Kod opakowania"),
                    OPAKOWANIE = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Symbol opakowania"),
                    ILOSC = table.Column<double>(type: "float", nullable: true, comment: "Ilość towaru w kontenerze"),
                    WAGA = table.Column<double>(type: "float", nullable: true, comment: "Waga towaru w kontenerze"),
                    WAGA_VGM = table.Column<double>(type: "float", nullable: true, comment: "Waga towaru w kontenerze"),
                    WAGA_TARA = table.Column<double>(type: "float", nullable: true, comment: "Waga towaru w kontenerze"),
                    OBJ = table.Column<double>(type: "float", nullable: true, comment: "Obj towaru w kontenerze"),
                    TEMP_MIN = table.Column<double>(type: "float", nullable: true, comment: "Temperatura od"),
                    TEMP_MAX = table.Column<double>(type: "float", nullable: true, comment: "Temperatura do"),
                    NUMER_HBL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer HBL"),
                    NUMER_MBL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "NUmer MBL"),
                    NUMER_PLOMBY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer plomby"),
                    NUMER_PLOMBY2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer plomby"),
                    NUMER_PLOMBY3 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer plomby"),
                    NUMER_DEKLARACJI = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer deklaracji"),
                    TEU = table.Column<double>(type: "float", nullable: true, comment: "Ilość TEU"),
                    OPISUJACY_ID = table.Column<int>(type: "int", nullable: true),
                    OPISUJACY = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DEMURRAGE = table.Column<int>(type: "int", nullable: true),
                    DETENTION = table.Column<int>(type: "int", nullable: true),
                    MIX_D_D = table.Column<int>(type: "int", nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy są załączniki"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja"),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dział"),
                    STATUS = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Status"),
                    DATA_PODJECIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_ZWOLNIENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_ZWROTU = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_GATE_IN = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_DOST_ODB = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_ROZLADUNKU = table.Column<DateTime>(type: "datetime", nullable: true),
                    MIEJSCE_POD_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE_POD = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    MIEJSCE_ZWR_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE_ZWR = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true),
                    REF_1 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Ref 1"),
                    REF_2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Ref 2"),
                    REF_3 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Ref 3"),
                    REF_4 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Ref 4"),
                    REF_5 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Ref 5"),
                    K_NUMBER = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "* nie używać *"),
                    K_TYPE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "* nie używać *"),
                    K_SIZE = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "* nie używać *"),
                    K_STEAM_CO = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "* nie używać *"),
                    K_VESSEL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "* nie używać *"),
                    K_DEST_PORT = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "* nie używać *"),
                    K_DEST = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "* nie używać *"),
                    K_SERIAL_NO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "* nie używać *"),
                    K_BOOK_NO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "* nie używać *"),
                    K_VOYAGE_NO = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "* nie używać *"),
                    K_SEAL_NO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "* nie używać *"),
                    K_ITEMS = table.Column<double>(type: "float", nullable: true, comment: "* nie używać *"),
                    K_WEIGHT_LBS = table.Column<double>(type: "float", nullable: true, comment: "* nie używać *"),
                    K_WEIGHT_KG = table.Column<double>(type: "float", nullable: true, comment: "* nie używać *"),
                    STAN_POD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    STAN_ZWR = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    RAIL_TYPE = table.Column<int>(type: "int", nullable: true),
                    TYPY_WAGONOW_ID = table.Column<int>(type: "int", nullable: true),
                    OPERATOR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NHM = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    FUMIGACJA = table.Column<int>(type: "int", nullable: true),
                    RAMPA_FITOSAN = table.Column<int>(type: "int", nullable: true),
                    PRYWATNY = table.Column<int>(type: "int", nullable: true),
                    OPERATOR_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_KONTENERY", x => x.ID_TMP_KONTENERY);
                });

            migrationBuilder.CreateTable(
                name: "TMP_KONTENERY_ZLECENIA",
                columns: table => new
                {
                    ID_TMP_KONTENERY_ZLECENIA = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    ID_KONTENERY_ZLECENIA = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator polisy"),
                    KONTENERY_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIA_TYP = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    ZLECENIA_ID = table.Column<int>(type: "int", nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_KONTENERY_ZLECENIA", x => x.ID_TMP_KONTENERY_ZLECENIA);
                });

            migrationBuilder.CreateTable(
                name: "TMP_KONTRAHENCI",
                columns: table => new
                {
                    ID_TMP_KONTRAHENCI = table.Column<int>(type: "int", nullable: false),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    TYP_KONTR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Typ kontrahenta - mapa bitowa"),
                    SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Symbol kontrahenta"),
                    KRAJ = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: true, comment: "Kraj")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_KONTRAHENCI", x => x.ID_TMP_KONTRAHENCI);
                });

            migrationBuilder.CreateTable(
                name: "TMP_KONTRAHENCI_DOKUMENTY",
                columns: table => new
                {
                    ID_TMP_KONTRAHENCI_DOKUMENTY = table.Column<int>(type: "int", nullable: false),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    LP = table.Column<int>(type: "int", nullable: true, comment: "Lp"),
                    KOD = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Kod dokumentu"),
                    OPIS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Opis"),
                    DOMYSLNY = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy domyślny"),
                    WYMAGANY = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy wymagany"),
                    ROD = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy ROD"),
                    EROD = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy eROD"),
                    ROD_DO = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Do kogo zwrot ROD"),
                    GRUPA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Grupa dokumentu"),
                    STATUS = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Status dokumentu"),
                    ID_KONTRAHENCI_DOKUMENTY = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_KONTRAHENCI_DOKUMENTY", x => x.ID_TMP_KONTRAHENCI_DOKUMENTY);
                });

            migrationBuilder.CreateTable(
                name: "TMP_KONTRAHENCI_FINANSE",
                columns: table => new
                {
                    ID_TMP_KONTRAHENCI_FINANSE = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true),
                    ID_KONTRAHENCI_FINANSE = table.Column<int>(type: "int", nullable: true),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Relacja do kontrahenta - tab: KONTRAHENCI"),
                    SYSTEMOWY = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Flaga, czy systemowy"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dotyczy lokalizacji lub *"),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dotyczy działu lub *"),
                    LOKALIZACJA_ODP = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja odpowiedzialna lub *"),
                    WALUTA_ROZLICZEN = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Waluta rozliczeń z kontrahentem"),
                    WALUTA_ROZLICZEN_KOSZTY = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Waluta rozliczeń z kontrahentem - koszty"),
                    WALUTA_ROZLICZEN_PROM = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Waluta rozliczeń z kontrahentem - promy"),
                    WALUTA_FRACHTU = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Waluta w jakiej podawany jest fracht na zleceniach"),
                    WALUTA_FRACHTU_KOSZTY = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Waluta w jakiej podawany jest fracht na zleceniach - koszty"),
                    FORMA_PLATNOSCI = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Sprzedaż - Domyślna forma płatności"),
                    TERMIN_PLATNOSCI = table.Column<int>(type: "int", nullable: true, comment: "Sprzedaż - Domyślny termin płatności"),
                    TERMIN_PLATNOSCI_OD = table.Column<int>(type: "int", nullable: true, comment: "Sprzedaż - Sposób wyliczania daty płatności: 0-od daty wyst, 1-od daty sprzed"),
                    TERMIN_PLATNOSCI_OD_KMIE = table.Column<int>(type: "int", nullable: true, comment: "Sprzedaż - Sposób wyliczania daty płatności: od końca miesiąca wzgl daty z TERMIN_PLATNOSCI_OD"),
                    FORMA_PLATNOSCI_DOST = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Zakup - Domyślna forma płatności"),
                    TERMIN_PLATNOSCI_DOST = table.Column<int>(type: "int", nullable: true, comment: "Zakup - Domyślny termin płatności"),
                    TERMIN_PLATNOSCI_DOST_OD = table.Column<int>(type: "int", nullable: true, comment: "Zakup - Sposób wyliczania daty płatności: 0-od daty wyst, 1-od daty sprzed"),
                    TERMIN_PLATNOSCI_DOST_OD_KMIE = table.Column<int>(type: "int", nullable: true, comment: "Zakup - Sposób wyliczania daty płatności: od końca miesiąca wzgl daty z TERMIN_PLATNOSCI_DOST_OD"),
                    FORMA_PLATNOSCI_PROM = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Sprz. prom - Domyślna forma płatności"),
                    TERMIN_PLATNOSCI_PROM = table.Column<int>(type: "int", nullable: true, comment: "Sprz. prom - Domyślny termin płatności"),
                    TERMIN_PLATNOSCI_PROM_OD = table.Column<int>(type: "int", nullable: true, comment: "Sprz. prom - Sposób wyliczania daty płatności: 0-od daty wyst, 1-od daty sprzed"),
                    TERMIN_PLATNOSCI_PROM_OD_KMIE = table.Column<int>(type: "int", nullable: true, comment: "Sprz. prom - Sposób wyliczania daty płatności: od końca miesiąca wzgl daty z TERMIN_PLATNOSCI_PROM_OD"),
                    FORMA_PLATNOSCI_CLO = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Sprzedaż - Domyślna forma płatności"),
                    TERMIN_PLATNOSCI_CLO = table.Column<int>(type: "int", nullable: true, comment: "Sprzedaż - Domyślny termin płatności"),
                    TERMIN_PLATNOSCI_CLO_OD = table.Column<int>(type: "int", nullable: true, comment: "Sprzedaż - Sposób wyliczania daty płatności: 0-od daty wyst, 1-od daty sprzed"),
                    VAT_W_PLN = table.Column<int>(type: "int", nullable: true),
                    VAT_W_PLN_KOSZTY = table.Column<int>(type: "int", nullable: true),
                    SplitPayment = table.Column<int>(type: "int", nullable: true),
                    KURS_WG = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Sprzedaż - Wg jakiej daty dobierac kurs waluty"),
                    KURS_Z_DNIA_P = table.Column<int>(type: "int", nullable: true, comment: "Sprzedaż - Flaga, czy kurs z dnia poprzedzajacego"),
                    TYP_KURS_K = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "Sprzedaż - Typ kursy: SR,KU,SP"),
                    TYP_TAB_K = table.Column<int>(type: "int", nullable: true, comment: "Sprzedaż - Typ tabeli: 0 - NBP, ..."),
                    KURS_WG_P = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Zakup - Wg jakiej daty dobierac kurs waluty"),
                    KURS_Z_DNIA_P_P = table.Column<int>(type: "int", nullable: true, comment: "Zakup - Flaga, czy kurs z dnia poprzedzajacego"),
                    TYP_KURS_P = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "Zakup - Typ kursy: SR,KU,SP"),
                    TYP_TAB_P = table.Column<int>(type: "int", nullable: true, comment: "Zakup - Typ tabeli: 0 - NBP, ..."),
                    KURS_WG_PROM = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Sprzedaż promów - Wg jakiej daty dobierac kurs waluty"),
                    KURS_Z_DNIA_P_PROM = table.Column<int>(type: "int", nullable: true, comment: "Sprzedaż promów - Flaga, czy kurs z dnia poprzedzajacego"),
                    TYP_KURS_PROM = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "Sprzedaż promów - Typ kursy: SR,KU,SP"),
                    TYP_TAB_PROM = table.Column<int>(type: "int", nullable: true, comment: "Sprzedaż promów - Typ tabeli: 0 - NBP, ..."),
                    V_KURS_WG = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Sprzedaż VAT - Wg jakiej daty dobierac kurs waluty"),
                    V_KURS_Z_DNIA_P = table.Column<int>(type: "int", nullable: true, comment: "Sprzedaż VAT - Flaga, czy kurs z dnia poprzedzajacego"),
                    V_TYP_TAB_K = table.Column<int>(type: "int", nullable: true, comment: "Sprzedaż VAT - Typ tabeli: 0 - NBP, ..."),
                    V_TYP_KURS_K = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "Sprzedaż VAT - Typ kursy: SR,KU,SP"),
                    V_KURS_WG_P = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Zakup VAT - Wg jakiej daty dobierac kurs waluty"),
                    V_KURS_Z_DNIA_P_P = table.Column<int>(type: "int", nullable: true, comment: "Zakup VAT - Flaga, czy kurs z dnia poprzedzajacego"),
                    V_TYP_KURS_P = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "Zakup VAT - Typ kursy: SR,KU,SP"),
                    V_TYP_TAB_P = table.Column<int>(type: "int", nullable: true, comment: "Zakup VAT- Typ tabeli: 0 - NBP, ..."),
                    V_KURS_WG_PROM = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Sprzedaż promów VAT - Wg jakiej daty dobierac kurs waluty"),
                    V_KURS_Z_DNIA_P_PROM = table.Column<int>(type: "int", nullable: true, comment: "Sprzedaż promów VAT - Flaga, czy kurs z dnia poprzedzajacego"),
                    V_TYP_TAB_PROM = table.Column<int>(type: "int", nullable: true, comment: "Sprzedaż promów VAT - Typ tabeli: 0 - NBP, ..."),
                    V_TYP_KURS_PROM = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "Sprzedaż promów VAT - Typ kursy: SR,KU,SP"),
                    METODA_KASOWA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    KONTO_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do domyślnego konta bankowego do faktur - tab: KONTRAHENCI_KONTA"),
                    KONTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer domyślnego konta bankowego do faktur"),
                    IBAN = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy numer domyślnego konta w formacie IBAN"),
                    SUB_GENER = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga czy subkonto z generatora"),
                    WYDRUK_ODEBRAL = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true, comment: "Osoba odbierająca wydruk faktury"),
                    L_ORG = table.Column<int>(type: "int", nullable: true, comment: "Domyślna liczba oryginałów faktur"),
                    L_KOP = table.Column<int>(type: "int", nullable: true, comment: "Domyślna liczba kopii faktur"),
                    PLATNIK_ODB_FV = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy płatnik jest odbiorcą faktury"),
                    PLATNIK_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do płatnika - tab: KONTRAHENCI"),
                    PLATNIK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Symbol płatnika"),
                    JEZYK_FAKTURY = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, defaultValueSql: "('PL')", comment: "Domyślny język dla wystawianych faktur"),
                    ZABLOKOWANY = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy kontrahent jest zablokowany"),
                    DODATKI_PALIWOWE = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy dodawać dodatki paliwowe"),
                    DODATKI_PALIWOWE_DO_FR = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy dodawać dodatki paliwowe do frachtu"),
                    SPEC_FV_ZA_WY = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy do spec. FV brac ZA/WY czy NAD/ODB"),
                    AUTOFV_START = table.Column<DateTime>(type: "datetime", nullable: true),
                    AUTOFV_STOP = table.Column<DateTime>(type: "datetime", nullable: true),
                    AUTOFV_LASTRUN = table.Column<DateTime>(type: "datetime", nullable: true),
                    AUTOFV_ACTIVE = table.Column<int>(type: "int", nullable: true),
                    AUTOFV_GETOLDER = table.Column<int>(type: "int", nullable: true),
                    KONTRAHENCI_ZASADY_FV_ID = table.Column<int>(type: "int", nullable: true),
                    KONTRAHENCI_CYKLE_FV_ID = table.Column<int>(type: "int", nullable: true),
                    KONTRAHENCI_KRYTERIUM_FV_ID = table.Column<int>(type: "int", nullable: true),
                    AUTOFV_EMISJA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    AUTOFV_DATA_ROZL_DOK = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, dedyk dla RSL"),
                    TERMIN_PLATNOSCI_DNI_ROB = table.Column<int>(type: "int", nullable: true, comment: "Sprzedaż - Sposób wyliczania daty płatności: wg dni roboczych"),
                    TERMIN_PLATNOSCI_DOST_DNI_ROB = table.Column<int>(type: "int", nullable: true, comment: "Zakup - Sposób wyliczania daty płatności: wg dni roboczych"),
                    TERMIN_PLATNOSCI_PROM_DNI_ROB = table.Column<int>(type: "int", nullable: true, comment: "Sprz. prom - Sposób wyliczania daty płatności: wg dni roboczych"),
                    DATA_KONTR_WYKAZ_WL = table.Column<DateTime>(type: "datetime", nullable: true),
                    WYNIK_KONTR_WYKAZ_WL = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    REQUEST_ID = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    KOD_IZBY_CELNEJ = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    SAM_PLACI_DLUG_CELNY = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy sam płaci dług celny")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_KONTRAHENCI_FINANSE", x => x.ID_TMP_KONTRAHENCI_FINANSE);
                });

            migrationBuilder.CreateTable(
                name: "TMP_KONTRAHENCI_KONTA",
                columns: table => new
                {
                    ID_TMP_KONTRAHENCI_KONTA = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    KRAJ_IBAN = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "Oznaczenie kraju dla formatu IBAN"),
                    KONTO = table.Column<string>(type: "varchar(36)", unicode: false, maxLength: 36, nullable: false, defaultValueSql: "('')", comment: "Numer rachunku"),
                    BANK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Bank w którym prowadzony jest rachunek"),
                    SWIFT_CODE = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Kod SWIFT - dla operacji miedzynarodowych"),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: false, defaultValueSql: "('')", comment: "Waluta rachunku"),
                    DOMYSLNE = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga czy konto domyslne (dla waluty)"),
                    COD = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga czy konto dla COD"),
                    SUB_GENER = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga czy subkonto z generatora"),
                    SUB_GENER_KONTRAH_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kontrahenta dla któego wygenerowano to subkonto - tab: KONTRAHENCI"),
                    SUBKONTO_MNEMONIC_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do definicji subkont - tab: SUBKONTO_MNEMONIC"),
                    FAKTOR = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Symbol kontrahenta-faktora"),
                    FAKTOR_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kontrahenta-faktora - tab: KONTRAHENCI"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja"),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dział")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_KONTRAHENCI_KONTA", x => x.ID_TMP_KONTRAHENCI_KONTA);
                });

            migrationBuilder.CreateTable(
                name: "TMP_KONTRAHENCI_ODDZIALY",
                columns: table => new
                {
                    ID_TMP_KONTRAHENCI_ODDZIALY = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    MIEJSCA_ZA_ROZLADUNKU_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do POI - tab: MIEJSCA_ZA_ROZLADUNKU"),
                    KONTRAHENCI_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kontrahenta powiązanego - tab: KONTRAHENCI"),
                    TYP_POWIAZANIA = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Typ powiązania"),
                    SYMBOL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Nazwa oddziału"),
                    NAZWA = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: false, defaultValueSql: "('')", comment: "Nazwa oddziału"),
                    ADRES = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true, comment: "Adres"),
                    KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Kod pocztowy"),
                    MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Miejscowość"),
                    KRAJ = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "Kraj"),
                    TEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer telefonu"),
                    FAX = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer faksu"),
                    EMAIL = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true, comment: "Adres e-mail"),
                    OSOBA = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true, comment: "Osoba kontaktowa"),
                    GEO_LONGI = table.Column<double>(type: "float", nullable: true, comment: "GPS - długość"),
                    GEO_LAT = table.Column<double>(type: "float", nullable: true, comment: "GPS - szerokość"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja"),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dział"),
                    MAILING = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy wysyłać wiadomości mailingowe"),
                    KONTO_FK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Konto księgowe 1"),
                    OPIS_DOD = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ID_KONTRAHENCI_ODDZIALY = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_KONTRAHENCI_ODDZIALY", x => x.ID_TMP_KONTRAHENCI_ODDZIALY);
                });

            migrationBuilder.CreateTable(
                name: "TMP_KONTRAHENCI_OPAK",
                columns: table => new
                {
                    ID_TMP_KONTRAHENCI_OPAK = table.Column<int>(type: "int", nullable: false),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    OPAKOWANIA_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Relacja do opakowania - tab: OPAKOWANIA")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_KONTRAHENCI_OPAK", x => x.ID_TMP_KONTRAHENCI_OPAK);
                });

            migrationBuilder.CreateTable(
                name: "TMP_KONTRAHENCI_OPIEK",
                columns: table => new
                {
                    ID_TMP_KONTRAHENCI_OPIEK = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true),
                    ID_KONTRAHENCI_OPIEK = table.Column<int>(type: "int", nullable: true),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kontrahenta - tab: KONTRAHENCI"),
                    KIND = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Typ opiekuna OH, OB"),
                    USER_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do opiekuna - tab: UZYTKOWNICY"),
                    REPTYPE_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do typu - tab: KONTRAH_TYP_REPREZ"),
                    DEF = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy domyślny"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dotyczy lokalizacji"),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dotyczy działu"),
                    REJON = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Rejon"),
                    KOD = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Kod"),
                    DtFrom = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data od"),
                    DtTo = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data do")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_KONTRAHENCI_OPIEK", x => x.ID_TMP_KONTRAHENCI_OPIEK);
                });

            migrationBuilder.CreateTable(
                name: "TMP_KONTRAHENCI_POLISY_OC",
                columns: table => new
                {
                    ID_TMP_KONTRAHENCI_POLISY_OC = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true),
                    ID_KONTRAHENCI_POLISY_OC = table.Column<int>(type: "int", nullable: true),
                    TYP = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Typ polisy OC (OCP/OCS itd)"),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kontrahenta - tab: KONTRAHENCI"),
                    NR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer polisy ubezpieczenia przewoźnika"),
                    UBEZP = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Ubezpieczyciel"),
                    UBEZP_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do ubezpieczyciela - tab: KONTRAHENCI"),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ważnosci ubezpieczenia OC przewoźnika"),
                    WARTOSC = table.Column<double>(type: "float", nullable: true, comment: "Wartość ubezpieczenia OC przewoźnika"),
                    WARTOSC_WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Waluta wartości ubezpieczenia OC przewoźnika"),
                    DATA_BLOKADA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy jest blokada ubezpieczenia OC spedytora"),
                    KRAJ_ZAGR = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy ubezpieczenie OC przewoźnika obejmuje kraj czy zagranice"),
                    UWAGI = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true, comment: "Uwagi do ubezpieczenia OC przewoźnika"),
                    KRAJE = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true, comment: "Dla jakich krajów ważna"),
                    KRAJE_BLOKADA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy jest blokada gdy kraj spoza listy"),
                    POLISA_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do polisy - tab: POLISY")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_KONTRAHENCI_POLISY_OC", x => x.ID_TMP_KONTRAHENCI_POLISY_OC);
                });

            migrationBuilder.CreateTable(
                name: "TMP_KONTRAHENCI_REPREZ",
                columns: table => new
                {
                    ID_TMP_KONTRAHENCI_REPREZ = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    TYTUL = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Tytuł"),
                    NAZWISKO_IMIE = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: false, defaultValueSql: "('')", comment: "Nazwisko i imię"),
                    STANOWISKO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Stanowisko"),
                    GRUPA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Grupa"),
                    TEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Telefon"),
                    TEL_KOM = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Telefon komórkowy"),
                    FAX = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Faks"),
                    EMAIL = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true, comment: "E-mail"),
                    GG = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Numer Gadu-Gadu"),
                    SKYPE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer SKYPE"),
                    GIELDA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Link do giełdy"),
                    OPIS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Dowolne uwagi"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja"),
                    ODDZIAL = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true, comment: "Nazwa oddziału"),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dział"),
                    MAILING = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy wysyłać wiadomości mailingowe"),
                    AKTYWNY = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy pracownik aktywny"),
                    EROD = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy eROD"),
                    POWIADOMIENIE = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy brać do powiadomienia"),
                    PRODUKT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Produkt"),
                    ID_KONTRAHENCI_REPREZ = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_KONTRAHENCI_REPREZ", x => x.ID_TMP_KONTRAHENCI_REPREZ);
                });

            migrationBuilder.CreateTable(
                name: "TMP_KSIAZKA_POCZTOWA_POZ",
                columns: table => new
                {
                    ID_TMP_KSIAZKA_POCZTOWA_POZ = table.Column<int>(type: "int", nullable: false),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    WAGA = table.Column<double>(type: "float", nullable: true, comment: "Waga przesyłki"),
                    OPLATA = table.Column<double>(type: "float", nullable: true, comment: "Opłata pocztowa"),
                    OPLATA_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Waluta opłaty pocztowej"),
                    POBRANIE = table.Column<double>(type: "float", nullable: true, comment: "Kwota pobrania"),
                    POBRANIE_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Waluta kwoty pobrania"),
                    POBRANIE_OPLATA = table.Column<double>(type: "float", nullable: true, comment: "Opłata za pobranie"),
                    POBRANIE_OPLATA_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Waluta opłaty za pobranie"),
                    WEWN = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy przesyłka wewnętrzna"),
                    WEWN_WYS_POCZTA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy przesyłka wewnętrzna wysłana pocztą"),
                    KRAJ_ZAGR = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true, comment: "K-raj / Z-agranica"),
                    POTW_DORECZ = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy za potw. odb."),
                    PRIORYTET = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy priorytet"),
                    ID_KSIAZKA_POCZTOWA_POZ = table.Column<int>(type: "int", nullable: true),
                    OTWARTA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy koperta jest otwarta - tylko jedna otwarta w jednej lokalizacji"),
                    ZAMKNIETA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy koperta jest zamknieta"),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true, comment: "Załaczniki"),
                    OBIEKT_TYP = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Typ obiektu - tab: KS_POCZT_DOKUM"),
                    OBIEKT_ID = table.Column<int>(type: "int", nullable: true, comment: "Systemowy ID obiektu"),
                    OBIEKT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Systemowy numer obiektu"),
                    DATA_UTW = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia koperty"),
                    WYDRUKOWANE = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy wydrukowano książkę pocztową"),
                    DATA_WYDRUKU = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data wydruku książki pocztowej"),
                    GODZ_WYDRUKU = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina wydruku książki pocztowej"),
                    WYSLANE = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy wysłano"),
                    DATA_WYSLANIA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data wysłania"),
                    GODZ_WYSLANIA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina wysłania"),
                    NR_KP = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Numer pozycji książki pocztowej"),
                    NR_KP_KOLEJNY = table.Column<int>(type: "int", nullable: true, comment: "Numer pozycji książki pocztowej - nr kolejny"),
                    NR_KP_MIES = table.Column<int>(type: "int", nullable: true, comment: "Numer pozycji książki pocztowej - miesiąc"),
                    NR_KP_ROK = table.Column<int>(type: "int", nullable: true, comment: "Numer pozycji książki pocztowej - rok"),
                    ADRESAT_ODDZIAL_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do oddziału adresata - tab: KONTRAHENCI_ODDZIALY"),
                    ADRESAT_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do adresata - tab: KONTRAHENCI"),
                    ADRESAT_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Symbol adresata"),
                    ADRESAT_ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Adres odbiorcy"),
                    ADRESAT_KRAJ = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "Kraj odbiorcy"),
                    ADRESAT_NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa odbiorcy"),
                    ADRESAT_ULICA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Ulica odbiorcy"),
                    ADRESAT_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Kod poczt. odbiorcy"),
                    ADRESAT_MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Miasto odbiorcy"),
                    ADRESAT_PRAC_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do oddziału adresata - tab: KONTRAHENCI_REPREZ"),
                    ADRESAT_PRAC = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Pracownik"),
                    NADAWCA_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do nadawcy - tab: KONTRAHENCI"),
                    NADAWCA_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Symbol nadawcy"),
                    NADAWCA_ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Adres nadawcy"),
                    UZYTKOWNIK_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika - tab: UZYTKOWNIK"),
                    UZYTKOWNIK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Symbol użytkownika"),
                    OPIS_PRZESYLKI = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Opis przesyłki"),
                    NR_WLASNY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer własny"),
                    UWAGI = table.Column<string>(type: "text", nullable: true, comment: "Dowolne uwagi do przesyłki"),
                    UWAGI_POCZTY = table.Column<string>(type: "text", nullable: true, comment: "Uwago od poczty"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja"),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dział"),
                    RODZAJ_DOK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Rodzaj dokumentów"),
                    SEGREGATOR = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Numer segregatora"),
                    LOKALIZACJA_ODB = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalziacja odbiorcza"),
                    DZIAL_ODB = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dział odbiorczy"),
                    KOD_KRESKOWY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Kod kreskowy dla koperty"),
                    DORECZONA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy doreczona"),
                    DORECZONA_DATA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data doręczenia"),
                    DORECZONA_NR_POTW = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Nr potwierdzenia"),
                    DORECZONA_ODBIORCA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Odbiorca przesyłki"),
                    PP_NUMERNADANIA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Nr nadania w PP"),
                    PP_FORMAT = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Format listu PP"),
                    PP_GUID = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Nr guid w PP"),
                    STATUS_EMISJA = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    EPO = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy EPO")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_KSIAZKA_POCZTOWA_POZ", x => x.ID_TMP_KSIAZKA_POCZTOWA_POZ);
                });

            migrationBuilder.CreateTable(
                name: "TMP_KSIAZKA_POCZTOWA_POZ_DOK",
                columns: table => new
                {
                    ID_TMP_KSIAZKA_POCZTOWA_POZ_DOK = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true),
                    ID_KSIAZKA_POCZTOWA_POZ_DOK = table.Column<int>(type: "int", nullable: true),
                    KSIAZKA_POCZTOWA_POZ_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do nagłówka książki - tab: KSIAZKA_POCZTOWA_POZ"),
                    OBIEKT_TYP = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Typ obiektu - tab: KS_POCZT_DOKUM"),
                    OBIEKT_ID = table.Column<int>(type: "int", nullable: true, comment: "Systemowy ID obiektu"),
                    OBIEKT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Systemowy numer obiektu"),
                    SEGREGATOR = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Numer segregatora"),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do nadawcy - tab: KONTRAHENCI"),
                    KOD_KRESKOWY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Kod kreskowy pozycji")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_KSIAZKA_POCZTOWA_POZ_DOK", x => x.ID_TMP_KSIAZKA_POCZTOWA_POZ_DOK);
                });

            migrationBuilder.CreateTable(
                name: "TMP_KWIT_PAL",
                columns: table => new
                {
                    ID_TMP_KWIT_PAL = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data kwitu"),
                    NR_KP = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Numer kwitu"),
                    NR_KP_KOLEJNY = table.Column<int>(type: "int", nullable: true, comment: "Numer kolejny z licznika"),
                    NR_KP_ROK = table.Column<int>(type: "int", nullable: true, comment: "Rok z licznika"),
                    NR_KP_MIES = table.Column<int>(type: "int", nullable: true, comment: "Miesiac z licznika"),
                    NR_RFK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer ref. (np. nr dokumentu nadania)"),
                    KLIENT_TYP = table.Column<int>(type: "int", nullable: true, comment: "Typ klienta 0 - odbiorca, 1 - przewoznik, 2 - nadawca"),
                    KLIENT_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do klienta"),
                    KLIENT = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Symbol klienta"),
                    ROZLICZONY = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy rozliczono"),
                    ROZLICZONY_DATA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data rozliczenia kwitu"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja"),
                    UWAGI = table.Column<string>(type: "text", nullable: true, comment: "Uwagi"),
                    EROD = table.Column<int>(type: "int", nullable: true, comment: "Flaga eROD (0/1)"),
                    ROZL_NAD_KWIT = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy rozliczenie z nadawcą za pomocą kwitu"),
                    ROZL_NAD_LP = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy rozliczenie z nadawcą za adnotacji na LP"),
                    WEZWANIE = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy wezwanie"),
                    WEZWANIE_1_D = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data I wezwania"),
                    WEZWANIE_2_D = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data II wezwania"),
                    WEZWANIE_3_D = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data III wezwania")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_KWIT_PAL", x => x.ID_TMP_KWIT_PAL);
                });

            migrationBuilder.CreateTable(
                name: "TMP_KWIT_PAL_POZ",
                columns: table => new
                {
                    ID_TMP_KWIT_PAL_POZ = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    KWIT_PAL_ID = table.Column<int>(type: "int", nullable: true),
                    MAGAZYN_ZDARZENIA_ID = table.Column<int>(type: "int", nullable: true),
                    MAGAZYN_ZDARZENIA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    LISTY_LINIOWE_ID = table.Column<int>(type: "int", nullable: true),
                    LISTY_LINIOWE = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    PRZESYLKI_ID = table.Column<int>(type: "int", nullable: true),
                    PRZESYLKI = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    ZLECENIA_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    ZLECENIA_ZA_WY_ID = table.Column<int>(type: "int", nullable: true),
                    LOKALIZACJA_NADZ = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    PACZKI_ID = table.Column<int>(type: "int", nullable: true),
                    PACZKI = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KOD_OPAK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    OPAKOWANIE = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TYP = table.Column<int>(type: "int", nullable: true),
                    ILOSC = table.Column<int>(type: "int", nullable: true),
                    ILOSC_ROZL = table.Column<int>(type: "int", nullable: true),
                    OPIS = table.Column<string>(type: "varchar(250)", unicode: false, maxLength: 250, nullable: true),
                    WG_LP = table.Column<int>(type: "int", nullable: true),
                    BILANS_OPAK_POZ_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_KWIT_PAL_POZ", x => x.ID_TMP_KWIT_PAL_POZ);
                });

            migrationBuilder.CreateTable(
                name: "TMP_LISTY_LINIOWE",
                columns: table => new
                {
                    ID_TMP_LISTY_LINIOWE = table.Column<int>(type: "int", nullable: false),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    ID_LISTY_LINIOWE = table.Column<int>(type: "int", nullable: true),
                    KIERUNEK = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    NR_LISTU = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_LISTU_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    NR_LISTU_ROK = table.Column<int>(type: "int", nullable: true),
                    NR_LISTU_MIES = table.Column<int>(type: "int", nullable: true),
                    ROZL_NA_PRZES = table.Column<int>(type: "int", nullable: true),
                    ROZL_NA_P_KW_FV = table.Column<double>(type: "float", nullable: true),
                    ROZL_NA_P_KW = table.Column<double>(type: "float", nullable: true),
                    ROZL_NA_P_KW_FV_P = table.Column<double>(type: "float", nullable: true),
                    ROZL_NA_P_KW_P = table.Column<double>(type: "float", nullable: true),
                    SIEC = table.Column<int>(type: "int", nullable: true),
                    KOLKO = table.Column<int>(type: "int", nullable: true),
                    DYNAMICZNA = table.Column<int>(type: "int", nullable: true),
                    NR_BORDERO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    RODZAJ = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TYP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    STREFA = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TRANZYT = table.Column<int>(type: "int", nullable: true),
                    PROM = table.Column<int>(type: "int", nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    ILOSC = table.Column<double>(type: "float", nullable: true),
                    WAGA = table.Column<double>(type: "float", nullable: true),
                    WAGA_DEKL = table.Column<double>(type: "float", nullable: true),
                    WAGA_OBL = table.Column<double>(type: "float", nullable: true),
                    OBJ = table.Column<double>(type: "float", nullable: true),
                    OBJ_DEKL = table.Column<double>(type: "float", nullable: true),
                    MIEJSCA_PAL = table.Column<double>(type: "float", nullable: true),
                    MIEJSCA_PAL_DEKL = table.Column<double>(type: "float", nullable: true),
                    ILOSC_PRZESYLEK = table.Column<double>(type: "float", nullable: true),
                    PRZEWOZNIK_ID = table.Column<int>(type: "int", nullable: true),
                    STAN = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    STATUS = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SPEDYTOR_ID = table.Column<int>(type: "int", nullable: true),
                    SPEDYTOR = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KPL_DOKUM = table.Column<int>(type: "int", nullable: true),
                    PROFIL_POJ_ID = table.Column<int>(type: "int", nullable: true),
                    SAMOCHOD_ID = table.Column<int>(type: "int", nullable: true),
                    NACZEPA_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA2_ID = table.Column<int>(type: "int", nullable: true),
                    ZAPLANOWANA = table.Column<int>(type: "int", nullable: true),
                    PLAN_DATA_ROZLAD = table.Column<DateTime>(type: "datetime", nullable: true),
                    PLAN_GODZ_ROZLAD = table.Column<DateTime>(type: "datetime", nullable: true),
                    PLAN_DATA_ZALAD = table.Column<DateTime>(type: "datetime", nullable: true),
                    PLAN_GODZ_ZALAD = table.Column<DateTime>(type: "datetime", nullable: true),
                    FAKT_DATA_ROZLAD = table.Column<DateTime>(type: "datetime", nullable: true),
                    FAKT_GODZ_ROZLAD = table.Column<DateTime>(type: "datetime", nullable: true),
                    FAKT_DATA_ZALAD = table.Column<DateTime>(type: "datetime", nullable: true),
                    FAKT_GODZ_ZALAD = table.Column<DateTime>(type: "datetime", nullable: true),
                    ODLEGOSC_WG_MAPY = table.Column<double>(type: "float", nullable: true),
                    ODLEGOSC_PUSTE_WG_MAPY = table.Column<double>(type: "float", nullable: true),
                    ODLEGOSC_WG_PRZ = table.Column<double>(type: "float", nullable: true),
                    ODLEGOSC_PUSTE_WG_PRZ = table.Column<double>(type: "float", nullable: true),
                    ODLEGOSC = table.Column<double>(type: "float", nullable: true),
                    ODLEGOSC_PUSTE = table.Column<double>(type: "float", nullable: true),
                    LICZBA_ZAWY = table.Column<double>(type: "float", nullable: true),
                    CENA_ZA_KM = table.Column<double>(type: "float", nullable: true),
                    CENA_ZA_KM_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    CENA_ZA_KM_PUSTE = table.Column<double>(type: "float", nullable: true),
                    CENA_ZA_KM_PUSTE_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    CENA_ZA_M_ZAWY = table.Column<double>(type: "float", nullable: true),
                    CENA_ZA_M_ZAWY_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    INNE_KOSZTY = table.Column<double>(type: "float", nullable: true),
                    KWOTA = table.Column<double>(type: "float", nullable: true),
                    KWOTA_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KWOTA_WAL_FV = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KWOTA_ODC_1 = table.Column<double>(type: "float", nullable: true),
                    KWOTA_ODC_1_ST = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    KWOTA_ODC_2 = table.Column<double>(type: "float", nullable: true),
                    KWOTA_ODC_2_ST = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    KWOTA_ODC_3 = table.Column<double>(type: "float", nullable: true),
                    KWOTA_ODC_3_ST = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    BEZ_KALKULACJI = table.Column<int>(type: "int", nullable: true),
                    TYLKO_CENNIK = table.Column<int>(type: "int", nullable: true),
                    WALUTA_KALK = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    TABELA_KURSOW_KALK_ID = table.Column<int>(type: "int", nullable: true),
                    TABELA_KURSOW_KALK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PRZYCHOD = table.Column<double>(type: "float", nullable: true),
                    PRZYCHOD_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    PROCENT_KOSZTOW = table.Column<double>(type: "float", nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    LOKALIZACJA_POSR = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    PARTNER_ID = table.Column<int>(type: "int", nullable: true),
                    ROZLICZONA = table.Column<int>(type: "int", nullable: true),
                    STATUS_KOSZTY = table.Column<int>(type: "int", nullable: true),
                    ZA_MIEJSCE = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    ZA_MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZA_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    ZA_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    WY_MIEJSCE = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WY_MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    WY_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    WY_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    GEN_ZAWY_OK = table.Column<int>(type: "int", nullable: true),
                    SFM_STATUS = table.Column<int>(type: "int", nullable: true),
                    DYSPOZYTOR_ID = table.Column<int>(type: "int", nullable: true),
                    DYSPOZYTOR = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    STATUS_KALK = table.Column<int>(type: "int", nullable: true),
                    PRZYCHODY_SP = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KOSZTY_SP = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TEMP_PLUS = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_LISTY_LINIOWE", x => x.ID_TMP_LISTY_LINIOWE);
                });

            migrationBuilder.CreateTable(
                name: "TMP_LISTY_LINIOWE_LOK",
                columns: table => new
                {
                    ID_TMP_LISTY_LINIOWE_LOK = table.Column<int>(type: "int", nullable: false),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    ETAP = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    ZA = table.Column<int>(type: "int", nullable: true),
                    WY = table.Column<int>(type: "int", nullable: true),
                    DT_ZA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DT_WY = table.Column<DateTime>(type: "datetime", nullable: true),
                    DT_ZA_RZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    DT_WY_RZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    STAN_PLAN = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    NR_PLOMBY = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    BLOK_PLAN_P = table.Column<int>(type: "int", nullable: true),
                    BLOK_PLAN_W = table.Column<int>(type: "int", nullable: true),
                    ZA_KONIEC = table.Column<int>(type: "int", nullable: true),
                    WY_KONIEC = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_LISTY_LINIOWE_LOK", x => x.ID_TMP_LISTY_LINIOWE_LOK);
                });

            migrationBuilder.CreateTable(
                name: "TMP_LISTY_LINIOWE_PROMY",
                columns: table => new
                {
                    ID_TMP_LISTY_LINIOWE_PROMY = table.Column<int>(type: "int", nullable: false),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    LISTY_LINIOWE_ID = table.Column<int>(type: "int", nullable: true),
                    PROMY_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_LISTY_LINIOWE_PROMY", x => x.ID_TMP_LISTY_LINIOWE_PROMY);
                });

            migrationBuilder.CreateTable(
                name: "TMP_LISTY_LINIOWE_SEA",
                columns: table => new
                {
                    ID_TMP_LISTY_LINIOWE_SEA = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true),
                    ID_PACZKI_SEA = table.Column<int>(type: "int", nullable: true),
                    HBL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    MBL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DATA_CUTOFF = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_CUTOFF_VGM = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_DO_CENNIKA = table.Column<DateTime>(type: "datetime", nullable: true),
                    ARMATOR_ID = table.Column<int>(type: "int", nullable: true),
                    ARMATOR = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    ARMATOR_KONT = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    ARMATOR_TEL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    STATEK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_REJSU = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TYP_KONSOLIDACJI = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    BUYERS_CONSOL = table.Column<int>(type: "int", nullable: true),
                    SUM_SEA_ILOSC = table.Column<double>(type: "float", nullable: true),
                    SUM_SEA_WAGA_RZ = table.Column<double>(type: "float", nullable: true),
                    SUM_SEA_WAGA_OBJ = table.Column<double>(type: "float", nullable: true),
                    SUM_SEA_WAGA_PLATNA = table.Column<double>(type: "float", nullable: true),
                    SUM_SEA_OBJ_RZ = table.Column<double>(type: "float", nullable: true),
                    NUMER_SC = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_LISTY_LINIOWE_SEA", x => x.ID_TMP_LISTY_LINIOWE_SEA);
                });

            migrationBuilder.CreateTable(
                name: "TMP_LISTY_LINIOWE_ZA_WY",
                columns: table => new
                {
                    ID_TMP_LISTY_LINIOWE_ZA_WY = table.Column<int>(type: "int", nullable: false),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    ID_LISTY_LINIOWE_ZA_WY = table.Column<int>(type: "int", nullable: true),
                    TYP = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    LP_PW = table.Column<int>(type: "int", nullable: true),
                    LP_KIE = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    DYSP_GODZ_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DYSP_GODZ_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    WAGA = table.Column<double>(type: "float", nullable: true),
                    WAGA_RZ = table.Column<double>(type: "float", nullable: true),
                    WAGA_ZESTAWU = table.Column<double>(type: "float", nullable: true),
                    PALETY = table.Column<double>(type: "float", nullable: true),
                    PALETY_WYM = table.Column<double>(type: "float", nullable: true),
                    JEDN_WAGI = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    JM = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DATA_RZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_RZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_RZ_K = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_RZ_K = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_RZ_P = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_RZ_P = table.Column<DateTime>(type: "datetime", nullable: true),
                    OPOZNIENIE = table.Column<double>(type: "float", nullable: true),
                    LADUNEK_ID = table.Column<int>(type: "int", nullable: true),
                    LADUNEK = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    CZAS_TRWANIA = table.Column<double>(type: "float", nullable: true),
                    MAX_OPOZN = table.Column<double>(type: "float", nullable: true),
                    TRASA_KM = table.Column<int>(type: "int", nullable: true),
                    TRASA_KM_EXTRA = table.Column<int>(type: "int", nullable: true),
                    TRASA_KM_ROSN = table.Column<int>(type: "int", nullable: true),
                    PIETROWANIE = table.Column<int>(type: "int", nullable: true),
                    KOD_POCZT = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    DATA_RZ_W = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_RZ_W = table.Column<DateTime>(type: "datetime", nullable: true),
                    ADRES = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_LISTY_LINIOWE_ZA_WY", x => x.ID_TMP_LISTY_LINIOWE_ZA_WY);
                });

            migrationBuilder.CreateTable(
                name: "TMP_MIEJSCA_ZA_ROZLADUNKU",
                columns: table => new
                {
                    ID_TMP_MIEJSCA_ZA_ROZLADUNKU = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true),
                    ID_MIEJSCA_ZA_ROZLADUNKU = table.Column<int>(type: "int", nullable: true),
                    SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Symbol POI-a"),
                    RODZAJ_M = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Rodzaj systemowy (MC_ZA_WY, MC_GRANICA, etc)"),
                    KLIENT_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kontrahenta - tab.: KONTRAHENCI"),
                    KLIENT = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Symbol kontrahenta"),
                    NAZWA = table.Column<string>(type: "varchar(120)", unicode: false, maxLength: 120, nullable: true, comment: "Nazwa POI-a"),
                    ADRES = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true, comment: "Adres POI-a"),
                    MIASTO = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true, comment: "Miejscowość POI-a"),
                    KOD_POCZT = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Kod pocztowy POI-a"),
                    KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Kraj POI-a"),
                    ProvinceId = table.Column<int>(type: "int", nullable: true),
                    WOJEWODZTWO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Województwo POI-a"),
                    POWIAT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Powiat POI-a"),
                    GMINA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Gmina POI-a"),
                    REJON = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Rejon POI-a"),
                    TELEFONY = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Telefon do POI-a"),
                    FAX = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Fax do POI-a"),
                    EMAIL = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true, comment: "Email do POI-a"),
                    OPISOWO = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy POI jest określony adresem czy opisowo"),
                    OPIS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Opis POI-a"),
                    UWAGI = table.Column<string>(type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true, comment: "Dowolne uwagi do POI-a"),
                    WYSYLAC_UWAGI = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy wysyłać uwagi (SFM)"),
                    GEO_LONGI = table.Column<double>(type: "float", nullable: true, comment: "GPS - długość"),
                    GEO_LAT = table.Column<double>(type: "float", nullable: true, comment: "GPS - szerokość"),
                    GEO_AKCEPTACJA = table.Column<int>(type: "int", nullable: true, comment: "GPS - akceptacja"),
                    GEO_POZIOM_UFN = table.Column<int>(type: "int", nullable: true, comment: "GPS - poziom ufności"),
                    CZAS_TRWANIA = table.Column<double>(type: "float", nullable: true, comment: "Domyśłny czas trwania zdarzenia na POI-u"),
                    IDPOIEXT = table.Column<long>(type: "bigint", nullable: true, comment: "Zewnętrzny ID - na potrzeby interfejsów"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja"),
                    RODZAJ = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Rodzaj użytkownika - dowolny rodzaj wg użytkownika"),
                    ZA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy POI jest miejscem załadunku"),
                    WY = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy POI jest miejscem wyładunku"),
                    OFERTA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy POI jest na potrzeby ofertowania"),
                    SYMBOL_EX = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Symbol zewnętrzny"),
                    GODZ_OD = table.Column<DateTime>(type: "datetime", nullable: true, comment: "POI czynny od"),
                    GODZ_DO = table.Column<DateTime>(type: "datetime", nullable: true, comment: "POI czynny do"),
                    KONTRAHENCI_ID = table.Column<int>(type: "int", nullable: true, comment: "POI wewnętrzny, Relacja do kontrahenta - tab.: KONTRAHENCI"),
                    KOD_STD_TRASY = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Kod domyślnej/ standardowej trasy"),
                    KOD_STD_TRASY_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do trasy, tab: TRASY"),
                    ADRES_MAPA_WWW = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true, comment: "Adres www do mapy internetowej"),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true, comment: "Ilość załączników"),
                    OSOBA_KONTAKT = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true, comment: "Osoba kontaktowa"),
                    DUPLIKATY_NADRZ = table.Column<int>(type: "int", nullable: true),
                    MapGeoCoding = table.Column<int>(type: "int", nullable: true),
                    LANG = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "Język wydruków"),
                    SendMail = table.Column<int>(type: "int", nullable: true),
                    SendFax = table.Column<int>(type: "int", nullable: true),
                    PORT_NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa portu - spedycja morska"),
                    PORT_SYMBOL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Symbol portu - spedycja morska"),
                    UNLOCO = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Kod UNLOCO"),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    mSpeedWylaczPodpisPOD = table.Column<int>(type: "int", nullable: true, comment: "Opcja wyłaczenia podpisu POD"),
                    mSpeedWylaczInfoPobr = table.Column<int>(type: "int", nullable: true, comment: "Opcja wyłaczenia informacji o pobraniu"),
                    OilHeatingAddressId = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Kod miejsca dostawy towaru dla przewozu oleju opałowego"),
                    AWIZACJA_PRZED = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Awizacja PRZED"),
                    mSpeedWylaczPodpisPOP = table.Column<int>(type: "int", nullable: true, comment: "Opcja wyłaczenia podpisu POP"),
                    mSpeedWylaczDodPaczki = table.Column<int>(type: "int", nullable: true, comment: "Opcja wyłaczenia dodawania paczki"),
                    DisableETA = table.Column<int>(type: "int", nullable: true, comment: "Wyłączenie analizy ETA"),
                    Nieaktywne = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Poi wyłaczony")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_MIEJSCA_ZA_ROZLADUNKU", x => x.ID_TMP_MIEJSCA_ZA_ROZLADUNKU);
                });

            migrationBuilder.CreateTable(
                name: "TMP_MIEJSCA_ZA_WY_KONTRAH",
                columns: table => new
                {
                    ID_TMP_MIEJSCA_ZA_WY_KONTRAH = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true),
                    ID_MIEJSCA_ZA_WY_KONTRAH = table.Column<int>(type: "int", nullable: true),
                    KLIENT_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kontrahenta - tab.: KONTRAHENCI"),
                    KLIENT = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Symbol kontrahenta"),
                    MIEJSCA_ZA_ROZLADUNKU_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do POI-a - tab.: MIEJSCA_ZA_ROZLADUNKU"),
                    DOMYSLNY = table.Column<int>(type: "int", nullable: true, comment: "Domyślny")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_MIEJSCA_ZA_WY_KONTRAH", x => x.ID_TMP_MIEJSCA_ZA_WY_KONTRAH);
                });

            migrationBuilder.CreateTable(
                name: "TMP_OrderPlanning",
                columns: table => new
                {
                    ID_TMP_OrderPlanning = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    sessionDT = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    sessionId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "id sesji planowania"),
                    planningMode = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "0-opmPlanning /1-opmAccept /2-opmCancel /3-opmRemove"),
                    isTrialPlanning = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "(0/1) czy planowanie wstępne?"),
                    isAutoCarWash = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "(0/1) czy automatyczne przydzielanie myjni przy liczeniu CC?"),
                    isTransShipment = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "(0/1) czy podzlecenie (np. po przeładunku)?"),
                    isOrder_W = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "(0/1) czy zlecenie wstępne?"),
                    isOrderTrailer = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('1')", comment: "(0/1) czy naczepa ze zlecenia zlecenia?"),
                    isOrderTypeChange = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "(0/1) czy wymagana zmiana typu zlecenia?"),
                    isDirectCarrier = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "(0/1) czy właściciel pojazdu na podstawie [TABOR].[WLASCICIEL_ID]?"),
                    oneCheckPointId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "id \"jednego\" centralnego punktu kontrolnego przy planowaniu"),
                    dtOrderStart = table.Column<DateTime>(type: "datetime", nullable: true, comment: "dt początku zlecenia"),
                    dtOrderStop = table.Column<DateTime>(type: "datetime", nullable: true, comment: "dt końca zlecenia"),
                    orderObjId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "(2/6) id typu obiektu zlecenia"),
                    orderId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "id zlecenia"),
                    orderType = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "typ zlecenia S/T/W"),
                    orderNumber = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "numer zlecenia"),
                    orderStatusSFM = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "status SFM zlecenia"),
                    orderVehicleId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "id pojazdu ze zlecenia"),
                    orderVehicleLicencePlate = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "nr rej. pojazdu ze zlecenia"),
                    orderVehicleInvNo = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "nr inwent. pojazdu ze zlecenia"),
                    orderTrailerId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "id naczepy ze zlecenia"),
                    orderTrailerLicencePlate = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "nr rej. naczepy ze zlecenia"),
                    orderTrailerInvNo = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "nr inwent. naczepy ze zlecenia"),
                    orderDispatcherId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "id dyspozytora ze zlecenia"),
                    orderDispatcher = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "dyspozytor ze zlecenia"),
                    orderFrmId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "rodzaj formatki zlecenia"),
                    orderADR = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "(0/1) czy zlecenie ADR?"),
                    orderADR_UN = table.Column<string>(type: "varchar(35)", unicode: false, maxLength: 35, nullable: true, comment: "UN ładunku ADR"),
                    orderClientId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "id klienta/zleceniodawcy"),
                    orderClient = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "klient/zleceniodawca"),
                    orderDepartment = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "dział zlecenia"),
                    orderLocalization = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "lokalizacja zlecenia"),
                    orderLocalizationCust = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "kontrahent z lokalizacji zlecenia"),
                    orderPayerId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "id płatnika"),
                    orderPayer = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "płatnik"),
                    orderRatePerKM = table.Column<double>(type: "float", nullable: true, comment: "stawka za KM"),
                    newOrderStatusSFM = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "status zlecenia po zaplanowaniu"),
                    newOrderType = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "nowy typ dla zlecenia"),
                    newOrderUpdateNumber = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "(0/1) czy nadawać numer dla zlecenia wstępnego"),
                    newOrderWashingProcedure = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "procedura mycia pojazdu/naczepy"),
                    newOrderWashingMatrix = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "(0/1) czy użyto matrycę mycia"),
                    newOrderCarwash = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "(0/1) czy dobierać myjnię (zerowane przez użycie matrycy mycia)"),
                    carrierId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "(ID_KONTRAH) id przewoźnika/właściciela nowego pojazdu"),
                    carrierName = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "(SYMBOL) przewoźnik/właściciel nowego pojazdu"),
                    carrierLongName = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "(NAZWA) nazwa przewoźnika"),
                    carrierAddress = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "(ULICA)"),
                    carrierCity = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "(MIEJSCOWOSC)"),
                    carrierZipCode = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "(KOD)"),
                    carrierCountry = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: true, comment: "(KRAJ)"),
                    carrierNIP = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "(PREFIX_NIP + NIP)"),
                    carrierPhoneNo = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true, comment: "(FAX as TEL)"),
                    carrierIsCarrier = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "(0/1) (TEST_PRZEWOZNIK)"),
                    carrierContactPerson = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true, comment: "(OSOBA_KONTAKT)"),
                    carrierShipperWithoutFleet = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "(0/1) (SPEDYTOR_BEZ_FLOTY)"),
                    carrierFreightCurrency_Costs = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "(WALUTA_FRACHTU_KOSZTY)"),
                    carrierClearingCurrency_Costs = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "(WALUTA_ROZLICZEN_KOSZTY)"),
                    carrierPaymentForm = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "(FORMA_PLATNOSCI_DOST)"),
                    carrierPaymentDeadline = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "(TERMIN_PLATNOSCI_DOST)"),
                    carrierCENNIK_FTL_P_ID = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "(CENNIK_FTL_P_ID)"),
                    carrierCENNIK_FTL_P = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "(CENNIK_FTL_P)"),
                    carrierTYP_KURS_P = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "(TYP_KURS_P)"),
                    carrierTYP_TAB_P = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "(TYP_TAB_P)"),
                    carrierNewCurrency = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "zmieniona wartość dla pola zlec.WALUTA_P"),
                    carrierNewCurrencyVat = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "zmieniona wartość dla pola zlec.WALUTA_FV_P"),
                    newVehicleClassADR = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "uprawnienia ADR pojazdu"),
                    newVehicleDepartment = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "dział nowego pojazdu"),
                    newVehicleForeignFleet = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "(0/1) czy tabor obcy"),
                    newVehicleId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "id nowego pojazdu"),
                    newVehicleInvNo = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "nr inwent. nowego pojazdu"),
                    newVehicleIsADR = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "(0/1) czy pojazd do przewozu ADR"),
                    newVehicleLicencePlate = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "nr rej. nowego pojazdu"),
                    newVehicleLocalization = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "lokalizacja nowego pojazdu"),
                    newVehicleLocalizationCust = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "kontrahent z lokalizacji nowego pojazdu"),
                    newVehicleProfileId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "id profilu nowego pojazdu"),
                    newVehicleTrailerId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "id naczepy powiązanej z nowym pojazdem"),
                    newTrailerClassADR = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "uprawnienia ADR naczepy"),
                    newTrailerId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "id nowej naczepy"),
                    newTrailerIsADR = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "(0/1) czy naczepa do przewozu ADR"),
                    newTrailerLicencePlate = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "nr rej. nowej naczepy"),
                    newTrailerInvNo = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "nr inwent. nowej naczepy"),
                    newDriver1Id = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "id kierowcy 1"),
                    newDriver1Name = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "nazwa kierowcy 1"),
                    newDriver1PhoneNo = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "tel. kierowcy 1"),
                    newDriver1ClassADR = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "uprawnienia ADR kierowcy 1"),
                    newDriver2Id = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "id kierowcy 2"),
                    newDriver2Name = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "nazwa kierowcy 2"),
                    newDriver2PhoneNo = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "tel. kierowcy 2"),
                    newDriver2ClassADR = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "uprawnienia ADR kierowcy 2"),
                    isNewCarrierFinances = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "(0/1) czy finanse przewoźnika \"po nowemu\"?"),
                    carrierVAT_W_PLN_P = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "(VAT_W_PLN_KOSZTY)"),
                    carrierKURS_WG_P = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "(KURS_WG_P)"),
                    carrierKURS_Z_DNIA_P_P = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "(KURS_Z_DNIA_P_P)")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__TMP_Orde__0FD61B0EB52C21E7", x => x.ID_TMP_OrderPlanning);
                });

            migrationBuilder.CreateTable(
                name: "TMP_PACZKI",
                columns: table => new
                {
                    ID_TMP_PACZKI = table.Column<int>(type: "int", nullable: false),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    LP = table.Column<int>(type: "int", nullable: true),
                    ILOSC = table.Column<int>(type: "int", nullable: true),
                    KOD_OPAK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    WAGA_JEDN = table.Column<double>(type: "float", nullable: true),
                    OBJ_JEDN = table.Column<double>(type: "float", nullable: true),
                    WAGA_DEKL = table.Column<double>(type: "float", nullable: true),
                    OBJ_DEKL = table.Column<double>(type: "float", nullable: true),
                    WAGA = table.Column<double>(type: "float", nullable: true),
                    OBJ = table.Column<double>(type: "float", nullable: true),
                    DLUGOSC_DEKL = table.Column<double>(type: "float", nullable: true),
                    WYSOKOSC_DEKL = table.Column<double>(type: "float", nullable: true),
                    SZEROKOSC_DEKL = table.Column<double>(type: "float", nullable: true),
                    DLUGOSC = table.Column<double>(type: "float", nullable: true),
                    WYSOKOSC = table.Column<double>(type: "float", nullable: true),
                    SZEROKOSC = table.Column<double>(type: "float", nullable: true),
                    METRY_LADOWNE_DEKL = table.Column<double>(type: "float", nullable: true),
                    METRY_LADOWNE = table.Column<double>(type: "float", nullable: true),
                    METRY_DLUZYCA = table.Column<double>(type: "float", nullable: true),
                    WAGA_KUBATUROWA = table.Column<double>(type: "float", nullable: true),
                    WAGA_LADOWNA = table.Column<double>(type: "float", nullable: true),
                    DLUZYCA_DOD = table.Column<int>(type: "int", nullable: true),
                    DLUZYCA_DOD_KG = table.Column<double>(type: "float", nullable: true),
                    WAGA_OBL = table.Column<double>(type: "float", nullable: true),
                    ID_PACZKI = table.Column<int>(type: "int", nullable: true),
                    PRZESYLKA_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCA_PAL_DEKL = table.Column<double>(type: "float", nullable: true),
                    MIEJSCA_PAL = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_PACZKI", x => x.ID_TMP_PACZKI);
                });

            migrationBuilder.CreateTable(
                name: "TMP_PACZKI_AIR",
                columns: table => new
                {
                    ID_TMP_PACZKI_AIR = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    ID_PACZKI_AIR = table.Column<int>(type: "int", nullable: true),
                    TWORZ_WIELE_ID = table.Column<int>(type: "int", nullable: true, comment: "*** na potrzeby wewnętrzne ***"),
                    PRZESYLKI_AIR_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do przesyłki - tab: PRZESYLKI_AIR"),
                    LP = table.Column<int>(type: "int", nullable: true, comment: "Lp"),
                    ILOSC = table.Column<int>(type: "int", nullable: true, comment: "Ilość rzeczywista"),
                    NR_PACZKI_EX = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true, comment: "Numer zewnętrzny paczki"),
                    KOD_KRESKOWY = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true, comment: "Kod kreskowy paczki"),
                    OPIS_ID = table.Column<int>(type: "int", nullable: true, comment: "ID opisu towaru"),
                    OPIS = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true, comment: "Opis towaru"),
                    OPIS_DOD = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true, comment: "Opis towaru - dodatkowy"),
                    KOD_OPAK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Kod opakowania"),
                    OPAKOWANIE = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Symbol opakowania"),
                    PIETROWANIE = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy możliwe piętrowanie"),
                    WAGA_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Waga deklarowana"),
                    OBJ_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Objętość deklarowana"),
                    WAGA = table.Column<double>(type: "float", nullable: true, comment: "Waga rzeczywista"),
                    OBJ = table.Column<double>(type: "float", nullable: true, comment: "Objętość rzeczywista"),
                    DLUGOSC_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Długość deklarowana"),
                    WYSOKOSC_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Wysokość deklarowana"),
                    SZEROKOSC_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Szerokość deklarowana"),
                    DLUGOSC = table.Column<double>(type: "float", nullable: true, comment: "Długość rzeczywista"),
                    WYSOKOSC = table.Column<double>(type: "float", nullable: true, comment: "Wysokość rzeczywista"),
                    SZEROKOSC = table.Column<double>(type: "float", nullable: true, comment: "Szerokość rzeczywista"),
                    ADR = table.Column<int>(type: "int", nullable: true, comment: "Czy ADR"),
                    WAGA_OBJ = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_PACZKI_AIR", x => x.ID_TMP_PACZKI_AIR);
                });

            migrationBuilder.CreateTable(
                name: "TMP_PACZKI_RAIL",
                columns: table => new
                {
                    ID_TMP_PACZKI_RAIL = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    ID_PACZKI_RAIL = table.Column<int>(type: "int", nullable: true),
                    TWORZ_WIELE_ID = table.Column<int>(type: "int", nullable: true, comment: "*** na potrzeby wewnętrzne ***"),
                    PRZESYLKI_RAIL_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do przesyłki - tab: PRZESYLKI_RAIL"),
                    LP = table.Column<int>(type: "int", nullable: true, comment: "Lp"),
                    ILOSC = table.Column<int>(type: "int", nullable: true, comment: "Ilość rzeczywista"),
                    NR_PACZKI_EX = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true, comment: "Numer zewnętrzny paczki"),
                    KOD_KRESKOWY = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true, comment: "Kod kreskowy paczki"),
                    OPIS_ID = table.Column<int>(type: "int", nullable: true, comment: "ID opisu towaru"),
                    OPIS = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true, comment: "Opis towaru"),
                    OPIS_DOD = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true, comment: "Opis towaru - dodatkowy"),
                    KOD_OPAK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Kod opakowania"),
                    OPAKOWANIE = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Symbol opakowania"),
                    PIETROWANIE = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy możliwe piętrowanie"),
                    WAGA_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Waga deklarowana"),
                    OBJ_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Objętość deklarowana"),
                    WAGA = table.Column<double>(type: "float", nullable: true, comment: "Waga rzeczywista"),
                    OBJ = table.Column<double>(type: "float", nullable: true, comment: "Objętość rzeczywista"),
                    DLUGOSC_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Długość deklarowana"),
                    WYSOKOSC_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Wysokość deklarowana"),
                    SZEROKOSC_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Szerokość deklarowana"),
                    DLUGOSC = table.Column<double>(type: "float", nullable: true, comment: "Długość rzeczywista"),
                    WYSOKOSC = table.Column<double>(type: "float", nullable: true, comment: "Wysokość rzeczywista"),
                    SZEROKOSC = table.Column<double>(type: "float", nullable: true, comment: "Szerokość rzeczywista"),
                    LDM_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Metry ładowne deklarowane"),
                    LDM = table.Column<double>(type: "float", nullable: true, comment: "Metry ładowne rzeczywiste"),
                    MPAL_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Miejsca paletowe deklarowane"),
                    MPAL = table.Column<double>(type: "float", nullable: true, comment: "Miejsca paletowe rzeczywiste"),
                    ADR = table.Column<int>(type: "int", nullable: true, comment: "Czy ADR"),
                    WAGA_OBJ = table.Column<double>(type: "float", nullable: true),
                    WAGA_OBL = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_PACZKI_RAIL", x => x.ID_TMP_PACZKI_RAIL);
                });

            migrationBuilder.CreateTable(
                name: "TMP_PACZKI_SEA",
                columns: table => new
                {
                    ID_TMP_PACZKI_SEA = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    ID_PACZKI_SEA = table.Column<int>(type: "int", nullable: true),
                    TWORZ_WIELE_ID = table.Column<int>(type: "int", nullable: true, comment: "*** na potrzeby wewnętrzne ***"),
                    PRZESYLKI_SEA_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do przesyłki - tab: PRZESYLKI_SEA"),
                    LP = table.Column<int>(type: "int", nullable: true, comment: "Lp"),
                    ILOSC = table.Column<int>(type: "int", nullable: true, comment: "Ilość rzeczywista"),
                    NR_PACZKI_EX = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true, comment: "Numer zewnętrzny paczki"),
                    KOD_KRESKOWY = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true, comment: "Kod kreskowy paczki"),
                    OPIS_ID = table.Column<int>(type: "int", nullable: true, comment: "ID opisu towaru"),
                    OPIS = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true, comment: "Opis towaru"),
                    OPIS_DOD = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true, comment: "Opis towaru - dodatkowy"),
                    KOD_OPAK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Kod opakowania"),
                    OPAKOWANIE = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Symbol opakowania"),
                    PIETROWANIE = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy możliwe piętrowanie"),
                    WAGA_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Waga deklarowana"),
                    OBJ_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Objętość deklarowana"),
                    WAGA = table.Column<double>(type: "float", nullable: true, comment: "Waga rzeczywista"),
                    OBJ = table.Column<double>(type: "float", nullable: true, comment: "Objętość rzeczywista"),
                    DLUGOSC_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Długość deklarowana"),
                    WYSOKOSC_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Wysokość deklarowana"),
                    SZEROKOSC_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Szerokość deklarowana"),
                    DLUGOSC = table.Column<double>(type: "float", nullable: true, comment: "Długość rzeczywista"),
                    WYSOKOSC = table.Column<double>(type: "float", nullable: true, comment: "Wysokość rzeczywista"),
                    SZEROKOSC = table.Column<double>(type: "float", nullable: true, comment: "Szerokość rzeczywista"),
                    ADR = table.Column<int>(type: "int", nullable: true, comment: "Czy ADR"),
                    WAGA_OBJ = table.Column<double>(type: "float", nullable: true),
                    WAGA_OBL = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_PACZKI_SEA", x => x.ID_TMP_PACZKI_SEA);
                });

            migrationBuilder.CreateTable(
                name: "TMP_POLISY",
                columns: table => new
                {
                    ID_TMP_POLISY = table.Column<int>(type: "int", nullable: false),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    ID_POLISY = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator polisy"),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    TABOR = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    TABOR_NR_BOCZNY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    UBEZPIECZYCIEL_ID = table.Column<int>(type: "int", nullable: true),
                    UBEZPIECZYCIEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NUMER_POLISY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OC = table.Column<int>(type: "int", nullable: true),
                    AC = table.Column<int>(type: "int", nullable: true),
                    NW = table.Column<int>(type: "int", nullable: true),
                    ASS = table.Column<int>(type: "int", nullable: true),
                    DATA_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    UWAGI = table.Column<string>(type: "text", nullable: true),
                    ZNIZKI = table.Column<double>(type: "float", nullable: true),
                    SKLADKA = table.Column<double>(type: "float", nullable: true),
                    SKLADKA_OC = table.Column<double>(type: "float", nullable: true),
                    SKLADKA_AC = table.Column<double>(type: "float", nullable: true),
                    SKLADKA_NW = table.Column<double>(type: "float", nullable: true),
                    SKLADKA_AS = table.Column<double>(type: "float", nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    AKTYWNA = table.Column<int>(type: "int", nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OCP = table.Column<int>(type: "int", nullable: true),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: true),
                    KONTRAH = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    WARTOSC = table.Column<double>(type: "float", nullable: true),
                    WARTOSC_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KRAJ = table.Column<int>(type: "int", nullable: true),
                    ZAGRANICA = table.Column<int>(type: "int", nullable: true),
                    KRAJE = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KRAJE_KABOTAZ = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KABOTAZ = table.Column<int>(type: "int", nullable: true),
                    OCP_TOWARY_PODW_RYZYKO = table.Column<int>(type: "int", nullable: true),
                    OCP_TOWARY_KONTR_TEMP = table.Column<int>(type: "int", nullable: true),
                    SKLADKA_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    SKLADKA_OC_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    SKLADKA_AC_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    SKLADKA_NW_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    SKLADKA_AS_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    SKLADKA_INNE = table.Column<double>(type: "float", nullable: true),
                    SKLADKA_INNE_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    UWAGI_OC = table.Column<string>(type: "text", nullable: true),
                    UWAGI_AC = table.Column<string>(type: "text", nullable: true),
                    UWAGI_NW = table.Column<string>(type: "text", nullable: true),
                    UWAGI_AS = table.Column<string>(type: "text", nullable: true),
                    UDZIAL_WLASNY_OC = table.Column<double>(type: "float", nullable: true),
                    UDZIAL_WLASNY_OC_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    UDZIAL_WLASNY_AC = table.Column<double>(type: "float", nullable: true),
                    UDZIAL_WLASNY_AC_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    DATA_DO_AC = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZIELONA_KARTA_NR = table.Column<string>(type: "varchar(35)", unicode: false, maxLength: 35, nullable: true),
                    KRADZIEZ = table.Column<int>(type: "int", nullable: true),
                    ODPOWIEDZIALNY_ID = table.Column<int>(type: "int", nullable: true),
                    ODPOWIEDZIALNY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    POLISA_GLOWNA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    MPK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SKLADKA_AC_PROCENT = table.Column<double>(type: "float", nullable: true),
                    ROZBOJ = table.Column<int>(type: "int", nullable: true),
                    SUMA_GWAR_OC = table.Column<double>(type: "float", nullable: true),
                    SUMA_GWAR_OC_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    SUMA_GWAR_AC = table.Column<double>(type: "float", nullable: true),
                    SUMA_GWAR_AC_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    SUMA_GWAR_NW = table.Column<double>(type: "float", nullable: true),
                    SUMA_GWAR_NW_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    SUMA_GWAR_AS = table.Column<double>(type: "float", nullable: true),
                    SUMA_GWAR_AS_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    STATUS = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Status"),
                    WNIOSKUJACY_ID = table.Column<int>(type: "int", nullable: true),
                    WNIOSKUJACY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    WNIOSKUJACY2_ID = table.Column<int>(type: "int", nullable: true),
                    WNIOSKUJACY2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    BROKER_ID = table.Column<int>(type: "int", nullable: true),
                    BROKER = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OPIEKUN_ID = table.Column<int>(type: "int", nullable: true),
                    OPIEKUN = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SKLADKA_PROCENT = table.Column<double>(type: "float", nullable: true),
                    ZAPYTANIE = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    ZAPYTANIE_ID = table.Column<int>(type: "int", nullable: true),
                    ANULOWANA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    STATUS_EMISJA = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    KONTAKT_ID = table.Column<int>(type: "int", nullable: true),
                    KONTAKT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ODSZKODOWANIE = table.Column<double>(type: "float", nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    NIEDBALSTWO = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_POLISY", x => x.ID_TMP_POLISY);
                });

            migrationBuilder.CreateTable(
                name: "TMP_POLISY_POJAZDY",
                columns: table => new
                {
                    ID_TMP_POLISY_POJAZDY = table.Column<int>(type: "int", nullable: false),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    ID_POLISY_POJAZDY = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator polisy pojazdy"),
                    POLISY_ID = table.Column<int>(type: "int", nullable: true),
                    POLISY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    TABOR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TABOR_NR_BOCZNY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    WARTOSC = table.Column<double>(type: "float", nullable: true),
                    WARTOSC_POJAZDU = table.Column<double>(type: "float", nullable: true),
                    OC = table.Column<int>(type: "int", nullable: true),
                    AC = table.Column<int>(type: "int", nullable: true),
                    NW = table.Column<int>(type: "int", nullable: true),
                    ASS = table.Column<int>(type: "int", nullable: true),
                    SKLADKA = table.Column<double>(type: "float", nullable: true),
                    SUBPOLISA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_POLISY_POJAZDY", x => x.ID_TMP_POLISY_POJAZDY);
                });

            migrationBuilder.CreateTable(
                name: "TMP_POLISY_SKLADKI",
                columns: table => new
                {
                    ID_TMP_POLISY_SKLADKI = table.Column<int>(type: "int", nullable: false),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    ID_POLISY_SKLADKI = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator polisy składki"),
                    POLISY_ID = table.Column<int>(type: "int", nullable: true),
                    POLISY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TERMIN = table.Column<DateTime>(type: "datetime", nullable: true),
                    KWOTA = table.Column<double>(type: "float", nullable: true),
                    ZAPLACONO = table.Column<int>(type: "int", nullable: true),
                    DATA_ZAPLATY = table.Column<DateTime>(type: "datetime", nullable: true),
                    PROWIZJA_KWOTA_PLAN = table.Column<double>(type: "float", nullable: true),
                    PROWIZJA_KWOTA_RZ = table.Column<double>(type: "float", nullable: true),
                    PROWIZJA_DATA_PLAN = table.Column<DateTime>(type: "datetime", nullable: true),
                    PROWIZJA_DATA_RZ = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_POLISY_SKLADKI", x => x.ID_TMP_POLISY_SKLADKI);
                });

            migrationBuilder.CreateTable(
                name: "TMP_PROMY",
                columns: table => new
                {
                    ID_TMP_PROMY = table.Column<int>(type: "int", nullable: false),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    ARMATOR_ID = table.Column<int>(type: "int", nullable: true),
                    ARMATOR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    RELACJA_ID = table.Column<int>(type: "int", nullable: true),
                    RELACJA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    RELACJA_SYMBOL = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    DATA_WYPL = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_WYPL = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_WJAZD = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_WJAZD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_ZJAZD = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_ZJAZD = table.Column<DateTime>(type: "datetime", nullable: true),
                    SAM_OSOB = table.Column<int>(type: "int", nullable: true),
                    ADR = table.Column<int>(type: "int", nullable: true),
                    DLUGOSC_MB = table.Column<double>(type: "float", nullable: true),
                    KIEROWCY = table.Column<int>(type: "int", nullable: true),
                    PONADGABARYT_DL = table.Column<double>(type: "float", nullable: true),
                    PONADGABARYT_WY = table.Column<double>(type: "float", nullable: true),
                    PONADGABARYT_SZ = table.Column<double>(type: "float", nullable: true),
                    AGREGAT = table.Column<int>(type: "int", nullable: true),
                    ILOSC_TON = table.Column<double>(type: "float", nullable: true),
                    REF_1 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_3 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_4 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_5 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    TYDZIEN = table.Column<int>(type: "int", nullable: true),
                    DZIEN_TYG = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KLASA_ADR = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    KLIENT_ID = table.Column<int>(type: "int", nullable: true),
                    KLIENT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KOSZTY_RAZEM_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KLIENT_KWOTA_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KLIENT_KWOTA = table.Column<double>(type: "float", nullable: true),
                    ID_PROMY = table.Column<int>(type: "int", nullable: true),
                    KOSZTY_RAZEM_WAL_FV = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KLIENT_KWOTA_WAL_FV = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    DLUGOSC_MB2 = table.Column<double>(type: "float", nullable: true),
                    USLUGA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PAPIER = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_PROMY", x => x.ID_TMP_PROMY);
                });

            migrationBuilder.CreateTable(
                name: "TMP_PRZESYLKI",
                columns: table => new
                {
                    ID_TMP_PRZESYLKI = table.Column<int>(type: "int", nullable: false),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    LOKALIZACJA_NADZ = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    LOKALIZACJA_POSR = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    TRASA_ID = table.Column<int>(type: "int", nullable: true),
                    TRASA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    TRASA_KOD = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    CELNA = table.Column<int>(type: "int", nullable: true),
                    JEST_POBRANIE = table.Column<int>(type: "int", nullable: true),
                    LOKALIZACJA_CLO_WW = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    LOKALIZACJA_CLO_WY = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    WAGA_DEKL = table.Column<double>(type: "float", nullable: true),
                    OBJ_DEKL = table.Column<double>(type: "float", nullable: true),
                    LDM_DEKL = table.Column<double>(type: "float", nullable: true),
                    DLUZYCA_DEKL = table.Column<double>(type: "float", nullable: true),
                    ILOSC_DEKL = table.Column<double>(type: "float", nullable: true),
                    WAGA_RZECZYWISTA = table.Column<double>(type: "float", nullable: true),
                    OBJ_RZECZYWISTA = table.Column<double>(type: "float", nullable: true),
                    LDM = table.Column<double>(type: "float", nullable: true),
                    DLUZYCA = table.Column<double>(type: "float", nullable: true),
                    ILOSC_RZECZYWISTA = table.Column<double>(type: "float", nullable: true),
                    WAGA_DO_OBL = table.Column<double>(type: "float", nullable: true),
                    WAGA_KUBATUROWA = table.Column<double>(type: "float", nullable: true),
                    WAGA_LADOWNA = table.Column<double>(type: "float", nullable: true),
                    DLUZYCA_DOD_KG = table.Column<double>(type: "float", nullable: true),
                    DLUZYCA_DOD = table.Column<int>(type: "int", nullable: true),
                    WAGA_MAX = table.Column<double>(type: "float", nullable: true),
                    WAGA_OBL = table.Column<double>(type: "float", nullable: true),
                    ID_PRZESYLKI = table.Column<int>(type: "int", nullable: true),
                    NR_PRZESYLKI = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_PRZESYLKI", x => x.ID_TMP_PRZESYLKI);
                });

            migrationBuilder.CreateTable(
                name: "TMP_PRZESYLKI_ADR",
                columns: table => new
                {
                    ID_TMP_PRZESYLKI_ADR = table.Column<int>(type: "int", nullable: false),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    UN = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "ADR - kod UN"),
                    GRUPA = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "ADR - Grupa"),
                    KLASA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "ADR - Klasa"),
                    OPIS = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true, comment: "ADR - Opis"),
                    TUNELE = table.Column<string>(type: "varchar(8)", unicode: false, maxLength: 8, nullable: true, comment: "ADR - Ograniczenia tuneli"),
                    ILOSC = table.Column<double>(type: "float", nullable: true, comment: "ADR - Ilosć"),
                    ILOSC_OPIS_OPAK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "ADR - Ilość opis opakowania"),
                    ILOSC_CALK = table.Column<double>(type: "float", nullable: true, comment: "ADR - Ilość całkowita"),
                    NALEPKI = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "ADR - Nalepki"),
                    MIARA = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "ADR - Miara"),
                    KAT_TRANSP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "ADR - Kategoria transp"),
                    OPIS_DOD = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true, comment: "ADR - Dodatkowy opis"),
                    ILOSC_DO_WYLICZEN = table.Column<double>(type: "float", nullable: true, comment: "ADR - Ilość do wyliczeń"),
                    ID_PRZESYLKI_ADR = table.Column<int>(type: "int", nullable: true, comment: "Id"),
                    PKT_OBLICZ = table.Column<double>(type: "float", nullable: true, comment: "ADR - Ilość do wyliczeń"),
                    PKT_RECZNIE = table.Column<double>(type: "float", nullable: true, comment: "ADR - Ilość do wyliczeń"),
                    ILOSC_LQ_ADR = table.Column<double>(type: "float", nullable: true),
                    ILOSC_OGR_LQ = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    ILOSC_OGR_LQ_OBL = table.Column<double>(type: "float", nullable: true),
                    ADR_ENV = table.Column<int>(type: "int", nullable: true),
                    IS_P274 = table.Column<int>(type: "int", nullable: true),
                    PRZEPISY_SZCZ = table.Column<string>(type: "varchar(19)", unicode: false, maxLength: 19, nullable: true, comment: "Przepisy szczególne")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_PRZESYLKI_ADR", x => x.ID_TMP_PRZESYLKI_ADR);
                });

            migrationBuilder.CreateTable(
                name: "TMP_PRZESYLKI_AIR",
                columns: table => new
                {
                    ID_TMP_PRZESYLKI_AIR = table.Column<int>(type: "int", nullable: false),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    HAWB = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    MAWB = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    AS_AGREED = table.Column<int>(type: "int", nullable: true),
                    UBEZP_PROC_STAWKA = table.Column<double>(type: "float", nullable: true),
                    UBEZP_PROC = table.Column<double>(type: "float", nullable: true),
                    WAGA_DEKL = table.Column<double>(type: "float", nullable: true),
                    WAGA_RZ = table.Column<double>(type: "float", nullable: true),
                    OBJ_DEKL = table.Column<double>(type: "float", nullable: true),
                    OBJ_RZ = table.Column<double>(type: "float", nullable: true),
                    ILOSC_RZ = table.Column<double>(type: "float", nullable: true),
                    WAGA_DO_OBL = table.Column<double>(type: "float", nullable: true),
                    WAGA_OBJ = table.Column<double>(type: "float", nullable: true),
                    WAGA_PLATNA = table.Column<double>(type: "float", nullable: true),
                    INCO_MIEJSCE = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_PRZESYLKI_AIR", x => x.ID_TMP_PRZESYLKI_AIR);
                });

            migrationBuilder.CreateTable(
                name: "TMP_PRZESYLKI_CHECKLIST",
                columns: table => new
                {
                    ID_TMP_PRZESYLKI_CHECKLIST = table.Column<int>(type: "int", nullable: false),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true),
                    PRZESYLKI_ID = table.Column<int>(type: "int", nullable: true),
                    CHECKLISTDEFID = table.Column<int>(type: "int", nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    COMPLETED = table.Column<int>(type: "int", nullable: true),
                    COMPLETEDDT = table.Column<DateTime>(type: "datetime", nullable: true),
                    DESCRIPTION = table.Column<string>(type: "varchar(250)", unicode: false, maxLength: 250, nullable: true),
                    CHANGEDT = table.Column<DateTime>(type: "datetime", nullable: true),
                    CHANGEUSERID = table.Column<int>(type: "int", nullable: true),
                    ExpirationDT = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_PRZESYLKI_CHECKLIST", x => x.ID_TMP_PRZESYLKI_CHECKLIST);
                });

            migrationBuilder.CreateTable(
                name: "TMP_PRZESYLKI_DOKUMENTY",
                columns: table => new
                {
                    ID_TMP_PRZESYLKI_DOKUMENTY = table.Column<int>(type: "int", nullable: false),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    LP = table.Column<int>(type: "int", nullable: true),
                    KOD = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WYMAGANY = table.Column<int>(type: "int", nullable: true),
                    WPLYNAL = table.Column<int>(type: "int", nullable: true),
                    DATA_WPLYWU = table.Column<DateTime>(type: "datetime", nullable: true),
                    UZYTKOWNIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ROD = table.Column<int>(type: "int", nullable: true),
                    ROD_DO = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    ROD_WYSZEDL = table.Column<int>(type: "int", nullable: true),
                    ROD_DATA_WYJSCIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    ROD_UZYTKOWNIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KOD_KRESKOWY = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    ILOSC = table.Column<int>(type: "int", nullable: true),
                    ILOSC_ROZL = table.Column<int>(type: "int", nullable: true),
                    PRZESYLKI_ZWR_ID = table.Column<int>(type: "int", nullable: true),
                    EROD = table.Column<int>(type: "int", nullable: true),
                    UZYTKOWNIK_POTW = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_PRZESYLKI_DOKUMENTY", x => x.ID_TMP_PRZESYLKI_DOKUMENTY);
                });

            migrationBuilder.CreateTable(
                name: "TMP_PRZESYLKI_EXT",
                columns: table => new
                {
                    ID_TMP_PRZESYLKI_EXT = table.Column<int>(type: "int", nullable: false),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    PUNKTY_ADR_CHK = table.Column<int>(type: "int", nullable: true),
                    PUNKTY_ADR = table.Column<double>(type: "float", nullable: true),
                    ILOSC_LQ_ADR = table.Column<double>(type: "float", nullable: true),
                    PRZYCHODY_SP = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KOSZTY_SP = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TEMP_PLUS = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_PRZESYLKI_EXT", x => x.ID_TMP_PRZESYLKI_EXT);
                });

            migrationBuilder.CreateTable(
                name: "TMP_PRZESYLKI_INSTR_DOD",
                columns: table => new
                {
                    ID_TMP_PRZESYLKI_INSTR_DOD = table.Column<int>(type: "int", nullable: false),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    WYMAGANY_OPIS = table.Column<int>(type: "int", nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    WYMAGANA_DATA = table.Column<int>(type: "int", nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    WYMAGANA_KWOTA = table.Column<int>(type: "int", nullable: true),
                    KWOTA = table.Column<double>(type: "float", nullable: true),
                    KWOTA_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    COD = table.Column<int>(type: "int", nullable: true),
                    CENNIK = table.Column<int>(type: "int", nullable: true),
                    WYMAGANA_ILOSC = table.Column<int>(type: "int", nullable: true),
                    ILOSC = table.Column<double>(type: "float", nullable: true),
                    WYMAGANA_JT = table.Column<int>(type: "int", nullable: true),
                    ILOSC_JT = table.Column<double>(type: "float", nullable: true),
                    JT = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    WYMAGANY_OPIS_DOD = table.Column<int>(type: "int", nullable: true),
                    OPIS_DOD = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    WYMAGANY_CHECKBOX = table.Column<int>(type: "int", nullable: true),
                    CHECKBOX = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_PRZESYLKI_INSTR_DOD", x => x.ID_TMP_PRZESYLKI_INSTR_DOD);
                });

            migrationBuilder.CreateTable(
                name: "TMP_PRZESYLKI_LOKALIZACJE",
                columns: table => new
                {
                    ID_TMP_PRZESYLKI_LOKALIZACJE = table.Column<int>(type: "int", nullable: false),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    LP = table.Column<int>(type: "int", nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    PRZESYLKI_ID = table.Column<int>(type: "int", nullable: true),
                    LISTY_LINIOWE_ID = table.Column<int>(type: "int", nullable: true),
                    AUTOMAT = table.Column<int>(type: "int", nullable: true),
                    ZAPLANOWANA = table.Column<int>(type: "int", nullable: true),
                    POMINIETA = table.Column<int>(type: "int", nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    LOKALIZACJA_NAST = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    LOKALIZACJA_POPRZ = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    OST_STATUS = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_1 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_2 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_3 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_4 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_5 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_PRZESYLKI_LOKALIZACJE", x => x.ID_TMP_PRZESYLKI_LOKALIZACJE);
                });

            migrationBuilder.CreateTable(
                name: "TMP_PRZESYLKI_NOSNIKI",
                columns: table => new
                {
                    ID_TMP_PRZESYLKI_NOSNIKI = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    ID = table.Column<int>(type: "int", nullable: true),
                    PRZESYLKI_ID = table.Column<int>(type: "int", nullable: true),
                    NR_PRZESYLKI = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_PRZESYLKI_EX = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OPAKOWANIA_ID = table.Column<int>(type: "int", nullable: true),
                    KOD = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    ILE_AWI = table.Column<int>(type: "int", nullable: true),
                    ILE_POD = table.Column<int>(type: "int", nullable: true),
                    ILE_DOR = table.Column<int>(type: "int", nullable: true),
                    ILE_MPZ = table.Column<int>(type: "int", nullable: true),
                    ILE_MWZ = table.Column<int>(type: "int", nullable: true),
                    ILE_MRK = table.Column<int>(type: "int", nullable: true),
                    ILE_ZWP = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_PRZESYLKI_NOSNIKI", x => x.ID_TMP_PRZESYLKI_NOSNIKI);
                });

            migrationBuilder.CreateTable(
                name: "TMP_PRZESYLKI_POWIADOMIENIA",
                columns: table => new
                {
                    ID_TMP_PRZESYLKI_POWIADOMIENIA = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true),
                    PRZESYLKI_ID = table.Column<int>(type: "int", nullable: true),
                    KTO = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TYP = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    CO_WYZWALA = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    EMAIL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    KRAJ = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    TEL_PREFIX = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    TEL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DT = table.Column<DateTime>(type: "datetime", nullable: true),
                    TRESC = table.Column<string>(type: "varchar(600)", unicode: false, maxLength: 600, nullable: true),
                    ZROBIONE_N = table.Column<byte>(type: "tinyint", nullable: true),
                    ZROBIONE_D = table.Column<byte>(type: "tinyint", nullable: true),
                    ZROBIONE_K = table.Column<byte>(type: "tinyint", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_PRZESYLKI_POWIADOMIENIA", x => x.ID_TMP_PRZESYLKI_POWIADOMIENIA);
                });

            migrationBuilder.CreateTable(
                name: "TMP_PRZESYLKI_PRZELICZNIKI",
                columns: table => new
                {
                    ID_TMP_PRZESYLKI_PRZELICZNIKI = table.Column<int>(type: "int", nullable: false),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    PRZESYLKI_ID = table.Column<int>(type: "int", nullable: true),
                    WARTOSC_Z = table.Column<int>(type: "int", nullable: true),
                    JM_Z = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    WARTOSC_DO = table.Column<int>(type: "int", nullable: true),
                    JM_DO = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    JT = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_PRZESYLKI_PRZELICZNIKI", x => x.ID_TMP_PRZESYLKI_PRZELICZNIKI);
                });

            migrationBuilder.CreateTable(
                name: "TMP_PRZESYLKI_RAIL",
                columns: table => new
                {
                    ID_TMP_PRZESYLKI_RAIL = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    WAGA_DEKL = table.Column<double>(type: "float", nullable: true),
                    WAGA_RZ = table.Column<double>(type: "float", nullable: true),
                    OBJ_DEKL = table.Column<double>(type: "float", nullable: true),
                    OBJ_RZ = table.Column<double>(type: "float", nullable: true),
                    ILOSC_RZ = table.Column<double>(type: "float", nullable: true),
                    WAGA_DO_OBL = table.Column<double>(type: "float", nullable: true),
                    WAGA_OBJ = table.Column<double>(type: "float", nullable: true),
                    WAGA_PLATNA = table.Column<double>(type: "float", nullable: true),
                    INCO_MIEJSCE = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_PRZESYLKI_RAIL", x => x.ID_TMP_PRZESYLKI_RAIL);
                });

            migrationBuilder.CreateTable(
                name: "TMP_PRZESYLKI_SEA",
                columns: table => new
                {
                    ID_TMP_PRZESYLKI_SEA = table.Column<int>(type: "int", nullable: false),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    HBL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    MBL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    BUYERS_CONSOL = table.Column<int>(type: "int", nullable: true),
                    AS_AGREED = table.Column<int>(type: "int", nullable: true),
                    ALL_IN = table.Column<int>(type: "int", nullable: true),
                    UBEZP_PROC_STAWKA = table.Column<double>(type: "float", nullable: true),
                    UBEZP_PROC = table.Column<double>(type: "float", nullable: true),
                    WAGA_DEKL = table.Column<double>(type: "float", nullable: true),
                    WAGA_RZ = table.Column<double>(type: "float", nullable: true),
                    OBJ_DEKL = table.Column<double>(type: "float", nullable: true),
                    OBJ_RZ = table.Column<double>(type: "float", nullable: true),
                    ILOSC_RZ = table.Column<double>(type: "float", nullable: true),
                    WAGA_DO_OBL = table.Column<double>(type: "float", nullable: true),
                    WAGA_OBJ = table.Column<double>(type: "float", nullable: true),
                    WAGA_PLATNA = table.Column<double>(type: "float", nullable: true),
                    INCO_MIEJSCE = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true),
                    UWAGI_COLOADER = table.Column<string>(type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    DATA_GOTOWOSCI = table.Column<DateTime>(type: "datetime", nullable: true),
                    KONOSAMENT = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_PRZESYLKI_SEA", x => x.ID_TMP_PRZESYLKI_SEA);
                });

            migrationBuilder.CreateTable(
                name: "TMP_PRZESYLKI_WYM_TABORU",
                columns: table => new
                {
                    ID_TMP_PRZESYLKI_WYM_TABORU = table.Column<int>(type: "int", nullable: false),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    TYP = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    ILOSC = table.Column<int>(type: "int", nullable: true),
                    ZAMIENNIK = table.Column<int>(type: "int", nullable: true),
                    NIE_BLOKUJ = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_PRZESYLKI_WYM_TABORU", x => x.ID_TMP_PRZESYLKI_WYM_TABORU);
                });

            migrationBuilder.CreateTable(
                name: "TMP_PRZESYLKI_ZA_WY",
                columns: table => new
                {
                    ID_TMP_PRZESYLKI_ZA_WY = table.Column<int>(type: "int", nullable: false),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true),
                    TYP = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    WAGA = table.Column<double>(type: "float", nullable: true),
                    JEDN_WAGI = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    PALETY = table.Column<double>(type: "float", nullable: true),
                    JM = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OBJ = table.Column<double>(type: "float", nullable: true),
                    TYP_ODCINKA = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    AIR_SYMBOL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    AIR_NR_LOTU = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    SEA_SYMBOL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    RAIL_SYMBOL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_PRZESYLKI_ZA_WY", x => x.ID_TMP_PRZESYLKI_ZA_WY);
                });

            migrationBuilder.CreateTable(
                name: "TMP_REKL_KOSZTY_ODSZKOD",
                columns: table => new
                {
                    ID_TMP_REKL_KOSZTY_ODSZKOD = table.Column<int>(type: "int", nullable: false),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true),
                    REKLAMACJE_ID = table.Column<int>(type: "int", nullable: true),
                    TYP_KOSZTU_ID = table.Column<int>(type: "int", nullable: true),
                    KWOTA = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')", comment: "Kwota kosztu"),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, defaultValueSql: "('PLN')", comment: "Waluta kosztu"),
                    KWOTA_K = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')", comment: "Kwota kosztu w walucie kalkulacji"),
                    WALUTA_K = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, defaultValueSql: "('EUR')", comment: "Waluta kalkulacji kosztu"),
                    KURS_WG_DATY = table.Column<DateTime>(type: "datetime", nullable: true),
                    TYP_TAB = table.Column<int>(type: "int", nullable: true),
                    TYP_KURS = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    KURS_WYM = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_REKL_KOSZTY_ODSZKOD", x => x.ID_TMP_REKL_KOSZTY_ODSZKOD);
                });

            migrationBuilder.CreateTable(
                name: "TMP_REKLAMACJE",
                columns: table => new
                {
                    ID_TMP_REKLAMACJE = table.Column<int>(type: "int", nullable: false),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true),
                    ID_REKLAMACJE = table.Column<int>(type: "int", nullable: true),
                    OBIEKT_TYP = table.Column<int>(type: "int", nullable: true),
                    OBIEKT_ID = table.Column<int>(type: "int", nullable: true),
                    DATA_REKL = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_REKLAMACJE", x => x.ID_TMP_REKLAMACJE);
                });

            migrationBuilder.CreateTable(
                name: "Tmp_RouteCalculation",
                columns: table => new
                {
                    Id_Tmp_RouteCalculation = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SessionId = table.Column<int>(type: "int", nullable: true),
                    BillOfLadingId = table.Column<int>(type: "int", nullable: true),
                    ShipmentId = table.Column<int>(type: "int", nullable: true),
                    PackageId = table.Column<int>(type: "int", nullable: true),
                    RouteWaypointId = table.Column<int>(type: "int", nullable: true),
                    Lump = table.Column<decimal>(type: "money", nullable: true),
                    LumpCurrency = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Tmp_RouteCalculation", x => x.Id_Tmp_RouteCalculation);
                });

            migrationBuilder.CreateTable(
                name: "TMP_ROZL_WEWN",
                columns: table => new
                {
                    ID_TMP_ROZL_WEWN = table.Column<int>(type: "int", nullable: false),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    SP_REJESTRACJI = table.Column<int>(type: "int", nullable: true),
                    RW_NR = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    RW_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    RW_ROK = table.Column<int>(type: "int", nullable: true),
                    RW_MIES = table.Column<int>(type: "int", nullable: true),
                    LOKALIZACJA_NAD = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DZIAL_NAD = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    AKCEPT_NAD = table.Column<int>(type: "int", nullable: true),
                    AKCEPT_NAD_UZYTK_ID = table.Column<int>(type: "int", nullable: true),
                    AKCEPT_NAD_UZYTK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    AKCEPT_NAD_DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    AKCEPT_NAD_GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    LOKALIZACJA_ODB = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DZIAL_ODB = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    AKCEPT_ODB = table.Column<int>(type: "int", nullable: true),
                    AKCEPT_ODB_UZYTK_ID = table.Column<int>(type: "int", nullable: true),
                    AKCEPT_ODB_UZYTK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    AKCEPT_ODB_DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    AKCEPT_ODB_GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    TECZKA_ID = table.Column<int>(type: "int", nullable: true),
                    TECZKA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZLECENIE_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZLECENIA_POZ_FAKT_ID = table.Column<int>(type: "int", nullable: true),
                    PRZESYLKA_ID = table.Column<int>(type: "int", nullable: true),
                    PRZESYLKA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KALKULACJA_ID = table.Column<int>(type: "int", nullable: true),
                    LIST_LINIOWY_ID = table.Column<int>(type: "int", nullable: true),
                    LIST_LINIOWY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PROMY_ID = table.Column<int>(type: "int", nullable: true),
                    PROMY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TECZKA_ODB_ID = table.Column<int>(type: "int", nullable: true),
                    TECZKA_ODB = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZLECENIE_ODB_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE_ODB = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZLECENIA_POZ_FAKT_ODB_ID = table.Column<int>(type: "int", nullable: true),
                    PRZESYLKA_ODB_ID = table.Column<int>(type: "int", nullable: true),
                    PRZESYLKA_ODB = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KALKULACJA_ODB_ID = table.Column<int>(type: "int", nullable: true),
                    LIST_LINIOWY_ODB_ID = table.Column<int>(type: "int", nullable: true),
                    LIST_LINIOWY_ODB = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PROMY_ODB_ID = table.Column<int>(type: "int", nullable: true),
                    PROMY_ODB = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TRAFIK_ID = table.Column<int>(type: "int", nullable: true),
                    TRAFIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    WYJAZD_ID = table.Column<int>(type: "int", nullable: true),
                    WYJAZD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    TABOR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KIEROWCA_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ROZL_WEWN_SIECI_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    SZKODA_ID = table.Column<int>(type: "int", nullable: true),
                    SZKODA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DATA_WYSTAWIENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KURSY_WALUT_ID = table.Column<int>(type: "int", nullable: true),
                    KURSY_WALUT_TYP = table.Column<int>(type: "int", nullable: true),
                    KURSY_WALUT_RODZ = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    KURS_WALUTY = table.Column<double>(type: "float", nullable: true),
                    NR_TABELI_KURSOW = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    DATA_TABELI_KURSOW = table.Column<DateTime>(type: "datetime", nullable: true),
                    KWOTA_W_WAL = table.Column<double>(type: "float", nullable: true),
                    KWOTA_W_PLN = table.Column<double>(type: "float", nullable: true),
                    OPIS_ID = table.Column<int>(type: "int", nullable: true),
                    OPIS = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    OPIS_DOD = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    RODZ_KOSZTOW = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    RODZ_PRZYCHODOW = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_ROZL_WEWN", x => x.ID_TMP_ROZL_WEWN);
                });

            migrationBuilder.CreateTable(
                name: "TMP_RPT_ID_LIST",
                columns: table => new
                {
                    ID_TMP_RPT_ID_LIST = table.Column<int>(type: "int", nullable: false),
                    SESJA = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: false),
                    ID = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_RPT_ID_LIST", x => x.ID_TMP_RPT_ID_LIST);
                });

            migrationBuilder.CreateTable(
                name: "TMP_SEL_REC",
                columns: table => new
                {
                    ID_TMP_SEL_REC = table.Column<int>(type: "int", nullable: false),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    OBJECT_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do OBJECT - typ obiektu"),
                    REC_ID = table.Column<int>(type: "int", nullable: true, comment: "ID zaznaczonego rekordu")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_SEL_REC", x => x.ID_TMP_SEL_REC);
                });

            migrationBuilder.CreateTable(
                name: "TMP_SentMain",
                schema: "sent",
                columns: table => new
                {
                    TMP_SentMainId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SentMainId = table.Column<int>(type: "int", nullable: true),
                    SessionId = table.Column<int>(type: "int", nullable: true),
                    Month = table.Column<int>(type: "int", nullable: true),
                    Year = table.Column<int>(type: "int", nullable: true),
                    ObjId = table.Column<int>(type: "int", nullable: true),
                    RecId = table.Column<int>(type: "int", nullable: true),
                    SentNumber = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    SenderKey = table.Column<string>(type: "varchar(7)", unicode: false, maxLength: 7, nullable: true),
                    RecipientKey = table.Column<string>(type: "varchar(7)", unicode: false, maxLength: 7, nullable: true),
                    CarrierKey = table.Column<string>(type: "varchar(7)", unicode: false, maxLength: 7, nullable: true),
                    CreationDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Creator = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    ModificationData = table.Column<DateTime>(type: "datetime", nullable: true),
                    Modifier = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    SentId = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    SourceDocumentId = table.Column<string>(type: "varchar(70)", unicode: false, maxLength: 70, nullable: true),
                    ChecksumOfSourceDocument = table.Column<string>(type: "varchar(120)", unicode: false, maxLength: 120, nullable: true),
                    IncomingNumber = table.Column<string>(type: "varchar(70)", unicode: false, maxLength: 70, nullable: true),
                    SentStatus = table.Column<int>(type: "int", nullable: true),
                    GoodsCodeCnClassification = table.Column<string>(type: "varchar(8)", unicode: false, maxLength: 8, nullable: true),
                    GoodsCodePkwiuClassification = table.Column<string>(type: "varchar(17)", unicode: false, maxLength: 17, nullable: true),
                    GoodsName = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true),
                    GoodsAmount = table.Column<double>(type: "float", nullable: true),
                    GoodsUnitOfMeasure = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true),
                    GoodsGrossWeightOfGoods = table.Column<double>(type: "float", nullable: true),
                    GoodsTypeOfTransportDocument = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    GoodsNumberOfTransportDocument = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    MeansOfTransportTruckNumber = table.Column<string>(type: "varchar(12)", unicode: false, maxLength: 12, nullable: true),
                    MeansOfTransportTrailerNumber = table.Column<string>(type: "varchar(12)", unicode: false, maxLength: 12, nullable: true),
                    MeansOfTransportPermitRoad = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    EntranceRoutePlace = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    EntranceRouteNumber = table.Column<string>(type: "varchar(8)", unicode: false, maxLength: 8, nullable: true),
                    EntranceDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ExitRoutePlace = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    ExitRouteNumber = table.Column<string>(type: "varchar(8)", unicode: false, maxLength: 8, nullable: true),
                    ExitDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Comments = table.Column<string>(type: "text", nullable: true),
                    DocumentId = table.Column<string>(type: "varchar(70)", unicode: false, maxLength: 70, nullable: true),
                    ResponseEmailAddress1 = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    ResponseEmailAddress2 = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    ResponseEmailAddress3 = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    Statement = table.Column<int>(type: "int", nullable: true),
                    FirstName = table.Column<string>(type: "varchar(80)", unicode: false, maxLength: 80, nullable: true),
                    LastName = table.Column<string>(type: "varchar(80)", unicode: false, maxLength: 80, nullable: true),
                    EmergencyProcedure = table.Column<int>(type: "int", nullable: true),
                    StartTransportDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    EndTransportDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    TypeOfTransport = table.Column<int>(type: "int", nullable: true),
                    GeoLocatorNumber = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    FailoverGeoLocatorNumber = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    FailoverCarrierEmail = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    TypeOfDeclaration = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_SentMain", x => x.TMP_SentMainId);
                });

            migrationBuilder.CreateTable(
                name: "TMP_SentMsg",
                schema: "sent",
                columns: table => new
                {
                    TMP_SentMsgId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SessionId = table.Column<int>(type: "int", nullable: true),
                    SentMsgId = table.Column<int>(type: "int", nullable: true),
                    SentMainId = table.Column<int>(type: "int", nullable: true),
                    CtxObjId = table.Column<int>(type: "int", nullable: true),
                    CtxRecId = table.Column<int>(type: "int", nullable: true),
                    SentMsg = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    Type = table.Column<int>(type: "int", nullable: true),
                    InOut = table.Column<int>(type: "int", nullable: true),
                    Lp = table.Column<int>(type: "int", nullable: true),
                    SendXML = table.Column<string>(type: "text", nullable: true),
                    SendDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    SendConfirmed = table.Column<int>(type: "int", nullable: true),
                    Month = table.Column<int>(type: "int", nullable: true),
                    Year = table.Column<int>(type: "int", nullable: true),
                    CarrierId = table.Column<int>(type: "int", nullable: true),
                    CarrierIdSisc = table.Column<string>(type: "varchar(17)", unicode: false, maxLength: 17, nullable: true),
                    CarrierName = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    CarrierIdentityType = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    CarrierIdentityNumber = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    CarrierStreet = table.Column<string>(type: "varchar(80)", unicode: false, maxLength: 80, nullable: true),
                    CarrierHouseNumber = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    CarrierFlatNumber = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    CarrierCity = table.Column<string>(type: "varchar(52)", unicode: false, maxLength: 52, nullable: true),
                    CarrierCountry = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    CarrierPostalCode = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    StartTransportDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    EndTransportDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    GoodsTypeOfTransportDocument = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    GoodsNumberOfTransportDocument = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    MeansOfTransportTruckNumber = table.Column<string>(type: "varchar(12)", unicode: false, maxLength: 12, nullable: true),
                    MeansOfTransportTrailerNumber = table.Column<string>(type: "varchar(12)", unicode: false, maxLength: 12, nullable: true),
                    MeansOfTransportPermitRoad = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    EntranceRoutePlace = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    EntranceRouteNumber = table.Column<string>(type: "varchar(8)", unicode: false, maxLength: 8, nullable: true),
                    EntranceDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ExitRoutePlace = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    ExitRouteNumber = table.Column<string>(type: "varchar(8)", unicode: false, maxLength: 8, nullable: true),
                    ExitDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    Comments = table.Column<string>(type: "text", nullable: true),
                    DocumentId = table.Column<string>(type: "varchar(70)", unicode: false, maxLength: 70, nullable: true),
                    ResponseEmailAddress1 = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    ResponseEmailAddress2 = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    ResponseEmailAddress3 = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    Statement = table.Column<int>(type: "int", nullable: true),
                    FirstName = table.Column<string>(type: "varchar(80)", unicode: false, maxLength: 80, nullable: true),
                    LastName = table.Column<string>(type: "varchar(80)", unicode: false, maxLength: 80, nullable: true),
                    ComplianceIsCompliance = table.Column<int>(type: "int", nullable: true),
                    ComplianceTypeOfNonCompliance = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    CloseTransportDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    ErrorText = table.Column<string>(type: "text", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_SentMsg", x => x.TMP_SentMsgId);
                });

            migrationBuilder.CreateTable(
                name: "TMP_SentTrader",
                schema: "sent",
                columns: table => new
                {
                    TMP_SentTraderId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SessionId = table.Column<int>(type: "int", nullable: true),
                    SentMainId = table.Column<int>(type: "int", nullable: true),
                    Type = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    IdSisc = table.Column<string>(type: "varchar(17)", unicode: false, maxLength: 17, nullable: true),
                    TraderName = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    TraderIdentityType = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    TraderIdentityNumber = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    PlannedStartCarriageDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    TraderId = table.Column<int>(type: "int", nullable: true),
                    Street = table.Column<string>(type: "varchar(80)", unicode: false, maxLength: 80, nullable: true),
                    HouseNumber = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    FlatNumber = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    City = table.Column<string>(type: "varchar(52)", unicode: false, maxLength: 52, nullable: true),
                    Country = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    PostalCode = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    EmailAddress = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_SentTrader", x => x.TMP_SentTraderId);
                });

            migrationBuilder.CreateTable(
                name: "TMP_SETTINGS",
                columns: table => new
                {
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: false, comment: "Unikalny identyfikator sesji"),
                    AKT_LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    AKT_DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    AKT_UZYTK_ID = table.Column<int>(type: "int", nullable: true),
                    AKT_SYSTEM_ID = table.Column<int>(type: "int", nullable: true),
                    AKT_SYS_WYM_DANYCH_ID = table.Column<int>(type: "int", nullable: true),
                    AKT_ZRODLO = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    RECORDCHECKDATA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    AKT_LANG_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_SETTINGS", x => x.ID_SESJI_KALK);
                });

            migrationBuilder.CreateTable(
                name: "TMP_STATUSY",
                columns: table => new
                {
                    ID_TMP_STATUSY = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true),
                    ID_STATUSY = table.Column<int>(type: "int", nullable: true),
                    STATUSY_ZDARZ = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Kod zdarzenia"),
                    TYP = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "*pole nie używane*"),
                    STATUS_ID = table.Column<int>(type: "int", nullable: true, comment: "Relcja do statusu - tab: STATUSY"),
                    STATUS = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Kod statusu"),
                    STATUS_POPRZ = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Kod poprzedniego statusu"),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data nadania"),
                    CZAS = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina nadania"),
                    ID_UZYTKOW = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Relacja do użytkownika - tab: UZYTKOWNIK"),
                    UZYTKOW = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Symbol użytkownika"),
                    ID_OBJ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "ID obiektu: 1-DR, 2_FT, 3-PA, 4-OF, 5-PR, 6-LL, 7-SZ, 8-RP, 9-RS, 10-PW"),
                    ID_REC = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "ID rekordu danego typu obiektu"),
                    INFO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Dowolna informacja do statusu"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja"),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Dział"),
                    SLOT_1_N = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Slot dodatkowy 1"),
                    SLOT_2_N = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Slot dodatkowy 2"),
                    SLOT_3_N = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Slot dodatkowy 3"),
                    SLOT_4_N = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Slot dodatkowy 4"),
                    SLOT_5_N = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Slot dodatkowy 5"),
                    ZDARZENIE = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "*pole nie używane*"),
                    SKAN = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy status pochodzi z procesu skanowania"),
                    KTO_SKAN_ID = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Relacja do użytkownika który skanował - tab: UZYTKOWNIK"),
                    KTO_SKAN = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Symbol użytwkownika który skanował"),
                    USZK = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy status dotyczy uszkodzenia"),
                    SYMBOL_USZK = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Symbol uszkodzenia - tab: SYMBOLE_ANOMALII"),
                    OPIS_USZK = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true, comment: "Opis uszkodzenia"),
                    OPIS_USZK_UZUP = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true, comment: "Uzupełniający opis uszkodzenia"),
                    DOT_OPAKOWAN = table.Column<short>(type: "smallint", nullable: true, comment: "Flaga, czy status dotyczy opakowania"),
                    ILOSC = table.Column<double>(type: "float", nullable: true, comment: "Jakiej ilośc dotyczy status, 0 - domyślnie - oznacza WSZYSTKIE"),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Ilosć załączników do statusu"),
                    WWW = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy status widoczny poprzez aplikację WWW"),
                    NADANIE = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy status oznacza podjecie"),
                    DORECZENIE = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy status oznacza doręczenie"),
                    NADRZ_TYP = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Typ obiektu nadrzednego np. LL,PZ,WZ"),
                    NADRZ_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do obiektu nadrzędnego"),
                    NADRZ_NR = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Numer obiektu nadrzędnego"),
                    NADRZ_ZDARZ = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Zdarzenie nadrz np. ZA,WY,IN,PZ,WZ,MM"),
                    NADRZ_STATUSY_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do statusu nadrzędnego"),
                    LISTY_LINIOWE_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do przewozu - tab: LISTY_LINIOWE"),
                    MAGAZYN_ZDARZENIA_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do dok. mag. - tab: MAGAZYN_ZDARZENIA"),
                    SFM_SRV_STATE = table.Column<int>(type: "int", nullable: true, comment: "SFM Srv: 0-oczekuje, 1-zrobione"),
                    NIEZGODNY = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy status jest zgodny z procesem"),
                    IS_EXPORTED = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy wyeksport. dane np. SAE (0-nie sprocesowano, 1-tak, 2-nie, bo nie trzeba było, -1-nie, bo był bład)"),
                    IS_EXPORTED_DT = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data eksportu pliku"),
                    IS_EXPORTED_FILE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Nazwa utworzonego pliku"),
                    EMI_STATE = table.Column<int>(type: "int", nullable: true),
                    LON = table.Column<double>(type: "float", nullable: true),
                    LAT = table.Column<double>(type: "float", nullable: true),
                    ORG_STATUS_ID = table.Column<int>(type: "int", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_STATUSY", x => x.ID_TMP_STATUSY);
                });

            migrationBuilder.CreateTable(
                name: "TMP_TABOR",
                columns: table => new
                {
                    ID_TMP_TABOR = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true),
                    OBCY = table.Column<int>(type: "int", nullable: true),
                    NR_REJ = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    AKTYWNY = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    WLASCICIEL_ID = table.Column<int>(type: "int", nullable: true),
                    WLASCICIEL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TEMP_PLUS = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_TABOR", x => x.ID_TMP_TABOR);
                });

            migrationBuilder.CreateTable(
                name: "TMP_TABOR_KIEROWCY",
                columns: table => new
                {
                    ID_TMP_TABOR_KIEROWCY = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true),
                    ZEWNETRZNE = table.Column<int>(type: "int", nullable: true),
                    PRZEWOZNIK_ID = table.Column<int>(type: "int", nullable: true),
                    PRZEWOZNIK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    NR_REJ = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TABOR_NACZEPY_ID = table.Column<int>(type: "int", nullable: true),
                    NR_REJ_NACZEPY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KIEROWCA_ID = table.Column<int>(type: "int", nullable: true),
                    NAZWISKO_IMIE_KIER = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_DOK_KIEROWCY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    LP_KIEROWCY = table.Column<int>(type: "int", nullable: true),
                    DATA_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    STAN_LICZNIKA_OD = table.Column<int>(type: "int", nullable: true),
                    STAN_LICZNIKA_DO = table.Column<int>(type: "int", nullable: true),
                    PALIWO_OD = table.Column<int>(type: "int", nullable: true),
                    PALIWO_DO = table.Column<int>(type: "int", nullable: true),
                    STAN_LICZNIKA_MTG_OD = table.Column<int>(type: "int", nullable: true),
                    STAN_LICZNIKA_MTG_DO = table.Column<int>(type: "int", nullable: true),
                    PALIWO_MTG_OD = table.Column<int>(type: "int", nullable: true),
                    PALIWO_MTG_DO = table.Column<int>(type: "int", nullable: true),
                    ADBLUE_OD = table.Column<int>(type: "int", nullable: true),
                    ADBLUE_DO = table.Column<int>(type: "int", nullable: true),
                    INFO_DOD = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    WYP_P = table.Column<string>(type: "text", nullable: true),
                    WYP_Z = table.Column<string>(type: "text", nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    STATUS = table.Column<int>(type: "int", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_TABOR_KIEROWCY", x => x.ID_TMP_TABOR_KIEROWCY);
                });

            migrationBuilder.CreateTable(
                name: "TMP_TABOR_KIEROWCY_TECZKA",
                columns: table => new
                {
                    ID_TMP_TABOR_KIEROWCY_TECZKA = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true),
                    TABOR_KIEROWCY_ID = table.Column<int>(type: "int", nullable: true),
                    TYP = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    ILOSC = table.Column<int>(type: "int", nullable: true),
                    DATA_WAZNOSCI = table.Column<DateTime>(type: "datetime", nullable: true),
                    SAM_NACZ = table.Column<int>(type: "int", nullable: true),
                    ZRODLO = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_TABOR_KIEROWCY_TECZKA", x => x.ID_TMP_TABOR_KIEROWCY_TECZKA);
                });

            migrationBuilder.CreateTable(
                name: "TMP_TABOR_KIEROWCY_WYP",
                columns: table => new
                {
                    ID_TMP_TABOR_KIEROWCY_WYP = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true),
                    TABOR_KIEROWCY_ID = table.Column<int>(type: "int", nullable: true),
                    TYP = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    ILOSC = table.Column<int>(type: "int", nullable: true),
                    DATA_WAZNOSCI = table.Column<DateTime>(type: "datetime", nullable: true),
                    SAM_NACZ = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_TABOR_KIEROWCY_WYP", x => x.ID_TMP_TABOR_KIEROWCY_WYP);
                });

            migrationBuilder.CreateTable(
                name: "TMP_TABOR_REZERWACJE",
                columns: table => new
                {
                    ID_TMP_TABOR_REZERWACJE = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true),
                    ID_TABOR_REZERWACJE = table.Column<int>(type: "int", nullable: true),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do pojazdu - tab: TABOR"),
                    TABOR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer rejestracyjny pojazdu"),
                    TABOR_NR_B = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Numer boczny pojazdu"),
                    NACZEPA_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do naczepy - tab: TABOR"),
                    KIEROWCA_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kierowcy 1 - tab: KIEROWCY"),
                    KIEROWCA2_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kierowcy 2 - tab: KIEROWCY"),
                    KLIENT_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kontrahenta - tab: KONTRAHENCI"),
                    KLIENT = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Symbol kontrahenta"),
                    KLIENT_MIASTO = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Miasto kontrahenta"),
                    KLIENT_ODDZIAL_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do oddziału kontrahenta - tab: KONTRAHENCI_ODDZIALY"),
                    KLIENT_ODDZIAL = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true, comment: "Oddział kontrahenta"),
                    TYP = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Typ rezerwacji"),
                    RODZAJ = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Rodzaj rezerwacji"),
                    DATA_REJ = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data rejestracji rezerwacji"),
                    DATA_OD = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Rezerwacja od dnia"),
                    GODZ_OD = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Rezerwacja od godziny"),
                    DATA_DO = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Rezerwacja do dnia"),
                    GODZ_DO = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Rezerwacja do godziny"),
                    DATA_OD_RZ = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Rezerwacja od dnia"),
                    GODZ_OD_RZ = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Rezerwacja od godziny"),
                    DATA_DO_RZ = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Rezerwacja do dnia"),
                    GODZ_DO_RZ = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Rezerwacja do godziny"),
                    WAZNOSC = table.Column<int>(type: "int", nullable: true, comment: "Skala ważności"),
                    STATUS = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Status rezerwacji (N-Nowe P-Zaplanowane R-Realizowane Z-Zakończone)"),
                    W_ZLECENIE_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do zlecenia warsztatowego - tab: W_ZLECENIA"),
                    W_ZLECENIE = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Numer zlecenia warsztatowego"),
                    UWAGI = table.Column<string>(type: "text", nullable: true, comment: "Dowolne uwagi do rezerwacji"),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true, comment: "Ilość załączników"),
                    POI = table.Column<int>(type: "int", nullable: true),
                    POI_ID = table.Column<int>(type: "int", nullable: true),
                    POI_NAZWA = table.Column<string>(type: "varchar(120)", unicode: false, maxLength: 120, nullable: true, comment: "Nazwa POI-a"),
                    POI_ADRES = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true, comment: "Adres POI-a"),
                    POI_MIASTO = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true, comment: "Miejscowość POI-a"),
                    POI_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Kod pocztowy POI-a"),
                    POI_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Kraj POI-a"),
                    POI_LON = table.Column<double>(type: "float", nullable: true, comment: "GPS - długość"),
                    POI_LAT = table.Column<double>(type: "float", nullable: true, comment: "GPS - szerokość"),
                    W_ZLECENIA_OFERTY_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do oferty warsztatowej - tab: W_ZLECENIA_OFERTY"),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    Z_LADUNKIEM = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_TABOR_REZERWACJE", x => x.ID_TMP_TABOR_REZERWACJE);
                });

            migrationBuilder.CreateTable(
                name: "TMP_TABOR_TERMIN",
                columns: table => new
                {
                    ID_TMP_TABOR_TERMIN = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    ID_TABOR_TERMIN = table.Column<int>(type: "int", nullable: true),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    CZYNNOSC_ID = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    CZYNNOSC = table.Column<string>(type: "varchar(120)", unicode: false, maxLength: 120, nullable: true),
                    WSKAZNIK = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    LICZNIK = table.Column<int>(type: "int", nullable: true),
                    INTERWAL = table.Column<int>(type: "int", nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    WERYFIKACJA = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_TABOR_TERMIN", x => x.ID_TMP_TABOR_TERMIN);
                });

            migrationBuilder.CreateTable(
                name: "TMP_UserOptions_DB",
                columns: table => new
                {
                    ID_TMP_UserOptions_DB = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    ID_UserOptions_DB = table.Column<int>(type: "int", nullable: true),
                    ID_User = table.Column<int>(type: "int", nullable: true, comment: "id użytkownika (-2:global/ -6:all_app/ -5:service/ -4:firm/ -3:computer)"),
                    AppName = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "nazwa aplikacji"),
                    Section = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "nazwa sekcji opcji"),
                    Opt_Name = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "nazwa opcji (unikalna w ramach sekcji)"),
                    Opt_DataType = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "typ danych"),
                    Opt_Value = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true, comment: "wartość opcji"),
                    Opt_Desc = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true, comment: "opis opcji"),
                    Opt_Group = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "grupa opcji"),
                    Department = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: true, comment: "wyróżnik dla aktywnego działu"),
                    Active = table.Column<int>(type: "int", nullable: true, comment: "wyróżnik aktywności opcji")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_UserOptions_DB", x => x.ID_TMP_UserOptions_DB);
                });

            migrationBuilder.CreateTable(
                name: "TMP_WYDRUKI_AUTOMAT",
                columns: table => new
                {
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: false, comment: "Unikalny identyfikator sesji wydruków"),
                    AKT_LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    AKT_DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    AKT_UZYTK_ID = table.Column<int>(type: "int", nullable: true),
                    AKT_SYSTEM_ID = table.Column<int>(type: "int", nullable: true),
                    AKT_SYS_WYM_DANYCH_ID = table.Column<int>(type: "int", nullable: true),
                    AKT_ZRODLO = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_WYDRUKI_AUTOMAT", x => x.ID_SESJI_KALK);
                });

            migrationBuilder.CreateTable(
                name: "TMP_WYDRUKI_MAILE",
                columns: table => new
                {
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true),
                    WYROZNIK = table.Column<int>(type: "int", nullable: true),
                    EMAIL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "TMP_WYJAZDY",
                columns: table => new
                {
                    ID_TMP_WYJAZDY = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    ID_WYJAZDY = table.Column<int>(type: "int", nullable: true),
                    NR_WYJAZDU = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_WYJAZDU_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    NR_WYJAZDU_ROK = table.Column<int>(type: "int", nullable: true),
                    NR_WYJAZDU_MIES = table.Column<int>(type: "int", nullable: true),
                    SPEDYTOR_ID = table.Column<int>(type: "int", nullable: true),
                    SPEDYTOR = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    OKR_ROZL_ROK = table.Column<int>(type: "int", nullable: true),
                    OKR_ROZL_MIES = table.Column<int>(type: "int", nullable: true),
                    DATA_WYJAZDU = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_WYJAZDU = table.Column<DateTime>(type: "datetime", nullable: true),
                    STAN_LICZNIKA_WYJAZD = table.Column<double>(type: "float", nullable: true),
                    STAN_LICZNIKA_N_WYJAZD = table.Column<double>(type: "float", nullable: true),
                    STAN_PALIWA_WYJAZD = table.Column<double>(type: "float", nullable: true),
                    LICZNIK_PALIWA_WYJAZD = table.Column<double>(type: "float", nullable: true),
                    STAN_PALIWA_AGR_WYJAZD = table.Column<double>(type: "float", nullable: true),
                    STAN_PALIWA_N_WYJAZD = table.Column<double>(type: "float", nullable: true),
                    STAN_ADBLUE_WYJAZD = table.Column<double>(type: "float", nullable: true),
                    STAN_LICZNIKA_MTG_N_WYJAZD = table.Column<double>(type: "float", nullable: true),
                    STAN_LICZNIKA_MTG_N_PRZYJAZD = table.Column<double>(type: "float", nullable: true),
                    DATA_PRZYJAZDU = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_PRZYJAZDU = table.Column<DateTime>(type: "datetime", nullable: true),
                    STAN_LICZNIKA_PRZYJAZD = table.Column<double>(type: "float", nullable: true),
                    STAN_LICZNIKA_N_PRZYJAZD = table.Column<double>(type: "float", nullable: true),
                    STAN_PALIWA_PRZYJAZD = table.Column<double>(type: "float", nullable: true),
                    LICZNIK_PALIWA_PRZYJAZD = table.Column<double>(type: "float", nullable: true),
                    STAN_PALIWA_AGR_PRZYJAZD = table.Column<double>(type: "float", nullable: true),
                    STAN_PALIWA_N_PRZYJAZD = table.Column<double>(type: "float", nullable: true),
                    STAN_ADBLUE_PRZYJAZD = table.Column<double>(type: "float", nullable: true),
                    CZAS_TRWANIA_WYJAZDU = table.Column<double>(type: "float", nullable: true),
                    CZAS_PRACY_AGREGATU = table.Column<double>(type: "float", nullable: true),
                    CZAS_PRACY_AGREGATU_N = table.Column<double>(type: "float", nullable: true),
                    CZAS_PRACY_AGR_GPS = table.Column<double>(type: "float", nullable: true),
                    CZAS_PRACY_AGR_N_GPS = table.Column<double>(type: "float", nullable: true),
                    CZAS_PRACY_OGRZEWANIA = table.Column<double>(type: "float", nullable: true),
                    KM_LACZNIE = table.Column<double>(type: "float", nullable: true),
                    KM_LADOWNE = table.Column<double>(type: "float", nullable: true),
                    KM_PUSTE = table.Column<double>(type: "float", nullable: true),
                    KM_PUSTY_KONTENER = table.Column<double>(type: "float", nullable: true),
                    KM_MIASTO = table.Column<double>(type: "float", nullable: true),
                    KM_GPS = table.Column<double>(type: "float", nullable: true),
                    KM_SERWIS = table.Column<double>(type: "float", nullable: true),
                    KM_LACZNIE_WG_ZLEC = table.Column<double>(type: "float", nullable: true),
                    KM_LADOWNE_WG_ZLEC = table.Column<double>(type: "float", nullable: true),
                    KM_PUSTE_WG_ZLEC = table.Column<double>(type: "float", nullable: true),
                    KM_LACZNIE_WG_MAPY = table.Column<double>(type: "float", nullable: true),
                    KM_LADOWNE_WG_MAPY = table.Column<double>(type: "float", nullable: true),
                    KM_PUSTE_WG_MAPY = table.Column<double>(type: "float", nullable: true),
                    ZAKUP_PALIWA = table.Column<double>(type: "float", nullable: true),
                    ZAKUP_PALIWA_AGR = table.Column<double>(type: "float", nullable: true),
                    ZAKUP_PALIWA_AGR_N = table.Column<double>(type: "float", nullable: true),
                    ZAKUP_ADBLUE = table.Column<double>(type: "float", nullable: true),
                    ZUZ_R_PALIWA = table.Column<double>(type: "float", nullable: true),
                    ZUZ_R_PALIWA_AGR = table.Column<double>(type: "float", nullable: true),
                    ZUZ_R_PALIWA_AGR_N = table.Column<double>(type: "float", nullable: true),
                    ZUZ_R_PALIWA_OGRZ = table.Column<double>(type: "float", nullable: true),
                    ZUZ_R_ADBLUE = table.Column<double>(type: "float", nullable: true),
                    ZUZ_T_PALIWA = table.Column<double>(type: "float", nullable: true),
                    ZUZ_T_PALIWA_AGR = table.Column<double>(type: "float", nullable: true),
                    ZUZ_T_PALIWA_AGR_N = table.Column<double>(type: "float", nullable: true),
                    ZUZ_T_PALIWA_OGRZ = table.Column<double>(type: "float", nullable: true),
                    ZUZ_T_ADBLUE = table.Column<double>(type: "float", nullable: true),
                    ZUZ_GPS_PALIWA = table.Column<double>(type: "float", nullable: true),
                    ZUZ_GPS_PALIWA_AGR = table.Column<double>(type: "float", nullable: true),
                    ZUZ_GPS_PALIWA_AGR_N = table.Column<double>(type: "float", nullable: true),
                    ZUZ_GPS_PALIWA_OGRZ = table.Column<double>(type: "float", nullable: true),
                    ZUZ_GPS_ADBLUE = table.Column<double>(type: "float", nullable: true),
                    PRZEKR_ZUZ_PALIWA = table.Column<double>(type: "float", nullable: true),
                    PRZEKR_ZUZ_PALIWA_AGR = table.Column<double>(type: "float", nullable: true),
                    PRZEKR_ZUZ_PALIWA_AGR_N = table.Column<double>(type: "float", nullable: true),
                    PRZEKR_ZUZ_PALIWA_OGRZ = table.Column<double>(type: "float", nullable: true),
                    PRZEKR_ZUZ_ADBLUE = table.Column<double>(type: "float", nullable: true),
                    PRZEKR_ZUZ_GPS_PAL = table.Column<double>(type: "float", nullable: true),
                    PRZEKR_ZUZ_GPS_PAL_AGR = table.Column<double>(type: "float", nullable: true),
                    PRZEKR_ZUZ_GPS_PAL_AGR_N = table.Column<double>(type: "float", nullable: true),
                    PRZEKR_ZUZ_GPS_PAL_OGRZ = table.Column<double>(type: "float", nullable: true),
                    PRZEKR_ZUZ_GPS_ADBLUE = table.Column<double>(type: "float", nullable: true),
                    ZWIEKSZ_NORME = table.Column<int>(type: "int", nullable: true),
                    ZWIEKSZ_NORME_SAM = table.Column<double>(type: "float", nullable: true),
                    ZWIEKSZ_NORME_L = table.Column<int>(type: "int", nullable: true),
                    ZWIEKSZ_NORME_SAM_L = table.Column<double>(type: "float", nullable: true),
                    ZWIEKSZ_ZUZ_RZ = table.Column<double>(type: "float", nullable: true),
                    SAMOCHOD_ID = table.Column<int>(type: "int", nullable: true),
                    SAMOCHOD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SAMOCHOD_NR_BOCZNY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NACZEPA_ID = table.Column<int>(type: "int", nullable: true),
                    NACZEPA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NACZEPA_NR_BOCZNY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KIEROWCA1_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA1 = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    KIEROWCA1_KM = table.Column<double>(type: "float", nullable: true),
                    KIEROWCA1_KM_UZ = table.Column<double>(type: "float", nullable: true),
                    KIEROWCA1_KM_PLACA = table.Column<double>(type: "float", nullable: true),
                    KIEROWCA1_OCENA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KIEROWCA2_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA2 = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    KIEROWCA2_KM = table.Column<double>(type: "float", nullable: true),
                    KIEROWCA2_KM_UZ = table.Column<double>(type: "float", nullable: true),
                    KIEROWCA2_KM_PLACA = table.Column<double>(type: "float", nullable: true),
                    KIEROWCA2_OCENA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KIEROWCA3_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA3 = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    KIEROWCA3_KM = table.Column<double>(type: "float", nullable: true),
                    KIEROWCA3_KM_UZ = table.Column<double>(type: "float", nullable: true),
                    KIEROWCA3_KM_PLACA = table.Column<double>(type: "float", nullable: true),
                    KIEROWCA3_OCENA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KARNET_TIR_ID = table.Column<int>(type: "int", nullable: true),
                    KARNET_TIR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    IL_M_ZAWY_KIEROWCA1 = table.Column<int>(type: "int", nullable: true),
                    IL_M_ZAWY_KIEROWCA2 = table.Column<int>(type: "int", nullable: true),
                    IL_M_ZAWY_KIEROWCA3 = table.Column<int>(type: "int", nullable: true),
                    IL_M_ZAWY_SUMA = table.Column<int>(type: "int", nullable: true),
                    TRASA = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    UWAGI = table.Column<string>(type: "text", nullable: true),
                    KRAJ_DOCELOWY = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    JEST_TACHOGRAF = table.Column<int>(type: "int", nullable: true),
                    ADR = table.Column<int>(type: "int", nullable: true),
                    BLOK_TELEMATYKE = table.Column<int>(type: "int", nullable: true),
                    STATUS = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    STATUS_POM = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    DATA_ZAMKN = table.Column<DateTime>(type: "datetime", nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    TONO_KM = table.Column<double>(type: "float", nullable: true),
                    SR_SPAL_WG_KARTY = table.Column<double>(type: "float", nullable: true),
                    MTH_WG_KARTY = table.Column<double>(type: "float", nullable: true),
                    PALIWO_ROZL = table.Column<int>(type: "int", nullable: true),
                    SR_CENA_PALIWA_START = table.Column<double>(type: "float", nullable: true),
                    SR_CENA_PALIWA_STOP = table.Column<double>(type: "float", nullable: true),
                    SR_CENA_ADBLUE_START = table.Column<double>(type: "float", nullable: true),
                    SR_CENA_ADBLUE_STOP = table.Column<double>(type: "float", nullable: true),
                    LICZ_AUTO_KM = table.Column<int>(type: "int", nullable: true),
                    LICZ_AUTO_CZAS = table.Column<int>(type: "int", nullable: true),
                    LICZ_AUTO_PRC_K = table.Column<int>(type: "int", nullable: true),
                    LICZ_AUTO_ODL_Z = table.Column<int>(type: "int", nullable: true),
                    WYJAZD_POPRZEDNI_ID = table.Column<int>(type: "int", nullable: true),
                    WYJAZD_POPRZEDNI = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    WYJAZD_KOLEJNY_ID = table.Column<int>(type: "int", nullable: true),
                    WYJAZD_KOLEJNY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NIE_LICZ_1_DNIA = table.Column<int>(type: "int", nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    SR_CENA_WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_WYJAZDY", x => x.ID_TMP_WYJAZDY);
                });

            migrationBuilder.CreateTable(
                name: "TMP_WYJAZDY_ZDARZENIA",
                columns: table => new
                {
                    ID_TMP_WYJAZDY_ZDARZENIA = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    ID_WYJAZDY_ZDARZENIA = table.Column<int>(type: "int", nullable: true),
                    WYJAZD_ID = table.Column<int>(type: "int", nullable: true),
                    WYJAZD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    LP_PW = table.Column<int>(type: "int", nullable: true),
                    TYP = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    MIEJSCE_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    ADRES = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true),
                    MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    TELEFONY = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    EMAIL = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true),
                    KONTAKT = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    KOR_GODZ = table.Column<int>(type: "int", nullable: true),
                    DYSP_GODZ_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DYSP_GODZ_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    LKM_START = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')", comment: "początkowy stan licznika kilometrów"),
                    LICZNIK = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')", comment: "końcowy stan licznika kilometrów"),
                    WAGA = table.Column<double>(type: "float", nullable: true),
                    WAGA_RZ = table.Column<double>(type: "float", nullable: true),
                    WAGA_ZESTAWU = table.Column<double>(type: "float", nullable: true),
                    JEDN_WAGI = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    PALETY = table.Column<double>(type: "float", nullable: true),
                    ILOSC_RZ = table.Column<double>(type: "float", nullable: true),
                    PALETY_WYM = table.Column<double>(type: "float", nullable: true),
                    TYP_Z = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PRZELADUNEK = table.Column<int>(type: "int", nullable: true),
                    DATA_RZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_RZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_RZ_K = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_RZ_K = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_RZ_P = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_RZ_P = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_RZ_W = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_RZ_W = table.Column<DateTime>(type: "datetime", nullable: true),
                    DOD_OPIS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DOD_OPIS_RZ = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPOZNIENIE = table.Column<double>(type: "float", nullable: true),
                    OPOZNIENIE_POWOD = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    LADUNEK_ID = table.Column<int>(type: "int", nullable: true),
                    LADUNEK = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    TEMP_PRZEWOZU_O = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TEMP_PRZEWOZU_O_RZ = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    JM = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DLUGOSC = table.Column<double>(type: "float", nullable: true),
                    WYSOKOSC = table.Column<double>(type: "float", nullable: true),
                    SZEROKOSC = table.Column<double>(type: "float", nullable: true),
                    OBJ = table.Column<double>(type: "float", nullable: true),
                    LDM = table.Column<double>(type: "float", nullable: true),
                    PALIWO = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')", comment: "zużyte paliwo w trakcie zdarzenia"),
                    PALIWO_LICZNIK = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')", comment: "końcowy stan licznika paliwa"),
                    GEO_LONGI = table.Column<double>(type: "float", nullable: true),
                    GEO_LAT = table.Column<double>(type: "float", nullable: true),
                    GEO_LONGI_RZ = table.Column<double>(type: "float", nullable: true),
                    GEO_LAT_RZ = table.Column<double>(type: "float", nullable: true),
                    INNE_UWAGI = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WYSYLAC_UWAGI = table.Column<int>(type: "int", nullable: true),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    CZAS_TRWANIA = table.Column<double>(type: "float", nullable: true),
                    MAX_OPOZN = table.Column<double>(type: "float", nullable: true),
                    PUSTY = table.Column<int>(type: "int", nullable: true),
                    KONTENER_ID = table.Column<int>(type: "int", nullable: true),
                    KONTENER = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KONTENER2_ID = table.Column<int>(type: "int", nullable: true),
                    KONTENER2 = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    ANUL_PW = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    PIETROWANIE = table.Column<int>(type: "int", nullable: true),
                    GF_DEF_ID = table.Column<int>(type: "int", nullable: true, comment: "id definicji geofencingu (referencja do tabeli GF_DEF)"),
                    REF_1 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_3 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_4 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_5 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TRASA_KM = table.Column<int>(type: "int", nullable: true),
                    TRASA_KM_ROSN = table.Column<int>(type: "int", nullable: true),
                    TRASA_CZAS = table.Column<int>(type: "int", nullable: true),
                    TRASA_CZAS_ROSN = table.Column<int>(type: "int", nullable: true),
                    AWIZACJA_PRZED = table.Column<DateTime>(type: "datetime", nullable: true),
                    ETA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DisableETA = table.Column<int>(type: "int", nullable: true, comment: "Wyłączenie analizy ETA")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_WYJAZDY_ZDARZENIA", x => x.ID_TMP_WYJAZDY_ZDARZENIA);
                });

            migrationBuilder.CreateTable(
                name: "TMP_WYJAZDY_ZLECENIA",
                columns: table => new
                {
                    ID_TMP_WYJAZDY_ZLECENIA = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    ID_WYJAZDY_ZLECENIA = table.Column<int>(type: "int", nullable: true),
                    WYJAZD_ID = table.Column<int>(type: "int", nullable: true),
                    WYJAZD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TYP_ZLECENIA = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    ZLECENIE_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZLECENIODAWCA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SAMOCHOD_ID = table.Column<int>(type: "int", nullable: true),
                    SAMOCHOD = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    SAMOCHOD_NR_BOCZNY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NACZEPA_ID = table.Column<int>(type: "int", nullable: true),
                    NACZEPA = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    NACZEPA_NR_BOCZNY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KIEROWCA1_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA1 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KIEROWCA2_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KIEROWCA3_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA3 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    WAGA = table.Column<double>(type: "float", nullable: true),
                    ODLEGLOSC = table.Column<double>(type: "float", nullable: true),
                    ODLEGLOSC_LAD = table.Column<double>(type: "float", nullable: true),
                    ODLEGLOSC_PUST = table.Column<double>(type: "float", nullable: true),
                    PROCENT_KOSZTOW = table.Column<double>(type: "float", nullable: true),
                    FRACHT_DO_PROWIZJI = table.Column<double>(type: "float", nullable: true),
                    PRZYCHOD_WEWN = table.Column<double>(type: "float", nullable: true),
                    PRZYCHOD_WEWN_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_WYJAZDY_ZLECENIA", x => x.ID_TMP_WYJAZDY_ZLECENIA);
                });

            migrationBuilder.CreateTable(
                name: "TMP_WYM_OPAK_ROZL",
                columns: table => new
                {
                    ID_TMP_WYM_OPAK_ROZL = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true),
                    ZRODLO = table.Column<int>(type: "int", nullable: true),
                    PRZESYLKI_ID = table.Column<int>(type: "int", nullable: true),
                    LISTY_LINIOWE_ID = table.Column<int>(type: "int", nullable: true),
                    PRZEWOZNIK_ID = table.Column<int>(type: "int", nullable: true),
                    OPAKOWANIE_ID = table.Column<int>(type: "int", nullable: true),
                    ILOSC = table.Column<int>(type: "int", nullable: true),
                    OPAK_WYM = table.Column<int>(type: "int", nullable: true),
                    OPAK_WYM_DO_ROZL = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE_TYP = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    MIEJSCE_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    NADAWCA_ID = table.Column<int>(type: "int", nullable: true),
                    ODBIORCA_ID = table.Column<int>(type: "int", nullable: true),
                    KLIENT_ID = table.Column<int>(type: "int", nullable: true),
                    NR_ROZL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    POBRAL = table.Column<int>(type: "int", nullable: true),
                    ZDAL = table.Column<int>(type: "int", nullable: true),
                    NIE_ZWR = table.Column<int>(type: "int", nullable: true),
                    ROZL = table.Column<int>(type: "int", nullable: true),
                    BILANS_KLIENT = table.Column<int>(type: "int", nullable: true),
                    BILANS_NADAWCA = table.Column<int>(type: "int", nullable: true),
                    BILANS_ODBIORCA = table.Column<int>(type: "int", nullable: true),
                    BILANS_PRZEWOZNIK = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_WYM_OPAK_ROZL", x => x.ID_TMP_WYM_OPAK_ROZL);
                });

            migrationBuilder.CreateTable(
                name: "TMP_WYM_PALET_2",
                columns: table => new
                {
                    ID_TMP_WYM_PALET_2 = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    ZLECENIE_ID = table.Column<int>(type: "int", nullable: true),
                    TYP_ZLEC = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    SYST_LP = table.Column<int>(type: "int", nullable: true),
                    SYST_TYP = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    ZA_WY_ID = table.Column<int>(type: "int", nullable: true),
                    ZA_WY = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    TYP = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    ILOSC_1 = table.Column<double>(type: "float", nullable: true),
                    ILOSC_2 = table.Column<double>(type: "float", nullable: true),
                    ILOSC_3 = table.Column<double>(type: "float", nullable: true),
                    ILOSC_4 = table.Column<double>(type: "float", nullable: true),
                    ILOSC_5 = table.Column<double>(type: "float", nullable: true),
                    OPAK_1 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OPAK_2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OPAK_3 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OPAK_4 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OPAK_5 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KOD_OPAK_1 = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KOD_OPAK_2 = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KOD_OPAK_3 = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KOD_OPAK_4 = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KOD_OPAK_5 = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_WYM_PALET_2", x => x.ID_TMP_WYM_PALET_2);
                });

            migrationBuilder.CreateTable(
                name: "TMP_ZALICZKI",
                columns: table => new
                {
                    ID_TMP_ZALICZKI = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    ID_ZALICZKI = table.Column<int>(type: "int", nullable: true),
                    NR_ZALICZKI = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_ZALICZKI_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    NR_ZALICZKI_ROK = table.Column<int>(type: "int", nullable: true),
                    NR_ZALICZKI_MIES = table.Column<int>(type: "int", nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    DELEGACJA_ID = table.Column<int>(type: "int", nullable: true),
                    DELEGACJA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PRACOWNIK_ID = table.Column<int>(type: "int", nullable: true),
                    PRACOWNIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    WALUTA_ZALICZKI = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KWOTA_ZALICZKI = table.Column<double>(type: "float", nullable: true),
                    KWOTA_WYDANA_U = table.Column<double>(type: "float", nullable: true),
                    KWOTA_WYDANA_N = table.Column<double>(type: "float", nullable: true),
                    DO_ZWROTU_WYPLATY = table.Column<double>(type: "float", nullable: true),
                    WPLACONO = table.Column<double>(type: "float", nullable: true),
                    SALDO = table.Column<double>(type: "float", nullable: true),
                    ROZLICZONO = table.Column<int>(type: "int", nullable: true),
                    DATA_ROZLICZENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    KURS_UZGODNIONY = table.Column<int>(type: "int", nullable: true),
                    KURSY_WALUT_ID = table.Column<int>(type: "int", nullable: true),
                    KURSY_WALUT = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    KURS = table.Column<double>(type: "float", nullable: true),
                    KURSY_WALUT_DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    FORMA_WYPLATY = table.Column<int>(type: "int", nullable: true),
                    DIETA = table.Column<int>(type: "int", nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KWOTA_PLN = table.Column<double>(type: "float", nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    STATUS = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_1 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_2 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_3 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_4 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_5 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    RAP_KASOWE_OPER_WY_ID = table.Column<int>(type: "int", nullable: true),
                    RAP_KASOWE_OPER_WY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    RAP_KASOWE_OPER_ROZ_ID = table.Column<int>(type: "int", nullable: true),
                    RAP_KASOWE_OPER_ROZ = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_ZALICZKI", x => x.ID_TMP_ZALICZKI);
                });

            migrationBuilder.CreateTable(
                name: "TMP_ZIPCODE",
                columns: table => new
                {
                    ID_TMP_ZIPCODE = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true),
                    ID_ZIPCODE = table.Column<int>(type: "int", nullable: true),
                    COUNTRY = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Kod kraju"),
                    ZIP_CODE = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: false, defaultValueSql: "('')", comment: "Kod pocztowy"),
                    ZIP = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Kod pocztowy bez znaków separujących"),
                    TOWN = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Miasto"),
                    STREET = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Ulica"),
                    DISTRICT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Powiat"),
                    ProvinceId = table.Column<int>(type: "int", nullable: true),
                    PROVINCE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Województwo"),
                    POST_OFFICE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Poczta"),
                    PO_BOX_ZIP = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "?"),
                    OWN_ZIP_UNIT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "?"),
                    GEO_LONGI = table.Column<double>(type: "float", nullable: true, comment: "GPS - długość"),
                    GEO_LAT = table.Column<double>(type: "float", nullable: true, comment: "GPS - szerokość"),
                    GEO_AKCEPTACJA = table.Column<int>(type: "int", nullable: true, comment: "GPS - akceptacja"),
                    GEO_POZIOM_UFN = table.Column<int>(type: "int", nullable: true, comment: "GPS - poziom ufności"),
                    ROUTE = table.Column<int>(type: "int", nullable: true, comment: "?"),
                    ID_CENTER = table.Column<int>(type: "int", nullable: true, comment: "?"),
                    ZONE = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true, defaultValueSql: "('-')", comment: "?"),
                    STREFA = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Strefa"),
                    PODSTREFA = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Podstrefa"),
                    AKTUAL = table.Column<int>(type: "int", nullable: true, comment: "Numer aktualizacji"),
                    GPS = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy kod został zgeokodowany"),
                    LON = table.Column<double>(type: "float", nullable: true, comment: "GPS - długość"),
                    LAT = table.Column<double>(type: "float", nullable: true, comment: "GPS - szerokość"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja"),
                    LOKALIZACJA2 = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja 2"),
                    BLOKADA = table.Column<int>(type: "int", nullable: true, comment: "Kod zablokowany do automatyczego zmieniania stref"),
                    TMP_LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja tymczasowa"),
                    TMP_STREFA = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Strefa tymczasowa"),
                    TMP_ROUTE = table.Column<double>(type: "float", nullable: true, comment: "Wyliczona odległość od lokalizacji tymczasowej"),
                    GMINA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Gmina"),
                    ZIP_STREET = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "ulica bez numeru"),
                    ZIP_NUMBER = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "numer"),
                    MapGeoCoding = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_ZIPCODE", x => x.ID_TMP_ZIPCODE);
                });

            migrationBuilder.CreateTable(
                name: "TMP_ZLECENIA",
                columns: table => new
                {
                    ID_TMP_ZLECENIA = table.Column<int>(type: "int", nullable: false),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    KLIENT_ID = table.Column<int>(type: "int", nullable: true),
                    RODZ_ZLEC = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    TYP = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    PLATNIK_ID = table.Column<int>(type: "int", nullable: true),
                    PRZEWOZNIK_ID = table.Column<int>(type: "int", nullable: true),
                    TYP_ZLECENIA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    WAGA_LADUNKU = table.Column<double>(type: "float", nullable: true),
                    WAGA_LADUNKU_RZ = table.Column<double>(type: "float", nullable: true),
                    OBJETOSC_LADUNKU = table.Column<double>(type: "float", nullable: true),
                    TYP_OPAKOWANIA = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    ILOSC_OPAKOWAN = table.Column<double>(type: "float", nullable: true),
                    WYMIANA_PALET = table.Column<int>(type: "int", nullable: true),
                    KWOTA_K = table.Column<double>(type: "float", nullable: true),
                    WALUTA_K = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    WALUTA_FV_K = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    TYP_KURS_K = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    TYP_TAB_K = table.Column<int>(type: "int", nullable: true),
                    ODC_KRAJOWY_K = table.Column<double>(type: "float", nullable: true),
                    ODC_KRAJOWY_VAT_K = table.Column<double>(type: "float", nullable: true),
                    ODC_KRAJOWY_VAT_ID_K = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    ODC_UE_K = table.Column<double>(type: "float", nullable: true),
                    ODC_UE_VAT_K = table.Column<double>(type: "float", nullable: true),
                    ODC_UE_VAT_ID_K = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    ODC_ZAGRANICZNY_K = table.Column<double>(type: "float", nullable: true),
                    ODC_ZAGRANICZNY_VAT_K = table.Column<double>(type: "float", nullable: true),
                    ODC_ZAGRANICZNY_VAT_ID_K = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    KWOTA_P = table.Column<double>(type: "float", nullable: true),
                    WALUTA_P = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    WALUTA_FV_P = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    TYP_KURS_P = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    TYP_TAB_P = table.Column<int>(type: "int", nullable: true),
                    ODC_KRAJOWY_P = table.Column<double>(type: "float", nullable: true),
                    ODC_KRAJOWY_VAT_P = table.Column<double>(type: "float", nullable: true),
                    ODC_KRAJOWY_VAT_ID_P = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    ODC_UE_P = table.Column<double>(type: "float", nullable: true),
                    ODC_UE_VAT_P = table.Column<double>(type: "float", nullable: true),
                    ODC_UE_VAT_ID_P = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    ODC_ZAGRANICZNY_P = table.Column<double>(type: "float", nullable: true),
                    ODC_ZAGRANICZNY_VAT_P = table.Column<double>(type: "float", nullable: true),
                    ODC_ZAGRANICZNY_VAT_ID_P = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    KWOTA_K_USTALONA = table.Column<double>(type: "float", nullable: true),
                    STAWKA_ZA_KM = table.Column<double>(type: "float", nullable: true),
                    STAWKA_ZA_WAGA_KM = table.Column<double>(type: "float", nullable: true),
                    KWOTA_P_USTALONA = table.Column<double>(type: "float", nullable: true),
                    STAWKA_ZA_KM_P = table.Column<double>(type: "float", nullable: true),
                    STAWKA_ZA_WAGA_KM_P = table.Column<double>(type: "float", nullable: true),
                    WARTOSC_LADUNKU = table.Column<double>(type: "float", nullable: true),
                    WARTOSC_LADUNKU_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    STATUS_KALK = table.Column<int>(type: "int", nullable: true),
                    KURS_WG_K = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    KURS_Z_DNIA_P_K = table.Column<int>(type: "int", nullable: true),
                    KURS_WG_P = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    KURS_Z_DNIA_P_P = table.Column<int>(type: "int", nullable: true),
                    DATA_ZLECENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    VAT_W_PLN = table.Column<int>(type: "int", nullable: true),
                    WYMIANA_PALET_ROZL = table.Column<int>(type: "int", nullable: true),
                    WYMIANA_PALET_WYSL = table.Column<int>(type: "int", nullable: true),
                    WYMIANA_PALET_WYSL_DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    ID_ZLECENIA = table.Column<int>(type: "int", nullable: true),
                    FRM_ID = table.Column<int>(type: "int", nullable: true),
                    SAMOCHOD_ID = table.Column<int>(type: "int", nullable: true),
                    NACZEPA_ID = table.Column<int>(type: "int", nullable: true),
                    OPIS_TOWARU = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WY_DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    SAMOCHOD = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    NR_ZLECENIA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KIEROWCA1_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA1 = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    ANULOWANE = table.Column<int>(type: "int", nullable: true),
                    Lokalizacja = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_ZLECENIA", x => x.ID_TMP_ZLECENIA);
                });

            migrationBuilder.CreateTable(
                name: "TMP_ZLECENIA_C",
                columns: table => new
                {
                    ID_TMP_ZLECENIA_C = table.Column<int>(type: "int", nullable: false),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    NR_ZLECENIA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_ZLECENIA_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    NR_ZLECENIA_ROK = table.Column<int>(type: "int", nullable: true),
                    NR_ZLECENIA_MIES = table.Column<int>(type: "int", nullable: true),
                    NUMER_ZEWN = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    REJESTRUJACY_ID = table.Column<int>(type: "int", nullable: true),
                    REJESTRUJACY = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    AGENT_CELNY_ID = table.Column<int>(type: "int", nullable: true),
                    AGENT_CELNY = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    STATUS = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    ANULOWANE = table.Column<int>(type: "int", nullable: true),
                    TYP = table.Column<int>(type: "int", nullable: true),
                    RODZAJ = table.Column<int>(type: "int", nullable: true),
                    PROCEDURA = table.Column<int>(type: "int", nullable: true),
                    NR_FAKTURY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KOD_TOWARU = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    OPIS_TOWARU = table.Column<string>(type: "varchar(280)", unicode: false, maxLength: 280, nullable: true),
                    WARTOSC_STATYSTYCZNA = table.Column<double>(type: "float", nullable: true),
                    WARTOSC_TOWARU = table.Column<double>(type: "float", nullable: true),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KURS_WALUTY = table.Column<double>(type: "float", nullable: true),
                    MRN = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    NR_ZGLOSZENIA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    UPOWAZNIENIE_ID = table.Column<int>(type: "int", nullable: true),
                    UPOWAZNIENIE_NR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    UPOWAZNIENIE_INNY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZABEZPIECZENIE = table.Column<int>(type: "int", nullable: true),
                    ZABEZPIECZENIE_ID = table.Column<int>(type: "int", nullable: true),
                    ZABEZPIECZENIE_NR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KRAJ_ZALADUNKU = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    KRAJ_ROZLADUNKU = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    KRAJ_POCZATKOWY = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    KRAJ_KONCOWY = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    DATA_REJESTRACJI = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_ZGLOSZENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_PRZYJECIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_ZWOLNIENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    PRZEW_DATA_ZAKONCZENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_ZAKONCZENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_PLATNOSCI = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_PRZELEWU = table.Column<DateTime>(type: "datetime", nullable: true),
                    REF_1 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_3 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_4 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_5 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KLIENT_ID = table.Column<int>(type: "int", nullable: true),
                    KLIENT_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KLIENT_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KLIENT_ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KLIENT_MIASTO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KLIENT_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    KLIENT_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KLIENT_NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    KLIENT_FAX = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KLIENT_KONT = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KLIENT_TEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PLATNIK_ID = table.Column<int>(type: "int", nullable: true),
                    PLATNIK_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    PLATNIK_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    PLATNIK_ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    PLATNIK_MIASTO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    PLATNIK_KOD = table.Column<string>(type: "varchar(6)", unicode: false, maxLength: 6, nullable: true),
                    PLATNIK_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    PLATNIK_NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    IMPEKSP_ID = table.Column<int>(type: "int", nullable: true),
                    IMPEKSP_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    IMPEKSP_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    IMPEKSP_ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    IMPEKSP_MIASTO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    IMPEKSP_KOD = table.Column<string>(type: "varchar(6)", unicode: false, maxLength: 6, nullable: true),
                    IMPEKSP_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    IMPEKSP_NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    ZAFAKTUROWANE = table.Column<int>(type: "int", nullable: true),
                    FV_NA_PLATNIKA = table.Column<int>(type: "int", nullable: true),
                    ODROCZONY_VAT = table.Column<int>(type: "int", nullable: true),
                    OPIS = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    UWAGI = table.Column<string>(type: "text", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    PRZELEWY_CELNE_ID = table.Column<int>(type: "int", nullable: true),
                    PRZELEWY_CELNE_NR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ID_ZLECENIA_C = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator zlecenia"),
                    UPOWAZNIENIE_INNE = table.Column<int>(type: "int", nullable: true),
                    ROZLICZONY_VAT = table.Column<int>(type: "int", nullable: true),
                    URZAD_CELNY = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    NR_DECYZJI = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZLECENIE_UZUP = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_ZLECENIA_C", x => x.ID_TMP_ZLECENIA_C);
                });

            migrationBuilder.CreateTable(
                name: "TMP_ZLECENIA_C_POZ",
                columns: table => new
                {
                    ID_TMP_ZLECENIA_C_POZ = table.Column<int>(type: "int", nullable: false),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    ID_ZLECENIA_C_POZ = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator zlecenia"),
                    ZLECENIE_C_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE_NR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZLECENIE_RODZAJ = table.Column<int>(type: "int", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_ZLECENIA_C_POZ", x => x.ID_TMP_ZLECENIA_C_POZ);
                });

            migrationBuilder.CreateTable(
                name: "TMP_ZLECENIA_CYST",
                columns: table => new
                {
                    ID_TMP_ZLECENIA_CYST = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true),
                    ID_ZLECENIA = table.Column<int>(type: "int", nullable: true),
                    KOMORA_1 = table.Column<int>(type: "int", nullable: true),
                    LADUNEK_1 = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WAGA_1 = table.Column<double>(type: "float", nullable: true),
                    WAGA_RZ_1 = table.Column<double>(type: "float", nullable: true),
                    JEDN_WAGI_1 = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    OBJ_1 = table.Column<double>(type: "float", nullable: true),
                    OBJ_RZ_1 = table.Column<double>(type: "float", nullable: true),
                    ADR_1 = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    GESTOSC_1 = table.Column<double>(type: "float", nullable: true),
                    CISN_1 = table.Column<double>(type: "float", nullable: true),
                    JEDN_CISN_1 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    TEMP_1 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TEMP_RZ_1 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    WAGA_ZEST_1 = table.Column<double>(type: "float", nullable: true),
                    WAGA_BRUTTO_1 = table.Column<double>(type: "float", nullable: true),
                    KOMORA_2 = table.Column<int>(type: "int", nullable: true),
                    LADUNEK_2 = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WAGA_2 = table.Column<double>(type: "float", nullable: true),
                    WAGA_RZ_2 = table.Column<double>(type: "float", nullable: true),
                    JEDN_WAGI_2 = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    OBJ_2 = table.Column<double>(type: "float", nullable: true),
                    OBJ_RZ_2 = table.Column<double>(type: "float", nullable: true),
                    ADR_2 = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    GESTOSC_2 = table.Column<double>(type: "float", nullable: true),
                    CISN_2 = table.Column<double>(type: "float", nullable: true),
                    JEDN_CISN_2 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    TEMP_2 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TEMP_RZ_2 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    WAGA_ZEST_2 = table.Column<double>(type: "float", nullable: true),
                    WAGA_BRUTTO_2 = table.Column<double>(type: "float", nullable: true),
                    KOMORA_3 = table.Column<int>(type: "int", nullable: true),
                    LADUNEK_3 = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WAGA_3 = table.Column<double>(type: "float", nullable: true),
                    WAGA_RZ_3 = table.Column<double>(type: "float", nullable: true),
                    JEDN_WAGI_3 = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    OBJ_3 = table.Column<double>(type: "float", nullable: true),
                    OBJ_RZ_3 = table.Column<double>(type: "float", nullable: true),
                    ADR_3 = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    GESTOSC_3 = table.Column<double>(type: "float", nullable: true),
                    CISN_3 = table.Column<double>(type: "float", nullable: true),
                    JEDN_CISN_3 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    TEMP_3 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TEMP_RZ_3 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    WAGA_ZEST_3 = table.Column<double>(type: "float", nullable: true),
                    WAGA_BRUTTO_3 = table.Column<double>(type: "float", nullable: true),
                    KOMORA_4 = table.Column<int>(type: "int", nullable: true),
                    LADUNEK_4 = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WAGA_4 = table.Column<double>(type: "float", nullable: true),
                    WAGA_RZ_4 = table.Column<double>(type: "float", nullable: true),
                    JEDN_WAGI_4 = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    OBJ_4 = table.Column<double>(type: "float", nullable: true),
                    OBJ_RZ_4 = table.Column<double>(type: "float", nullable: true),
                    ADR_4 = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    GESTOSC_4 = table.Column<double>(type: "float", nullable: true),
                    CISN_4 = table.Column<double>(type: "float", nullable: true),
                    JEDN_CISN_4 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    TEMP_4 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TEMP_RZ_4 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    WAGA_ZEST_4 = table.Column<double>(type: "float", nullable: true),
                    WAGA_BRUTTO_4 = table.Column<double>(type: "float", nullable: true),
                    KOMORA_5 = table.Column<int>(type: "int", nullable: true),
                    LADUNEK_5 = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WAGA_5 = table.Column<double>(type: "float", nullable: true),
                    WAGA_RZ_5 = table.Column<double>(type: "float", nullable: true),
                    JEDN_WAGI_5 = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    OBJ_5 = table.Column<double>(type: "float", nullable: true),
                    OBJ_RZ_5 = table.Column<double>(type: "float", nullable: true),
                    ADR_5 = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    GESTOSC_5 = table.Column<double>(type: "float", nullable: true),
                    CISN_5 = table.Column<double>(type: "float", nullable: true),
                    JEDN_CISN_5 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    TEMP_5 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TEMP_RZ_5 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    WAGA_ZEST_5 = table.Column<double>(type: "float", nullable: true),
                    WAGA_BRUTTO_5 = table.Column<double>(type: "float", nullable: true),
                    KOMORA_6 = table.Column<int>(type: "int", nullable: true),
                    LADUNEK_6 = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WAGA_6 = table.Column<double>(type: "float", nullable: true),
                    WAGA_RZ_6 = table.Column<double>(type: "float", nullable: true),
                    JEDN_WAGI_6 = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    OBJ_6 = table.Column<double>(type: "float", nullable: true),
                    OBJ_RZ_6 = table.Column<double>(type: "float", nullable: true),
                    ADR_6 = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    GESTOSC_6 = table.Column<double>(type: "float", nullable: true),
                    CISN_6 = table.Column<double>(type: "float", nullable: true),
                    JEDN_CISN_6 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    TEMP_6 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TEMP_RZ_6 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    WAGA_ZEST_6 = table.Column<double>(type: "float", nullable: true),
                    WAGA_BRUTTO_6 = table.Column<double>(type: "float", nullable: true),
                    KOMORA_7 = table.Column<int>(type: "int", nullable: true),
                    LADUNEK_7 = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WAGA_7 = table.Column<double>(type: "float", nullable: true),
                    WAGA_RZ_7 = table.Column<double>(type: "float", nullable: true),
                    JEDN_WAGI_7 = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    OBJ_7 = table.Column<double>(type: "float", nullable: true),
                    OBJ_RZ_7 = table.Column<double>(type: "float", nullable: true),
                    ADR_7 = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    GESTOSC_7 = table.Column<double>(type: "float", nullable: true),
                    CISN_7 = table.Column<double>(type: "float", nullable: true),
                    JEDN_CISN_7 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    TEMP_7 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TEMP_RZ_7 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    WAGA_ZEST_7 = table.Column<double>(type: "float", nullable: true),
                    WAGA_BRUTTO_7 = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_ZLECENIA_CYST", x => x.ID_TMP_ZLECENIA_CYST);
                });

            migrationBuilder.CreateTable(
                name: "TMP_ZLECENIA_DOKUMENTY",
                columns: table => new
                {
                    ID_TMP_ZLECENIA_DOKUMENTY = table.Column<int>(type: "int", nullable: false),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    LP = table.Column<int>(type: "int", nullable: true),
                    KOD = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WYMAGANY = table.Column<int>(type: "int", nullable: true),
                    WPLYNAL = table.Column<int>(type: "int", nullable: true),
                    DATA_WPLYWU = table.Column<DateTime>(type: "datetime", nullable: true),
                    UZYTKOWNIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ROD = table.Column<int>(type: "int", nullable: true),
                    ROD_DO = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    ROD_WYSZEDL = table.Column<int>(type: "int", nullable: true),
                    ROD_DATA_WYJSCIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    ROD_UZYTKOWNIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KOD_KRESKOWY = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    EROD = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_ZLECENIA_DOKUMENTY", x => x.ID_TMP_ZLECENIA_DOKUMENTY);
                });

            migrationBuilder.CreateTable(
                name: "TMP_ZLECENIA_EXT",
                columns: table => new
                {
                    ID_TMP_ZLECENIA_EXT = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true),
                    FV_NA_PLATNIKA = table.Column<short>(type: "smallint", nullable: true),
                    PRZEWOZNIK_ODDZIAL_ID = table.Column<int>(type: "int", nullable: true),
                    DO_MORSKIEGO = table.Column<short>(type: "smallint", nullable: true),
                    KOR_DO_ZERA = table.Column<short>(type: "smallint", nullable: true),
                    KOR_DO_ZERA_K = table.Column<short>(type: "smallint", nullable: true),
                    GIELDA_POJAZDOW_ID = table.Column<int>(type: "int", nullable: true),
                    RHENUS_ROZL_TRAS_ID = table.Column<int>(type: "int", nullable: true),
                    CENNIK_KONTROLA = table.Column<int>(type: "int", nullable: true),
                    NIE_FAKTURUJ = table.Column<short>(type: "smallint", nullable: true),
                    SENT_DT = table.Column<DateTime>(type: "datetime", nullable: true),
                    SENT = table.Column<int>(type: "int", nullable: true),
                    DO_KOLEJOWEGO = table.Column<short>(type: "smallint", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_ZLECENIA_EXT", x => x.ID_TMP_ZLECENIA_EXT);
                });

            migrationBuilder.CreateTable(
                name: "TMP_ZLECENIA_INSTR_DOD",
                columns: table => new
                {
                    ID_TMP_ZLECENIA_INSTR_DOD = table.Column<int>(type: "int", nullable: false),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Redundantnie na podstwie słownika INSTRUKCJE_DOD"),
                    UWAGI = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    KWOTA = table.Column<double>(type: "float", nullable: true),
                    KWOTA_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    COD = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Redundantnie na podstwie słownika INSTRUKCJE_DOD"),
                    CENNIK = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Redundantnie na podstwie słownika INSTRUKCJE_DOD"),
                    OPCJONALNA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Redundantnie na podstwie słownika INSTRUKCJE_DOD")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_ZLECENIA_INSTR_DOD", x => x.ID_TMP_ZLECENIA_INSTR_DOD);
                });

            migrationBuilder.CreateTable(
                name: "TMP_ZLECENIA_M",
                columns: table => new
                {
                    ID_TMP_ZLECENIA_M = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    FRM_ID = table.Column<int>(type: "int", nullable: true),
                    NUMER = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    NUMER_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    NUMER_ROK = table.Column<int>(type: "int", nullable: true),
                    NUMER_MIES = table.Column<int>(type: "int", nullable: true),
                    NUMER_ZEWN = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    NUMER_HBL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NUMER_MBL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NUMER_REJSU = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    JEZYK_ZLECENIA = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, defaultValueSql: "('PL')"),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_CUTOFF = table.Column<DateTime>(type: "datetime", nullable: true),
                    TYDZ = table.Column<int>(type: "int", nullable: true),
                    INCO = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    INCO_MIEJSCE = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true),
                    TYP = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KIERUNEK = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    STATUS = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    STATUS_EMISJA = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    ANULOWANE = table.Column<int>(type: "int", nullable: true),
                    ZAFAKTUROWANE = table.Column<int>(type: "int", nullable: true),
                    DOKUM_OK = table.Column<int>(type: "int", nullable: true),
                    KLIENT_ID = table.Column<int>(type: "int", nullable: true),
                    PLATNIK_ID = table.Column<int>(type: "int", nullable: true),
                    FV_NA_PLATNIKA = table.Column<int>(type: "int", nullable: true),
                    ODDZIAL_ID = table.Column<int>(type: "int", nullable: true),
                    ZAL_U_NADAWCY = table.Column<int>(type: "int", nullable: true),
                    NADAWCA_ID = table.Column<int>(type: "int", nullable: true),
                    ROZL_U_ODBIORCY = table.Column<int>(type: "int", nullable: true),
                    ODBIORCA_ID = table.Column<int>(type: "int", nullable: true),
                    ARMATOR_ID = table.Column<int>(type: "int", nullable: true),
                    AGENT_ID = table.Column<int>(type: "int", nullable: true),
                    SERVICE_CONTRACT = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    NUMER_SC = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TERMINAL_ID = table.Column<int>(type: "int", nullable: true),
                    SPEDYTOR_ID = table.Column<int>(type: "int", nullable: true),
                    OPIEKUN = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPIEKUN_HANDL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    POL_MIEJSCE_ID = table.Column<int>(type: "int", nullable: true),
                    ETD = table.Column<DateTime>(type: "datetime", nullable: true),
                    RTD = table.Column<DateTime>(type: "datetime", nullable: true),
                    POD_MIEJSCE_ID = table.Column<int>(type: "int", nullable: true),
                    ETA = table.Column<DateTime>(type: "datetime", nullable: true),
                    RTA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_DOST_ODB = table.Column<DateTime>(type: "datetime", nullable: true),
                    MIEJSCE_DOST_ODB_ID = table.Column<int>(type: "int", nullable: true),
                    DATA_ROZL_STATKU = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZWOLN_KONT_DLA_ID = table.Column<int>(type: "int", nullable: true),
                    NAZWA_STATKU = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TRASA = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    OPIS_LADUNKU = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OPAKOWANIE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TYP_KONTENERA = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    KONTENER = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ILOSC = table.Column<double>(type: "float", nullable: true),
                    ILOSC_TEU = table.Column<double>(type: "float", nullable: true),
                    WAGA = table.Column<double>(type: "float", nullable: true),
                    OBJ = table.Column<double>(type: "float", nullable: true),
                    UBEZP_CARGO = table.Column<int>(type: "int", nullable: true),
                    UBEZP_PROC_STAWKA = table.Column<double>(type: "float", nullable: true),
                    UBEZP_PROC = table.Column<double>(type: "float", nullable: true),
                    UBEZP_ALL_IN = table.Column<int>(type: "int", nullable: true),
                    WARTOSC_LADUNKU = table.Column<double>(type: "float", nullable: true),
                    WARTOSC_LADUNKU_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    UBEZP_WARTOSC = table.Column<double>(type: "float", nullable: true),
                    CLENIE = table.Column<int>(type: "int", nullable: true),
                    STATUS_CELNY_ID = table.Column<int>(type: "int", nullable: true),
                    CLENIE_TYP_ODPR = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    CLENIE_KONTRAH_ID = table.Column<int>(type: "int", nullable: true),
                    CLENIE_MIEJSCE_ID = table.Column<int>(type: "int", nullable: true),
                    CLENIE_DATA_WEJ = table.Column<DateTime>(type: "datetime", nullable: true),
                    CLENIE_DATA_WYJ = table.Column<DateTime>(type: "datetime", nullable: true),
                    CLENIE_DEMURRAGE = table.Column<int>(type: "int", nullable: true),
                    CLENIE_POTW_ODPR = table.Column<int>(type: "int", nullable: true),
                    CLENIE_NR_DOK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ODPRAWA_CELNA_ID = table.Column<int>(type: "int", nullable: true),
                    ODROCZONY_VAT = table.Column<int>(type: "int", nullable: true),
                    LOKALIZACJA_CLO_WW = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    LOKALIZACJA_CLO_WY = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    CELNA_IMPORT = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE_C_ZA_AGENCJA_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE_C_ZA_ID = table.Column<int>(type: "int", nullable: true),
                    CELNA_EXPORT = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE_C_WY_AGENCJA_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE_C_WY = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    MIEJSCE_C_WY_ID = table.Column<int>(type: "int", nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KONOSAMENT = table.Column<int>(type: "int", nullable: true),
                    OK = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_ZLECENIA_M", x => x.ID_TMP_ZLECENIA_M);
                });

            migrationBuilder.CreateTable(
                name: "TMP_ZLECENIA_M_LAD",
                columns: table => new
                {
                    ID_TMP_ZLECENIA_M_LAD = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    ZLECENIA_M_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do zlecenia"),
                    LP = table.Column<int>(type: "int", nullable: true, comment: "Lp"),
                    OPIS_ID = table.Column<int>(type: "int", nullable: true),
                    OPIS = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true, comment: "Opis towaru"),
                    OPAKOWANIE_ID = table.Column<int>(type: "int", nullable: true),
                    KOD_OPAK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Kod opakowania"),
                    OPAKOWANIE = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Symbol opakowania"),
                    PIETROWANIE = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy możliwe piętrowanie"),
                    KOD_UN = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "ADR - kod UN"),
                    KLASA_ADR = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "ADR - Klasa"),
                    GRUPA_ADR = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "ADR - Grupa"),
                    OPIS_ADR = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "ADR - Opis"),
                    ILOSC_DEKL = table.Column<int>(type: "int", nullable: true, comment: "Ilość pierwotna"),
                    ILOSC_RZ = table.Column<int>(type: "int", nullable: true, comment: "Ilość rzeczywista"),
                    WAGA_JEDN = table.Column<double>(type: "float", nullable: true, comment: "Waga deklarowana"),
                    WAGA_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Waga deklarowana"),
                    WAGA_RZ = table.Column<double>(type: "float", nullable: true, comment: "Waga rzeczywista"),
                    OBJ_JEDN = table.Column<double>(type: "float", nullable: true, comment: "Waga deklarowana"),
                    OBJ_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Objętość deklarowana"),
                    OBJ_RZ = table.Column<double>(type: "float", nullable: true, comment: "Objętość rzeczywista"),
                    DL_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Długość deklarowana"),
                    WY_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Wysokość deklarowana"),
                    SZ_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Szerokość deklarowana"),
                    DL_RZ = table.Column<double>(type: "float", nullable: true, comment: "Długość rzeczywista"),
                    WY_RZ = table.Column<double>(type: "float", nullable: true, comment: "Wysokość rzeczywista"),
                    SZ_RZ = table.Column<double>(type: "float", nullable: true, comment: "Szerokość rzeczywista"),
                    LDM_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Metry ładowne deklarowane"),
                    LDM_RZ = table.Column<double>(type: "float", nullable: true, comment: "Metry ładowne rzeczywiste"),
                    DLUZYCA_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Metry dłużycowe deklarowane"),
                    DLUZYCA_RZ = table.Column<double>(type: "float", nullable: true, comment: "Metry dłużycowe rzeczywiste"),
                    MP_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Miejsca paletowe deklarowane"),
                    MP_RZ = table.Column<double>(type: "float", nullable: true, comment: "Miejsca paletowe rzeczywiste"),
                    WAGA_KUBATUROWA = table.Column<double>(type: "float", nullable: true, comment: "Waga kubaturowa"),
                    WAGA_LADOWNA = table.Column<double>(type: "float", nullable: true, comment: "Waga ładowna"),
                    DLUZYCA_DOD = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy jest dodatek za dłużycę"),
                    DLUZYCA_DOD_KG = table.Column<double>(type: "float", nullable: true, comment: "Dodatkowe KG za dłużycę"),
                    WAGA_OBL = table.Column<double>(type: "float", nullable: true, comment: "Waga obliczeniowa"),
                    WARTOSC_LADUNKU = table.Column<double>(type: "float", nullable: true, comment: "Wartość ładunku"),
                    WARTOSC_LADUNKU_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Wartość ładunku - waluta")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_ZLECENIA_M_LAD", x => x.ID_TMP_ZLECENIA_M_LAD);
                });

            migrationBuilder.CreateTable(
                name: "TMP_ZLECENIA_M_ZA_WY",
                columns: table => new
                {
                    ID_TMP_ZLECENIA_M_ZA_WY = table.Column<int>(type: "int", nullable: false),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    TYP = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    WAGA = table.Column<double>(type: "float", nullable: true),
                    WAGA_RZ = table.Column<double>(type: "float", nullable: true),
                    WAGA_ZESTAWU = table.Column<double>(type: "float", nullable: true),
                    JEDN_WAGI = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    PALETY = table.Column<double>(type: "float", nullable: true),
                    PALETY_WYM = table.Column<double>(type: "float", nullable: true),
                    JM = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    LADUNEK_ID = table.Column<int>(type: "int", nullable: true),
                    LADUNEK = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    TEMP_PRZEWOZU_O = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TEMP_PRZEWOZU_O_RZ = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ID_ZLECENIA_M_ZA_WY = table.Column<int>(type: "int", nullable: true),
                    AWIZACJA_PRZED = table.Column<DateTime>(type: "datetime", nullable: true),
                    ETA = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_ZLECENIA_M_ZA_WY", x => x.ID_TMP_ZLECENIA_M_ZA_WY);
                });

            migrationBuilder.CreateTable(
                name: "TMP_ZLECENIA_OST_LADUNKI",
                columns: table => new
                {
                    ID_TMP_ZLECENIA_OST_LADUNKI = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true),
                    ID_ZLECENIA_OST_LADUNKI = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE_ID = table.Column<int>(type: "int", nullable: true),
                    TYP = table.Column<int>(type: "int", nullable: true),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    KOMORA = table.Column<int>(type: "int", nullable: true),
                    LADUNEK_ID = table.Column<int>(type: "int", nullable: true),
                    GRUPA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_ZLECENIA_OST_LADUNKI", x => x.ID_TMP_ZLECENIA_OST_LADUNKI);
                });

            migrationBuilder.CreateTable(
                name: "TMP_ZLECENIA_POZ_FAKT",
                columns: table => new
                {
                    ID_TMP_ZLECENIA_POZ_FAKT = table.Column<int>(type: "int", nullable: false),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    ID_ZLECENIA_POZ_FAKT = table.Column<int>(type: "int", nullable: true),
                    TYP = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    RM = table.Column<int>(type: "int", nullable: true),
                    RO = table.Column<int>(type: "int", nullable: true),
                    RODZ_PRZYCHODOW = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    RODZ_KOSZTOW = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KLIENT_ID = table.Column<int>(type: "int", nullable: true),
                    KLIENT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: true),
                    KONTRAH = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TYTUL_ID = table.Column<int>(type: "int", nullable: true),
                    TYTUL = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    TYTUL_OPIS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    TYTUL_KOD = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    JM = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    ILOSC = table.Column<double>(type: "float", nullable: true),
                    CENA_JEDN = table.Column<double>(type: "float", nullable: true),
                    NETTO_WARTOSC = table.Column<double>(type: "float", nullable: true),
                    VAT_ID = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    VAT_STAWKA = table.Column<double>(type: "float", nullable: true),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    WALUTA_FV = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    FAKTURY_ID = table.Column<int>(type: "int", nullable: true),
                    FAKTURY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_ZLECENIA_POZ_FAKT", x => x.ID_TMP_ZLECENIA_POZ_FAKT);
                });

            migrationBuilder.CreateTable(
                name: "TMP_ZLECENIA_PROMY",
                columns: table => new
                {
                    ID_TMP_ZLECENIA_PROMY = table.Column<int>(type: "int", nullable: false),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    ZLECENIA_ID = table.Column<int>(type: "int", nullable: true),
                    PROMY_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_ZLECENIA_PROMY", x => x.ID_TMP_ZLECENIA_PROMY);
                });

            migrationBuilder.CreateTable(
                name: "TMP_ZLECENIA_RAIL",
                columns: table => new
                {
                    ID_TMP_ZLECENIA_RAIL = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    FRM_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_ZLECENIA_RAIL", x => x.ID_TMP_ZLECENIA_RAIL);
                });

            migrationBuilder.CreateTable(
                name: "TMP_ZLECENIA_RAIL_LAD",
                columns: table => new
                {
                    ID_TMP_ZLECENIA_RAIL_LAD = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    ZLECENIA_RAIL_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do zlecenia"),
                    LP = table.Column<int>(type: "int", nullable: true, comment: "Lp"),
                    OPIS_ID = table.Column<int>(type: "int", nullable: true),
                    OPIS = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true, comment: "Opis towaru"),
                    OPAKOWANIE_ID = table.Column<int>(type: "int", nullable: true),
                    KOD_OPAK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Kod opakowania"),
                    OPAKOWANIE = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Symbol opakowania"),
                    PIETROWANIE = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy możliwe piętrowanie"),
                    KOD_UN = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "ADR - kod UN"),
                    KLASA_ADR = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "ADR - Klasa"),
                    GRUPA_ADR = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "ADR - Grupa"),
                    OPIS_ADR = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "ADR - Opis"),
                    ILOSC_DEKL = table.Column<int>(type: "int", nullable: true, comment: "Ilość pierwotna"),
                    ILOSC_RZ = table.Column<int>(type: "int", nullable: true, comment: "Ilość rzeczywista"),
                    WAGA_JEDN = table.Column<double>(type: "float", nullable: true, comment: "Waga deklarowana"),
                    WAGA_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Waga deklarowana"),
                    WAGA_RZ = table.Column<double>(type: "float", nullable: true, comment: "Waga rzeczywista"),
                    OBJ_JEDN = table.Column<double>(type: "float", nullable: true, comment: "Waga deklarowana"),
                    OBJ_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Objętość deklarowana"),
                    OBJ_RZ = table.Column<double>(type: "float", nullable: true, comment: "Objętość rzeczywista"),
                    DL_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Długość deklarowana"),
                    WY_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Wysokość deklarowana"),
                    SZ_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Szerokość deklarowana"),
                    DL_RZ = table.Column<double>(type: "float", nullable: true, comment: "Długość rzeczywista"),
                    WY_RZ = table.Column<double>(type: "float", nullable: true, comment: "Wysokość rzeczywista"),
                    SZ_RZ = table.Column<double>(type: "float", nullable: true, comment: "Szerokość rzeczywista"),
                    LDM_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Metry ładowne deklarowane"),
                    LDM_RZ = table.Column<double>(type: "float", nullable: true, comment: "Metry ładowne rzeczywiste"),
                    DLUZYCA_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Metry dłużycowe deklarowane"),
                    DLUZYCA_RZ = table.Column<double>(type: "float", nullable: true, comment: "Metry dłużycowe rzeczywiste"),
                    MP_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Miejsca paletowe deklarowane"),
                    MP_RZ = table.Column<double>(type: "float", nullable: true, comment: "Miejsca paletowe rzeczywiste"),
                    WAGA_KUBATUROWA = table.Column<double>(type: "float", nullable: true, comment: "Waga kubaturowa"),
                    WAGA_LADOWNA = table.Column<double>(type: "float", nullable: true, comment: "Waga ładowna"),
                    DLUZYCA_DOD = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy jest dodatek za dłużycę"),
                    DLUZYCA_DOD_KG = table.Column<double>(type: "float", nullable: true, comment: "Dodatkowe KG za dłużycę"),
                    WAGA_OBL = table.Column<double>(type: "float", nullable: true, comment: "Waga obliczeniowa"),
                    WARTOSC_LADUNKU = table.Column<double>(type: "float", nullable: true, comment: "Wartość ładunku"),
                    WARTOSC_LADUNKU_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Wartość ładunku - waluta"),
                    REF_1 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_3 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_4 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_5 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    MODEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    INDEKS = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NHM = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_ZLECENIA_RAIL_LAD", x => x.ID_TMP_ZLECENIA_RAIL_LAD);
                });

            migrationBuilder.CreateTable(
                name: "TMP_ZLECENIA_RAIL_ZA_WY",
                columns: table => new
                {
                    ID_TMP_ZLECENIA_RAIL_ZA_WY = table.Column<int>(type: "int", nullable: false),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    TYP = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    WAGA = table.Column<double>(type: "float", nullable: true),
                    WAGA_RZ = table.Column<double>(type: "float", nullable: true),
                    WAGA_ZESTAWU = table.Column<double>(type: "float", nullable: true),
                    JEDN_WAGI = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    PALETY = table.Column<double>(type: "float", nullable: true),
                    PALETY_WYM = table.Column<double>(type: "float", nullable: true),
                    JM = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    LADUNEK_ID = table.Column<int>(type: "int", nullable: true),
                    LADUNEK = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    TEMP_PRZEWOZU_O = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TEMP_PRZEWOZU_O_RZ = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ID_ZLECENIA_RAIL_ZA_WY = table.Column<int>(type: "int", nullable: true),
                    AWIZACJA_PRZED = table.Column<DateTime>(type: "datetime", nullable: true),
                    ETA = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_ZLECENIA_RAIL_ZA_WY", x => x.ID_TMP_ZLECENIA_RAIL_ZA_WY);
                });

            migrationBuilder.CreateTable(
                name: "TMP_ZLECENIA_WYM_TABORU",
                columns: table => new
                {
                    ID_TMP_ZLECENIA_WYM_TABORU = table.Column<int>(type: "int", nullable: false),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    TYP = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "WYM.WYP, TYP.ZAB, SP.LAD"),
                    NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    ILOSC = table.Column<int>(type: "int", nullable: true),
                    ZAMIENNIK = table.Column<int>(type: "int", nullable: true),
                    NIE_BLOKUJ = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_ZLECENIA_WYM_TABORU", x => x.ID_TMP_ZLECENIA_WYM_TABORU);
                });

            migrationBuilder.CreateTable(
                name: "TMP_ZLECENIA_ZA_WY",
                columns: table => new
                {
                    ID_TMP_ZLECENIA_ZA_WY = table.Column<int>(type: "int", nullable: false),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    TYP = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE_ID = table.Column<int>(type: "int", nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    WAGA = table.Column<double>(type: "float", nullable: true),
                    WAGA_RZ = table.Column<double>(type: "float", nullable: true),
                    WAGA_ZESTAWU = table.Column<double>(type: "float", nullable: true),
                    JEDN_WAGI = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    PALETY = table.Column<double>(type: "float", nullable: true),
                    PALETY_WYM = table.Column<double>(type: "float", nullable: true),
                    JM = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    LADUNEK_ID = table.Column<int>(type: "int", nullable: true),
                    LADUNEK = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    TEMP_PRZEWOZU_O = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TEMP_PRZEWOZU_O_RZ = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MIEJSCE = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    ID_ZLECENIA_ZA_WY = table.Column<int>(type: "int", nullable: true),
                    AWIZACJA_PRZED = table.Column<DateTime>(type: "datetime", nullable: true),
                    ETA = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_ZLECENIA_ZA_WY", x => x.ID_TMP_ZLECENIA_ZA_WY);
                });

            migrationBuilder.CreateTable(
                name: "TMP_ZLECENIA_ZB",
                columns: table => new
                {
                    ID_TMP_ZLECENIA_ZB = table.Column<int>(type: "int", nullable: false),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    SPEDYTOR_ID = table.Column<int>(type: "int", nullable: true),
                    DATA_ZLECENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_ZLECENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    TYP_ZLECENIA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    PRZEWOZNIK_ID = table.Column<int>(type: "int", nullable: true),
                    TRASA_ODL = table.Column<double>(type: "float", nullable: true),
                    TRASA_ODL_DOJAZD = table.Column<double>(type: "float", nullable: true),
                    TRASA_ODL_GL = table.Column<double>(type: "float", nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_ZLECENIA_ZB", x => x.ID_TMP_ZLECENIA_ZB);
                });

            migrationBuilder.CreateTable(
                name: "TMP_ZLECENIA_ZB_POZ",
                columns: table => new
                {
                    ID_TMP_ZLECENIA_ZB_POZ = table.Column<int>(type: "int", nullable: false),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    ZLECENIE_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_ZLECENIA_ZB_POZ", x => x.ID_TMP_ZLECENIA_ZB_POZ);
                });

            migrationBuilder.CreateTable(
                name: "TMP_ZLECENIA_ZB_ZDARZENIA",
                columns: table => new
                {
                    ID_TMP_ZLECENIA_ZB_ZDARZENIA = table.Column<int>(type: "int", nullable: false),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, comment: "Unikalny identyfikator sesji"),
                    LP_ZLECENIA_ZB = table.Column<int>(type: "int", nullable: true),
                    TYP = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    MIEJSCE_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TMP_ZLECENIA_ZB_ZDARZENIA", x => x.ID_TMP_ZLECENIA_ZB_ZDARZENIA);
                });

            migrationBuilder.CreateTable(
                name: "Tool",
                schema: "app",
                columns: table => new
                {
                    ToolId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ToolTypeId = table.Column<int>(type: "int", nullable: false),
                    ToolCategoryId = table.Column<int>(type: "int", nullable: true),
                    Name = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    SQLDefinition = table.Column<string>(type: "text", nullable: true),
                    PKColumn = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    ParamsColumn = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    ToolGroupColumn = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    ReportGroupColumn = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    CaptionColumn = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    Plugin = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    PluginParams = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    PluginMethod = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    CustomToolId = table.Column<int>(type: "int", nullable: true),
                    MultiExecute = table.Column<int>(type: "int", nullable: false),
                    SmallIconId = table.Column<int>(type: "int", nullable: true),
                    LargeIconId = table.Column<int>(type: "int", nullable: true),
                    DesktopIconId = table.Column<int>(type: "int", nullable: true),
                    AutoRefresh = table.Column<int>(type: "int", nullable: true),
                    AccessLevel = table.Column<int>(type: "int", nullable: true),
                    ObjectId = table.Column<int>(type: "int", nullable: true),
                    GridTypeId = table.Column<int>(type: "int", nullable: true),
                    Autoprepare = table.Column<int>(type: "int", nullable: false, defaultValueSql: "((1))"),
                    EmptyToolGroupId = table.Column<int>(type: "int", nullable: true),
                    QueryHint = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    ReportSource = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    CustomReportSource = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    ReportParams = table.Column<string>(type: "varchar(max)", unicode: false, nullable: true),
                    CustomReportParams = table.Column<string>(type: "varchar(max)", unicode: false, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Tool", x => x.ToolId);
                });

            migrationBuilder.CreateTable(
                name: "ToolGroup",
                schema: "app",
                columns: table => new
                {
                    ToolGroupId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    GroupName = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ToolGroup", x => x.ToolGroupId);
                });

            migrationBuilder.CreateTable(
                name: "ToolParameter",
                schema: "app",
                columns: table => new
                {
                    ToolParameterId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ToolId = table.Column<int>(type: "int", nullable: true),
                    Name = table.Column<string>(type: "nvarchar(50)", maxLength: 50, nullable: false),
                    Type = table.Column<int>(type: "int", nullable: true),
                    Value = table.Column<object>(type: "sql_variant", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ToolParameter", x => x.ToolParameterId);
                });

            migrationBuilder.CreateTable(
                name: "ToolPermission",
                schema: "app",
                columns: table => new
                {
                    ToolPermissionId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ProfileId = table.Column<int>(type: "int", nullable: true),
                    ToolId = table.Column<int>(type: "int", nullable: true),
                    State = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ToolPermission", x => x.ToolPermissionId);
                });

            migrationBuilder.CreateTable(
                name: "ToolType",
                schema: "app",
                columns: table => new
                {
                    ToolTypeId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    Description = table.Column<string>(type: "nvarchar(500)", maxLength: 500, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ToolType", x => x.ToolTypeId);
                });

            migrationBuilder.CreateTable(
                name: "trace_1",
                columns: table => new
                {
                    RowNumber = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    EventClass = table.Column<int>(type: "int", nullable: true),
                    TextData = table.Column<string>(type: "ntext", nullable: true),
                    ApplicationName = table.Column<string>(type: "nvarchar(128)", maxLength: 128, nullable: true),
                    NTUserName = table.Column<string>(type: "nvarchar(128)", maxLength: 128, nullable: true),
                    LoginName = table.Column<string>(type: "nvarchar(128)", maxLength: 128, nullable: true),
                    CPU = table.Column<int>(type: "int", nullable: true),
                    Reads = table.Column<long>(type: "bigint", nullable: true),
                    Writes = table.Column<long>(type: "bigint", nullable: true),
                    Duration = table.Column<long>(type: "bigint", nullable: true),
                    ClientProcessID = table.Column<int>(type: "int", nullable: true),
                    SPID = table.Column<int>(type: "int", nullable: true),
                    StartTime = table.Column<DateTime>(type: "datetime", nullable: true),
                    EndTime = table.Column<DateTime>(type: "datetime", nullable: true),
                    BinaryData = table.Column<byte[]>(type: "image", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__trace_1__AAAC09D85B606930", x => x.RowNumber);
                });

            migrationBuilder.CreateTable(
                name: "trace_2",
                columns: table => new
                {
                    RowNumber = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    EventClass = table.Column<int>(type: "int", nullable: true),
                    TextData = table.Column<string>(type: "ntext", nullable: true),
                    ApplicationName = table.Column<string>(type: "nvarchar(128)", maxLength: 128, nullable: true),
                    NTUserName = table.Column<string>(type: "nvarchar(128)", maxLength: 128, nullable: true),
                    LoginName = table.Column<string>(type: "nvarchar(128)", maxLength: 128, nullable: true),
                    CPU = table.Column<int>(type: "int", nullable: true),
                    Reads = table.Column<long>(type: "bigint", nullable: true),
                    Writes = table.Column<long>(type: "bigint", nullable: true),
                    Duration = table.Column<long>(type: "bigint", nullable: true),
                    ClientProcessID = table.Column<int>(type: "int", nullable: true),
                    SPID = table.Column<int>(type: "int", nullable: true),
                    StartTime = table.Column<DateTime>(type: "datetime", nullable: true),
                    EndTime = table.Column<DateTime>(type: "datetime", nullable: true),
                    BinaryData = table.Column<byte[]>(type: "image", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__trace_2__AAAC09D87DB102A7", x => x.RowNumber);
                });

            migrationBuilder.CreateTable(
                name: "TRAFIK",
                columns: table => new
                {
                    ID_TRAFIK = table.Column<int>(type: "int", nullable: false),
                    KOD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KOD_LICZN = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WL_LICZNIK = table.Column<int>(type: "int", nullable: true),
                    LICZNIK = table.Column<int>(type: "int", nullable: true),
                    AKTYWNY = table.Column<int>(type: "int", nullable: true),
                    DictionaryId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TextId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TRAFIK", x => x.ID_TRAFIK);
                });

            migrationBuilder.CreateTable(
                name: "TRANS",
                columns: table => new
                {
                    ID_TRANS = table.Column<int>(type: "int", nullable: false),
                    USER_ID = table.Column<int>(type: "int", nullable: true),
                    ACCESS_TOKEN = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ACCESS_TOKEN_DT = table.Column<DateTime>(type: "datetime", nullable: true),
                    REFRESH_TOKEN = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    REFRESH_TOKEN_DT = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TRANS", x => x.ID_TRANS);
                });

            migrationBuilder.CreateTable(
                name: "TRANS_MQTT",
                columns: table => new
                {
                    ID_TRANS_MQTT = table.Column<int>(type: "int", nullable: false),
                    event_name = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "event name"),
                    json_string = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true, comment: "answer in json format"),
                    done = table.Column<int>(type: "int", nullable: true, comment: "work done"),
                    created_at = table.Column<DateTime>(type: "datetime", nullable: true),
                    updated_at = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TRANS_MQTT", x => x.ID_TRANS_MQTT);
                });

            migrationBuilder.CreateTable(
                name: "TRANS_OFFER_DETAILS",
                columns: table => new
                {
                    ID_TRANS_OFFER_DETAILS = table.Column<int>(type: "int", nullable: false),
                    offer_id = table.Column<int>(type: "int", nullable: true, comment: "Id of offer"),
                    lp = table.Column<int>(type: "int", nullable: true, comment: "lp of offer detail"),
                    action = table.Column<string>(type: "varchar(25)", unicode: false, maxLength: 25, nullable: true, comment: "Current status of offer"),
                    created_at = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Date and time of creating the offer"),
                    created_by = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Name of the user who create an offer detail"),
                    valid_to = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Valid to"),
                    comment = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true, comment: "comment Description"),
                    price_currency = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Currency of received offer"),
                    price_value = table.Column<double>(type: "float", nullable: true, comment: "Price value"),
                    is_shipper = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TRANS_OFFER_DETAILS", x => x.ID_TRANS_OFFER_DETAILS);
                });

            migrationBuilder.CreateTable(
                name: "TRANS_OFFERS",
                columns: table => new
                {
                    ID_TRANS_OFFERS = table.Column<int>(type: "int", nullable: false),
                    obj_type = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "Typ obiektu (LL[List Liniowy], ZL[Zlecenia])"),
                    obj_id = table.Column<int>(type: "int", nullable: true, comment: "ID obiektu"),
                    rec_id = table.Column<int>(type: "int", nullable: true, comment: "ID rekordu"),
                    offer_id = table.Column<int>(type: "int", nullable: true, comment: "Id of offer"),
                    freight_id = table.Column<int>(type: "int", nullable: true, comment: "Id of freight for which the offers are submitted"),
                    company_id = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Identifies the company that submitted the offer"),
                    company_name = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true, comment: "SPEED Name of the company that submitted the offer"),
                    legal_name = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true, comment: "Name of the company that submitted the offer"),
                    created_at = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Date and time of creating the offer"),
                    price_currency = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Currency of received offer"),
                    price_value = table.Column<double>(type: "float", nullable: true, comment: "Price value"),
                    status = table.Column<string>(type: "varchar(25)", unicode: false, maxLength: 25, nullable: true, comment: "Current status of offer"),
                    version = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Version required for replying to the offer"),
                    trans_id = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Identifies employee of the company who submitted the offer"),
                    vat_id = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Legal (tax) company identifier"),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TRANS_OFFERS", x => x.ID_TRANS_OFFERS);
                });

            migrationBuilder.CreateTable(
                name: "TRASH_ORDER",
                columns: table => new
                {
                    ID_TRASH_ORDER = table.Column<int>(type: "int", nullable: false),
                    TRASH_ORDER_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    KIND = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    NR_ZLECENIA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    NR_ZLECENIA_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    NR_ZLECENIA_ROK = table.Column<int>(type: "int", nullable: true),
                    NR_ZLECENIA_MIES = table.Column<int>(type: "int", nullable: true),
                    ORD_ID_PARTNER = table.Column<int>(type: "int", nullable: true),
                    ORD_SYMBOL = table.Column<string>(type: "varchar(35)", unicode: false, maxLength: 35, nullable: true),
                    ORD_NAME = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ORD_NAME2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ORD_STREET = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ORD_CITY = table.Column<string>(type: "varchar(35)", unicode: false, maxLength: 35, nullable: true),
                    ORD_ZIP_CODE = table.Column<string>(type: "varchar(9)", unicode: false, maxLength: 9, nullable: true),
                    ORD_COUNTRY = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    ORD_CONTACT = table.Column<string>(type: "varchar(35)", unicode: false, maxLength: 35, nullable: true),
                    ORD_TEL = table.Column<string>(type: "varchar(35)", unicode: false, maxLength: 35, nullable: true),
                    ORD_FAX = table.Column<string>(type: "varchar(35)", unicode: false, maxLength: 35, nullable: true),
                    ORD_EMAIL = table.Column<string>(type: "varchar(35)", unicode: false, maxLength: 35, nullable: true),
                    ORD_VAT = table.Column<string>(type: "varchar(17)", unicode: false, maxLength: 17, nullable: true),
                    ORD_REMARK = table.Column<string>(type: "varchar(250)", unicode: false, maxLength: 250, nullable: true),
                    DST_ID_PARTNER = table.Column<int>(type: "int", nullable: true),
                    DST_SYMBOL = table.Column<string>(type: "varchar(35)", unicode: false, maxLength: 35, nullable: true),
                    DST_NAME = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DST_NAME2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ADRESY_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    DST_STREET_TYPE = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    DST_STREET = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DST_STREET_NUMBER = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    DST_INFO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DST_CITY = table.Column<string>(type: "varchar(35)", unicode: false, maxLength: 35, nullable: true),
                    DST_ZIP_CODE = table.Column<string>(type: "varchar(9)", unicode: false, maxLength: 9, nullable: true),
                    DST_SORT_CODE = table.Column<string>(type: "varchar(9)", unicode: false, maxLength: 9, nullable: true),
                    DST_ZONE = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    DST_COMMUNITY = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DST_COUNTRY = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    DST_CONTACT = table.Column<string>(type: "varchar(35)", unicode: false, maxLength: 35, nullable: true),
                    DST_TEL = table.Column<string>(type: "varchar(35)", unicode: false, maxLength: 35, nullable: true),
                    DST_FAX = table.Column<string>(type: "varchar(35)", unicode: false, maxLength: 35, nullable: true),
                    DST_EMAIL = table.Column<string>(type: "varchar(35)", unicode: false, maxLength: 35, nullable: true),
                    DST_VAT = table.Column<string>(type: "varchar(17)", unicode: false, maxLength: 17, nullable: true),
                    DST_REMARK = table.Column<string>(type: "varchar(250)", unicode: false, maxLength: 250, nullable: true),
                    PERIODIC = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    BEGIN_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    END_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    SCHEDULE_SCHEMA = table.Column<string>(type: "text", nullable: true),
                    INVOICE_TEXT = table.Column<string>(type: "varchar(250)", unicode: false, maxLength: 250, nullable: true),
                    IS_RYCZALT = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    RYCZALT = table.Column<double>(type: "float", nullable: true),
                    IS_FAKTURA_CYKLICZNA = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    FAKTURA_CYKLICZNA_OKRES = table.Column<int>(type: "int", nullable: true),
                    FAKTURA_CYKLICZNA_LAST_DT = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TRASH_ORDER", x => x.ID_TRASH_ORDER);
                });

            migrationBuilder.CreateTable(
                name: "TRASH_ORDER_CONTAINER",
                columns: table => new
                {
                    ID_TRASH_ORDER_CONTAINER = table.Column<int>(type: "int", nullable: false),
                    ID_TRASH_ORDER = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('-1')"),
                    ORD_ID_PARTNER = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('-1')"),
                    CONTAINER_SYMBOL = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    CONTAINER_KIND = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    QUANTITY = table.Column<int>(type: "int", nullable: true),
                    PRICE = table.Column<double>(type: "float", nullable: true),
                    IS_NETTO_PRICE = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TRASH_ORDER_CONTAINER", x => x.ID_TRASH_ORDER_CONTAINER);
                });

            migrationBuilder.CreateTable(
                name: "TRASH_ORDER_JOB",
                columns: table => new
                {
                    ID_TRASH_ORDER_JOB = table.Column<int>(type: "int", nullable: false),
                    ID_TRASH_ORDER = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('-1')"),
                    ORD_ID_PARTNER = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('-1')"),
                    JOB_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    CONTAINER_SYMBOL = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    CONTAINER_KIND = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    QUANTITY_PLANNED = table.Column<int>(type: "int", nullable: true),
                    QUANTITY_DONE = table.Column<int>(type: "int", nullable: true),
                    JOB_DESCRIPTION = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    PRICE = table.Column<double>(type: "float", nullable: true),
                    IS_NETTO_PRICE = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    CONTAINER_SERIAL_NUMBER = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    DONE = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    DONE_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    SEQUENCE_NUMBER = table.Column<int>(type: "int", nullable: true),
                    WYJAZD_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    SORT_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    OPAK_RYCZALT = table.Column<double>(type: "float", nullable: true),
                    FAKTURA_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TRASH_ORDER_JOB", x => x.ID_TRASH_ORDER_JOB);
                });

            migrationBuilder.CreateTable(
                name: "TRASY",
                columns: table => new
                {
                    ID_TRASY = table.Column<int>(type: "int", nullable: false),
                    KLIENT_ID = table.Column<int>(type: "int", nullable: true),
                    KLIENT = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    NAZWA_TRASY = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    MIEJSCE_NAD_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE_NAD = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KRAJ_NAD = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    MIEJSCE_ODB_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE_ODB = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KRAJ_ODB = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KIERUNEK = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    ODLEGLOSC = table.Column<double>(type: "float", nullable: true),
                    CENA_ZA_FRACHT = table.Column<double>(type: "float", nullable: true),
                    KOD_TRASY = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    CENA_ZA_FRACHT_P = table.Column<double>(type: "float", nullable: true),
                    WALUTA_P = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    FTL = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('1')"),
                    DROBNICA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    PRZEPISUJ_KM_DO = table.Column<int>(type: "int", nullable: true),
                    ODLEGLOSC_DOJAZD = table.Column<double>(type: "float", nullable: true),
                    DictionaryId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TextId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TRASY", x => x.ID_TRASY);
                });

            migrationBuilder.CreateTable(
                name: "TRASY_WYZNACZNIKI",
                columns: table => new
                {
                    ID_TRASY_WYZNACZNIKI = table.Column<int>(type: "int", nullable: false),
                    TRASY_ID = table.Column<int>(type: "int", nullable: true),
                    NR = table.Column<int>(type: "int", nullable: true),
                    TYP = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    MIEJSCE_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    GEO_LONGI = table.Column<double>(type: "float", nullable: true),
                    GEO_LAT = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TRASY_WYZNACZNIKI", x => x.ID_TRASY_WYZNACZNIKI);
                });

            migrationBuilder.CreateTable(
                name: "TYP_SZKODY_ZDARZENIA",
                columns: table => new
                {
                    ID_TYP_SZKODY_ZDARZENIA = table.Column<int>(type: "int", nullable: false),
                    LP = table.Column<int>(type: "int", nullable: true),
                    OPIS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SZABLON = table.Column<string>(type: "text", nullable: true),
                    SYSTEMOWY = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TYP_SZKODY_ZDARZENIA", x => x.ID_TYP_SZKODY_ZDARZENIA);
                });

            migrationBuilder.CreateTable(
                name: "TypRozl",
                columns: table => new
                {
                    IdTypRozl = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Kod = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: false, defaultValueSql: "('')"),
                    Opis = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    RozlFV = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TypRozl", x => x.IdTypRozl);
                },
                comment: "Typy rozliczeń kalkulacji");

            migrationBuilder.CreateTable(
                name: "TYPY_KONTENEROW",
                columns: table => new
                {
                    ID_TYPY_KONTENEROW = table.Column<int>(type: "int", nullable: false),
                    TYP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TEU = table.Column<double>(type: "float", nullable: true),
                    WAGA = table.Column<double>(type: "float", nullable: true),
                    POJ = table.Column<double>(type: "float", nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    NORMA_PALIWOWA = table.Column<double>(type: "float", nullable: true),
                    JEDN_OBJ = table.Column<double>(type: "float", nullable: true),
                    ILE_KOMOR = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TYPY_KONTENEROW", x => x.ID_TYPY_KONTENEROW);
                },
                comment: "Typy kontenerów");

            migrationBuilder.CreateTable(
                name: "TYPY_POJAZDOW",
                columns: table => new
                {
                    ID_TYPY_POJAZDOW = table.Column<int>(type: "int", nullable: false),
                    KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Kod typu pojazdu"),
                    OPIS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Opis"),
                    SAMOBIEZNY = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy pojazd samobieżny"),
                    LADOWNY = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy pojazd ładowny"),
                    CYSTERNA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy pojazd jest cysterną"),
                    WYROZNIK = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Wyróznik"),
                    OSOBOWY = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy pojazd jest osobowy"),
                    SPRZET = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy sprzęt roboczy"),
                    OPIS_DOD = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Opis dod"),
                    KONTENER = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy kontener"),
                    DictionaryId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TextId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TYPY_POJAZDOW", x => x.ID_TYPY_POJAZDOW);
                },
                comment: "Słownik typów pojazdów");

            migrationBuilder.CreateTable(
                name: "TYPY_PROT_NIEZG",
                columns: table => new
                {
                    ID_TYPY_PROT_NIEZG = table.Column<int>(type: "int", nullable: false),
                    TYP = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    NADAJ_STATUS = table.Column<int>(type: "int", nullable: true),
                    STATUS = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    USZK = table.Column<int>(type: "int", nullable: true),
                    SYMBOL_USZK = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    OPIS_USZK = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    OPIS_USZK_UZUP = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TYPY_PROT_NIEZG", x => x.ID_TYPY_PROT_NIEZG);
                });

            migrationBuilder.CreateTable(
                name: "TYPY_WAGONOW",
                columns: table => new
                {
                    ID_TYPY_WAGONOW = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    RODZAJ_WAGONU_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    OZNACZENIE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    MASA_WAGONU = table.Column<double>(type: "float", nullable: true),
                    MAX_LAD_A = table.Column<double>(type: "float", nullable: true),
                    MAX_LAD_B1 = table.Column<double>(type: "float", nullable: true),
                    MAX_LAD_B2 = table.Column<double>(type: "float", nullable: true),
                    MAX_LAD_C = table.Column<double>(type: "float", nullable: true),
                    MAX_LAD_D = table.Column<double>(type: "float", nullable: true),
                    M_PAL = table.Column<double>(type: "float", nullable: true),
                    MAX_OBJ = table.Column<double>(type: "float", nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true),
                    ZDJECIE = table.Column<byte[]>(type: "image", nullable: true),
                    OPERATOR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TORY_W = table.Column<int>(type: "int", nullable: true),
                    TORY_SZ = table.Column<int>(type: "int", nullable: true),
                    L_OSI = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TYPY_WAGONOW", x => x.ID_TYPY_WAGONOW);
                });

            migrationBuilder.CreateTable(
                name: "TYPY_ZLECEN_DROBN",
                columns: table => new
                {
                    ID_TYPY_ZLECEN_DROBN = table.Column<int>(type: "int", nullable: false),
                    KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Kod typu zlecenia"),
                    OPIS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Opis"),
                    SYMBOL_LICZNIKA = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Symbol na potrzeby liczników systemowych"),
                    SYMBOL_FK = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Symbol na potrzeby interfejsów FK"),
                    WIDOCZNY = table.Column<short>(type: "smallint", nullable: true, comment: "Flaga, czy typ zlecenia jest widoczny"),
                    SYSTEMOWY = table.Column<short>(type: "smallint", nullable: true, comment: "Flaga, czy typ zlecenia jest systemowy - dodany przez InterLAN"),
                    POZIOM = table.Column<short>(type: "smallint", nullable: true),
                    MAX_WAGA = table.Column<double>(type: "float", nullable: true),
                    MAX_OBJ = table.Column<double>(type: "float", nullable: true),
                    MAX_LDM = table.Column<double>(type: "float", nullable: true),
                    MAX_MPAL = table.Column<double>(type: "float", nullable: true),
                    MAX_ILOSC = table.Column<double>(type: "float", nullable: true),
                    MAX_WAGA_DO_OBL = table.Column<double>(type: "float", nullable: true),
                    TRASA_DIRECT = table.Column<short>(type: "smallint", nullable: true),
                    TRASA_DIRECT_KL = table.Column<short>(type: "smallint", nullable: true),
                    ZABRONIONA_ZMIANA_TYPU = table.Column<short>(type: "smallint", nullable: true),
                    MIN_WAGA = table.Column<double>(type: "float", nullable: true),
                    MIN_OBJ = table.Column<double>(type: "float", nullable: true),
                    MIN_LDM = table.Column<double>(type: "float", nullable: true),
                    MIN_MPAL = table.Column<double>(type: "float", nullable: true),
                    MIN_ILOSC = table.Column<double>(type: "float", nullable: true),
                    MIN_WAGA_DO_OBL = table.Column<double>(type: "float", nullable: true),
                    DRO_DEF_OPIS_LAD_ID = table.Column<int>(type: "int", nullable: true, comment: "Domyślny opis ładunku paczki"),
                    OPAK_ID = table.Column<int>(type: "int", nullable: true),
                    OPAK_WAGA_MIN = table.Column<double>(type: "float", nullable: true),
                    OPAK_WAGA_MAX = table.Column<double>(type: "float", nullable: true),
                    OPAK_OBJ_MIN = table.Column<double>(type: "float", nullable: true),
                    OPAK_OBJ_MAX = table.Column<double>(type: "float", nullable: true),
                    OPAK_DL_MIN = table.Column<double>(type: "float", nullable: true),
                    OPAK_DL_MAX = table.Column<double>(type: "float", nullable: true),
                    OPAK_SZ_MIN = table.Column<double>(type: "float", nullable: true),
                    OPAK_SZ_MAX = table.Column<double>(type: "float", nullable: true),
                    OPAK_WY_MIN = table.Column<double>(type: "float", nullable: true),
                    OPAK_WY_MAX = table.Column<double>(type: "float", nullable: true),
                    OPAK_SUM_WYM_MIN = table.Column<double>(type: "float", nullable: true),
                    OPAK_SUM_WYM_MAX = table.Column<double>(type: "float", nullable: true),
                    WYL_GEN_TRASY_WG_SIECI = table.Column<short>(type: "smallint", nullable: true),
                    DictionaryId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TextId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_TYPY_ZLECEN_DROBN", x => x.ID_TYPY_ZLECEN_DROBN);
                },
                comment: "Typy zleceń drobnicowych");

            migrationBuilder.CreateTable(
                name: "Unit",
                schema: "app",
                columns: table => new
                {
                    UnitId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Name = table.Column<string>(type: "nvarchar(10)", maxLength: 10, nullable: true),
                    Description = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    Multiplier = table.Column<double>(type: "float", nullable: true),
                    Weight = table.Column<int>(type: "int", nullable: true),
                    Visible = table.Column<int>(type: "int", nullable: true),
                    Order = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Unit", x => x.UnitId);
                });

            migrationBuilder.CreateTable(
                name: "UPOWAZNIENIA",
                columns: table => new
                {
                    ID_UPOWAZNIENIA = table.Column<int>(type: "int", nullable: false),
                    NR_UPOWAZNIENIA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_UPOWAZNIENIA_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    NR_UPOWAZNIENIA_ROK = table.Column<int>(type: "int", nullable: true),
                    NR_UPOWAZNIENIA_MIES = table.Column<int>(type: "int", nullable: true),
                    WAZNE = table.Column<int>(type: "int", nullable: true),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: true),
                    OSOBA_KONTAKTOWA_ID = table.Column<int>(type: "int", nullable: true),
                    OSOBA_KONTAKTOWA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OSOBA_MAIL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OSOBA_TELEFON = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DATA_PRZYJECIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_WYSTAWIENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    RODZAJ_DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    RODZAJ = table.Column<int>(type: "int", nullable: true),
                    RODZAJ_NUMER = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    RODZAJ_ID = table.Column<int>(type: "int", nullable: true),
                    TYP = table.Column<int>(type: "int", nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    UWAGI = table.Column<string>(type: "text", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KONTRAH_SYMBOL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    IAS = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OPLATA = table.Column<int>(type: "int", nullable: true),
                    ORYGINAL = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_UPOWAZNIENIA", x => x.ID_UPOWAZNIENIA);
                });

            migrationBuilder.CreateTable(
                name: "URLOPY",
                columns: table => new
                {
                    ID_URLOPY = table.Column<int>(type: "int", nullable: false),
                    KIEROWCY_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCY = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    RODZAJ = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DATA_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    ILOSC_DNI = table.Column<int>(type: "int", nullable: true),
                    PLATNY = table.Column<int>(type: "int", nullable: true),
                    KOLOR = table.Column<int>(type: "int", nullable: true),
                    RODZAJ_KOD = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    CZAS_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    CZAS_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    KOD_NIEOBECNOSCI = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    W_TACHO = table.Column<int>(type: "int", nullable: true),
                    ZDJETO_PRZYDZIAL = table.Column<int>(type: "int", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    CYKLICZNY = table.Column<int>(type: "int", nullable: true),
                    CYKLICZNY_GENERUJ_CO_ILE = table.Column<int>(type: "int", nullable: true),
                    CYKLICZNY_GENERUJ_DO_DNIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    CYKLICZNY_URLOPY_ID = table.Column<int>(type: "int", nullable: true),
                    POI_ID = table.Column<int>(type: "int", nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true, comment: "Ilość załączników"),
                    ILOSC_DNI_R = table.Column<int>(type: "int", nullable: true),
                    STATUS = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Status urlopu")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_URLOPY", x => x.ID_URLOPY);
                });

            migrationBuilder.CreateTable(
                name: "URLOPY_KIEROWCY",
                columns: table => new
                {
                    ID_URLOPY_KIEROWCY = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    URLOPY_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCY_ID = table.Column<int>(type: "int", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    LP = table.Column<int>(type: "int", nullable: true),
                    PRACOWNIK_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_URLOPY_KIEROWCY", x => x.ID_URLOPY_KIEROWCY);
                });

            migrationBuilder.CreateTable(
                name: "URLOPY_KONTRAHENCI",
                columns: table => new
                {
                    ID_URLOPY_KONTRAHENCI = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    URLOPY_ID = table.Column<int>(type: "int", nullable: true),
                    KONTRAHENCI_ID = table.Column<int>(type: "int", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    PRACOWNIK_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_URLOPY_KONTRAHENCI", x => x.ID_URLOPY_KONTRAHENCI);
                });

            migrationBuilder.CreateTable(
                name: "URLOPY_ZASTEPUJACY",
                columns: table => new
                {
                    ID_URLOPY_ZASTEPUJACY = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    URLOPY_ID = table.Column<int>(type: "int", nullable: true),
                    ZASTEPUJACY_ID = table.Column<int>(type: "int", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_URLOPY_ZASTEPUJACY", x => x.ID_URLOPY_ZASTEPUJACY);
                });

            migrationBuilder.CreateTable(
                name: "USER_LAYOUT",
                columns: table => new
                {
                    ID_USER_LAYOUT = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    USER_ID = table.Column<int>(type: "int", nullable: true),
                    WIN_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    VIEW_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    NAME = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    INI_NAME = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    DEFAULT_VIEW = table.Column<int>(type: "int", nullable: true),
                    DATA = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__USER_LAY__A7070FDCBB5CC422", x => x.ID_USER_LAYOUT);
                });

            migrationBuilder.CreateTable(
                name: "USER_LOGINHIST",
                columns: table => new
                {
                    ID_USER_LOGINHIST = table.Column<int>(type: "int", nullable: false),
                    DT = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas próby logowania"),
                    USERLOGIN = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "login użytkownika"),
                    ADMINLOGIN = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "login użytkownika typu ADMIN"),
                    TRY_NO = table.Column<short>(type: "smallint", nullable: true, comment: "numer próby logowania"),
                    TRY_OK = table.Column<short>(type: "smallint", nullable: true, comment: "(0/1) wynik próby logowania"),
                    ID_USER = table.Column<int>(type: "int", nullable: true, comment: "id użytkownika"),
                    APP = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "nazwa programu"),
                    PC_IP = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true, comment: "IP stacji logowania"),
                    PC_NAME = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: true, comment: "nazwa stacji roboczej"),
                    INFO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "info dodatkowe")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_USER_LOGINHIST", x => x.ID_USER_LOGINHIST);
                },
                comment: "historia logowania użytkowników");

            migrationBuilder.CreateTable(
                name: "USERAPPDEFPROFILE",
                columns: table => new
                {
                    ID_USERAPPDEFPROFILE = table.Column<int>(type: "int", nullable: false),
                    APPNAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ID_USER = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ID_PROFILE = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_USERAPPDEFPROFILE", x => x.ID_USERAPPDEFPROFILE);
                },
                comment: "domyślny profil dla konfiguracji kontrolek formularzy");

            migrationBuilder.CreateTable(
                name: "UserLayout",
                schema: "app",
                columns: table => new
                {
                    UserLayoutId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ToolId = table.Column<int>(type: "int", nullable: false),
                    UserId = table.Column<int>(type: "int", nullable: false),
                    LayoutTypeId = table.Column<int>(type: "int", nullable: false),
                    Name = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    Hint = table.Column<string>(type: "nvarchar(500)", maxLength: 500, nullable: true),
                    Layout = table.Column<byte[]>(type: "varbinary(max)", nullable: true),
                    GridTypeId = table.Column<int>(type: "int", nullable: false, defaultValueSql: "((1))"),
                    ViewData = table.Column<byte[]>(type: "varbinary(max)", nullable: true),
                    ActiveView = table.Column<int>(type: "int", nullable: false),
                    MasterLayoutId = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_UserLayout", x => x.UserLayoutId);
                });

            migrationBuilder.CreateTable(
                name: "USEROPTIONS",
                columns: table => new
                {
                    ID_USEROPTIONS = table.Column<int>(type: "int", nullable: false),
                    ID_USER = table.Column<int>(type: "int", nullable: true),
                    APPNAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    VER = table.Column<int>(type: "int", nullable: true),
                    OPTIONS = table.Column<string>(type: "text", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_USEROPTIONS", x => x.ID_USEROPTIONS);
                });

            migrationBuilder.CreateTable(
                name: "USEROPTIONS_DB",
                columns: table => new
                {
                    ID_USEROPTIONS_DB = table.Column<int>(type: "int", nullable: false),
                    ID_USER = table.Column<int>(type: "int", nullable: true, comment: "id użytkownika (-2:global/ -6:all_app/ -5:service/ -4:firm/ -3:computer)"),
                    APPNAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "nazwa aplikacji"),
                    SECTION = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "nazwa sekcji opcji"),
                    OPT_NAME = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "nazwa opcji (unikalna w ramach sekcji)"),
                    OPT_VALUE = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true, comment: "wartość opcji"),
                    DEPARTMENT = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: true, comment: "wyróżnik dla aktywnego działu"),
                    Opt_DataType = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "typ danych"),
                    Opt_Desc = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true, comment: "opis opcji"),
                    Opt_Group = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "grupa opcji"),
                    Active = table.Column<int>(type: "int", nullable: true, comment: "wyróżnik aktywności opcji")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_USEROPTIONS_DB", x => x.ID_USEROPTIONS_DB);
                });

            migrationBuilder.CreateTable(
                name: "UserPasswordHistory",
                columns: table => new
                {
                    UserPasswordHistoryId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    UserId = table.Column<int>(type: "int", nullable: true),
                    Password = table.Column<byte[]>(type: "varbinary(256)", maxLength: 256, nullable: true),
                    RegisterDate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_UserPasswordHistory", x => x.UserPasswordHistoryId);
                });

            migrationBuilder.CreateTable(
                name: "UserPermission",
                schema: "app",
                columns: table => new
                {
                    UserPermissionId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ProfileId = table.Column<int>(type: "int", nullable: true),
                    PermissionId = table.Column<int>(type: "int", nullable: true),
                    UserId = table.Column<int>(type: "int", nullable: true),
                    State = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_UserPermission", x => x.UserPermissionId);
                });

            migrationBuilder.CreateTable(
                name: "USERPROFILE",
                columns: table => new
                {
                    ID_USERPROFILE = table.Column<int>(type: "int", nullable: false),
                    ID_USER = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ID_PROFILE = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    PROGRAM = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PRAWA = table.Column<byte[]>(type: "image", nullable: true),
                    BLOBVER = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_USERPROFILE", x => x.ID_USERPROFILE);
                });

            migrationBuilder.CreateTable(
                name: "UserRequestPermission",
                columns: table => new
                {
                    UserRequestPermissionId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    UserId = table.Column<int>(type: "int", nullable: true),
                    RequestPermissionId = table.Column<int>(type: "int", nullable: true),
                    RequestProfileId = table.Column<int>(type: "int", nullable: true),
                    AllowPermission = table.Column<int>(type: "int", nullable: true),
                    DenyPermission = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_UserRequestPermission", x => x.UserRequestPermissionId);
                });

            migrationBuilder.CreateTable(
                name: "Users",
                schema: "gie",
                columns: table => new
                {
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    UserName = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    PasswordHash = table.Column<byte[]>(type: "varbinary(max)", nullable: true),
                    PasswordSalt = table.Column<byte[]>(type: "varbinary(max)", nullable: true),
                    UzyttkownikId = table.Column<int>(type: "int", nullable: true),
                    Username = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    Password = table.Column<string>(type: "nvarchar(8)", maxLength: 8, nullable: false),
                    regon = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    nip = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    statusNip = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    nazwa = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    wojewodztwo = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    powiat = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    gmina = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    miejscowosc = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    kodPocztowy = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ulica = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    nrNieruchomosci = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    nrLokalu = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    typ = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    silosID = table.Column<int>(type: "int", nullable: false),
                    dataZakonczeniaDzialalnosci = table.Column<DateTime>(type: "datetime2", nullable: false),
                    miejscowoscPoczty = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ciagnikSiodlowy = table.Column<int>(type: "int", nullable: false),
                    ciagnikTrojosiowy = table.Column<int>(type: "int", nullable: false),
                    ciagnikTypuMega = table.Column<int>(type: "int", nullable: false),
                    ciagnikTypuMegaReagul = table.Column<int>(type: "int", nullable: false),
                    jumbo = table.Column<int>(type: "int", nullable: false),
                    naczepaOplanegkowana = table.Column<int>(type: "int", nullable: false),
                    megaNaczepaOplanegkowana = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Users", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "USTALENIA",
                columns: table => new
                {
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Kind = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: false, defaultValueSql: "('')"),
                    ObjId = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ObjExtId = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    Loc = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: false, defaultValueSql: "('')"),
                    Dep = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: false, defaultValueSql: "('')"),
                    TextCode = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: false, defaultValueSql: "('')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_USTALENIA", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "UwagiDoTerminow",
                columns: table => new
                {
                    IdUwagiDoTerminow = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Typ = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: false, defaultValueSql: "('')"),
                    RecordId = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    DT = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "('')"),
                    UserId = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    Content = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: false, defaultValueSql: "('')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_UwagiDoTerminow", x => x.IdUwagiDoTerminow);
                });

            migrationBuilder.CreateTable(
                name: "UZYTKOWNIK",
                columns: table => new
                {
                    ID = table.Column<int>(type: "int", nullable: false),
                    SYMBOL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    HASLO = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true),
                    KATEGORIA = table.Column<int>(type: "int", nullable: true),
                    POZIOM = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    TELEFON = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: true),
                    FAX = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: true),
                    EMAIL = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: true),
                    WSZYSTKIE_LOK = table.Column<short>(type: "smallint", nullable: true),
                    TYLKO_PODGLAD = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    PRAWA = table.Column<string>(type: "text", nullable: true),
                    INFO = table.Column<string>(type: "text", nullable: true),
                    OPCJE = table.Column<string>(type: "text", nullable: true),
                    DT_HASLO = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZABLOKOWANY = table.Column<short>(type: "smallint", nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: true),
                    WSZYSTKIE_DZIALY = table.Column<short>(type: "smallint", nullable: true),
                    PRAWA_WWW = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    WWW = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "użytkownik aplikacji WWW"),
                    SMTP_MAIL = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "adres konta"),
                    SMTP_SERVER = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "serwer poczty wychodzącej"),
                    SMTP_PORT = table.Column<int>(type: "int", nullable: true, comment: "port serwera poczty wychodzącej"),
                    SMTP_LOGIN = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "login"),
                    SMTP_PASSWORD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "hasło"),
                    SMTP_AUTH = table.Column<short>(type: "smallint", nullable: true, comment: "0/1 - serwer wymaga uwierzytelniania"),
                    POP3_SERVER = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "serwer poczty przychodzącej"),
                    POP3_PORT = table.Column<int>(type: "int", nullable: true, comment: "port serwera poczty przychodzącej"),
                    POP3_LOGIN = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "login"),
                    POP3_PASSWORD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "hasło"),
                    IMAP = table.Column<short>(type: "smallint", nullable: true, comment: "=1 oznacza serwer IMAP"),
                    IMAP_MAILBOX = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "IMAP Mailbox"),
                    TEL_KOM = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: true),
                    DEFPROFILE_ID = table.Column<int>(type: "int", nullable: true, comment: "domyślny profil dla konfiguracji kontrolek formularzy"),
                    LCNT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "liczba nieudanych logowań użytkownika"),
                    FUNKCJA = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true, comment: "funkcje jakie może pełnić użytkownik"),
                    SMTP_SSL = table.Column<short>(type: "smallint", nullable: true, comment: "0/1 - połączenie szyfrowane SSL/TLS"),
                    POP3_SSL = table.Column<short>(type: "smallint", nullable: true, comment: "0/1 - połączenie szyfrowane SSL/TLS"),
                    APPLICATIONPROFILEID = table.Column<int>(type: "int", nullable: true),
                    DOMAINACCOUNT = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    ACTIVEDIRECTORY = table.Column<int>(type: "int", nullable: true),
                    DT_VALID = table.Column<DateTime>(type: "datetime", nullable: true, comment: "data ważności hasła tymczasowego"),
                    WSZYSTKIE_ODDZIALY = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "prawo do wszystkich oddziałów klienta"),
                    SINGLEUSEPASSWORD = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "hasło jednorazowe"),
                    KLIENTID = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "id klienta"),
                    ODDZIALID = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "id oddziału klienta"),
                    DT_CREATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "data utworzenia użytkownika"),
                    DT_BLOCK = table.Column<DateTime>(type: "datetime", nullable: true, comment: "data zablokowania użytkownika"),
                    WSZYSTKIE_MIEJSCEA_ZA = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "prawo do wszystkich miejsc ZA klienta"),
                    MIEJSCE_ZA_ID = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "id POI klienta"),
                    TOKEN = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true, comment: "Token używany w eSPEED"),
                    KONTRAHENCI_INSTALACJE_ID = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "id konfiguracji instalacji eSPEED"),
                    PRAWA2 = table.Column<string>(type: "text", nullable: true),
                    PRAWA3 = table.Column<string>(type: "text", nullable: true),
                    Password = table.Column<byte[]>(type: "varbinary(256)", maxLength: 256, nullable: true),
                    STATUS_EMISJA = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    gdpr = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    gdprVer = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    gdprKey = table.Column<byte[]>(type: "varbinary(256)", maxLength: 256, nullable: true),
                    DI_Mode = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "tryb rejestracji debug info w bazie danych"),
                    DI_Start = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas rozpoczęcia rejestracji debug info"),
                    DI_Stop = table.Column<DateTime>(type: "datetime", nullable: true, comment: "czas zakończenia rejestracji debug info"),
                    DatabaseLanguageId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('-1')", comment: "id domyślnego języka dla użytkownika ([sys].[syslanguages].[langid])"),
                    admin_www = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    www_welcome_mail_send = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "((0))")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_UZYTKOWNIK", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "UZYTKOWNIK_WWW",
                columns: table => new
                {
                    ID = table.Column<int>(type: "int", nullable: false),
                    NEWUSER = table.Column<string>(type: "char(1)", unicode: false, fixedLength: true, maxLength: 1, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_UZYTKOWNIK_WWW", x => x.ID);
                });

            migrationBuilder.CreateTable(
                name: "VAT_JPK_OZN",
                columns: table => new
                {
                    ID_VAT_JPK_OZN = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    KOD = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: false, defaultValueSql: "('')"),
                    OPIS = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: false, defaultValueSql: "('')"),
                    AKTYWNY = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    DictionaryId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TextId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_VAT_JPK_OZN", x => x.ID_VAT_JPK_OZN);
                });

            migrationBuilder.CreateTable(
                name: "VAT_JPK_OZN_DOD",
                columns: table => new
                {
                    ID_VAT_JPK_OZN_DOD = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    KOD = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: false, defaultValueSql: "('')"),
                    OPIS = table.Column<string>(type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    AKTYWNY = table.Column<int>(type: "int", nullable: true),
                    TYP_DOK = table.Column<int>(type: "int", nullable: true),
                    DictionaryId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TextId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    SPRZEDAZ = table.Column<int>(type: "int", nullable: true),
                    KOSZT = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_VAT_JPK_OZN_DOD", x => x.ID_VAT_JPK_OZN_DOD);
                });

            migrationBuilder.CreateTable(
                name: "VehicleETA",
                columns: table => new
                {
                    idVehicleETA = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    vehicleId = table.Column<int>(type: "int", nullable: true),
                    mode = table.Column<int>(type: "int", nullable: true),
                    input = table.Column<string>(type: "xml", nullable: true),
                    output = table.Column<string>(type: "xml", nullable: true),
                    dtNextRun = table.Column<DateTime>(type: "datetime", nullable: true),
                    dtCreate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    dtModify = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__VehicleE__9A52FFB070925257", x => x.idVehicleETA);
                });

            migrationBuilder.CreateTable(
                name: "W_DANE_ZEWN_WZ",
                columns: table => new
                {
                    ID_W_DANE_ZEWN_WZ = table.Column<int>(type: "int", nullable: false),
                    DATA_GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    NAZWA_PLIKU = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Nazwa wczytanego pliku"),
                    UZYTKOWNIK_ID = table.Column<int>(type: "int", nullable: true),
                    UZYTKOWNIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Kto wczytał"),
                    ILOSC_OPERACJI = table.Column<int>(type: "int", nullable: true, comment: "Ilość operacji w pliku"),
                    STATUS = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SID = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_W_DANE_ZEWN_WZ", x => x.ID_W_DANE_ZEWN_WZ);
                });

            migrationBuilder.CreateTable(
                name: "W_DANE_ZEWN_WZ_POZ",
                columns: table => new
                {
                    ID_W_DANE_ZEWN_WZ_POZ = table.Column<int>(type: "int", nullable: false),
                    W_DANE_ZEWN_WZ_ID = table.Column<int>(type: "int", nullable: true),
                    STATUS = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    DATA_GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    ILOSC = table.Column<double>(type: "float", nullable: true),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    TABOR = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    PRACOWNIK_ID = table.Column<int>(type: "int", nullable: true),
                    PRACOWNIK = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    MAGAZYN = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    W_MAG_TOWARY_ID = table.Column<int>(type: "int", nullable: true),
                    W_MAG_TOWARY = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPIS_DOD = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true),
                    W_ZLECENIA_ID = table.Column<int>(type: "int", nullable: true),
                    W_ZLECENIA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    W_WZ_ID = table.Column<int>(type: "int", nullable: true),
                    W_WZ = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    W_MAG_WYDANIA_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    W_ZLECENIA_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    BLEDY = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true),
                    UZYTKOWNIK_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_W_DANE_ZEWN_WZ_POZ", x => x.ID_W_DANE_ZEWN_WZ_POZ);
                });

            migrationBuilder.CreateTable(
                name: "W_DO_FK",
                columns: table => new
                {
                    ID_W_DO_FK = table.Column<int>(type: "int", nullable: false),
                    TYP_DOK = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    ROK = table.Column<int>(type: "int", nullable: true),
                    MIESIAC = table.Column<int>(type: "int", nullable: true),
                    NR_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    ZAKRES = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    DATA_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    NR_OD = table.Column<int>(type: "int", nullable: true),
                    NR_DO = table.Column<int>(type: "int", nullable: true),
                    ILOSC_DOK = table.Column<int>(type: "int", nullable: true),
                    UZYTKOWNIK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DATA_GEN = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_GEN = table.Column<DateTime>(type: "datetime", nullable: true),
                    FORMAT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    LISTA_FAKTUR = table.Column<string>(type: "text", nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_W_DO_FK", x => x.ID_W_DO_FK);
                });

            migrationBuilder.CreateTable(
                name: "W_GRUPY_PRZEGLAD",
                columns: table => new
                {
                    ID_W_GRUPY_PRZEGLAD = table.Column<int>(type: "int", nullable: false),
                    OPIS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    MARKA = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true),
                    MODEL = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true),
                    WERSJA = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_W_GRUPY_PRZEGLAD", x => x.ID_W_GRUPY_PRZEGLAD);
                });

            migrationBuilder.CreateTable(
                name: "W_GRUPY_PRZEGLAD_POZ",
                columns: table => new
                {
                    ID_W_GRUPY_PRZEGLAD_POZ = table.Column<int>(type: "int", nullable: false),
                    LP = table.Column<int>(type: "int", nullable: true),
                    W_GRUPY_PRZEGLAD_ID = table.Column<int>(type: "int", nullable: true),
                    W_PRZEGLAD_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    W_PRZEGLAD_POZ = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_W_GRUPY_PRZEGLAD_POZ", x => x.ID_W_GRUPY_PRZEGLAD_POZ);
                });

            migrationBuilder.CreateTable(
                name: "W_GRUPY_PRZEGLAD_POZ_ZLEC",
                columns: table => new
                {
                    ID_W_GRUPY_PRZEGLAD_POZ_ZLEC = table.Column<int>(type: "int", nullable: false),
                    W_GRUPY_PRZEGLAD_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    OBJ = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    OBJ_ID = table.Column<int>(type: "int", nullable: true),
                    SYMBOL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    NAZWA = table.Column<string>(type: "varchar(120)", unicode: false, maxLength: 120, nullable: true),
                    JM = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    ILOSC = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_W_GRUPY_PRZEGLAD_POZ_ZLEC", x => x.ID_W_GRUPY_PRZEGLAD_POZ_ZLEC);
                });

            migrationBuilder.CreateTable(
                name: "W_GRUPY_RABATOWE",
                columns: table => new
                {
                    ID_W_GRUPY_RABATOWE = table.Column<int>(type: "int", nullable: false),
                    KOD = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: false, defaultValueSql: "('')"),
                    OPIS = table.Column<string>(type: "varchar(250)", unicode: false, maxLength: 250, nullable: true),
                    RODZAJ_ZLECENIA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    GRUPA_T = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    GRUPA_U = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    MARZA_T = table.Column<double>(type: "float", nullable: true),
                    MARZA_U = table.Column<double>(type: "float", nullable: true),
                    RABAT_T = table.Column<double>(type: "float", nullable: true),
                    RABAT_U = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_W_GRUPY_RABATOWE", x => x.ID_W_GRUPY_RABATOWE);
                });

            migrationBuilder.CreateTable(
                name: "W_GRUPY_RABATOWE_KONTRAH",
                columns: table => new
                {
                    ID_W_GRUPY_RABATOWE_KONTRAH = table.Column<int>(type: "int", nullable: false),
                    W_GRUPY_RABATOWE_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_W_GRUPY_RABATOWE_KONTRAH", x => x.ID_W_GRUPY_RABATOWE_KONTRAH);
                });

            migrationBuilder.CreateTable(
                name: "W_MAG_INWENT",
                columns: table => new
                {
                    ID_W_MAG_INWENT = table.Column<int>(type: "int", nullable: false),
                    MAGAZYN = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    STATUS = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    W_MAG_WYDANIA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    W_MAG_WYDANIA_ID = table.Column<int>(type: "int", nullable: true),
                    W_MAG_PRZYJECIA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    W_MAG_PRZYJECIA_ID = table.Column<int>(type: "int", nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    UWAGI_DO_ROZL = table.Column<string>(type: "text", nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    INW_NA_DZIEN = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_W_MAG_INWENT", x => x.ID_W_MAG_INWENT);
                });

            migrationBuilder.CreateTable(
                name: "W_MAG_INWENT_POZ",
                columns: table => new
                {
                    ID_W_MAG_INWENT_POZ = table.Column<int>(type: "int", nullable: false),
                    W_MAG_INWENT_ID = table.Column<int>(type: "int", nullable: true),
                    STATUS = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    W_MAG_TOWARY_ID = table.Column<int>(type: "int", nullable: true),
                    SYMBOL_TOWARU = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    NAZWA_1 = table.Column<string>(type: "varchar(120)", unicode: false, maxLength: 120, nullable: true),
                    NAZWA_2 = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    JM = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    PKWIU = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    GRUPA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    PRODUCENT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ILOSC = table.Column<double>(type: "float", nullable: true),
                    ILOSC_SPIS = table.Column<double>(type: "float", nullable: true),
                    ROZNICA = table.Column<double>(type: "float", nullable: true),
                    CENA_JEDN_N = table.Column<double>(type: "float", nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    W_MAG_WYDANIA_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    W_MAG_PRZYJECIA_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    NR_KATALOG = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    REF_1 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DOSTAWCA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KOD_KRESKOWY = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_W_MAG_INWENT_POZ", x => x.ID_W_MAG_INWENT_POZ);
                });

            migrationBuilder.CreateTable(
                name: "W_MAG_PRZYJECIA",
                columns: table => new
                {
                    ID_W_MAG_PRZYJECIA = table.Column<int>(type: "int", nullable: false),
                    STATUS = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    MAGAZYN = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    RODZAJ_PRZYJECIA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    NR_DOK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_DOK_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    NR_DOK_ROK = table.Column<int>(type: "int", nullable: true),
                    NR_DOK_MIES = table.Column<int>(type: "int", nullable: true),
                    DATA_PRZYJECIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: false),
                    KONTRAH_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KONTRAH_NAZWA = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    KONTRAH_ADRES = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    KONTRAH_MIASTO = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    KONTRAH_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    KONTRAH_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KONTRAH_NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    DATA_WYSTAWIENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_SPRZEDAZY = table.Column<DateTime>(type: "datetime", nullable: true),
                    NR_FAKTURY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_ZAMOWIENIA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_ZEWN = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true),
                    WARTOSC_NETTO = table.Column<double>(type: "float", nullable: true),
                    WARTOSC_VAT = table.Column<double>(type: "float", nullable: true),
                    WARTOSC_BRUTTO = table.Column<double>(type: "float", nullable: true),
                    DATA_ZAPLATY = table.Column<DateTime>(type: "datetime", nullable: true),
                    FORMA_PLATNOSCI = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    W_DO_FK_ID = table.Column<int>(type: "int", nullable: true),
                    MAGAZYN_ZRODL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    NR_FAKTURY_ID = table.Column<int>(type: "int", nullable: true),
                    KOREKTA = table.Column<int>(type: "int", nullable: true),
                    KOREKTA_DO_PZ = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KOREKTA_DO_PZ_ID = table.Column<int>(type: "int", nullable: true),
                    MMAG_WZ_ID = table.Column<int>(type: "int", nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    NR_ZAMOWIENIA_ID = table.Column<int>(type: "int", nullable: true),
                    IS_EXPORTED = table.Column<int>(type: "int", nullable: true),
                    IS_EXPORTED_DT = table.Column<DateTime>(type: "datetime", nullable: true),
                    TYP_DOKUMENTU = table.Column<int>(type: "int", nullable: true),
                    KORYGOWANY_PRZEZ_ID = table.Column<int>(type: "int", nullable: true),
                    ZAMYKANY_PRZEZ_ID = table.Column<int>(type: "int", nullable: true),
                    ZAMYKANY_PRZEZ = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_W_MAG_PRZYJECIA", x => x.ID_W_MAG_PRZYJECIA);
                });

            migrationBuilder.CreateTable(
                name: "W_MAG_PRZYJECIA_POZ",
                columns: table => new
                {
                    ID_W_MAG_PRZYJECIA_POZ = table.Column<int>(type: "int", nullable: false),
                    W_MAG_PRZYJECIA_ID = table.Column<int>(type: "int", nullable: true),
                    W_MAG_TOWARY_ID = table.Column<int>(type: "int", nullable: true),
                    W_MAG_TOWARY = table.Column<string>(type: "varchar(120)", unicode: false, maxLength: 120, nullable: true),
                    SYMBOL_TOWARU = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    ILOSC = table.Column<double>(type: "float", nullable: true),
                    CENA_JEDN_N = table.Column<double>(type: "float", nullable: true),
                    STAWKA_VAT_ID = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    STAWKA_VAT = table.Column<double>(type: "float", nullable: true),
                    WARTOSC_ZAKUPU_N = table.Column<double>(type: "float", nullable: true),
                    WARTOSC_ZAKUPU_V = table.Column<double>(type: "float", nullable: true),
                    WARTOSC_ZAKUPU_B = table.Column<double>(type: "float", nullable: true),
                    STATUS = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    MAGAZYN = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    WYDANO = table.Column<double>(type: "float", nullable: true),
                    OPONA = table.Column<int>(type: "int", nullable: true),
                    ILOSC_P = table.Column<double>(type: "float", nullable: true),
                    JM_P = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    CENA_JEDN_N_P = table.Column<double>(type: "float", nullable: true),
                    PRZELICZNIK = table.Column<double>(type: "float", nullable: true),
                    JM = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    W_FAKTURA_K_ID = table.Column<int>(type: "int", nullable: true),
                    KOREKTA_DO_PZ_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    REZERWACJE = table.Column<double>(type: "float", nullable: true),
                    PRZED_KOR_ILOSC = table.Column<double>(type: "float", nullable: true),
                    PRZED_KOR_CENA = table.Column<double>(type: "float", nullable: true),
                    PRZED_KOR_JM = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    PRZED_KOR_CENAP = table.Column<double>(type: "float", nullable: true),
                    PRZED_KOR_PRZELICZNIK = table.Column<double>(type: "float", nullable: true),
                    KOREKTA_ILOSC = table.Column<double>(type: "float", nullable: true),
                    KOREKTA_CENA = table.Column<double>(type: "float", nullable: true),
                    KOREKTA_JM = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    KOREKTA_CENAP = table.Column<double>(type: "float", nullable: true),
                    KOREKTA_PRZELICZNIK = table.Column<double>(type: "float", nullable: true),
                    KOREKTA_JM_P = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    KOREKTA_ILOSC_P = table.Column<double>(type: "float", nullable: true),
                    KOREKTA_CENA_JEDN_N_P = table.Column<double>(type: "float", nullable: true),
                    KOREKTA_CENA_JEDN_N = table.Column<double>(type: "float", nullable: true),
                    KOREKTA_WARTOSC_ZAKUPU_N = table.Column<double>(type: "float", nullable: true),
                    KOREKTA_WARTOSC_ZAKUPU_V = table.Column<double>(type: "float", nullable: true),
                    KOREKTA_WARTOSC_ZAKUPU_B = table.Column<double>(type: "float", nullable: true),
                    KOREKTA_STAWKA_VAT_ID = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    KOREKTA_STAWKA_VAT = table.Column<double>(type: "float", nullable: true),
                    FAKTURY_POZYCJE_ID = table.Column<int>(type: "int", nullable: true),
                    KOREKTA_CENA_JEDN_P = table.Column<double>(type: "float", nullable: true),
                    PRZED_KOR_ILOSC_P = table.Column<double>(type: "float", nullable: true),
                    PRZED_KOR_JM_P = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    PRZED_KOR_CENA_JEDN_N_P = table.Column<double>(type: "float", nullable: true),
                    PRZED_KOR_CENA_JEDN_N = table.Column<double>(type: "float", nullable: true),
                    PRZED_KOR_WARTOSC_ZAKUPU_N = table.Column<double>(type: "float", nullable: true),
                    PRZED_KOR_WARTOSC_ZAKUPU_V = table.Column<double>(type: "float", nullable: true),
                    PRZED_KOR_WARTOSC_ZAKUPU_B = table.Column<double>(type: "float", nullable: true),
                    PRZYDZIAL_KOSZTU = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_W_MAG_PRZYJECIA_POZ", x => x.ID_W_MAG_PRZYJECIA_POZ);
                });

            migrationBuilder.CreateTable(
                name: "W_MAG_TOWARY",
                columns: table => new
                {
                    ID_W_MAG_TOWARY = table.Column<int>(type: "int", nullable: false),
                    SYMBOL_TOWARU = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    NAZWA_1 = table.Column<string>(type: "varchar(120)", unicode: false, maxLength: 120, nullable: true),
                    NAZWA_2 = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    JM = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    PKWIU = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    GRUPA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    PRODUCENT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    MAGAZYN = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    CENA_ZAKUPU_N = table.Column<double>(type: "float", nullable: true),
                    MARZA_PROCENT = table.Column<double>(type: "float", nullable: true),
                    MARZA_KWOTA = table.Column<double>(type: "float", nullable: true),
                    STALA_CENA_SPRZEDAZY = table.Column<int>(type: "int", nullable: true),
                    STALA_CENA_SPRZEDAZY_N = table.Column<double>(type: "float", nullable: true),
                    CENA_SPRZEDAZY_N = table.Column<double>(type: "float", nullable: true),
                    STAWKA_VAT_ID = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    STAWKA_VAT = table.Column<double>(type: "float", nullable: true),
                    CENA_SPRZEDAZY_V = table.Column<double>(type: "float", nullable: true),
                    CENA_SPRZEDAZY_B = table.Column<double>(type: "float", nullable: true),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    ILOSC_MIN = table.Column<double>(type: "float", nullable: true),
                    ILOSC_MAX = table.Column<double>(type: "float", nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    MARKA_ID = table.Column<int>(type: "int", nullable: true),
                    MARKA = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true),
                    MODEL_ID = table.Column<int>(type: "int", nullable: true),
                    MODEL = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true),
                    WERSJA_ID = table.Column<int>(type: "int", nullable: true),
                    WERSJA = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true),
                    RODZ_KOSZTOW = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PRZYJETO = table.Column<double>(type: "float", nullable: true),
                    WYDANO = table.Column<double>(type: "float", nullable: true),
                    REZERWACJE = table.Column<double>(type: "float", nullable: true),
                    STAN = table.Column<double>(type: "float", nullable: true),
                    WARTOSC = table.Column<double>(type: "float", nullable: true),
                    KONTO_FK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPONA = table.Column<int>(type: "int", nullable: true),
                    OPONA_NR_SERYJNY = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPONA_RODZAJ = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OPONA_ROZMIAR = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    OPONA_MARKA = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    OPONA_BIEZNIK = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    OPONA_PARAM_DOD = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    OPONA_UWAGI_DOD = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    OPONA_NORMA_PRZEBIEGU = table.Column<int>(type: "int", nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    NR_KATALOG = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    INNA_JM_P = table.Column<int>(type: "int", nullable: true),
                    JM_P = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    JM_PRZELICZNIK = table.Column<double>(type: "float", nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    DOSTAWCA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DOSTAWCA_ID = table.Column<int>(type: "int", nullable: true),
                    REC_VER = table.Column<int>(type: "int", nullable: true),
                    REF_1 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_3 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_4 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_5 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DOPISZ_DO_WYP_POJ = table.Column<int>(type: "int", nullable: true),
                    OPIS_FV_ID = table.Column<int>(type: "int", nullable: true),
                    OPIS_FV = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KOD_KRESKOWY = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    WLASNY = table.Column<int>(type: "int", nullable: true),
                    OBCY = table.Column<int>(type: "int", nullable: true),
                    NAZWA_DRUK_FISK = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: true),
                    NARZUT_PROCENT = table.Column<double>(type: "float", nullable: true),
                    DOPISZ_DO_WYP_PRAC = table.Column<int>(type: "int", nullable: true),
                    CENA_DO_OFERTY = table.Column<double>(type: "float", nullable: true),
                    AKTYWNY = table.Column<int>(type: "int", nullable: true),
                    SplitPayment = table.Column<int>(type: "int", nullable: true),
                    VAT_JPK_OZN_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_W_MAG_TOWARY", x => x.ID_W_MAG_TOWARY);
                });

            migrationBuilder.CreateTable(
                name: "W_MAG_TOWARY_KONTRAH",
                columns: table => new
                {
                    ID_W_MAG_TOWARY_KONTRAH = table.Column<int>(type: "int", nullable: false),
                    W_MAG_TOWARY_ID = table.Column<int>(type: "int", nullable: false),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: false),
                    KONTRAH_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: false),
                    SYMBOL_TOWARU = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_W_MAG_TOWARY_KONTRAH", x => x.ID_W_MAG_TOWARY_KONTRAH);
                });

            migrationBuilder.CreateTable(
                name: "W_MAG_TOWARY_ZAMIENNIKI",
                columns: table => new
                {
                    ID_W_MAG_TOWARY_ZAMIENNIKI = table.Column<int>(type: "int", nullable: false),
                    W_MAG_TOWARY_NADRZ_ID = table.Column<int>(type: "int", nullable: false),
                    W_MAG_TOWARY_PODRZ_ID = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_W_MAG_TOWARY_ZAMIENNIKI", x => x.ID_W_MAG_TOWARY_ZAMIENNIKI);
                });

            migrationBuilder.CreateTable(
                name: "W_MAG_WYDANIA",
                columns: table => new
                {
                    ID_W_MAG_WYDANIA = table.Column<int>(type: "int", nullable: false),
                    STATUS = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    MAGAZYN = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    RODZAJ_WYDANIA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    NR_DOK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_DOK_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    NR_DOK_ROK = table.Column<int>(type: "int", nullable: true),
                    NR_DOK_MIES = table.Column<int>(type: "int", nullable: true),
                    DATA_WYDANIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: false),
                    KONTRAH_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KONTRAH_NAZWA = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    KONTRAH_ADRES = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    KONTRAH_MIASTO = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    KONTRAH_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    KONTRAH_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KONTRAH_NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    DATA_WYSTAWIENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_SPRZEDAZY = table.Column<DateTime>(type: "datetime", nullable: true),
                    NR_FAKTURY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_ZAMOWIENIA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_ZLECENIA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true),
                    WARTOSC_NETTO = table.Column<double>(type: "float", nullable: true),
                    WARTOSC_VAT = table.Column<double>(type: "float", nullable: true),
                    WARTOSC_BRUTTO = table.Column<double>(type: "float", nullable: true),
                    DATA_ZAPLATY = table.Column<DateTime>(type: "datetime", nullable: true),
                    FORMA_PLATNOSCI = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TABOR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KIEROWCA_ID = table.Column<int>(type: "int", nullable: true),
                    W_DO_FK_ID = table.Column<int>(type: "int", nullable: true),
                    TABOR_NR_BOCZNY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    MAGAZYN_DOCEL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    NR_FAKTURY_ID = table.Column<int>(type: "int", nullable: true),
                    KOREKTA = table.Column<int>(type: "int", nullable: true),
                    KOREKTA_DO_WZ = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KOREKTA_DO_WZ_ID = table.Column<int>(type: "int", nullable: true),
                    MMAG_PZ_ID = table.Column<int>(type: "int", nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    TABOR_LICZNIK = table.Column<int>(type: "int", nullable: true),
                    GODZ_WYDANIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    IS_EXPORTED = table.Column<int>(type: "int", nullable: true),
                    IS_EXPORTED_DT = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZAKSIEGOWANO_SPEED = table.Column<int>(type: "int", nullable: true),
                    FAKTURA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    FAKTURA_ID = table.Column<int>(type: "int", nullable: true),
                    PARAGON_FISKALNY = table.Column<int>(type: "int", nullable: true),
                    TYP_DOKUMENTU = table.Column<int>(type: "int", nullable: true),
                    KORYGOWANY_PRZEZ_ID = table.Column<int>(type: "int", nullable: true),
                    NR_PARAGONU = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TYP_PRACOWNIKA = table.Column<int>(type: "int", nullable: true),
                    ZAMYKANY_PRZEZ_ID = table.Column<int>(type: "int", nullable: true),
                    ZAMYKANY_PRZEZ = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_W_MAG_WYDANIA", x => x.ID_W_MAG_WYDANIA);
                });

            migrationBuilder.CreateTable(
                name: "W_MAG_WYDANIA_POZ",
                columns: table => new
                {
                    ID_W_MAG_WYDANIA_POZ = table.Column<int>(type: "int", nullable: false),
                    W_MAG_WYDANIA_ID = table.Column<int>(type: "int", nullable: true),
                    W_MAG_TOWARY_ID = table.Column<int>(type: "int", nullable: true),
                    W_MAG_TOWARY = table.Column<string>(type: "varchar(120)", unicode: false, maxLength: 120, nullable: true),
                    SYMBOL_TOWARU = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    ILOSC = table.Column<double>(type: "float", nullable: true),
                    CENA_JEDN_N = table.Column<double>(type: "float", nullable: true),
                    STAWKA_VAT_ID = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    STAWKA_VAT = table.Column<double>(type: "float", nullable: true),
                    WARTOSC_WYDANIA_N = table.Column<double>(type: "float", nullable: true),
                    WARTOSC_WYDANIA_V = table.Column<double>(type: "float", nullable: true),
                    WARTOSC_WYDANIA_B = table.Column<double>(type: "float", nullable: true),
                    STATUS = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    MAGAZYN = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    OPONA = table.Column<int>(type: "int", nullable: true),
                    DOPISZ_DO_WYP_POJ = table.Column<int>(type: "int", nullable: true),
                    MAG_OBCY_FAKT_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    MAG_OBCY_FAKT_ID = table.Column<int>(type: "int", nullable: true),
                    MAG_OBCY_FAKT = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    W_MAG_PRZYJECIA_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    W_MAG_KOREKTA_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    PRZED_KOR_ILOSC = table.Column<double>(type: "float", nullable: true),
                    PRZED_KOR_CENA = table.Column<double>(type: "float", nullable: true),
                    PRZED_KOR_JM = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    PRZED_KOR_CENAP = table.Column<double>(type: "float", nullable: true),
                    PRZED_KOR_PRZELICZNIK = table.Column<double>(type: "float", nullable: true),
                    KOREKTA_ILOSC = table.Column<double>(type: "float", nullable: true),
                    KOREKTA_CENA = table.Column<double>(type: "float", nullable: true),
                    KOREKTA_JM = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    KOREKTA_CENAP = table.Column<double>(type: "float", nullable: true),
                    KOREKTA_PRZELICZNIK = table.Column<double>(type: "float", nullable: true),
                    JM = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    W_ZLECENIA_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    FAKTURY_POZYCJE_ID = table.Column<int>(type: "int", nullable: true),
                    W_FAKTURA_K_ID = table.Column<int>(type: "int", nullable: true),
                    KOREKTA_DO_WZ_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    PRZED_KOR_WARTOSC_ZAKUPU_N = table.Column<double>(type: "float", nullable: true),
                    PRZED_KOR_WARTOSC = table.Column<double>(type: "float", nullable: true),
                    KOREKTA_WARTOSC = table.Column<double>(type: "float", nullable: true),
                    EXT_STATUS1 = table.Column<int>(type: "int", nullable: true),
                    PRZYDZIAL_KOSZTU = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    PRZED_KOR_WARTOSC_V = table.Column<double>(type: "float", nullable: true),
                    KOREKTA_WARTOSC_V = table.Column<double>(type: "float", nullable: true),
                    PRZED_KOR_WARTOSC_B = table.Column<double>(type: "float", nullable: true),
                    KOREKTA_WARTOSC_B = table.Column<double>(type: "float", nullable: true),
                    DOPISZ_DO_WYP_PRAC = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_W_MAG_WYDANIA_POZ", x => x.ID_W_MAG_WYDANIA_POZ);
                });

            migrationBuilder.CreateTable(
                name: "W_MAG_WYDANIA_test",
                columns: table => new
                {
                    ID_W_MAG_WYDANIA = table.Column<int>(type: "int", nullable: false),
                    STATUS = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    MAGAZYN = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    RODZAJ_WYDANIA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    NR_DOK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_DOK_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    NR_DOK_ROK = table.Column<int>(type: "int", nullable: true),
                    NR_DOK_MIES = table.Column<int>(type: "int", nullable: true),
                    DATA_WYDANIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: false),
                    KONTRAH_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KONTRAH_NAZWA = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    KONTRAH_ADRES = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    KONTRAH_MIASTO = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    KONTRAH_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    KONTRAH_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KONTRAH_NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    DATA_WYSTAWIENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_SPRZEDAZY = table.Column<DateTime>(type: "datetime", nullable: true),
                    NR_FAKTURY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_ZAMOWIENIA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_ZLECENIA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true),
                    WARTOSC_NETTO = table.Column<double>(type: "float", nullable: true),
                    WARTOSC_VAT = table.Column<double>(type: "float", nullable: true),
                    WARTOSC_BRUTTO = table.Column<double>(type: "float", nullable: true),
                    DATA_ZAPLATY = table.Column<DateTime>(type: "datetime", nullable: true),
                    FORMA_PLATNOSCI = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TABOR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KIEROWCA_ID = table.Column<int>(type: "int", nullable: true),
                    W_DO_FK_ID = table.Column<int>(type: "int", nullable: true),
                    TABOR_NR_BOCZNY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    MAGAZYN_DOCEL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    NR_FAKTURY_ID = table.Column<int>(type: "int", nullable: true),
                    KOREKTA = table.Column<int>(type: "int", nullable: true),
                    KOREKTA_DO_WZ = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KOREKTA_DO_WZ_ID = table.Column<int>(type: "int", nullable: true),
                    MMAG_PZ_ID = table.Column<int>(type: "int", nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    TABOR_LICZNIK = table.Column<int>(type: "int", nullable: true),
                    GODZ_WYDANIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    IS_EXPORTED = table.Column<int>(type: "int", nullable: true),
                    IS_EXPORTED_DT = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZAKSIEGOWANO_SPEED = table.Column<int>(type: "int", nullable: true),
                    FAKTURA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    FAKTURA_ID = table.Column<int>(type: "int", nullable: true),
                    PARAGON_FISKALNY = table.Column<int>(type: "int", nullable: true),
                    TYP_DOKUMENTU = table.Column<int>(type: "int", nullable: true),
                    KORYGOWANY_PRZEZ_ID = table.Column<int>(type: "int", nullable: true),
                    NR_PARAGONU = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_W_MAG_WYDANIAK", x => x.ID_W_MAG_WYDANIA);
                });

            migrationBuilder.CreateTable(
                name: "W_MAG_ZAMOWIENIA",
                columns: table => new
                {
                    ID_W_MAG_ZAMOWIENIA = table.Column<int>(type: "int", nullable: false),
                    MAGAZYN = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DATA_ZAM = table.Column<DateTime>(type: "datetime", nullable: true),
                    NR_ZAM = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_ZAM_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    NR_ZAM_ROK = table.Column<int>(type: "int", nullable: true),
                    NR_ZAM_MIES = table.Column<int>(type: "int", nullable: true),
                    STATUS = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: false),
                    KONTRAH_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KONTRAH_NAZWA = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    KONTRAH_ADRES = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    KONTRAH_MIASTO = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    KONTRAH_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    KONTRAH_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KONTRAH_NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    ILOSC_POZ = table.Column<int>(type: "int", nullable: true),
                    WARTOSC_ZAKUPU_POZ_N = table.Column<double>(type: "float", nullable: true),
                    NR_FAKTURY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_FAKTURY_ID = table.Column<int>(type: "int", nullable: true),
                    NR_PZ = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_PZ_ID = table.Column<int>(type: "int", nullable: true),
                    UWAGI = table.Column<string>(type: "text", nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_W_MAG_ZAMOWIENIA", x => x.ID_W_MAG_ZAMOWIENIA);
                });

            migrationBuilder.CreateTable(
                name: "W_MAG_ZAMOWIENIA_POZ",
                columns: table => new
                {
                    ID_W_MAG_ZAMOWIENIA_POZ = table.Column<int>(type: "int", nullable: false),
                    W_MAG_ZAMOWIENIA_ID = table.Column<int>(type: "int", nullable: false),
                    W_MAG_TOWARY_ID = table.Column<int>(type: "int", nullable: false),
                    MAGAZYN = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    LP = table.Column<int>(type: "int", nullable: false),
                    SYMBOL_TOWARU = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SYMBOL_DOSTAWCY = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPONA = table.Column<int>(type: "int", nullable: true),
                    ILOSC_P = table.Column<double>(type: "float", nullable: true),
                    JM_P = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    CENA_JEDN_N_P = table.Column<double>(type: "float", nullable: true),
                    PRZELICZNIK = table.Column<double>(type: "float", nullable: true),
                    ILOSC = table.Column<double>(type: "float", nullable: true),
                    JM = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    CENA_JEDN_N = table.Column<double>(type: "float", nullable: true),
                    STAWKA_VAT_ID = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    STAWKA_VAT = table.Column<double>(type: "float", nullable: true),
                    WARTOSC_ZAKUPU_N = table.Column<double>(type: "float", nullable: true),
                    WARTOSC_ZAKUPU_V = table.Column<double>(type: "float", nullable: true),
                    WARTOSC_ZAKUPU_B = table.Column<double>(type: "float", nullable: true),
                    PZ_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    FAKTURA_POZ_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_W_MAG_ZAMOWIENIA_POZ", x => x.ID_W_MAG_ZAMOWIENIA_POZ);
                });

            migrationBuilder.CreateTable(
                name: "W_MAGAZYNY",
                columns: table => new
                {
                    ID_W_MAGAZYNY = table.Column<int>(type: "int", nullable: false),
                    AKTYWNY = table.Column<int>(type: "int", nullable: true),
                    SYMBOL = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KONTO_FK = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    WYROZNIK_NR = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    MAG_OBCY = table.Column<int>(type: "int", nullable: true),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: true),
                    KONTRAH = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_W_MAGAZYNY", x => x.ID_W_MAGAZYNY);
                });

            migrationBuilder.CreateTable(
                name: "W_MYCIE_POZ",
                columns: table => new
                {
                    ID_W_MYCIE_POZ = table.Column<int>(type: "int", nullable: false),
                    LP = table.Column<int>(type: "int", nullable: true),
                    OPIS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WIDOCZNY = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_W_MYCIE_POZ", x => x.ID_W_MYCIE_POZ);
                });

            migrationBuilder.CreateTable(
                name: "W_MYCIE_POZ_ZLEC",
                columns: table => new
                {
                    ID_W_MYCIE_POZ_ZLEC = table.Column<int>(type: "int", nullable: false),
                    W_MYCIE_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    OBJ = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    OBJ_ID = table.Column<int>(type: "int", nullable: true),
                    SYMBOL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    NAZWA = table.Column<string>(type: "varchar(120)", unicode: false, maxLength: 120, nullable: true),
                    JM = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    ILOSC = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_W_MYCIE_POZ_ZLEC", x => x.ID_W_MYCIE_POZ_ZLEC);
                });

            migrationBuilder.CreateTable(
                name: "W_PRACOWNICY",
                columns: table => new
                {
                    ID_W_PRACOWNICY = table.Column<int>(type: "int", nullable: false),
                    AKTYWNY = table.Column<int>(type: "int", nullable: true),
                    NAZWISKO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    IMIE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    STANOWISKO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TELEFON = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    TELEFON_KOM = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    EMAIL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DATA_ZATRUDNIENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_ZWOLNIENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    PESEL = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    NUMER_DOWODU = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    ADRES = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    MIASTO = table.Column<string>(type: "varchar(80)", unicode: false, maxLength: 80, nullable: true),
                    DATA_UR = table.Column<DateTime>(type: "datetime", nullable: true),
                    MIEJSCE_UR = table.Column<string>(type: "varchar(80)", unicode: false, maxLength: 80, nullable: true),
                    UMOWA = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_W_PRACOWNICY", x => x.ID_W_PRACOWNICY);
                });

            migrationBuilder.CreateTable(
                name: "W_PRACOWNICY_WYPOSAZENIE",
                columns: table => new
                {
                    ID_W_PRACOWNICY_WYPOSAZENIE = table.Column<int>(type: "int", nullable: false),
                    W_PRACOWNICY_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCY_ID = table.Column<int>(type: "int", nullable: true),
                    TYP = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "WYM.WYP, TYP.ZAB, SP.LAD"),
                    NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    ILOSC = table.Column<int>(type: "int", nullable: true),
                    DATA_WAZNOSCI = table.Column<DateTime>(type: "datetime", nullable: true),
                    DO_PLANOWANIA = table.Column<int>(type: "int", nullable: true),
                    DO_ROZLICZENIA = table.Column<int>(type: "int", nullable: true),
                    W_MAG_WYDANIA_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    ARCH = table.Column<int>(type: "int", nullable: true),
                    DATA_ARCH = table.Column<DateTime>(type: "datetime", nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_W_PRACOWNICY_WYPOSAZENIE", x => x.ID_W_PRACOWNICY_WYPOSAZENIE);
                });

            migrationBuilder.CreateTable(
                name: "W_PRZEGLAD_POZ",
                columns: table => new
                {
                    ID_W_PRZEGLAD_POZ = table.Column<int>(type: "int", nullable: false),
                    LP = table.Column<int>(type: "int", nullable: true),
                    OPIS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WIDOCZNY = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_W_PRZEGLAD_POZ", x => x.ID_W_PRZEGLAD_POZ);
                });

            migrationBuilder.CreateTable(
                name: "W_PZ_WZ",
                columns: table => new
                {
                    ID_W_PZ_WZ = table.Column<int>(type: "int", nullable: false),
                    W_MAG_PRZYJECIA_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    W_MAG_WYDANIA_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    W_MAG_TOWARY_ID = table.Column<int>(type: "int", nullable: true),
                    ILOSC = table.Column<int>(type: "int", nullable: true),
                    CENA_JEDN = table.Column<double>(type: "float", nullable: true),
                    ILOSC2 = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_W_PZ_WZ", x => x.ID_W_PZ_WZ);
                });

            migrationBuilder.CreateTable(
                name: "W_RODZ_DOK",
                columns: table => new
                {
                    ID_W_RODZ_DOK = table.Column<int>(type: "int", nullable: false),
                    LP = table.Column<int>(type: "int", nullable: true),
                    NAZWA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KIERUNEK = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    SYMBOL_LICZNIKA = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    SYMBOL_FK = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    KONTO_FK = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    AKTYWNY = table.Column<int>(type: "int", nullable: true),
                    SYSTEMOWY = table.Column<int>(type: "int", nullable: true),
                    TYP_DOKUMENTU = table.Column<int>(type: "int", nullable: true),
                    DictionaryId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TextId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_W_RODZ_DOK", x => x.ID_W_RODZ_DOK);
                });

            migrationBuilder.CreateTable(
                name: "W_STANOWISKA",
                columns: table => new
                {
                    ID_W_STANOWISKA = table.Column<int>(type: "int", nullable: false),
                    AKTYWNY = table.Column<int>(type: "int", nullable: true),
                    SYMBOL = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_W_STANOWISKA", x => x.ID_W_STANOWISKA);
                });

            migrationBuilder.CreateTable(
                name: "W_TERMINARZ",
                columns: table => new
                {
                    ID_W_TERMINARZ = table.Column<int>(type: "int", nullable: false),
                    W_ZLECENIE_ID = table.Column<int>(type: "int", nullable: true),
                    W_ZLECENIE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    W_STANOWISKA_ID = table.Column<int>(type: "int", nullable: true),
                    W_STANOWISKA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SUBJECT = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    NOTES = table.Column<string>(type: "varchar(1024)", unicode: false, maxLength: 1024, nullable: true),
                    START_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    START_TIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    END_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    END_TIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    ALARM = table.Column<int>(type: "int", nullable: true),
                    ALARM_DATE = table.Column<DateTime>(type: "datetime", nullable: true),
                    ALARM_TIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    EVENT_TYPE = table.Column<int>(type: "int", nullable: true),
                    OPTIONS = table.Column<int>(type: "int", nullable: true),
                    COLOR = table.Column<int>(type: "int", nullable: true),
                    STATE = table.Column<int>(type: "int", nullable: true),
                    LOCATION = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    W_ZLECENIE_OFERTY_ID = table.Column<int>(type: "int", nullable: true),
                    W_ZLECENIA_OFERTY_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_W_TERMINARZ", x => x.ID_W_TERMINARZ);
                });

            migrationBuilder.CreateTable(
                name: "W_TERMINARZ_PRAC",
                columns: table => new
                {
                    ID_W_TERMINARZ_PRAC = table.Column<int>(type: "int", nullable: false),
                    W_TERMINARZ_ID = table.Column<int>(type: "int", nullable: true),
                    W_ZLECENIE_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    W_ZLECENIE_ID = table.Column<int>(type: "int", nullable: true),
                    W_PRACOWNICY_ID = table.Column<int>(type: "int", nullable: true),
                    W_PRACOWNICY = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_W_TERMINARZ_PRAC", x => x.ID_W_TERMINARZ_PRAC);
                });

            migrationBuilder.CreateTable(
                name: "W_USLUGI",
                columns: table => new
                {
                    ID_W_USLUGI = table.Column<int>(type: "int", nullable: false),
                    SYMBOL_USLUGI = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    NAZWA_1 = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true),
                    NAZWA_2 = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    JM = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    PKWIU = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    GRUPA = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true),
                    TYP_OPERACJI = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    OPIS_OPERACJI = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    STALA_CENA_SPRZEDAZY = table.Column<int>(type: "int", nullable: true),
                    STALA_CENA_SPRZEDAZY_N = table.Column<double>(type: "float", nullable: true),
                    NORMA_CZASOWA = table.Column<double>(type: "float", nullable: true),
                    CENNIK_ID = table.Column<int>(type: "int", nullable: true),
                    CENNIK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    CENA_SPRZEDAZY_N = table.Column<double>(type: "float", nullable: true),
                    STAWKA_VAT_ID = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    STAWKA_VAT = table.Column<double>(type: "float", nullable: true),
                    CENA_SPRZEDAZY_V = table.Column<double>(type: "float", nullable: true),
                    CENA_SPRZEDAZY_B = table.Column<double>(type: "float", nullable: true),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    RODZ_KOSZTOW = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KONTO_FK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    WLASNA = table.Column<int>(type: "int", nullable: true),
                    OBCA = table.Column<int>(type: "int", nullable: true),
                    NAZWA_DRUK_FISK = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: true),
                    CENA_ZA_USLUGE = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    NIEFISKALNA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    SplitPayment = table.Column<int>(type: "int", nullable: true),
                    VAT_JPK_OZN_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_W_USLUGI", x => x.ID_W_USLUGI);
                });

            migrationBuilder.CreateTable(
                name: "W_USLUGI_STAWKI",
                columns: table => new
                {
                    ID_W_USLUGI_STAWKI = table.Column<int>(type: "int", nullable: false),
                    LP = table.Column<int>(type: "int", nullable: true),
                    NAZWA_STAWKI = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    STAWKA = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_W_USLUGI_STAWKI", x => x.ID_W_USLUGI_STAWKI);
                });

            migrationBuilder.CreateTable(
                name: "W_USLUGI_STAWKI_P",
                columns: table => new
                {
                    ID_W_USLUGI_STAWKI_P = table.Column<int>(type: "int", nullable: false),
                    NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    STAWKA = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_W_USLUGI_STAWKI_P", x => x.ID_W_USLUGI_STAWKI_P);
                });

            migrationBuilder.CreateTable(
                name: "W_ZLECENIA",
                columns: table => new
                {
                    ID_W_ZLECENIA = table.Column<int>(type: "int", nullable: false),
                    STATUS = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    RODZAJ_ZLECENIA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_DOK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_DOK_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    NR_DOK_ROK = table.Column<int>(type: "int", nullable: true),
                    NR_DOK_MIES = table.Column<int>(type: "int", nullable: true),
                    DATA_WYSTAWIENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_ZAKONCZENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_ZGLOSZENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    STAN_LICZNIKA = table.Column<int>(type: "int", nullable: true),
                    WLASNY_POJAZD = table.Column<int>(type: "int", nullable: true),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: true),
                    KONTRAH_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KONTRAH_NAZWA = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    KONTRAH_ADRES = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    KONTRAH_MIASTO = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    KONTRAH_KOD = table.Column<string>(type: "varchar(6)", unicode: false, maxLength: 6, nullable: true),
                    KONTRAH_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KONTRAH_NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    POJAZD_ID = table.Column<int>(type: "int", nullable: true),
                    POJAZD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_NADWOZIA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    NR_SILNIKA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MARKA = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true),
                    MODEL = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true),
                    WERSJA = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true),
                    FORMA_PLATNOSCI = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TERMIN_PLATNOSCI = table.Column<int>(type: "int", nullable: true),
                    DATA_ZAPLATY = table.Column<DateTime>(type: "datetime", nullable: true),
                    STAWKI_ID = table.Column<int>(type: "int", nullable: true),
                    STAWKI = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    NAPRAWA = table.Column<int>(type: "int", nullable: true),
                    NAPRAWA_OPIS = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true),
                    NAPRAWA_P_KOSZT = table.Column<double>(type: "float", nullable: true),
                    BADANIE_TECHNICZNE = table.Column<int>(type: "int", nullable: true),
                    BADANIE_TECHNICZNE_OPIS = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true),
                    BADANIE_P_KOSZT = table.Column<double>(type: "float", nullable: true),
                    PRZEGLAD = table.Column<int>(type: "int", nullable: true),
                    PRZEGLAD_PO = table.Column<double>(type: "float", nullable: true),
                    PRZEGLAD_OPIS = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true),
                    PRZEGLAD_P_KOSZT = table.Column<double>(type: "float", nullable: true),
                    INNE_PARAM = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    ZLECAJACY_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECAJACY = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PRZYJMUJACY_ID = table.Column<int>(type: "int", nullable: true),
                    PRZYJMUJACY = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TERMIN_ODBIORU = table.Column<DateTime>(type: "datetime", nullable: true),
                    TERMIN_ODBIORU_GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    LACZNY_P_KOSZT = table.Column<double>(type: "float", nullable: true),
                    NADZORCA_ID = table.Column<int>(type: "int", nullable: true),
                    NADZORCA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    W_STANOWISKA_ID = table.Column<int>(type: "int", nullable: true),
                    W_STANOWISKA = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    INSTR_DLA_SERWISU = table.Column<string>(type: "text", nullable: true),
                    PRZYCZYNY_ZALECENIA = table.Column<string>(type: "text", nullable: true),
                    ZAUWAZONE_USTERKI = table.Column<string>(type: "text", nullable: true),
                    NAJBL_PRZEGLAD_PO_KM = table.Column<double>(type: "float", nullable: true),
                    NAJBL_PRZEGLAD_DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    FAKTURA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    FAKTURA_ID = table.Column<int>(type: "int", nullable: true),
                    W_FAKTURA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    W_FAKTURA_ID = table.Column<int>(type: "int", nullable: true),
                    ZAKSIEGOWANO_SPEED = table.Column<int>(type: "int", nullable: true),
                    ZDAWCZY = table.Column<string>(type: "text", nullable: true),
                    ODBIORCZY = table.Column<string>(type: "text", nullable: true),
                    STATUS_PILNE = table.Column<int>(type: "int", nullable: true),
                    DATA_PLANOWANA = table.Column<DateTime>(type: "datetime", nullable: true),
                    STAN_PALIWA = table.Column<int>(type: "int", nullable: true),
                    ILE_KM_DO_PRZEGLADU = table.Column<int>(type: "int", nullable: true),
                    POJAZD_NR_BOCZNY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    ZLECENIE_ZEWN = table.Column<int>(type: "int", nullable: true),
                    ZLECENIOBIORCA_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIOBIORCA_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KIEROWCA_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MYCIE = table.Column<int>(type: "int", nullable: true),
                    MYCIE_OPIS = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true),
                    MYCIE_P_KOSZT = table.Column<double>(type: "float", nullable: true),
                    W_FAKTURA_K = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    W_FAKTURA_K_ID = table.Column<int>(type: "int", nullable: true),
                    W_PARAGON = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    W_PARAGON_ID = table.Column<int>(type: "int", nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    REKLAMACJA = table.Column<int>(type: "int", nullable: true),
                    REKLAMACJA_DO_ID = table.Column<int>(type: "int", nullable: true),
                    REKLAMACJA_DO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    INNE_UWAGI = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true),
                    SA_MAG_OBCY = table.Column<int>(type: "int", nullable: true),
                    SA_REZ = table.Column<int>(type: "int", nullable: true),
                    GODZ_ZAKONCZENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_ZGLOSZENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_PLANOWANA = table.Column<DateTime>(type: "datetime", nullable: true),
                    NR_ZLEC_KL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    MYCIE_OST_LAD = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    MYCIE_NACZEPA_ID = table.Column<int>(type: "int", nullable: true),
                    MYCIE_NACZEPA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    MYCIE_KOMORA_1 = table.Column<int>(type: "int", nullable: true),
                    MYCIE_KOMORA_2 = table.Column<int>(type: "int", nullable: true),
                    MYCIE_KOMORA_3 = table.Column<int>(type: "int", nullable: true),
                    MYCIE_KOMORA_4 = table.Column<int>(type: "int", nullable: true),
                    MYCIE_KOMORA_5 = table.Column<int>(type: "int", nullable: true),
                    WALUTA_FV = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    SZKODY_ID = table.Column<int>(type: "int", nullable: true),
                    SZKODY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PARAGON_FISKALNY = table.Column<int>(type: "int", nullable: true),
                    STATUS_WYKONAWCZY = table.Column<int>(type: "int", nullable: true),
                    STATUS_WYKONAWCZY_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    STATUS_WYKONAWCZY_OPIS = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TYP_PRACOWNIKA = table.Column<int>(type: "int", nullable: true),
                    W_ZLECENIA_OFERTY_NUMER = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    W_ZLECENIA_OFERTY_ID = table.Column<int>(type: "int", nullable: true),
                    TELEFON1 = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Numer telefonu do siedziby klienta 1"),
                    TELEFON2 = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Numer telefonu do siedziby klienta 2"),
                    EMAIL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Główny adres email"),
                    KIEROWCA_TEL_SLUZBOWY = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_W_ZLECENIA", x => x.ID_W_ZLECENIA);
                });

            migrationBuilder.CreateTable(
                name: "W_ZLECENIA_MYCIE_POZ",
                columns: table => new
                {
                    ID_W_ZLECENIA_MYCIE_POZ = table.Column<int>(type: "int", nullable: false),
                    W_ZLECENIE_ID = table.Column<int>(type: "int", nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    W_MYCIE_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    W_MYCIE_POZ = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WYKONANO = table.Column<int>(type: "int", nullable: true),
                    W_ZLECENIA_OFERTY_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_W_ZLECENIA_MYCIE_POZ", x => x.ID_W_ZLECENIA_MYCIE_POZ);
                });

            migrationBuilder.CreateTable(
                name: "W_ZLECENIA_OFERTY",
                columns: table => new
                {
                    ID_W_ZLECENIA_OFERTY = table.Column<int>(type: "int", nullable: false),
                    STATUS = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    RODZAJ_ZLECENIA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_DOK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_DOK_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    NR_DOK_ROK = table.Column<int>(type: "int", nullable: true),
                    NR_DOK_MIES = table.Column<int>(type: "int", nullable: true),
                    DATA_WYSTAWIENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_ZAKONCZENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_ZGLOSZENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    STAN_LICZNIKA = table.Column<int>(type: "int", nullable: true),
                    WLASNY_POJAZD = table.Column<int>(type: "int", nullable: true),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: true),
                    KONTRAH_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KONTRAH_NAZWA = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    KONTRAH_ADRES = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    KONTRAH_MIASTO = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    KONTRAH_KOD = table.Column<string>(type: "varchar(6)", unicode: false, maxLength: 6, nullable: true),
                    KONTRAH_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KONTRAH_NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    POJAZD_ID = table.Column<int>(type: "int", nullable: true),
                    POJAZD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_NADWOZIA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    NR_SILNIKA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MARKA = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true),
                    MODEL = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true),
                    WERSJA = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true),
                    FORMA_PLATNOSCI = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TERMIN_PLATNOSCI = table.Column<int>(type: "int", nullable: true),
                    DATA_ZAPLATY = table.Column<DateTime>(type: "datetime", nullable: true),
                    STAWKI_ID = table.Column<int>(type: "int", nullable: true),
                    STAWKI = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    NAPRAWA = table.Column<int>(type: "int", nullable: true),
                    NAPRAWA_OPIS = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true),
                    NAPRAWA_P_KOSZT = table.Column<double>(type: "float", nullable: true),
                    BADANIE_TECHNICZNE = table.Column<int>(type: "int", nullable: true),
                    BADANIE_TECHNICZNE_OPIS = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true),
                    BADANIE_P_KOSZT = table.Column<double>(type: "float", nullable: true),
                    PRZEGLAD = table.Column<int>(type: "int", nullable: true),
                    PRZEGLAD_PO = table.Column<double>(type: "float", nullable: true),
                    PRZEGLAD_OPIS = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true),
                    PRZEGLAD_P_KOSZT = table.Column<double>(type: "float", nullable: true),
                    INNE_PARAM = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    ZLECAJACY_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECAJACY = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PRZYJMUJACY_ID = table.Column<int>(type: "int", nullable: true),
                    PRZYJMUJACY = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TERMIN_ODBIORU = table.Column<DateTime>(type: "datetime", nullable: true),
                    TERMIN_ODBIORU_GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    LACZNY_P_KOSZT = table.Column<double>(type: "float", nullable: true),
                    NADZORCA_ID = table.Column<int>(type: "int", nullable: true),
                    NADZORCA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    W_STANOWISKA_ID = table.Column<int>(type: "int", nullable: true),
                    W_STANOWISKA = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    INSTR_DLA_SERWISU = table.Column<string>(type: "text", nullable: true),
                    PRZYCZYNY_ZALECENIA = table.Column<string>(type: "text", nullable: true),
                    ZAUWAZONE_USTERKI = table.Column<string>(type: "text", nullable: true),
                    NAJBL_PRZEGLAD_PO_KM = table.Column<double>(type: "float", nullable: true),
                    NAJBL_PRZEGLAD_DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    FAKTURA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    FAKTURA_ID = table.Column<int>(type: "int", nullable: true),
                    W_FAKTURA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    W_FAKTURA_ID = table.Column<int>(type: "int", nullable: true),
                    ZAKSIEGOWANO_SPEED = table.Column<int>(type: "int", nullable: true),
                    STATUS_PILNE = table.Column<int>(type: "int", nullable: true),
                    STAN_PALIWA = table.Column<int>(type: "int", nullable: true),
                    ILE_KM_DO_PRZEGLADU = table.Column<int>(type: "int", nullable: true),
                    POJAZD_NR_BOCZNY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZDAWCZY = table.Column<string>(type: "text", nullable: true),
                    ODBIORCZY = table.Column<string>(type: "text", nullable: true),
                    DATA_PLANOWANA = table.Column<DateTime>(type: "datetime", nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZLECENIE_ZEWN = table.Column<int>(type: "int", nullable: true),
                    ZLECENIOBIORCA_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIOBIORCA_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KIEROWCA_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MYCIE = table.Column<int>(type: "int", nullable: true),
                    MYCIE_OPIS = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true),
                    MYCIE_P_KOSZT = table.Column<double>(type: "float", nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    W_PARAGON = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    W_PARAGON_ID = table.Column<int>(type: "int", nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    W_FAKTURA_K = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    W_FAKTURA_K_ID = table.Column<int>(type: "int", nullable: true),
                    REKLAMACJA = table.Column<int>(type: "int", nullable: true),
                    REKLAMACJA_DO_ID = table.Column<int>(type: "int", nullable: true),
                    REKLAMACJA_DO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_ZLEC_KL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    GODZ_ZAKONCZENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_ZGLOSZENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_PLANOWANA = table.Column<DateTime>(type: "datetime", nullable: true),
                    MYCIE_OST_LAD = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    MYCIE_NACZEPA_ID = table.Column<int>(type: "int", nullable: true),
                    MYCIE_NACZEPA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    MYCIE_KOMORA_1 = table.Column<int>(type: "int", nullable: true),
                    MYCIE_KOMORA_2 = table.Column<int>(type: "int", nullable: true),
                    MYCIE_KOMORA_3 = table.Column<int>(type: "int", nullable: true),
                    MYCIE_KOMORA_4 = table.Column<int>(type: "int", nullable: true),
                    MYCIE_KOMORA_5 = table.Column<int>(type: "int", nullable: true),
                    INNE_UWAGI = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    SA_MAG_OBCY = table.Column<int>(type: "int", nullable: true),
                    SA_REZ = table.Column<int>(type: "int", nullable: true),
                    WALUTA_FV = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    SZKODY_ID = table.Column<int>(type: "int", nullable: true),
                    SZKODY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PARAGON_FISKALNY = table.Column<int>(type: "int", nullable: true),
                    STATUS_WYKONAWCZY = table.Column<int>(type: "int", nullable: true),
                    STATUS_WYKONAWCZY_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    STATUS_WYKONAWCZY_OPIS = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TYP_PRACOWNIKA = table.Column<int>(type: "int", nullable: true),
                    TYP = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_W_ZLECENIA_OFERTY", x => x.ID_W_ZLECENIA_OFERTY);
                });

            migrationBuilder.CreateTable(
                name: "W_ZLECENIA_OFERTY_POZ",
                columns: table => new
                {
                    ID_W_ZLECENIA_OFERTY_POZ = table.Column<int>(type: "int", nullable: false),
                    W_ZLECENIA_OFERTY_ID = table.Column<int>(type: "int", nullable: true),
                    W_MAG_WYDANIA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    W_MAG_WYDANIA_ID = table.Column<int>(type: "int", nullable: true),
                    W_MAG_WYDANIA_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    TYP = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    MAGAZYN = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    OBJ_ID = table.Column<int>(type: "int", nullable: true),
                    W_MAG_TOWARY_ID = table.Column<int>(type: "int", nullable: true),
                    SYMBOL_TOWARU = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    NAZWA_1 = table.Column<string>(type: "varchar(120)", unicode: false, maxLength: 120, nullable: true),
                    NAZWA_2 = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    JM = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    PKWIU = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    GRUPA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    PRODUCENT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ILOSC = table.Column<double>(type: "float", nullable: true),
                    CENA_JEDN_N = table.Column<double>(type: "float", nullable: true),
                    STAWKA_VAT_ID = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    STAWKA_VAT = table.Column<double>(type: "float", nullable: true),
                    WARTOSC_N = table.Column<double>(type: "float", nullable: true),
                    WARTOSC_V = table.Column<double>(type: "float", nullable: true),
                    WARTOSC_B = table.Column<double>(type: "float", nullable: true),
                    NR_FAKTURY_ZAKUPU = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DOSTAWCA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NORMA_CZASOWA = table.Column<double>(type: "float", nullable: true),
                    RODZ_KOSZTOW = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    W_PRACOWNICY = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    OPONA = table.Column<int>(type: "int", nullable: true),
                    OPONY = table.Column<int>(type: "int", nullable: true),
                    OPONY_ID = table.Column<int>(type: "int", nullable: true),
                    OPONY_TYP_OBSL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPONY_NR_OSI = table.Column<int>(type: "int", nullable: true),
                    OPONY_STRONA = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    NADG_50 = table.Column<double>(type: "float", nullable: true),
                    NADG_100 = table.Column<double>(type: "float", nullable: true),
                    OPIS_DOD = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    W_MAG_PRZYJECIA_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    MARZA = table.Column<double>(type: "float", nullable: true),
                    CENA_JEDN_N_M = table.Column<double>(type: "float", nullable: true),
                    WARTOSC_N_M = table.Column<double>(type: "float", nullable: true),
                    WARTOSC_V_M = table.Column<double>(type: "float", nullable: true),
                    WARTOSC_B_M = table.Column<double>(type: "float", nullable: true),
                    STALA_CENA_SPRZEDAZY = table.Column<double>(type: "float", nullable: true),
                    STALA_CENA_SPRZEDAZY_N = table.Column<double>(type: "float", nullable: true),
                    MARZA_KWOTA = table.Column<double>(type: "float", nullable: true),
                    W_FAKTURA_ID = table.Column<int>(type: "int", nullable: true),
                    MAG_OBCY = table.Column<int>(type: "int", nullable: true),
                    RABAT = table.Column<double>(type: "float", nullable: true),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    W_FAKTURA_K_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIA_TYP = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    ZLECENIA_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SZKODY_ID = table.Column<int>(type: "int", nullable: true),
                    SZKODY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    W_DANE_ZEWN_WZ_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    DOPISZ_DO_WYP_POJ = table.Column<int>(type: "int", nullable: true, comment: "Dodano do wykorz. przez ZleceniaWydanieMagWiz mw"),
                    FAKTURY_POZYCJE_ID = table.Column<int>(type: "int", nullable: true),
                    CENA_UZYTKOWNIKA = table.Column<int>(type: "int", nullable: true),
                    NARZUT = table.Column<double>(type: "float", nullable: true),
                    CENA_ZA_USLUGE = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DOPISZ_DO_WYP_PRAC = table.Column<int>(type: "int", nullable: true),
                    PRZYDZIAL_KOSZTU = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    KOREKTA_WZ = table.Column<int>(type: "int", nullable: true),
                    PRZED_KOR_ILOSC = table.Column<decimal>(type: "decimal(18,4)", nullable: true),
                    PRZED_KOR_CENA_JEDN_N = table.Column<double>(type: "float", nullable: true),
                    PRZED_KOR_STAWKA_VAT_ID = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    PRZED_KOR_STAWKA_VAT = table.Column<double>(type: "float", nullable: true),
                    PRZED_KOR_WARTOSC_N = table.Column<double>(type: "float", nullable: true),
                    PRZED_KOR_WARTOSC_V = table.Column<double>(type: "float", nullable: true),
                    PRZED_KOR_WARTOSC_B = table.Column<double>(type: "float", nullable: true),
                    PRZED_KOR_CENA_JEDN_N_M = table.Column<double>(type: "float", nullable: true),
                    PRZED_KOR_WARTOSC_N_M = table.Column<double>(type: "float", nullable: true),
                    PRZED_KOR_WARTOSC_V_M = table.Column<double>(type: "float", nullable: true),
                    PRZED_KOR_WARTOSC_B_M = table.Column<double>(type: "float", nullable: true),
                    KOR_W_MAG_WYDANIA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KOR_W_MAG_WYDANIA_ID = table.Column<int>(type: "int", nullable: true),
                    KOR_W_MAG_WYDANIA_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    NR_KATALOG = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    REF_1 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    CENA_UBEZPIECZYCIELA_N = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_W_ZLECENIA_OFERTY_POZ", x => x.ID_W_ZLECENIA_OFERTY_POZ);
                });

            migrationBuilder.CreateTable(
                name: "W_ZLECENIA_POZ",
                columns: table => new
                {
                    ID_W_ZLECENIA_POZ = table.Column<int>(type: "int", nullable: false),
                    W_ZLECENIE_ID = table.Column<int>(type: "int", nullable: true),
                    W_MAG_WYDANIA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    W_MAG_WYDANIA_ID = table.Column<int>(type: "int", nullable: true),
                    W_MAG_WYDANIA_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    TYP = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    MAGAZYN = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    OBJ_ID = table.Column<int>(type: "int", nullable: true),
                    W_MAG_TOWARY_ID = table.Column<int>(type: "int", nullable: true),
                    SYMBOL_TOWARU = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    NAZWA_1 = table.Column<string>(type: "varchar(120)", unicode: false, maxLength: 120, nullable: true),
                    NAZWA_2 = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    JM = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    PKWIU = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    GRUPA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    PRODUCENT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ILOSC = table.Column<double>(type: "float", nullable: true),
                    CENA_JEDN_N = table.Column<double>(type: "float", nullable: true),
                    STAWKA_VAT_ID = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    STAWKA_VAT = table.Column<double>(type: "float", nullable: true),
                    WARTOSC_N = table.Column<double>(type: "float", nullable: true),
                    WARTOSC_V = table.Column<double>(type: "float", nullable: true),
                    WARTOSC_B = table.Column<double>(type: "float", nullable: true),
                    NR_FAKTURY_ZAKUPU = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DOSTAWCA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NORMA_CZASOWA = table.Column<double>(type: "float", nullable: true),
                    RODZ_KOSZTOW = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    W_PRACOWNICY = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    OPONA = table.Column<int>(type: "int", nullable: true),
                    OPONY = table.Column<int>(type: "int", nullable: true),
                    OPONY_ID = table.Column<int>(type: "int", nullable: true),
                    OPONY_TYP_OBSL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPONY_NR_OSI = table.Column<int>(type: "int", nullable: true),
                    OPONY_STRONA = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    OPIS_DOD = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    NADG_50 = table.Column<double>(type: "float", nullable: true),
                    NADG_100 = table.Column<double>(type: "float", nullable: true),
                    W_MAG_PRZYJECIA_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    MARZA = table.Column<double>(type: "float", nullable: true),
                    CENA_JEDN_N_M = table.Column<double>(type: "float", nullable: true),
                    WARTOSC_N_M = table.Column<double>(type: "float", nullable: true),
                    WARTOSC_V_M = table.Column<double>(type: "float", nullable: true),
                    WARTOSC_B_M = table.Column<double>(type: "float", nullable: true),
                    STALA_CENA_SPRZEDAZY = table.Column<double>(type: "float", nullable: true),
                    STALA_CENA_SPRZEDAZY_N = table.Column<double>(type: "float", nullable: true),
                    MARZA_KWOTA = table.Column<double>(type: "float", nullable: true),
                    W_FAKTURA_ID = table.Column<int>(type: "int", nullable: true),
                    MAG_OBCY = table.Column<int>(type: "int", nullable: true),
                    RABAT = table.Column<double>(type: "float", nullable: true),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    W_FAKTURA_K_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIA_TYP = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    ZLECENIA_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SZKODY_ID = table.Column<int>(type: "int", nullable: true),
                    SZKODY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    W_DANE_ZEWN_WZ_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    DOPISZ_DO_WYP_POJ = table.Column<int>(type: "int", nullable: true, comment: "Dodano do wykorz. przez ZleceniaWydanieMagWiz mw"),
                    FAKTURY_POZYCJE_ID = table.Column<int>(type: "int", nullable: true),
                    CENA_UZYTKOWNIKA = table.Column<int>(type: "int", nullable: true),
                    KOREKTA_WZ = table.Column<int>(type: "int", nullable: true),
                    PRZED_KOR_ILOSC = table.Column<decimal>(type: "decimal(18,4)", nullable: true),
                    PRZED_KOR_CENA_JEDN_N = table.Column<double>(type: "float", nullable: true),
                    PRZED_KOR_STAWKA_VAT_ID = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    PRZED_KOR_STAWKA_VAT = table.Column<double>(type: "float", nullable: true),
                    PRZED_KOR_WARTOSC_N = table.Column<double>(type: "float", nullable: true),
                    PRZED_KOR_WARTOSC_V = table.Column<double>(type: "float", nullable: true),
                    PRZED_KOR_WARTOSC_B = table.Column<double>(type: "float", nullable: true),
                    PRZED_KOR_CENA_JEDN_N_M = table.Column<double>(type: "float", nullable: true),
                    PRZED_KOR_WARTOSC_N_M = table.Column<double>(type: "float", nullable: true),
                    PRZED_KOR_WARTOSC_V_M = table.Column<double>(type: "float", nullable: true),
                    PRZED_KOR_WARTOSC_B_M = table.Column<double>(type: "float", nullable: true),
                    KOR_W_MAG_WYDANIA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KOR_W_MAG_WYDANIA_ID = table.Column<int>(type: "int", nullable: true),
                    KOR_W_MAG_WYDANIA_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    PRZYDZIAL_KOSZTU = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    NR_KATALOG = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    REF_1 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NARZUT = table.Column<double>(type: "float", nullable: true),
                    CENA_ZA_USLUGE = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    DOPISZ_DO_WYP_PRAC = table.Column<int>(type: "int", nullable: true),
                    STAWKA_VAT_ZAK_ID = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    STAWKA_VAT_ZAK = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_W_ZLECENIA_POZ", x => x.ID_W_ZLECENIA_POZ);
                });

            migrationBuilder.CreateTable(
                name: "W_ZLECENIA_PRACOWNICY",
                columns: table => new
                {
                    ID_W_ZLECENIA_PRACOWNICY = table.Column<int>(type: "int", nullable: false),
                    W_ZLECENIE_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    W_ZLECENIE_ID = table.Column<int>(type: "int", nullable: true),
                    W_ZLECENIE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    W_PRACOWNICY_ID = table.Column<int>(type: "int", nullable: true),
                    W_PRACOWNICY = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PROCENT_RG = table.Column<double>(type: "float", nullable: true),
                    ILOSC_RG = table.Column<double>(type: "float", nullable: true),
                    NADG_50 = table.Column<double>(type: "float", nullable: true),
                    NADG_100 = table.Column<double>(type: "float", nullable: true),
                    ILOSC_RG_DO_FV = table.Column<double>(type: "float", nullable: true),
                    ILOSC_RG_RZ = table.Column<double>(type: "float", nullable: true),
                    DATA_WYKONANIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    W_ZLECENIE_OFERTY_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    W_ZLECENIE_OFERTY_ID = table.Column<int>(type: "int", nullable: true),
                    W_ZLECENIE_OFERTY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_W_ZLECENIA_PRACOWNICY", x => x.ID_W_ZLECENIA_PRACOWNICY);
                });

            migrationBuilder.CreateTable(
                name: "W_ZLECENIA_PRZEG_POZ",
                columns: table => new
                {
                    ID_W_ZLECENIA_PRZEG_POZ = table.Column<int>(type: "int", nullable: false),
                    W_ZLECENIE_ID = table.Column<int>(type: "int", nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    PRZEGLAD_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    PRZEGLAD_POZ = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WYKONANO = table.Column<int>(type: "int", nullable: true),
                    W_GRUPY_PRZEGLAD_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    W_GRUPY_PRZEGLAD = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    W_ZLECENIA_OFERTY_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_W_ZLECENIA_PRZEG_POZ", x => x.ID_W_ZLECENIA_PRZEG_POZ);
                });

            migrationBuilder.CreateTable(
                name: "W_ZLECENIA_TABOR_TERM",
                columns: table => new
                {
                    ID_W_ZLECENIA_TABOR_TERM = table.Column<int>(type: "int", nullable: false),
                    W_ZLECENIE_ID = table.Column<int>(type: "int", nullable: true),
                    TABOR_TERMIN_ID = table.Column<int>(type: "int", nullable: true),
                    CZYNNOSC_ID = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    CZYNNOSC = table.Column<string>(type: "varchar(120)", unicode: false, maxLength: 120, nullable: true),
                    WYKONANO = table.Column<int>(type: "int", nullable: true),
                    LICZNIK = table.Column<int>(type: "int", nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    W_ZLECENIA_OFERTY_ID = table.Column<int>(type: "int", nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_W_ZLECENIA_TABOR_TERM", x => x.ID_W_ZLECENIA_TABOR_TERM);
                });

            migrationBuilder.CreateTable(
                name: "WALUTY",
                columns: table => new
                {
                    KOD = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: false),
                    SYMBOL = table.Column<int>(type: "int", nullable: true),
                    NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KURS_NA = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('1')"),
                    KRAJ_KOD = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    WIDOCZNY = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('1')"),
                    W_UZYCIU = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('1')"),
                    KURS_TYP = table.Column<short>(type: "smallint", nullable: true),
                    SYMBOL_DO_FK = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    SYMBOL_DO_FK_2 = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    SYMBOL_DO_FK_3 = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    UZYWAJ_W_LICZN_SZCZ = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('1')"),
                    DictionaryId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TextId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WALUTY", x => x.KOD);
                });

            migrationBuilder.CreateTable(
                name: "WARDOST",
                columns: table => new
                {
                    ID_WARDOST = table.Column<int>(type: "int", nullable: false),
                    KOD = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Kod INCO"),
                    OPIS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Opis"),
                    ZM_PLATNIKA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy zmieniać płatnika"),
                    ZM_PLATNIKA_NA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, na jakiego płatnika zmieniać : 0-zlec, 1-nad, 2-odb"),
                    POBRANIE_ZA_FRACHT = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy jest pobranie za fracht"),
                    AKTYWNE = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy aktywne"),
                    DictionaryId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TextId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WARDOST", x => x.ID_WARDOST);
                },
                comment: "Słownik warunków dostawy");

            migrationBuilder.CreateTable(
                name: "WARIANTY_GEN_ZAWY_TRAS",
                columns: table => new
                {
                    ID_WARIANTY_GEN_ZAWY_TRAS = table.Column<int>(type: "int", nullable: false),
                    KOD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OPIS = table.Column<string>(type: "text", nullable: true),
                    AKTYWNY = table.Column<int>(type: "int", nullable: true),
                    ALGORYTM = table.Column<int>(type: "int", nullable: true),
                    NA_PODST_ZAWY_PRZESYLEK = table.Column<int>(type: "int", nullable: true),
                    SCALAJ = table.Column<int>(type: "int", nullable: true),
                    POMIJAJ_ZA = table.Column<int>(type: "int", nullable: true),
                    LOKALIZACJA_JAKO_ZA = table.Column<int>(type: "int", nullable: true),
                    POMIJAJ_WY = table.Column<int>(type: "int", nullable: true),
                    LOKALIZACJA_JAKO_WY = table.Column<int>(type: "int", nullable: true),
                    PROCEDURA_DB_ID = table.Column<int>(type: "int", nullable: true),
                    PROCEDURA_DB = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DOMYSLNY = table.Column<int>(type: "int", nullable: true),
                    DOMYSLNY_DLA_TRASY_TYPU = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    USTAW_ETA_ZA = table.Column<int>(type: "int", nullable: true),
                    USTAW_ETA_ZA_ID = table.Column<int>(type: "int", nullable: true),
                    USTAW_ETA_WY = table.Column<int>(type: "int", nullable: true),
                    USTAW_ETA_WY_ID = table.Column<int>(type: "int", nullable: true),
                    USTAW_WRN_ZA = table.Column<int>(type: "int", nullable: true),
                    USTAW_WRN_ZA_ID = table.Column<int>(type: "int", nullable: true),
                    USTAW_WRN_WY = table.Column<int>(type: "int", nullable: true),
                    USTAW_WRN_WY_ID = table.Column<int>(type: "int", nullable: true),
                    ZAL_WG_DATY_DO = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    WYL_WG_DATY_DO = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    NA_PODST_LOK_TRASY = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    UZYJ_PROC = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    PROCEDURA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WARIANTY_GEN_ZAWY_TRAS", x => x.ID_WARIANTY_GEN_ZAWY_TRAS);
                });

            migrationBuilder.CreateTable(
                name: "WeightConversion",
                columns: table => new
                {
                    IdWeightConversion = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Enabled = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    System = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    Group = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    Name = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    Loc = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: false, defaultValueSql: "('')"),
                    Dep = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: false, defaultValueSql: "('')"),
                    ClientId = table.Column<int>(type: "int", nullable: true),
                    Desc = table.Column<string>(type: "varchar(250)", unicode: false, maxLength: 250, nullable: true),
                    LogAsAddition = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    LogLengthThresholdMin = table.Column<double>(type: "float", nullable: true),
                    LogLengthThresholdMax = table.Column<double>(type: "float", nullable: true),
                    LogWeightThresholdMin = table.Column<double>(type: "float", nullable: true),
                    LogWeightThresholdMax = table.Column<double>(type: "float", nullable: true),
                    LogThresholdOnlyAbove = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WeightConversion", x => x.IdWeightConversion);
                });

            migrationBuilder.CreateTable(
                name: "WeightConversionValues",
                columns: table => new
                {
                    IdWeightConversionValues = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    WeightConversionId = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    FromValue = table.Column<double>(type: "float", nullable: false, defaultValueSql: "('')"),
                    FromUnit = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: false, defaultValueSql: "('')"),
                    ToValue = table.Column<double>(type: "float", nullable: false, defaultValueSql: "('')"),
                    ToUnit = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: false, defaultValueSql: "('')"),
                    TransportUnits = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WeightConversionValues", x => x.IdWeightConversionValues);
                });

            migrationBuilder.CreateTable(
                name: "WERSJA",
                columns: table => new
                {
                    ID_WERSJA = table.Column<int>(type: "int", nullable: false),
                    MARKA_ID = table.Column<int>(type: "int", nullable: true),
                    MODEL_ID = table.Column<int>(type: "int", nullable: true),
                    NAZWA = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true),
                    PROD_OD = table.Column<string>(type: "varchar(7)", unicode: false, maxLength: 7, nullable: true),
                    PROD_DO = table.Column<string>(type: "varchar(7)", unicode: false, maxLength: 7, nullable: true),
                    POJ = table.Column<double>(type: "float", nullable: true),
                    MOC_KM = table.Column<double>(type: "float", nullable: true),
                    MOC_KW = table.Column<double>(type: "float", nullable: true),
                    WYPOSAZENIE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WERSJA", x => x.ID_WERSJA);
                });

            migrationBuilder.CreateTable(
                name: "WEZWANIA_DO_ZAPL",
                columns: table => new
                {
                    ID_WEZWANIA_DO_ZAPL = table.Column<int>(type: "int", nullable: false),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_WYSLANIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_PLATNOSCI = table.Column<DateTime>(type: "datetime", nullable: true),
                    OSTATECZNE = table.Column<int>(type: "int", nullable: true),
                    LICZ_ODSETKI = table.Column<int>(type: "int", nullable: true),
                    KOSZT_MONITU = table.Column<double>(type: "float", nullable: true),
                    KOSZT_MONITU_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KOSZT_WIND = table.Column<double>(type: "float", nullable: true),
                    KOSZT_WIND_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: true),
                    KONTRAH_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KONTRAH_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KONTRAH_ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KONTRAH_MIASTO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KONTRAH_KOD = table.Column<string>(type: "varchar(6)", unicode: false, maxLength: 6, nullable: true),
                    KONTRAH_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KONTRAH_NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    NAGLOWEK = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    TRESC = table.Column<string>(type: "text", nullable: true),
                    JEZYK_WYDRUKU = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    STOPKA = table.Column<string>(type: "text", nullable: true),
                    NOTA_ID = table.Column<int>(type: "int", nullable: true),
                    NOTA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KONTO_ID = table.Column<int>(type: "int", nullable: true),
                    KONTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    IBAN = table.Column<int>(type: "int", nullable: true),
                    WYDRUK_SPORZADZIL = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    STATUS_WINDYKACJI = table.Column<int>(type: "int", nullable: true),
                    AKTYWNE = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('1')"),
                    ODDZIAL_ID = table.Column<int>(type: "int", nullable: true),
                    ODDZIAL_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    ODDZIAL_ADRES = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ODDZIAL_MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ODDZIAL_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    ODDZIAL_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KONTRAH_TYP = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WEZWANIA_DO_ZAPL", x => x.ID_WEZWANIA_DO_ZAPL);
                });

            migrationBuilder.CreateTable(
                name: "WEZWANIA_DO_ZAPL_POZ",
                columns: table => new
                {
                    ID_WEZWANIA_DO_ZAPL_POZ = table.Column<int>(type: "int", nullable: false),
                    WEZWANIA_DO_ZAPL_ID = table.Column<int>(type: "int", nullable: true),
                    TYP = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: false, defaultValueSql: "('F')"),
                    FAKTURY_ID = table.Column<int>(type: "int", nullable: true),
                    FAKTURY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    LICZBA_DNI = table.Column<int>(type: "int", nullable: true),
                    ODSETKI = table.Column<double>(type: "float", nullable: true),
                    KWOTA_ZADLUZENIA = table.Column<double>(type: "float", nullable: true),
                    WALUTA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WEZWANIA_DO_ZAPL_POZ", x => x.ID_WEZWANIA_DO_ZAPL_POZ);
                });

            migrationBuilder.CreateTable(
                name: "WIN_FRM_CALC_FLD",
                columns: table => new
                {
                    ID_WIN_FRM_CALC_FLD = table.Column<int>(type: "int", nullable: false),
                    WIN_FRM_CALC_SP_ID = table.Column<int>(type: "int", nullable: false),
                    TBL_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: false),
                    FLD_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: false),
                    FLD_TYPE = table.Column<int>(type: "int", nullable: false),
                    FLD_SIZE = table.Column<int>(type: "int", nullable: false),
                    FLD_LBL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: false),
                    FLD_OK = table.Column<int>(type: "int", nullable: false),
                    FLD_SOURCE = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WIN_FRM_CALC_FLD", x => x.ID_WIN_FRM_CALC_FLD);
                });

            migrationBuilder.CreateTable(
                name: "WIN_FRM_CALC_SP",
                columns: table => new
                {
                    ID_WIN_FRM_CALC_SP = table.Column<int>(type: "int", nullable: false),
                    WIN_FRM_NAME = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: false),
                    EXEC_EVENT = table.Column<int>(type: "int", nullable: false),
                    SP_NAME = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WIN_FRM_CALC_SP", x => x.ID_WIN_FRM_CALC_SP);
                });

            migrationBuilder.CreateTable(
                name: "WIND_SCHEMAT",
                columns: table => new
                {
                    ID_WIND_SCHEMAT = table.Column<int>(type: "int", nullable: false),
                    NAZWA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WIND_SCHEMAT", x => x.ID_WIND_SCHEMAT);
                });

            migrationBuilder.CreateTable(
                name: "WIND_SCHEMAT_POZ",
                columns: table => new
                {
                    ID_WIND_SCHEMAT_POZ = table.Column<int>(type: "int", nullable: false),
                    WIND_SCHEMAT_ID = table.Column<int>(type: "int", nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    AKCJA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NAZWA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    DZIEN = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WIND_SCHEMAT_POZ", x => x.ID_WIND_SCHEMAT_POZ);
                });

            migrationBuilder.CreateTable(
                name: "Window",
                schema: "lng",
                columns: table => new
                {
                    WindowId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ClassName = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: false, defaultValueSql: "('')"),
                    Description = table.Column<string>(type: "nvarchar(255)", maxLength: 255, nullable: true, defaultValueSql: "('')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Window", x => x.WindowId);
                });

            migrationBuilder.CreateTable(
                name: "WINDYKACJE",
                columns: table => new
                {
                    ID_WINDYKACJE = table.Column<int>(type: "int", nullable: false),
                    AKTYWNA_ZAKLADKA = table.Column<int>(type: "int", nullable: true),
                    DATA_SPRAWY = table.Column<DateTime>(type: "datetime", nullable: true),
                    NR_SPRAWY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_SPRAWY_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    NR_SPRAWY_ROK = table.Column<int>(type: "int", nullable: true),
                    NR_SPRAWY_MIESIAC = table.Column<int>(type: "int", nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DLUZNIK_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DLUZNIK_ID = table.Column<int>(type: "int", nullable: true),
                    DLUZNIK_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    DLUZNIK_ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    DLUZNIK_MIASTO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    DLUZNIK_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    DLUZNIK_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    DLUZNIK_NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    DLUZNIK_TEL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DLUZNIK_FAX = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DLUZNIK_EMAIL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DLUZNIK_KONT = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    DLUZNIK_UWAGI = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WIND_SCHEMAT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    WIND_SCHEMAT_ID = table.Column<int>(type: "int", nullable: true),
                    RODZAJ = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    STATUS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    WINDYKATOR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    WINDYKATOR_ID = table.Column<int>(type: "int", nullable: true),
                    PRAC_ODPOW = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PRAC_ODPOW_ID = table.Column<int>(type: "int", nullable: true),
                    SAD = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    SAD_ID = table.Column<int>(type: "int", nullable: true),
                    KOMORNIK_SADOWY = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    KOMORNIK_SADOWY_ID = table.Column<int>(type: "int", nullable: true),
                    UWAGI = table.Column<string>(type: "text", nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    NALEZNOSC = table.Column<double>(type: "float", nullable: true),
                    ODSETKI = table.Column<double>(type: "float", nullable: true),
                    WPLATY = table.Column<double>(type: "float", nullable: true),
                    SALDO_SPRAWY = table.Column<double>(type: "float", nullable: true),
                    STATUS_ZAMKN = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DATA_ZAMKN = table.Column<DateTime>(type: "datetime", nullable: true),
                    OPIS_SPRAWY = table.Column<string>(type: "text", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WINDYKACJE", x => x.ID_WINDYKACJE);
                });

            migrationBuilder.CreateTable(
                name: "WINDYKACJE_HARM",
                columns: table => new
                {
                    ID_WINDYKACJE_HARM = table.Column<int>(type: "int", nullable: false),
                    WINDYKACJE_ID = table.Column<int>(type: "int", nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    TERMIN = table.Column<DateTime>(type: "datetime", nullable: true),
                    KWOTA = table.Column<double>(type: "float", nullable: true),
                    OPIS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SPLATA = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WINDYKACJE_HARM", x => x.ID_WINDYKACJE_HARM);
                });

            migrationBuilder.CreateTable(
                name: "WINDYKACJE_KOSZT",
                columns: table => new
                {
                    ID_WINDYKACJE_KOSZT = table.Column<int>(type: "int", nullable: false),
                    WINDYKACJE_ID = table.Column<int>(type: "int", nullable: true),
                    DATA_POWSTANIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    KWOTA = table.Column<double>(type: "float", nullable: true),
                    OPIS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    RODZAJ = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    CZY_OBCIAZYC = table.Column<int>(type: "int", nullable: true),
                    DOKUM_OBCIAZENIA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DOKUM_OBCIAZENIA_ID = table.Column<int>(type: "int", nullable: true),
                    DOKUM_OBCIAZENIA_TYP = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WINDYKACJE_KOSZT", x => x.ID_WINDYKACJE_KOSZT);
                });

            migrationBuilder.CreateTable(
                name: "WINDYKACJE_WPL",
                columns: table => new
                {
                    ID_WINDYKACJE_WPL = table.Column<int>(type: "int", nullable: false),
                    WINDYKACJE_ID = table.Column<int>(type: "int", nullable: true),
                    DATA_WPL = table.Column<DateTime>(type: "datetime", nullable: true),
                    KWOTA = table.Column<double>(type: "float", nullable: true),
                    RODZAJ = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    FAKTURY_ID = table.Column<int>(type: "int", nullable: true),
                    NOTY_ID = table.Column<int>(type: "int", nullable: true),
                    FAKTURY_SPLATY_ID = table.Column<int>(type: "int", nullable: true),
                    NOTY_SPLATY_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WINDYKACJE_WPL", x => x.ID_WINDYKACJE_WPL);
                });

            migrationBuilder.CreateTable(
                name: "WINDYKACJE_ZAD",
                columns: table => new
                {
                    ID_WINDYKACJE_ZAD = table.Column<int>(type: "int", nullable: false),
                    WINDYKACJE_ID = table.Column<int>(type: "int", nullable: true),
                    WIND_SCHEMAT_ID = table.Column<int>(type: "int", nullable: true),
                    WIND_SCHEMAT_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    AKCJA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NAZWA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    TERMIN = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_REALIZACJI = table.Column<DateTime>(type: "datetime", nullable: true),
                    WYKONANE = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WINDYKACJE_ZAD", x => x.ID_WINDYKACJE_ZAD);
                });

            migrationBuilder.CreateTable(
                name: "WINDYKACJE_ZOB",
                columns: table => new
                {
                    ID_WINDYKACJE_ZOB = table.Column<int>(type: "int", nullable: false),
                    WINDYKACJE_ID = table.Column<int>(type: "int", nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    DATA_DOK = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_PLATNOSCI = table.Column<DateTime>(type: "datetime", nullable: true),
                    DOKUM = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DOKUM_ID = table.Column<int>(type: "int", nullable: true),
                    TYP_DOK = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    KWOTA = table.Column<double>(type: "float", nullable: true),
                    ODS_DNI = table.Column<int>(type: "int", nullable: true),
                    LICZ_ODS_USTAWOWE = table.Column<int>(type: "int", nullable: true),
                    ODS_USTAWOWE = table.Column<double>(type: "float", nullable: true),
                    ODS_UMOWNE = table.Column<double>(type: "float", nullable: true),
                    ODS_UMOWNE_WART = table.Column<double>(type: "float", nullable: true),
                    ODS_UMOWNE_DNI = table.Column<int>(type: "int", nullable: true),
                    SPLACONY = table.Column<int>(type: "int", nullable: true),
                    DATA_SPLATY = table.Column<DateTime>(type: "datetime", nullable: true),
                    NEW_NOTY = table.Column<int>(type: "int", nullable: true),
                    DT_LICZ_ODS = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WINDYKACJE_ZOB", x => x.ID_WINDYKACJE_ZOB);
                });

            migrationBuilder.CreateTable(
                name: "WINSETTINGS",
                columns: table => new
                {
                    ID_WINSETTINGS = table.Column<int>(type: "int", nullable: false),
                    WINCLASS = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "klasa okna"),
                    WINTYPE = table.Column<int>(type: "int", nullable: true, comment: "podtyp okna"),
                    WINTRYB = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "tryb wyświetlania"),
                    ID_USER = table.Column<int>(type: "int", nullable: true, comment: "id użytkownika"),
                    XML = table.Column<string>(type: "text", nullable: true, comment: "ustawienia listy typu dxGRID"),
                    LANG = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "wersja językowa")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WINSETTINGS", x => x.ID_WINSETTINGS);
                });

            migrationBuilder.CreateTable(
                name: "WINSIZESTORE",
                columns: table => new
                {
                    ID_WINSIZESTORE = table.Column<int>(type: "int", nullable: false),
                    WINCLASS = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "klasa okna"),
                    WINTYPE = table.Column<int>(type: "int", nullable: true, comment: "podtyp okna"),
                    WINTRYB = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "tryb wyświetlania"),
                    ID_USER = table.Column<int>(type: "int", nullable: true, comment: "id użytkownika"),
                    WINTOP = table.Column<int>(type: "int", nullable: true, comment: "pozycja: góra"),
                    WINLEFT = table.Column<int>(type: "int", nullable: true, comment: "pozycja: lewo"),
                    WINHEIGHT = table.Column<int>(type: "int", nullable: true, comment: "wysokość okna"),
                    WINWIDTH = table.Column<int>(type: "int", nullable: true, comment: "szerokość okna"),
                    WINSCALE = table.Column<double>(type: "float", nullable: true, comment: "skala okna względem standardu [%]")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WINSIZESTORE", x => x.ID_WINSIZESTORE);
                });

            migrationBuilder.CreateTable(
                name: "WOLNE_ZA_NADGODZ",
                columns: table => new
                {
                    ID_WOLNE_ZA_NADGODZ = table.Column<int>(type: "int", nullable: false),
                    ID_RCP_NAG = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ID_KIEROWCY = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ID_FIRMA = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    ID_OKRES_ROZLICZENIOWY = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    DATA_WNIOSKU = table.Column<DateTime>(type: "datetime", nullable: true),
                    L_GODZ = table.Column<int>(type: "int", nullable: true),
                    UZYTKOWNIK_ID = table.Column<int>(type: "int", nullable: true),
                    UZYTKOWNIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DATA_ODDANIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_ODDANIA_RZECZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    L_MIN = table.Column<int>(type: "int", nullable: true),
                    TYP_NADGODZIN = table.Column<int>(type: "int", nullable: true),
                    AUTOMAT = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WOLNE_ZA_NADGODZ", x => x.ID_WOLNE_ZA_NADGODZ);
                });

            migrationBuilder.CreateTable(
                name: "WOLNE_ZA_NADGODZ_POZ",
                columns: table => new
                {
                    ID_WOLNE_ZA_NADGODZ_POZ = table.Column<int>(type: "int", nullable: false),
                    WOLNE_ZA_NADGODZ_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    L_GODZ = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WOLNE_ZA_NADGODZ_POZ", x => x.ID_WOLNE_ZA_NADGODZ_POZ);
                });

            migrationBuilder.CreateTable(
                name: "WorkshopConfiguration",
                schema: "workshop",
                columns: table => new
                {
                    WorkshopConfigurationId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    VariableId = table.Column<int>(type: "int", nullable: false),
                    Name = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
                    Hint = table.Column<string>(type: "nvarchar(500)", maxLength: 500, nullable: true),
                    Value = table.Column<byte[]>(type: "varbinary(max)", nullable: true),
                    DefaultValue = table.Column<byte[]>(type: "varbinary(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WorkshopConfiguration", x => x.WorkshopConfigurationId);
                });

            migrationBuilder.CreateTable(
                name: "WWW_PRZESYLKA_EXT",
                columns: table => new
                {
                    ID_PRZESYLKI = table.Column<int>(type: "int", nullable: false),
                    ZATWIERDZONA = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("RDB$PRIMARY2", x => x.ID_PRZESYLKI);
                });

            migrationBuilder.CreateTable(
                name: "WYC_BANK",
                columns: table => new
                {
                    ID_WYC_BANK = table.Column<int>(type: "int", nullable: false),
                    NUMER = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    BANKI = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    BANKI_ID = table.Column<int>(type: "int", nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    ROK = table.Column<int>(type: "int", nullable: true),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    STATUS = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    STAN_POCZATKOWY = table.Column<double>(type: "float", nullable: true),
                    STAN_WN = table.Column<double>(type: "float", nullable: true),
                    STAN_MA = table.Column<double>(type: "float", nullable: true),
                    SALDO = table.Column<double>(type: "float", nullable: true),
                    EKSPORT_FK_ID = table.Column<int>(type: "int", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WYC_BANK", x => x.ID_WYC_BANK);
                });

            migrationBuilder.CreateTable(
                name: "WYC_BANK_OPER",
                columns: table => new
                {
                    ID_WYC_BANK_OPER = table.Column<int>(type: "int", nullable: false),
                    NR_OPERACJI = table.Column<int>(type: "int", nullable: true),
                    WYC_BANK_ID = table.Column<int>(type: "int", nullable: true),
                    RODZAJ = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    RODZAJ_POM = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    TYP = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KONTO = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TYP_LISTY_K = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KWOTA = table.Column<double>(type: "float", nullable: true),
                    KLIENT_ID = table.Column<int>(type: "int", nullable: true),
                    KLIENT_SYMBOL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KLIENT_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KLIENT_ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KLIENT_KOD = table.Column<string>(type: "varchar(6)", unicode: false, maxLength: 6, nullable: true),
                    KLIENT_MIASTO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    KURSY_UZGODNIONY = table.Column<int>(type: "int", nullable: true),
                    KURSY_WALUT_ID = table.Column<int>(type: "int", nullable: true),
                    NR_TABELI_KURSOW = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    DATA_TABELI_KURSOW = table.Column<DateTime>(type: "datetime", nullable: true),
                    KURS_WALUTY = table.Column<double>(type: "float", nullable: true),
                    ROZN_KURSOWA_P = table.Column<double>(type: "float", nullable: true),
                    ROZN_KURSOWA_M = table.Column<double>(type: "float", nullable: true),
                    KWOTA_OPLAT = table.Column<double>(type: "float", nullable: true),
                    OPL_EKSPORT_FK_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WYC_BANK_OPER", x => x.ID_WYC_BANK_OPER);
                });

            migrationBuilder.CreateTable(
                name: "WYC_BANK_OPER_POZ",
                columns: table => new
                {
                    ID_WYC_BANK_OPER_POZ = table.Column<int>(type: "int", nullable: false),
                    WYC_BANK_OPER_ID = table.Column<int>(type: "int", nullable: true),
                    FAKTURA_ID = table.Column<int>(type: "int", nullable: true),
                    FAKTURA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KWOTA = table.Column<double>(type: "float", nullable: true),
                    KURSY_WALUT1_ID = table.Column<int>(type: "int", nullable: true),
                    DATA_TABELI_KURSOW1 = table.Column<DateTime>(type: "datetime", nullable: true),
                    KURS_WALUTY1 = table.Column<double>(type: "float", nullable: true),
                    KURSY_WALUT2_ID = table.Column<int>(type: "int", nullable: true),
                    DATA_TABELI_KURSOW2 = table.Column<DateTime>(type: "datetime", nullable: true),
                    KURS_WALUTY2 = table.Column<double>(type: "float", nullable: true),
                    ROZN_KURSOWA = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WYC_BANK_OPER_POZ", x => x.ID_WYC_BANK_OPER_POZ);
                });

            migrationBuilder.CreateTable(
                name: "WYDRUKI_AUTOMAT",
                columns: table => new
                {
                    ID_WYDRUKI_AUTOMAT = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    OBJ_INFO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "opis obiektu (np. \"Fakt.nr DCX4125/0015\")"),
                    OBJ_ID = table.Column<int>(type: "int", nullable: true, comment: "id obiektu SPEED"),
                    REC_ID = table.Column<int>(type: "int", nullable: true, comment: "id rekordu obiektu SPEED"),
                    LAYOUT_NAME = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "nazwa formatki raportu (plik *.rpt)"),
                    GROUP_NAME = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "pole grupujące pakiet wydruków"),
                    STATUS = table.Column<int>(type: "int", nullable: true, comment: "0-gotowy do wydruku /1-wydrukowany /2-wykonany PostProcess /99-błąd"),
                    ERROR = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "treść błędu podczas wydruku"),
                    CREATE_DT = table.Column<DateTime>(type: "datetime", nullable: true, comment: "DT dodania do listy"),
                    PRINT_DT = table.Column<DateTime>(type: "datetime", nullable: true, comment: "DT statusu po wydruku"),
                    ID_SESJI_KALK = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "wartość >0 oznacza IdUserSesion"),
                    WYROZNIK = table.Column<int>(type: "int", nullable: true, comment: "wyróżnik dla listy mailingowej"),
                    LAYOUT_NAME_USE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "formatka użyta do wydruku (plik *.rpt)")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WYDRUKI_AUTOMAT", x => x.ID_WYDRUKI_AUTOMAT);
                },
                comment: "lista pozycji dla serwera wydruków");

            migrationBuilder.CreateTable(
                name: "WYDRUKI_STATUS",
                columns: table => new
                {
                    ID_WYDRUKI_STATUS = table.Column<int>(type: "int", nullable: false),
                    OBIEKT_ID = table.Column<int>(type: "int", nullable: true),
                    OBIEKT_TYP = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    ZDARZENIE = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    UZYTKOWNIK_ID = table.Column<int>(type: "int", nullable: true),
                    UZYTKOWNIK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: true),
                    KONTRAH_SYMBOL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ADRESY_EMAIL = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    FORMATKA_RPT = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    POWOD = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    OBJ_TYP = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    OBJ_ID = table.Column<int>(type: "int", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WYDRUKI_STATUS", x => x.ID_WYDRUKI_STATUS);
                });

            migrationBuilder.CreateTable(
                name: "WYJAZDY",
                columns: table => new
                {
                    ID_WYJAZDY = table.Column<int>(type: "int", nullable: false),
                    NR_WYJAZDU = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_WYJAZDU_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    NR_WYJAZDU_ROK = table.Column<int>(type: "int", nullable: true),
                    NR_WYJAZDU_MIES = table.Column<int>(type: "int", nullable: true),
                    SPEDYTOR_ID = table.Column<int>(type: "int", nullable: true),
                    SPEDYTOR = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    DATA_WYJAZDU = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_WYJAZDU = table.Column<DateTime>(type: "datetime", nullable: true),
                    STAN_LICZNIKA_WYJAZD = table.Column<double>(type: "float", nullable: true),
                    STAN_LICZNIKA_N_WYJAZD = table.Column<double>(type: "float", nullable: true),
                    STAN_PALIWA_WYJAZD = table.Column<double>(type: "float", nullable: true),
                    STAN_PALIWA_AGR_WYJAZD = table.Column<double>(type: "float", nullable: true),
                    STAN_PALIWA_N_WYJAZD = table.Column<double>(type: "float", nullable: true),
                    DATA_PRZYJAZDU = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_PRZYJAZDU = table.Column<DateTime>(type: "datetime", nullable: true),
                    STAN_LICZNIKA_PRZYJAZD = table.Column<double>(type: "float", nullable: true),
                    STAN_LICZNIKA_N_PRZYJAZD = table.Column<double>(type: "float", nullable: true),
                    STAN_PALIWA_PRZYJAZD = table.Column<double>(type: "float", nullable: true),
                    STAN_PALIWA_AGR_PRZYJAZD = table.Column<double>(type: "float", nullable: true),
                    STAN_PALIWA_N_PRZYJAZD = table.Column<double>(type: "float", nullable: true),
                    CZAS_TRWANIA_WYJAZDU = table.Column<double>(type: "float", nullable: true),
                    CZAS_PRACY_AGREGATU = table.Column<double>(type: "float", nullable: true),
                    CZAS_PRACY_AGREGATU_N = table.Column<double>(type: "float", nullable: true),
                    CZAS_PRACY_OGRZEWANIA = table.Column<double>(type: "float", nullable: true),
                    KM_LACZNIE = table.Column<double>(type: "float", nullable: true),
                    KM_LADOWNE = table.Column<double>(type: "float", nullable: true),
                    KM_PUSTE = table.Column<double>(type: "float", nullable: true),
                    KM_MIASTO = table.Column<double>(type: "float", nullable: true),
                    ZAKUP_PALIWA = table.Column<double>(type: "float", nullable: true),
                    ZAKUP_PALIWA_AGR = table.Column<double>(type: "float", nullable: true),
                    ZAKUP_PALIWA_AGR_N = table.Column<double>(type: "float", nullable: true),
                    ZUZ_R_PALIWA = table.Column<double>(type: "float", nullable: true),
                    ZUZ_R_PALIWA_AGR = table.Column<double>(type: "float", nullable: true),
                    ZUZ_R_PALIWA_AGR_N = table.Column<double>(type: "float", nullable: true),
                    ZUZ_R_PALIWA_OGRZ = table.Column<double>(type: "float", nullable: true),
                    ZUZ_T_PALIWA = table.Column<double>(type: "float", nullable: true),
                    ZUZ_T_PALIWA_AGR = table.Column<double>(type: "float", nullable: true),
                    ZUZ_T_PALIWA_AGR_N = table.Column<double>(type: "float", nullable: true),
                    ZUZ_T_PALIWA_OGRZ = table.Column<double>(type: "float", nullable: true),
                    PRZEKR_ZUZ_PALIWA = table.Column<double>(type: "float", nullable: true),
                    PRZEKR_ZUZ_PALIWA_AGR = table.Column<double>(type: "float", nullable: true),
                    PRZEKR_ZUZ_PALIWA_AGR_N = table.Column<double>(type: "float", nullable: true),
                    PRZEKR_ZUZ_PALIWA_OGRZ = table.Column<double>(type: "float", nullable: true),
                    SAMOCHOD_ID = table.Column<int>(type: "int", nullable: true),
                    SAMOCHOD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SAMOCHOD_NR_BOCZNY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NACZEPA_ID = table.Column<int>(type: "int", nullable: true),
                    NACZEPA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NACZEPA_NR_BOCZNY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KIEROWCA1_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA1 = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    KIEROWCA1_KM = table.Column<double>(type: "float", nullable: true),
                    KIEROWCA1_KM_UZ = table.Column<double>(type: "float", nullable: true),
                    KIEROWCA1_KM_PLACA = table.Column<double>(type: "float", nullable: true),
                    KIEROWCA1_OCENA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KIEROWCA2_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA2 = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    KIEROWCA2_KM = table.Column<double>(type: "float", nullable: true),
                    KIEROWCA2_KM_UZ = table.Column<double>(type: "float", nullable: true),
                    KIEROWCA2_KM_PLACA = table.Column<double>(type: "float", nullable: true),
                    KIEROWCA2_OCENA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KIEROWCA3_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA3 = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    KIEROWCA3_KM = table.Column<double>(type: "float", nullable: true),
                    KIEROWCA3_KM_UZ = table.Column<double>(type: "float", nullable: true),
                    KIEROWCA3_KM_PLACA = table.Column<double>(type: "float", nullable: true),
                    KIEROWCA3_OCENA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KARNET_TIR_ID = table.Column<int>(type: "int", nullable: true),
                    KARNET_TIR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TRASA = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    UWAGI = table.Column<string>(type: "text", nullable: true),
                    KRAJ_DOCELOWY = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    JEST_TACHOGRAF = table.Column<int>(type: "int", nullable: true),
                    ADR = table.Column<int>(type: "int", nullable: true),
                    STATUS = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    TONO_KM = table.Column<double>(type: "float", nullable: true),
                    SR_SPAL_WG_KARTY = table.Column<double>(type: "float", nullable: true),
                    LICZ_AUTO_KM = table.Column<int>(type: "int", nullable: true),
                    LICZ_AUTO_CZAS = table.Column<int>(type: "int", nullable: true),
                    LICZ_AUTO_PRC_K = table.Column<int>(type: "int", nullable: true),
                    LICZ_AUTO_ODL_Z = table.Column<int>(type: "int", nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    CZAS_PRACY_AGR_GPS = table.Column<double>(type: "float", nullable: true),
                    CZAS_PRACY_AGR_N_GPS = table.Column<double>(type: "float", nullable: true),
                    KM_GPS = table.Column<double>(type: "float", nullable: true),
                    STAN_ADBLUE_WYJAZD = table.Column<double>(type: "float", nullable: true),
                    STAN_ADBLUE_PRZYJAZD = table.Column<double>(type: "float", nullable: true),
                    ZAKUP_ADBLUE = table.Column<double>(type: "float", nullable: true),
                    ZUZ_R_ADBLUE = table.Column<double>(type: "float", nullable: true),
                    ZUZ_T_ADBLUE = table.Column<double>(type: "float", nullable: true),
                    ZUZ_GPS_PALIWA = table.Column<double>(type: "float", nullable: true),
                    ZUZ_GPS_PALIWA_AGR = table.Column<double>(type: "float", nullable: true),
                    ZUZ_GPS_PALIWA_AGR_N = table.Column<double>(type: "float", nullable: true),
                    ZUZ_GPS_PALIWA_OGRZ = table.Column<double>(type: "float", nullable: true),
                    ZUZ_GPS_ADBLUE = table.Column<double>(type: "float", nullable: true),
                    PRZEKR_ZUZ_ADBLUE = table.Column<double>(type: "float", nullable: true),
                    KM_LACZNIE_WG_ZLEC = table.Column<double>(type: "float", nullable: true),
                    KM_LADOWNE_WG_ZLEC = table.Column<double>(type: "float", nullable: true),
                    KM_PUSTE_WG_ZLEC = table.Column<double>(type: "float", nullable: true),
                    KIND = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    STREFA = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    STAN_LICZNIKA_MTG_N_WYJAZD = table.Column<double>(type: "float", nullable: true),
                    STAN_LICZNIKA_MTG_N_PRZYJAZD = table.Column<double>(type: "float", nullable: true),
                    KM_LACZNIE_WG_MAPY = table.Column<double>(type: "float", nullable: true),
                    KM_LADOWNE_WG_MAPY = table.Column<double>(type: "float", nullable: true),
                    KM_PUSTE_WG_MAPY = table.Column<double>(type: "float", nullable: true),
                    ZWIEKSZ_NORME = table.Column<int>(type: "int", nullable: true),
                    ZWIEKSZ_NORME_SAM = table.Column<double>(type: "float", nullable: true),
                    ZWIEKSZ_NORME_L = table.Column<int>(type: "int", nullable: true),
                    ZWIEKSZ_NORME_SAM_L = table.Column<double>(type: "float", nullable: true),
                    IL_M_ZAWY_KIEROWCA1 = table.Column<int>(type: "int", nullable: true),
                    IL_M_ZAWY_KIEROWCA2 = table.Column<int>(type: "int", nullable: true),
                    IL_M_ZAWY_KIEROWCA3 = table.Column<int>(type: "int", nullable: true),
                    IL_M_ZAWY_SUMA = table.Column<int>(type: "int", nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    MTH_WG_KARTY = table.Column<double>(type: "float", nullable: true),
                    PALIWO_ROZL = table.Column<int>(type: "int", nullable: true),
                    SR_CENA_PALIWA_START = table.Column<double>(type: "float", nullable: true),
                    SR_CENA_PALIWA_STOP = table.Column<double>(type: "float", nullable: true),
                    SR_CENA_ADBLUE_START = table.Column<double>(type: "float", nullable: true),
                    SR_CENA_ADBLUE_STOP = table.Column<double>(type: "float", nullable: true),
                    STATUS_POM = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    WYJAZD_POPRZEDNI_ID = table.Column<int>(type: "int", nullable: true),
                    WYJAZD_POPRZEDNI = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    WYJAZD_KOLEJNY_ID = table.Column<int>(type: "int", nullable: true),
                    WYJAZD_KOLEJNY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NIE_LICZ_1_DNIA = table.Column<int>(type: "int", nullable: true),
                    OKR_ROZL_ROK = table.Column<int>(type: "int", nullable: true),
                    OKR_ROZL_MIES = table.Column<int>(type: "int", nullable: true),
                    DATA_ZAMKN = table.Column<DateTime>(type: "datetime", nullable: true),
                    KM_PUSTY_KONTENER = table.Column<double>(type: "float", nullable: true),
                    BLOK_TELEMATYKE = table.Column<int>(type: "int", nullable: true),
                    LICZNIK_PALIWA_WYJAZD = table.Column<double>(type: "float", nullable: true),
                    LICZNIK_PALIWA_PRZYJAZD = table.Column<double>(type: "float", nullable: true),
                    PRZEKR_ZUZ_GPS_PAL = table.Column<double>(type: "float", nullable: true),
                    PRZEKR_ZUZ_GPS_PAL_AGR = table.Column<double>(type: "float", nullable: true),
                    PRZEKR_ZUZ_GPS_PAL_AGR_N = table.Column<double>(type: "float", nullable: true),
                    PRZEKR_ZUZ_GPS_PAL_OGRZ = table.Column<double>(type: "float", nullable: true),
                    PRZEKR_ZUZ_GPS_ADBLUE = table.Column<double>(type: "float", nullable: true),
                    IS_EXPORTED = table.Column<int>(type: "int", nullable: true),
                    IS_EXPORTED_DT = table.Column<DateTime>(type: "datetime", nullable: true),
                    KM_SERWIS = table.Column<double>(type: "float", nullable: true),
                    ZWIEKSZ_ZUZ_RZ = table.Column<double>(type: "float", nullable: true),
                    SR_CENA_WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WYJAZDY", x => x.ID_WYJAZDY);
                });

            migrationBuilder.CreateTable(
                name: "WYJAZDY_SLEDZENIE",
                columns: table => new
                {
                    ID_WYJAZDY_SLEDZENIE = table.Column<int>(type: "int", nullable: false),
                    WYJAZD_ID = table.Column<int>(type: "int", nullable: true),
                    WYJAZD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SAMOCHOD_ID = table.Column<int>(type: "int", nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    PRACOWNIK_ID = table.Column<int>(type: "int", nullable: true),
                    PRACOWNIK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TYP = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KRAJ = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    LICZNIK = table.Column<double>(type: "float", nullable: true),
                    WAGA = table.Column<double>(type: "float", nullable: true),
                    PALIWO = table.Column<double>(type: "float", nullable: true),
                    GEO_LONGI = table.Column<double>(type: "float", nullable: true),
                    GEO_LAT = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WYJAZDY_SLEDZENIE", x => x.ID_WYJAZDY_SLEDZENIE);
                });

            migrationBuilder.CreateTable(
                name: "WYJAZDY_ZDARZENIA",
                columns: table => new
                {
                    ID_WYJAZDY_ZDARZENIA = table.Column<int>(type: "int", nullable: false),
                    WYJAZD_ID = table.Column<int>(type: "int", nullable: true),
                    WYJAZD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TYP = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    MIEJSCE_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    LICZNIK = table.Column<double>(type: "float", nullable: true, comment: "końcowy stan licznika kilometrów"),
                    WAGA = table.Column<double>(type: "float", nullable: true),
                    JEDN_WAGI = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    PALETY = table.Column<double>(type: "float", nullable: true),
                    PALIWO = table.Column<double>(type: "float", nullable: true, comment: "zużyte paliwo w trakcie zdarzenia"),
                    TYP_Z = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PRZELADUNEK = table.Column<int>(type: "int", nullable: true),
                    DATA_RZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_RZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    DOD_OPIS_RZ = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPOZNIENIE = table.Column<double>(type: "float", nullable: true),
                    OPOZNIENIE_POWOD = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    LADUNEK = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    JM = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    GEO_LONGI = table.Column<double>(type: "float", nullable: true),
                    GEO_LAT = table.Column<double>(type: "float", nullable: true),
                    INNE_UWAGI = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    CZAS_TRWANIA = table.Column<double>(type: "float", nullable: true),
                    MAX_OPOZN = table.Column<double>(type: "float", nullable: true),
                    WYSYLAC_UWAGI = table.Column<int>(type: "int", nullable: true),
                    TEMP_PRZEWOZU_O = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PALETY_WYM = table.Column<double>(type: "float", nullable: true),
                    DATA_RZ_K = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_RZ_K = table.Column<DateTime>(type: "datetime", nullable: true),
                    PUSTY = table.Column<int>(type: "int", nullable: true),
                    LKM_START = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')", comment: "początkowy stan licznika kilometrów"),
                    SFM_OK = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "0/1 - przetworzone pzrez SFM"),
                    MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    GODZ_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    WAGA_ZESTAWU = table.Column<double>(type: "float", nullable: true),
                    DATA_RZ_P = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_RZ_P = table.Column<DateTime>(type: "datetime", nullable: true),
                    LADUNEK_ID = table.Column<int>(type: "int", nullable: true),
                    WAGA_RZ = table.Column<double>(type: "float", nullable: true),
                    TEMP_PRZEWOZU_O_RZ = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TELEFONY = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DOD_OPIS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DYSP_GODZ_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DYSP_GODZ_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    KOR_GODZ = table.Column<int>(type: "int", nullable: true),
                    KONTENER_ID = table.Column<int>(type: "int", nullable: true),
                    KONTENER = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KONTENER2_ID = table.Column<int>(type: "int", nullable: true),
                    KONTENER2 = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    TYP_TERM = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "typ terminala z telematyki"),
                    LP_PW = table.Column<int>(type: "int", nullable: true),
                    GEO_LONGI_RZ = table.Column<double>(type: "float", nullable: true),
                    GEO_LAT_RZ = table.Column<double>(type: "float", nullable: true),
                    ANUL_PW = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    PALIWO_LICZNIK = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')", comment: "końcowy stan licznika paliwa"),
                    PIETROWANIE = table.Column<int>(type: "int", nullable: true),
                    GF_DEF_ID = table.Column<int>(type: "int", nullable: true, comment: "id definicji geofencingu (referencja do tabeli GF_DEF)"),
                    ILOSC_RZ = table.Column<double>(type: "float", nullable: true),
                    SFM_EXT_ID = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "id zdarzenia w zewnętrznym systemie telematycznym"),
                    DLUGOSC = table.Column<double>(type: "float", nullable: true),
                    WYSOKOSC = table.Column<double>(type: "float", nullable: true),
                    SZEROKOSC = table.Column<double>(type: "float", nullable: true),
                    OBJ = table.Column<double>(type: "float", nullable: true),
                    LDM = table.Column<double>(type: "float", nullable: true),
                    EMAIL = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true),
                    KONTAKT = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    DATA_RZ_W = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_RZ_W = table.Column<DateTime>(type: "datetime", nullable: true),
                    REF_1 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_3 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_4 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_5 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ADRES = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true),
                    TRASA_KM = table.Column<int>(type: "int", nullable: true),
                    TRASA_KM_ROSN = table.Column<int>(type: "int", nullable: true),
                    TRASA_CZAS = table.Column<int>(type: "int", nullable: true),
                    TRASA_CZAS_ROSN = table.Column<int>(type: "int", nullable: true),
                    AWIZACJA_PRZED = table.Column<DateTime>(type: "datetime", nullable: true),
                    ETA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DisableETA = table.Column<int>(type: "int", nullable: true, comment: "Wyłączenie analizy ETA")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WYJAZDY_ZDARZENIA", x => x.ID_WYJAZDY_ZDARZENIA);
                });

            migrationBuilder.CreateTable(
                name: "WYJAZDY_ZLECENIA",
                columns: table => new
                {
                    ID_WYJAZDY_ZLECENIA = table.Column<int>(type: "int", nullable: false),
                    WYJAZD_ID = table.Column<int>(type: "int", nullable: true),
                    WYJAZD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TYP_ZLECENIA = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    ZLECENIE_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZLECENIODAWCA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SAMOCHOD_ID = table.Column<int>(type: "int", nullable: true),
                    SAMOCHOD = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    SAMOCHOD_NR_BOCZNY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NACZEPA_ID = table.Column<int>(type: "int", nullable: true),
                    NACZEPA = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    NACZEPA_NR_BOCZNY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KIEROWCA1_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA1 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KIEROWCA2_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KIEROWCA3_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA3 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    WAGA = table.Column<double>(type: "float", nullable: true),
                    ODLEGLOSC = table.Column<double>(type: "float", nullable: true),
                    PROCENT_KOSZTOW = table.Column<double>(type: "float", nullable: true),
                    FRACHT_DO_PROWIZJI = table.Column<double>(type: "float", nullable: true),
                    PRZYCHOD_WEWN = table.Column<double>(type: "float", nullable: true),
                    PRZYCHOD_WEWN_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    ODLEGLOSC_LAD = table.Column<double>(type: "float", nullable: true),
                    ODLEGLOSC_PUST = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WYJAZDY_ZLECENIA", x => x.ID_WYJAZDY_ZLECENIA);
                });

            migrationBuilder.CreateTable(
                name: "WYM_OPAK_ROZL",
                columns: table => new
                {
                    ID_WYM_OPAK_ROZL = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ZRODLO = table.Column<int>(type: "int", nullable: true),
                    PRZESYLKI_ID = table.Column<int>(type: "int", nullable: true),
                    LISTY_LINIOWE_ID = table.Column<int>(type: "int", nullable: true),
                    PRZEWOZNIK_ID = table.Column<int>(type: "int", nullable: true),
                    OPAKOWANIE_ID = table.Column<int>(type: "int", nullable: true),
                    ILOSC = table.Column<int>(type: "int", nullable: true),
                    OPAK_WYM = table.Column<int>(type: "int", nullable: true),
                    OPAK_WYM_DO_ROZL = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE_TYP = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    MIEJSCE_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    NADAWCA_ID = table.Column<int>(type: "int", nullable: true),
                    ODBIORCA_ID = table.Column<int>(type: "int", nullable: true),
                    KLIENT_ID = table.Column<int>(type: "int", nullable: true),
                    NR_ROZL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    POBRAL = table.Column<int>(type: "int", nullable: true),
                    ZDAL = table.Column<int>(type: "int", nullable: true),
                    NIE_ZWR = table.Column<int>(type: "int", nullable: true),
                    ROZL = table.Column<int>(type: "int", nullable: true),
                    BILANS_KLIENT = table.Column<int>(type: "int", nullable: true),
                    BILANS_NADAWCA = table.Column<int>(type: "int", nullable: true),
                    BILANS_ODBIORCA = table.Column<int>(type: "int", nullable: true),
                    BILANS_PRZEWOZNIK = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WYM_OPAK_ROZL", x => x.ID_WYM_OPAK_ROZL);
                });

            migrationBuilder.CreateTable(
                name: "WYM_PALET",
                columns: table => new
                {
                    ID_WYM_PALET = table.Column<int>(type: "int", nullable: false),
                    ZLECENIE_ID = table.Column<int>(type: "int", nullable: true, comment: "*nie używane*"),
                    LP = table.Column<int>(type: "int", nullable: true, comment: "*nie używane*"),
                    ZA_WY = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "*nie używane*"),
                    OPAKOWANIE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "*nie używane*"),
                    OPAKOWANIE_ID = table.Column<int>(type: "int", nullable: true, comment: "*nie używane*"),
                    PRZYJETO = table.Column<double>(type: "float", nullable: true, comment: "*nie używane*"),
                    WYDANO = table.Column<double>(type: "float", nullable: true, comment: "*nie używane*"),
                    ROZNICA = table.Column<double>(type: "float", nullable: true, comment: "*nie używane*")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WYM_PALET", x => x.ID_WYM_PALET);
                },
                comment: "*nie używana*");

            migrationBuilder.CreateTable(
                name: "WYM_PALET_2",
                columns: table => new
                {
                    ID_WYM_PALET_2 = table.Column<int>(type: "int", nullable: false),
                    ZLECENIE_ID = table.Column<int>(type: "int", nullable: true),
                    SYST_LP = table.Column<int>(type: "int", nullable: true),
                    SYST_TYP = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    ZA_WY = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    TYP = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    ILOSC_1 = table.Column<double>(type: "float", nullable: true),
                    ILOSC_2 = table.Column<double>(type: "float", nullable: true),
                    ILOSC_3 = table.Column<double>(type: "float", nullable: true),
                    ILOSC_4 = table.Column<double>(type: "float", nullable: true),
                    ILOSC_5 = table.Column<double>(type: "float", nullable: true),
                    OPAK_1 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OPAK_2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OPAK_3 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OPAK_4 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OPAK_5 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TYP_ZLEC = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    ZA_WY_ID = table.Column<int>(type: "int", nullable: true),
                    KOD_OPAK_1 = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KOD_OPAK_2 = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KOD_OPAK_3 = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KOD_OPAK_4 = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KOD_OPAK_5 = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    USR_TYP = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WYM_PALET_2", x => x.ID_WYM_PALET_2);
                });

            migrationBuilder.CreateTable(
                name: "WYM_PALET_DR",
                columns: table => new
                {
                    ID_WYM_PALET_DR = table.Column<int>(type: "int", nullable: false),
                    PACZKI_ID = table.Column<int>(type: "int", nullable: true),
                    PRZESYLKI_ID = table.Column<int>(type: "int", nullable: true),
                    LISTY_LINIOWE_ID = table.Column<int>(type: "int", nullable: true),
                    OPAKOWANIE = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPAKOWANIE_KOD = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    ILOSC_OPAK_ZA = table.Column<int>(type: "int", nullable: true),
                    ILOSC_OPAK_WY = table.Column<int>(type: "int", nullable: true),
                    ILOSC_OPAK_ROZN = table.Column<int>(type: "int", nullable: true),
                    ILOSC_KP = table.Column<int>(type: "int", nullable: true),
                    STOPIEN_ZUZYCIA_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    STOPIEN_ZUZYCIA = table.Column<double>(type: "float", nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WYM_PALET_DR", x => x.ID_WYM_PALET_DR);
                });

            migrationBuilder.CreateTable(
                name: "WYNAGR_DANE",
                columns: table => new
                {
                    ID_WYNAGR_DANE = table.Column<int>(type: "int", nullable: false),
                    ROK = table.Column<int>(type: "int", nullable: true),
                    MIESIAC = table.Column<int>(type: "int", nullable: true),
                    KURS_DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    KURS_TABELA_ID = table.Column<int>(type: "int", nullable: true),
                    KURS_TABELA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KURS_TABELA_TYP = table.Column<int>(type: "int", nullable: true),
                    KURS_RODZAJ = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    STATUS = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    DATA_ZAMKNIECIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    OPIS = table.Column<string>(type: "text", nullable: true),
                    WYJAZDY = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    WYJAZDY_WG_DATY = table.Column<int>(type: "int", nullable: true),
                    ZLECENIA = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    ZLECENIA_WG_DATY = table.Column<int>(type: "int", nullable: true),
                    OST_EDYCJA_DT = table.Column<DateTime>(type: "datetime", nullable: true),
                    OST_EDYCJA_USER = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WYNAGR_DANE", x => x.ID_WYNAGR_DANE);
                });

            migrationBuilder.CreateTable(
                name: "WYNAGR_DANE_POZ",
                columns: table => new
                {
                    ID_WYNAGR_DANE_POZ = table.Column<int>(type: "int", nullable: false),
                    WYNAGR_DANE_ID = table.Column<int>(type: "int", nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    KIEROWCA_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TYP_POZ = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    POZ_ID = table.Column<int>(type: "int", nullable: true),
                    POZ_NR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    WYJAZD_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    WYJAZD_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    LP_KIEROWCY = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    LP_KIEROWCY_ORG = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    UCZEN = table.Column<int>(type: "int", nullable: true),
                    KM_K = table.Column<double>(type: "float", nullable: true),
                    KM_Z = table.Column<double>(type: "float", nullable: true),
                    KM_LAD_K = table.Column<double>(type: "float", nullable: true),
                    KM_LAD_Z = table.Column<double>(type: "float", nullable: true),
                    KM_PUST_K = table.Column<double>(type: "float", nullable: true),
                    KM_PUST_Z = table.Column<double>(type: "float", nullable: true),
                    KM_ADR = table.Column<double>(type: "float", nullable: true),
                    KM_PREMIA_TABOR = table.Column<double>(type: "float", nullable: true),
                    KM_PONAD_NORME = table.Column<double>(type: "float", nullable: true),
                    KG_NIEDOWAZONE = table.Column<double>(type: "float", nullable: true),
                    KM_WG_MAPY = table.Column<double>(type: "float", nullable: true),
                    KM_PUST_WG_MAPY = table.Column<double>(type: "float", nullable: true),
                    KM_LAD_WG_MAPY = table.Column<double>(type: "float", nullable: true),
                    M_ZA_WY_K = table.Column<double>(type: "float", nullable: true),
                    M_ZA_WY_Z = table.Column<double>(type: "float", nullable: true),
                    KM_UZNANE_K = table.Column<double>(type: "float", nullable: true),
                    KM_UZNANE_Z = table.Column<double>(type: "float", nullable: true),
                    KM_DO_PLACY_K = table.Column<double>(type: "float", nullable: true),
                    KM_DO_PLACY_Z = table.Column<double>(type: "float", nullable: true),
                    DODATKI = table.Column<double>(type: "float", nullable: true),
                    OBCIAZENIA = table.Column<double>(type: "float", nullable: true),
                    OBCIAZENIA2 = table.Column<double>(type: "float", nullable: true),
                    OBCIAZENIA_N = table.Column<double>(type: "float", nullable: true),
                    OBCIAZENIA2_N = table.Column<double>(type: "float", nullable: true),
                    DIETY = table.Column<double>(type: "float", nullable: true),
                    FRACHT = table.Column<double>(type: "float", nullable: true),
                    FRACHT_FV = table.Column<double>(type: "float", nullable: true),
                    FRACHT_FV_TR = table.Column<double>(type: "float", nullable: true),
                    FRACHT_FV_SP = table.Column<double>(type: "float", nullable: true),
                    FRACHT_ROZ_KIER = table.Column<double>(type: "float", nullable: true),
                    ILE_ZLEC = table.Column<double>(type: "float", nullable: true),
                    DNI_ZLEC = table.Column<double>(type: "float", nullable: true),
                    DNI_WYJAZDU = table.Column<double>(type: "float", nullable: true),
                    DNI_URLOPU = table.Column<double>(type: "float", nullable: true),
                    KRAJ_DOCELOWY = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    ST_KM_SPEC_K = table.Column<double>(type: "float", nullable: true),
                    ST_KM_SPEC_Z = table.Column<double>(type: "float", nullable: true),
                    PRZEPAL = table.Column<double>(type: "float", nullable: true),
                    PRZEPAL_C = table.Column<double>(type: "float", nullable: true),
                    PRZEPAL_AC = table.Column<double>(type: "float", nullable: true),
                    PRZEPAL_N = table.Column<double>(type: "float", nullable: true),
                    PRZEPAL_AN = table.Column<double>(type: "float", nullable: true),
                    PRZEPAL_ADBLUE = table.Column<double>(type: "float", nullable: true),
                    RW = table.Column<double>(type: "float", nullable: true),
                    ST_ZA_OSZCZ = table.Column<double>(type: "float", nullable: true),
                    KM_OSZCZ = table.Column<double>(type: "float", nullable: true),
                    PARAMETRY = table.Column<string>(type: "text", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WYNAGR_DANE_POZ", x => x.ID_WYNAGR_DANE_POZ);
                });

            migrationBuilder.CreateTable(
                name: "WYNAGR_DOD_OSZCZ",
                columns: table => new
                {
                    ID_WYNAGR_DOD_OSZCZ = table.Column<int>(type: "int", nullable: false),
                    PROG_OD = table.Column<double>(type: "float", nullable: true),
                    PROG_DO = table.Column<double>(type: "float", nullable: true),
                    STAWKA_KM = table.Column<double>(type: "float", nullable: true),
                    OPIS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WYNAGR_DOD_OSZCZ", x => x.ID_WYNAGR_DOD_OSZCZ);
                });

            migrationBuilder.CreateTable(
                name: "WYNAGR_LP",
                columns: table => new
                {
                    ID_WYNAGR_LP = table.Column<int>(type: "int", nullable: false),
                    ROK = table.Column<int>(type: "int", nullable: true),
                    MIESIAC = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    WYNAGR_SCHEMAT_ID = table.Column<int>(type: "int", nullable: true),
                    WYNAGR_SCHEMAT = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    STATUS = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    DATA_ZAMKNIECIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    OPIS = table.Column<string>(type: "text", nullable: true),
                    SUMA = table.Column<double>(type: "float", nullable: true),
                    FAKTURY_ID = table.Column<int>(type: "int", nullable: true),
                    FAKTURY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    RODZ_KOSZTOW = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PROCEDURA_DB_DEKR = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PROCEDURA_DB_DEKR_INFO = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    OST_EDYCJA_DT = table.Column<DateTime>(type: "datetime", nullable: true),
                    OST_EDYCJA_USER = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WYNAGR_LP", x => x.ID_WYNAGR_LP);
                });

            migrationBuilder.CreateTable(
                name: "WYNAGR_LP_POZ",
                columns: table => new
                {
                    ID_WYNAGR_LP_POZ = table.Column<int>(type: "int", nullable: false),
                    WYNAGR_LP_ID = table.Column<int>(type: "int", nullable: true),
                    WYNAGR_SCHEMAT_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PARAMETRY = table.Column<string>(type: "text", nullable: true),
                    OPIS = table.Column<string>(type: "text", nullable: true),
                    SKRYPT = table.Column<string>(type: "text", nullable: true),
                    MNOZNIK_SOLO = table.Column<double>(type: "float", nullable: true),
                    MNOZNIK_I = table.Column<double>(type: "float", nullable: true),
                    MNOZNIK_II = table.Column<double>(type: "float", nullable: true),
                    MNOZNIK = table.Column<double>(type: "float", nullable: true),
                    SUMA_WYLICZONA = table.Column<double>(type: "float", nullable: true),
                    SUMA_DO_WYPLATY = table.Column<double>(type: "float", nullable: true),
                    LICZ_TYLKO_RAZ = table.Column<int>(type: "int", nullable: true),
                    DEKRET_NA_PW = table.Column<int>(type: "int", nullable: true),
                    DEKRET_NA_PW_ALG = table.Column<int>(type: "int", nullable: true),
                    DEKRET_NA_ZLEC = table.Column<int>(type: "int", nullable: true),
                    DEKRET_NA_ZLEC_ALG = table.Column<int>(type: "int", nullable: true),
                    RODZ_KOSZTOW = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PROCEDURA_DB = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PROCEDURA_DB_INFO = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WYNAGR_LP_POZ", x => x.ID_WYNAGR_LP_POZ);
                });

            migrationBuilder.CreateTable(
                name: "WYNAGR_SCHEMAT",
                columns: table => new
                {
                    ID_WYNAGR_SCHEMAT = table.Column<int>(type: "int", nullable: false),
                    NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPIS = table.Column<string>(type: "text", nullable: true),
                    AKTYWNY = table.Column<int>(type: "int", nullable: true),
                    RODZ_KOSZTOW = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PROCEDURA_DB_DEKR = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WYNAGR_SCHEMAT", x => x.ID_WYNAGR_SCHEMAT);
                });

            migrationBuilder.CreateTable(
                name: "WYNAGR_SCHEMAT_POZ",
                columns: table => new
                {
                    ID_WYNAGR_SCHEMAT_POZ = table.Column<int>(type: "int", nullable: false),
                    WYNAGR_SCHEMAT_ID = table.Column<int>(type: "int", nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPIS = table.Column<string>(type: "text", nullable: true),
                    SKRYPT = table.Column<string>(type: "text", nullable: true),
                    MNOZNIK_SOLO = table.Column<double>(type: "float", nullable: true),
                    MNOZNIK_I = table.Column<double>(type: "float", nullable: true),
                    MNOZNIK_II = table.Column<double>(type: "float", nullable: true),
                    LICZ_TYLKO_RAZ = table.Column<int>(type: "int", nullable: true),
                    DEKRET_NA_PW = table.Column<int>(type: "int", nullable: true),
                    DEKRET_NA_PW_ALG = table.Column<int>(type: "int", nullable: true),
                    DEKRET_NA_ZLEC = table.Column<int>(type: "int", nullable: true),
                    DEKRET_NA_ZLEC_ALG = table.Column<int>(type: "int", nullable: true),
                    RODZ_KOSZTOW = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PROCEDURA_DB = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    RECZNA = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WYNAGR_SCHEMAT_POZ", x => x.ID_WYNAGR_SCHEMAT_POZ);
                });

            migrationBuilder.CreateTable(
                name: "WYNAGR_STAZE",
                columns: table => new
                {
                    ID_WYNAGR_STAZE = table.Column<int>(type: "int", nullable: false),
                    STAZ_OD = table.Column<int>(type: "int", nullable: true),
                    STAZ_DO = table.Column<int>(type: "int", nullable: true),
                    STAWKA_DOD = table.Column<double>(type: "float", nullable: true),
                    STALA_KWOTA = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WYNAGR_STAZE", x => x.ID_WYNAGR_STAZE);
                });

            migrationBuilder.CreateTable(
                name: "WYNAGRODZENIA",
                columns: table => new
                {
                    ID_WYNAGRODZENIA = table.Column<int>(type: "int", nullable: false),
                    ID_KIEROWCY = table.Column<int>(type: "int", nullable: true),
                    DATA_ZATRUDNIENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_ZWOLNIENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    TRYB_PRACY = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WYNAGRODZENIA", x => x.ID_WYNAGRODZENIA);
                });

            migrationBuilder.CreateTable(
                name: "WYNAGRODZENIA_POZ",
                columns: table => new
                {
                    ID_WYNAGRODZENIA_POZ = table.Column<int>(type: "int", nullable: false),
                    ID_KIEROWCY = table.Column<int>(type: "int", nullable: true),
                    DATA_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    KWOTA = table.Column<double>(type: "float", nullable: true),
                    TYP = table.Column<int>(type: "int", nullable: true),
                    ETAT = table.Column<double>(type: "float", nullable: true),
                    LIMIT_DO_NADGODZIN = table.Column<int>(type: "int", nullable: true),
                    RYCZALT_NOCKI = table.Column<double>(type: "float", nullable: true),
                    RYCZALT_DYZURY = table.Column<double>(type: "float", nullable: true),
                    RYCZALT_NADGODZINY = table.Column<double>(type: "float", nullable: true),
                    RYCZALT_DYZUR = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WYNAGRODZENIA_POZ", x => x.ID_WYNAGRODZENIA_POZ);
                });

            migrationBuilder.CreateTable(
                name: "WYNAGRODZENIE_MIN",
                columns: table => new
                {
                    ID_WYNAGRODZENIE_MIN = table.Column<int>(type: "int", nullable: false),
                    DATA_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    KWOTA = table.Column<double>(type: "float", nullable: true),
                    PROCENT_ZA_NOCNE = table.Column<double>(type: "float", nullable: true),
                    PROCENT_ZA_DYZUR = table.Column<double>(type: "float", nullable: true),
                    LIMIT_NADGODZIN = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WYNAGRODZENIE_MIN", x => x.ID_WYNAGRODZENIE_MIN);
                });

            migrationBuilder.CreateTable(
                name: "WYP_TABORU",
                columns: table => new
                {
                    ID_WYP_TABORU = table.Column<int>(type: "int", nullable: false),
                    LP = table.Column<int>(type: "int", nullable: true, comment: "Lp"),
                    OPIS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Opis"),
                    DO_PLANOWANIA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy element służy do planowania"),
                    DO_ROZLICZENIA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy element służy do rozliczenia"),
                    TYP = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "WYM.WYP, TYP.ZAB, SP.LAD"),
                    DROBN_WER_P = table.Column<int>(type: "int", nullable: true),
                    DROBN_WER_L = table.Column<int>(type: "int", nullable: true),
                    DROBN_WER_D = table.Column<int>(type: "int", nullable: true),
                    WWW = table.Column<int>(type: "int", nullable: true),
                    SYMBOL = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    DictionaryId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TextId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    VISIBLE = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('1')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WYP_TABORU", x => x.ID_WYP_TABORU);
                },
                comment: "Słownik wyposażenia pojazdów");

            migrationBuilder.CreateTable(
                name: "WYP_TABORU_ZAMIENNIKI",
                columns: table => new
                {
                    ID_WYP_TABORU_ZAMIENNIKI = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    WYP_TABORU_ID = table.Column<int>(type: "int", nullable: true),
                    ZAMIENNIK_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WYP_TABORU_ZAMIENNIKI", x => x.ID_WYP_TABORU_ZAMIENNIKI);
                });

            migrationBuilder.CreateTable(
                name: "WYP_TECZKI_TABORU",
                columns: table => new
                {
                    ID_WYP_TECZKI_TABORU = table.Column<int>(type: "int", nullable: false),
                    LP = table.Column<int>(type: "int", nullable: true, comment: "Lp"),
                    OPIS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Opis"),
                    DO_PLANOWANIA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy element służy do planowania"),
                    DO_ROZLICZENIA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy element służy do rozliczenia"),
                    DictionaryId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TextId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    VISIBLE = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('1')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WYP_TECZKI_TABORU", x => x.ID_WYP_TECZKI_TABORU);
                },
                comment: "Słownik wyposażenia teczek pojazdów");

            migrationBuilder.CreateTable(
                name: "WYR_RODZ_KOSZTOW",
                columns: table => new
                {
                    ID_WYR_RODZ_KOSZTOW = table.Column<int>(type: "int", nullable: false),
                    KOD = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Kod wyróżnika"),
                    OPIS = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true, comment: "Opis wyróżnika"),
                    UZYWAJ_W_LICZN_SZCZ = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy używane w licznikach szczegółowych"),
                    DictionaryId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TextId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WYR_RODZ_KOSZTOW", x => x.ID_WYR_RODZ_KOSZTOW);
                },
                comment: "Słownik wyróżników rodzajów kosztów");

            migrationBuilder.CreateTable(
                name: "WYSYLKA_JPK",
                columns: table => new
                {
                    ID_WYSYLKA_JPK = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    OPIS = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true),
                    CEL = table.Column<int>(type: "int", nullable: true),
                    PLIK = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true),
                    SYMBOL_US = table.Column<string>(type: "varchar(4)", unicode: false, maxLength: 4, nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DATA_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    SERWER = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true),
                    NUMER_REF = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KOD_STATUSU = table.Column<int>(type: "int", nullable: true),
                    STATUSY_JPK_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WYSYLKA_JPK", x => x.ID_WYSYLKA_JPK);
                });

            migrationBuilder.CreateTable(
                name: "WZORCE_CMR",
                columns: table => new
                {
                    ID_WZORCE_CMR = table.Column<int>(type: "int", nullable: false),
                    NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KRAJOWY = table.Column<int>(type: "int", nullable: true),
                    KLIENT_ID = table.Column<int>(type: "int", nullable: true),
                    KLIENT_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    DATA_ZALADUNKU = table.Column<DateTime>(type: "datetime", nullable: true),
                    PRZEWOZNIK_ID = table.Column<int>(type: "int", nullable: true),
                    PRZEWOZNIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    XML = table.Column<string>(type: "text", nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_WZORCE_CMR", x => x.ID_WZORCE_CMR);
                });

            migrationBuilder.CreateTable(
                name: "xmldata",
                schema: "rest",
                columns: table => new
                {
                    xmldataid = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    xmldata = table.Column<string>(type: "xml", nullable: true),
                    createdate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())"),
                    Method = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_xmldata", x => x.xmldataid);
                });

            migrationBuilder.CreateTable(
                name: "ZABEZPIECZENIA",
                columns: table => new
                {
                    ID_ZABEZPIECZENIA = table.Column<int>(type: "int", nullable: false),
                    NUMER = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    RODZAJ = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    AKTYWNE = table.Column<int>(type: "int", nullable: true),
                    WAZNEDO = table.Column<DateTime>(type: "datetime", nullable: true),
                    KWOTA = table.Column<double>(type: "float", nullable: true),
                    OBCIAZENIE = table.Column<double>(type: "float", nullable: true),
                    WOLNA = table.Column<double>(type: "float", nullable: true),
                    OBCIAZENIE_MAKS = table.Column<double>(type: "float", nullable: true),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    UWAGI = table.Column<string>(type: "text", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZABEZPIECZENIA", x => x.ID_ZABEZPIECZENIA);
                });

            migrationBuilder.CreateTable(
                name: "ZABEZPIECZENIA_POZ",
                columns: table => new
                {
                    ID_ZABEZPIECZENIA_POZ = table.Column<int>(type: "int", nullable: false),
                    ZABEZPIECZENIE_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE_ID = table.Column<int>(type: "int", nullable: true),
                    KWOTA_VAT = table.Column<double>(type: "float", nullable: true),
                    KWOTA_CLO = table.Column<double>(type: "float", nullable: true),
                    KWOTA_INNE = table.Column<double>(type: "float", nullable: true),
                    KWOTA = table.Column<double>(type: "float", nullable: true),
                    ZAPLACONE = table.Column<int>(type: "int", nullable: true),
                    ZAPLACONE_DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    ANULOWANE = table.Column<int>(type: "int", nullable: true),
                    ZAPLACONO = table.Column<double>(type: "float", nullable: true),
                    KWOTA_B00 = table.Column<double>(type: "float", nullable: true),
                    KWOTA_A00 = table.Column<double>(type: "float", nullable: true),
                    KWOTA_A10 = table.Column<double>(type: "float", nullable: true),
                    KWOTA_1A1 = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZABEZPIECZENIA_POZ", x => x.ID_ZABEZPIECZENIA_POZ);
                });

            migrationBuilder.CreateTable(
                name: "ZADANIA",
                columns: table => new
                {
                    ID_ZADANIA = table.Column<int>(type: "int", nullable: false),
                    ZLECEXT = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZOD = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZDO = table.Column<DateTime>(type: "datetime", nullable: true),
                    INFO = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    ZA_POI_ID = table.Column<int>(type: "int", nullable: true),
                    ZA_POI_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    WY_POI_ID = table.Column<int>(type: "int", nullable: true),
                    WY_POI_REGION = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true),
                    WY_POI_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    WY_POI_OPIS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    PLANCALK = table.Column<short>(type: "smallint", nullable: true),
                    RODZAJ = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    ILOSC = table.Column<double>(type: "float", nullable: true),
                    WAGA = table.Column<double>(type: "float", nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true),
                    TYPODBIORCY = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    KLASAPOJAZDU = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    ZBIORNIK = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    STATUS = table.Column<short>(type: "smallint", nullable: true),
                    ZA_DT = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZA_GODZOD = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZA_GODZDO = table.Column<DateTime>(type: "datetime", nullable: true),
                    GESTOSC = table.Column<double>(type: "float", nullable: true, comment: "gęstość paliwa 1 15°C"),
                    RZ_DT_ZA = table.Column<DateTime>(type: "datetime", nullable: true),
                    RZ_DT_WY = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZADANIA", x => x.ID_ZADANIA);
                });

            migrationBuilder.CreateTable(
                name: "ZADANIA_ZA_WY",
                columns: table => new
                {
                    ID_ZADANIA_ZA_WY = table.Column<int>(type: "int", nullable: false),
                    ZADANIA_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE_ZA_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE_WY_ID = table.Column<int>(type: "int", nullable: true),
                    ILOSC = table.Column<double>(type: "float", nullable: true),
                    WAGA = table.Column<double>(type: "float", nullable: true),
                    KOMORA = table.Column<short>(type: "smallint", nullable: true),
                    ZBIORNIK = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    K_ZA_LKM = table.Column<int>(type: "int", nullable: true),
                    K_ZA_DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    K_ZA_GODZOD = table.Column<DateTime>(type: "datetime", nullable: true),
                    K_ZA_GODZDO = table.Column<DateTime>(type: "datetime", nullable: true),
                    K_ZA_ILOSC = table.Column<int>(type: "int", nullable: true),
                    K_ZA_ILOSC_15 = table.Column<int>(type: "int", nullable: true),
                    K_ZA_GESTOSC_15 = table.Column<double>(type: "float", nullable: true),
                    K_ZA_MASA = table.Column<double>(type: "float", nullable: true),
                    K_ZA_TEMP_ZAL = table.Column<double>(type: "float", nullable: true),
                    K_WY_LKM = table.Column<int>(type: "int", nullable: true),
                    K_WY_DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    K_WY_GODZOD = table.Column<DateTime>(type: "datetime", nullable: true),
                    K_WY_GODZDO = table.Column<DateTime>(type: "datetime", nullable: true),
                    K_WY_TEMP = table.Column<double>(type: "float", nullable: true),
                    K_WY_ILOSC = table.Column<double>(type: "float", nullable: true),
                    K_WY_ILOSC15 = table.Column<double>(type: "float", nullable: true),
                    Z_TEMPPRZED = table.Column<double>(type: "float", nullable: true),
                    Z_ILOSCPRZED = table.Column<double>(type: "float", nullable: true),
                    Z_ILOSCPRZED15 = table.Column<double>(type: "float", nullable: true),
                    Z_TEMPPO = table.Column<double>(type: "float", nullable: true),
                    Z_ILOSCPO = table.Column<double>(type: "float", nullable: true),
                    Z_ILOSCPO15 = table.Column<double>(type: "float", nullable: true),
                    Z_SPRZEDAZ = table.Column<double>(type: "float", nullable: true),
                    Z_DOSTAWALITRY = table.Column<double>(type: "float", nullable: true),
                    Z_DOSTAWALITRY15 = table.Column<double>(type: "float", nullable: true),
                    Z_ROZNICA = table.Column<double>(type: "float", nullable: true),
                    Z_ROZNICA15 = table.Column<double>(type: "float", nullable: true),
                    Z_ZBIORNIK = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZADANIA_ZA_WY", x => x.ID_ZADANIA_ZA_WY);
                });

            migrationBuilder.CreateTable(
                name: "ZALACZNIKI",
                columns: table => new
                {
                    ID_ZALACZNIKI = table.Column<int>(type: "int", nullable: false),
                    OBIEKT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Nazwa tabeli do której odnosi się relacja"),
                    OBIEKT_ID_FLD_NAME = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Nazwa pola po którym zbudowana jest relacja"),
                    OBIEKT_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do obiektu"),
                    RODZAJ = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Rodzaj załącznika"),
                    STATUS = table.Column<int>(type: "int", nullable: true, comment: "Status załącznika"),
                    ORG_KATALOG = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Oryginalny katalog skąd pobrany został załącznik"),
                    ORG_NAZWA_PLIKU = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Oryginalna nazwa pliku załącznika"),
                    WEWN_KATALOG = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Wewnętrzny katalog gdzie zapisany został załącznik"),
                    WEWN_NAZWA_PLIKU = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Wewnętrzna nazwa pliku załącznika"),
                    ROZSZEZENIE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Rozszerzenie pliku"),
                    OPIS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Opis załacznika"),
                    UZYTKOWNIK = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Użytkownik który dodał załącznik"),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data dodania załącznika"),
                    GODZ = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina dodania załącznika"),
                    EDYCJA = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy załącznik jest edytowany"),
                    OBIEKT2_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja dla rejestrowania załaczników dla detali"),
                    HTTP = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy dokument http"),
                    HTTP_ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Adres do załacznikia http"),
                    IS_EXPORTED = table.Column<int>(type: "int", nullable: true, comment: "Czy załącznik został wyeksportowany"),
                    IS_EXPORTED_DT = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Dataczas eksportu"),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    EXT_SCAN_DT = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Dataczas skanu poza systemem"),
                    CR_FORMATKA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa formatki CR - wydruku"),
                    DT_MODIFY = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Dataczas modyfikacji obiektu"),
                    NR_PUDLA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Lokalizacja gdzie odkładane są dokumenty papierowe"),
                    FILELOCATION = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Lokalizacja zapisu pliku"),
                    Email = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Czy wysłany emailem"),
                    OBIEKT2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Nazwa tabeli do której odnosi się relacja dla detali"),
                    OBIEKT2_ID_FLD_NAME = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Nazwa pola po którym zbudowana jest relacja dla detali"),
                    MASZONSKI_MASTER_ZALACZNIK_ID = table.Column<int>(type: "int", nullable: true),
                    FTP = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Czy wysłany na serwer ftp")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZALACZNIKI", x => x.ID_ZALACZNIKI);
                },
                comment: "Załączniki systemowe");

            migrationBuilder.CreateTable(
                name: "ZALACZNIKI_RODZAJ",
                columns: table => new
                {
                    ID_ZALACZNIKI_RODZAJ = table.Column<int>(type: "int", nullable: false),
                    NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "Rodzaj załącznika"),
                    BEZ_EMAIL = table.Column<int>(type: "int", nullable: true, comment: "Nie wysyłaj w mailach"),
                    SYMBOL_EXT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Symbol zewnętrzny"),
                    FTP_KONTRAHENTA = table.Column<int>(type: "int", nullable: true, comment: "Uwzględniaj w wysyłkach ftp"),
                    WWW_K = table.Column<int>(type: "int", nullable: true, comment: "Dostępny na WWW - klient"),
                    WWW_P = table.Column<int>(type: "int", nullable: true, comment: "Dostępny na WWW - przewoźnik"),
                    DictionaryId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TextId = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    VISIBLE = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('1')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZALACZNIKI_RODZAJ", x => x.ID_ZALACZNIKI_RODZAJ);
                },
                comment: "Załączniki systemowe");

            migrationBuilder.CreateTable(
                name: "ZALACZNIKI_UPRAWN",
                columns: table => new
                {
                    ID_ZALACZNIKI_UPRAWN = table.Column<int>(type: "int", nullable: false),
                    ZALACZNIKI_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do załącznika"),
                    OBJ_TYP = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true, comment: "Typ obiektu (U[ser], P[rofil])"),
                    OBJ_ID = table.Column<int>(type: "int", nullable: true, comment: "ID obiektu")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZALACZNIKI_UPRAWN", x => x.ID_ZALACZNIKI_UPRAWN);
                },
                comment: "Załączniki systemowe - uprawnienia");

            migrationBuilder.CreateTable(
                name: "ZALICZKI",
                columns: table => new
                {
                    ID_ZALICZKI = table.Column<int>(type: "int", nullable: false),
                    NR_ZALICZKI = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_ZALICZKI_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    NR_ZALICZKI_ROK = table.Column<int>(type: "int", nullable: true),
                    NR_ZALICZKI_MIES = table.Column<int>(type: "int", nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    DELEGACJA_ID = table.Column<int>(type: "int", nullable: true),
                    DELEGACJA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PRACOWNIK_ID = table.Column<int>(type: "int", nullable: true),
                    PRACOWNIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    WALUTA_ZALICZKI = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KWOTA_ZALICZKI = table.Column<double>(type: "float", nullable: true),
                    KWOTA_WYDANA_U = table.Column<double>(type: "float", nullable: true),
                    KWOTA_WYDANA_N = table.Column<double>(type: "float", nullable: true),
                    DO_ZWROTU_WYPLATY = table.Column<double>(type: "float", nullable: true),
                    WPLACONO = table.Column<double>(type: "float", nullable: true),
                    SALDO = table.Column<double>(type: "float", nullable: true),
                    ROZLICZONO = table.Column<int>(type: "int", nullable: true),
                    DATA_ROZLICZENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    KURSY_WALUT_ID = table.Column<int>(type: "int", nullable: true),
                    KURSY_WALUT = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    KURS = table.Column<double>(type: "float", nullable: true),
                    KURSY_WALUT_DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    KWOTA_PLN = table.Column<double>(type: "float", nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    STATUS = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    RAP_KASOWE_OPER_WY_ID = table.Column<int>(type: "int", nullable: true),
                    RAP_KASOWE_OPER_WY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    RAP_KASOWE_OPER_ROZ_ID = table.Column<int>(type: "int", nullable: true),
                    RAP_KASOWE_OPER_ROZ = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KURS_UZGODNIONY = table.Column<int>(type: "int", nullable: true),
                    FORMA_WYPLATY = table.Column<int>(type: "int", nullable: true),
                    DIETA = table.Column<int>(type: "int", nullable: true),
                    SLOT_1 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_2 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_3 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_4 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_5 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZALICZKI", x => x.ID_ZALICZKI);
                });

            migrationBuilder.CreateTable(
                name: "ZALICZKI_FAKTURY",
                columns: table => new
                {
                    ID_ZALICZKI_FAKTURY = table.Column<int>(type: "int", nullable: false),
                    ZALICZKI_ID = table.Column<int>(type: "int", nullable: true),
                    FAKTURY_ID = table.Column<int>(type: "int", nullable: true),
                    KWOTA = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZALICZKI_FAKTURY", x => x.ID_ZALICZKI_FAKTURY);
                });

            migrationBuilder.CreateTable(
                name: "ZALICZKI_SFM_Costs",
                columns: table => new
                {
                    ID_ZALICZKI_SFM_Costs = table.Column<int>(type: "int", nullable: false),
                    ZALICZKI_ID = table.Column<int>(type: "int", nullable: true),
                    SFM_Costs_ID = table.Column<int>(type: "int", nullable: true),
                    KWOTA = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZALICZKI_SFM_Costs", x => x.ID_ZALICZKI_SFM_Costs);
                });

            migrationBuilder.CreateTable(
                name: "Zdarzenia",
                schema: "opti",
                columns: table => new
                {
                    SessionId = table.Column<int>(type: "int", nullable: true),
                    MacierzZleceniaTaborId = table.Column<int>(type: "int", nullable: true),
                    mode = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    driver1 = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    dt = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    time = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    info = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "ZDARZENIA",
                columns: table => new
                {
                    ID_ZDARZENIA = table.Column<int>(type: "int", nullable: false),
                    TYP = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    REC_TYPE = table.Column<int>(type: "int", nullable: true),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    TABOR = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    ADR_ID = table.Column<int>(type: "int", nullable: true),
                    ADR_ULICA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ADR_MIEJSC = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ADR_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    ADR_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    ADR_LON = table.Column<double>(type: "float", nullable: true),
                    ADR_LAT = table.Column<double>(type: "float", nullable: true),
                    DT_START = table.Column<DateTime>(type: "datetime", nullable: true),
                    DT_STAYTIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    DT_REAL_START = table.Column<DateTime>(type: "datetime", nullable: true),
                    DT_REAL_STAYTIME = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZLECENIE_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    WYJAZD_ID = table.Column<int>(type: "int", nullable: true),
                    WYJAZD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    LIST_LINIOWY_ID = table.Column<int>(type: "int", nullable: true),
                    LIST_LINIOWY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    WAGA = table.Column<double>(type: "float", nullable: true),
                    JEDN_WAGI = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    LICZNIK = table.Column<double>(type: "float", nullable: true),
                    ILOSC = table.Column<double>(type: "float", nullable: true),
                    JM = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    INNE_UWAGI = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true),
                    AUTOMAT = table.Column<short>(type: "smallint", nullable: true),
                    GEOCODE = table.Column<int>(type: "int", nullable: true),
                    ID_OBJ = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "typ obiektu SPEED"),
                    ID_REC = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "id obiektu SPEED (patrz ID_OBJ)")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZDARZENIA", x => x.ID_ZDARZENIA);
                },
                comment: "ZDARZENIA DO OBIEKTÓW");

            migrationBuilder.CreateTable(
                name: "ZdarzeniaIStatystyki",
                schema: "opti",
                columns: table => new
                {
                    SessionId = table.Column<int>(type: "int", nullable: true),
                    MacierzZleceniaTaborId = table.Column<int>(type: "int", nullable: true),
                    mode = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    driver1 = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    dt = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    time = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    info = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    driver_id = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    calculate_dt = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    start_of_week_dt = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    start_of_day_dt = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    last_activity_dt = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    last_tacho_dt = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    last_tacho_status = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    last_tacho_time = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    drive_10h_used = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    drive_10h_left = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    drive_10h_max = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    rest_9h_used = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    rest_9h_left = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    rest_9h_max = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    work_day_used = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    duty_day_used = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    drive_4h30_used = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    drive_4h30_left = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    drive_4h30_max = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    drive_day_used = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    drive_day_left = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    drive_day_max = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    drive_one_week_used = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    drive_one_week_left = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    drive_one_week_max = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    drive_two_weeks_used = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    drive_two_weeks_left = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    drive_two_weeks_max = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    daily_rest_used = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    daily_rest_left = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    daily_rest_min = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    daily_rest_next = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    weekly_rest_used = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    weekly_rest_left = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    weekly_rest_min = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    weekly_rest_next = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    weekly_rest_last_used = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    weekly_rest_shortened = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true),
                    weekly_rest_time_to_next = table.Column<string>(type: "varchar(32)", unicode: false, maxLength: 32, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "ZEZWOLENIA",
                columns: table => new
                {
                    ID_ZEZWOLENIA = table.Column<int>(type: "int", nullable: false),
                    NR_ZEZW_SYMBOL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    NR_ZEZW = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TYP = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DATA_WAZNOSCI = table.Column<DateTime>(type: "datetime", nullable: true),
                    WARTOSC_NETTO = table.Column<double>(type: "float", nullable: true),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    VAT_ID = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    VAT_STAWKA = table.Column<double>(type: "float", nullable: true),
                    FAKTURA_ID = table.Column<int>(type: "int", nullable: true),
                    FAKTURA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    WYJAZD_ID = table.Column<int>(type: "int", nullable: true),
                    WYJAZD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    TABOR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZLECENIE_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KIEROWCA_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    WYDANY_PRZEZ_ID = table.Column<int>(type: "int", nullable: true),
                    WYDANY_PRZEZ = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DATA_WYDANIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZWROT = table.Column<int>(type: "int", nullable: true),
                    DATA_ZWROTU = table.Column<DateTime>(type: "datetime", nullable: true),
                    ROZLICZONO = table.Column<int>(type: "int", nullable: true),
                    DATA_ROZLICZENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    PRZEWOZNIK_ID = table.Column<int>(type: "int", nullable: true),
                    PRZEWOZNIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZLECENIE2_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    RODZAJ_ZEZW = table.Column<int>(type: "int", nullable: true),
                    ILOSC_STRON = table.Column<int>(type: "int", nullable: true),
                    KRAJE = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    DATA_WAZNOSCI_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZEZWOLENIA", x => x.ID_ZEZWOLENIA);
                });

            migrationBuilder.CreateTable(
                name: "ZEZWOLENIA_PRZYDZIAL",
                columns: table => new
                {
                    ID_ZEZWOLENIA_PRZYDZIAL = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ZEZWOLENIA_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA_ID = table.Column<int>(type: "int", nullable: true),
                    WYJAZD_ID = table.Column<int>(type: "int", nullable: true),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    STRONA_OD = table.Column<int>(type: "int", nullable: true),
                    STRONA_DO = table.Column<int>(type: "int", nullable: true),
                    DT_WYDANIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    WYDAJACY_ID = table.Column<int>(type: "int", nullable: true),
                    DT_ZDANIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    PRZYJMUJACY_ID = table.Column<int>(type: "int", nullable: true),
                    DT_ZWROTU = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZWRACAJACY_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZEZWOLENIA_PRZYDZIAL", x => x.ID_ZEZWOLENIA_PRZYDZIAL);
                });

            migrationBuilder.CreateTable(
                name: "ZEZWOLENIA_STRONY",
                columns: table => new
                {
                    ID_ZEZWOLENIA_STRONY = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ZEZWOLENIA_ID = table.Column<int>(type: "int", nullable: true),
                    NR_STRONY = table.Column<int>(type: "int", nullable: true),
                    WYDANA = table.Column<int>(type: "int", nullable: true),
                    ZDANA = table.Column<int>(type: "int", nullable: true),
                    ZWROCONA = table.Column<int>(type: "int", nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZEZWOLENIA_STRONY", x => x.ID_ZEZWOLENIA_STRONY);
                });

            migrationBuilder.CreateTable(
                name: "ZGODA_TYP",
                columns: table => new
                {
                    ID_ZGODA_TYP = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SYMBOL1 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: false, defaultValueSql: "('')", comment: "Opis na check boxach np. \"Mail\" \"Tel.\" \"Mail wła.\" \"Tel wła.\" \"Mail part.\" \"Tel part.\""),
                    SYMBOL2 = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Opis w polu grida np. \"M1\" \"T1\" \"M2\" \"T2\" \"M3\" \"T3\""),
                    OPIS = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true, comment: "Opis typu zgody np. dla formularza zgody np.\"Zgoda na otrzymywanie informacji marketingowo handlowych od @Firma drogą mailową\""),
                    Lp = table.Column<int>(type: "int", nullable: true, comment: "Kolejność dla chceck box i innych"),
                    AKTYWNY = table.Column<int>(type: "int", nullable: true),
                    SYSTEMOWY = table.Column<int>(type: "int", nullable: true),
                    SYMBOL3 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "Opis braku w polu grida np. \"bM1\" \"bT1\" \"bM2\" \"bT2\" \"bM3\" \"bT3\"")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZGODA_TYP", x => x.ID_ZGODA_TYP);
                },
                comment: "Typy zgody marketingowej na PRACOWNIKACH");

            migrationBuilder.CreateTable(
                name: "ZIPCODE",
                columns: table => new
                {
                    ID_ZIPCODE = table.Column<int>(type: "int", nullable: false),
                    COUNTRY = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Kod kraju"),
                    ZIP_CODE = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: false, comment: "Kod pocztowy"),
                    TOWN = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true, comment: "Miasto"),
                    STREET = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Ulica"),
                    DISTRICT = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Powiat"),
                    PROVINCE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Województwo"),
                    POST_OFFICE = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true, comment: "Poczta"),
                    PO_BOX_ZIP = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "?"),
                    OWN_ZIP_UNIT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "?"),
                    GEO_LONGI = table.Column<double>(type: "float", nullable: true, comment: "GPS - długość"),
                    GEO_LAT = table.Column<double>(type: "float", nullable: true, comment: "GPS - szerokość"),
                    ROUTE = table.Column<int>(type: "int", nullable: true, comment: "?"),
                    ID_CENTER = table.Column<int>(type: "int", nullable: true, comment: "?"),
                    ZONE = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true, defaultValueSql: "('-')", comment: "?"),
                    STREFA = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Strefa"),
                    ZIP = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Kod pocztowy bez znaków separujących"),
                    AKTUAL = table.Column<int>(type: "int", nullable: true, comment: "Numer aktualizacji"),
                    GPS = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy kod został zgeokodowany"),
                    LON = table.Column<double>(type: "float", nullable: true, comment: "GPS - długość"),
                    LAT = table.Column<double>(type: "float", nullable: true, comment: "GPS - szerokość"),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja"),
                    BLOKADA = table.Column<int>(type: "int", nullable: true, comment: "Kod zablokowany do automatyczego zmieniania stref"),
                    TMP_LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja tymczasowa"),
                    TMP_STREFA = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Strefa tymczasowa"),
                    TMP_ROUTE = table.Column<double>(type: "float", nullable: true, comment: "Wyliczona odległość od lokalizacji tymczasowej"),
                    PODSTREFA = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Podstrefa"),
                    LOKALIZACJA2 = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Lokalizacja 2"),
                    GMINA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "Gmina"),
                    ZIP_STREET = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "ulica bez numeru"),
                    ZIP_NUMBER = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "numer"),
                    ProvinceId = table.Column<int>(type: "int", nullable: true),
                    GEO_AKCEPTACJA = table.Column<int>(type: "int", nullable: true, comment: "GPS - akceptacja"),
                    GEO_POZIOM_UFN = table.Column<int>(type: "int", nullable: true, comment: "GPS - poziom ufności"),
                    MapGeoCoding = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZIPCODE", x => x.ID_ZIPCODE);
                },
                comment: "Słownik kodów pocztowych");

            migrationBuilder.CreateTable(
                name: "ZLECENIA",
                columns: table => new
                {
                    ID_ZLECENIA = table.Column<int>(type: "int", nullable: false),
                    FRM_ID = table.Column<int>(type: "int", nullable: true),
                    NR_ZLECENIA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    NR_ZLEC_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    NR_ZLEC_ROK = table.Column<int>(type: "int", nullable: true),
                    NR_ZLEC_MIES = table.Column<int>(type: "int", nullable: true),
                    NR_ZLECENIA_K = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    NR_ZLEC_KOLEJNY_K = table.Column<int>(type: "int", nullable: true),
                    NR_ZLEC_ROK_K = table.Column<int>(type: "int", nullable: true),
                    NR_ZLEC_MIES_K = table.Column<int>(type: "int", nullable: true),
                    TECZKA_ID = table.Column<int>(type: "int", nullable: true),
                    TECZKA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    JEZYK_ZLECENIA = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, defaultValueSql: "('PL')"),
                    TYP = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    SPEDYTOR_ID = table.Column<int>(type: "int", nullable: true),
                    SPEDYTOR = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    DATA_ZLECENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    KLIENT_ID = table.Column<int>(type: "int", nullable: true),
                    KLIENT_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KLIENT_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KLIENT_ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KLIENT_MIASTO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KLIENT_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    KLIENT_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KLIENT_NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    KLIENT_TEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KLIENT_KONT = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PLATNIK_ID = table.Column<int>(type: "int", nullable: true),
                    PLATNIK_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    PLATNIK_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    PLATNIK_ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    PLATNIK_MIASTO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    PLATNIK_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    PLATNIK_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    PLATNIK_NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    PRZEWOZNIK_ID = table.Column<int>(type: "int", nullable: true),
                    PRZEWOZNIK_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    PRZEWOZNIK_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    PRZEWOZNIK_ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    PRZEWOZNIK_MIASTO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    PRZEWOZNIK_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    PRZEWOZNIK_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    PRZEWOZNIK_NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    PRZEWOZNIK_TEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PRZEWOZNIK_KONT = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    WARUNKI_DOSTAWY = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    TYP_ZLECENIA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    ZA_MIEJSCE = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true),
                    ZA_MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZA_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    ZA_DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZA_GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZA_DATA_RZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZA_GODZ_RZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    WY_MIEJSCE = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true),
                    WY_MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    WY_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    WY_DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    WY_GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    WY_DATA_RZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    WY_GODZ_RZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_ROZLAD_FK = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZROD_DATY_ROZL_FK = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ODPRAWA_CELNA_WYWOZ_ID = table.Column<int>(type: "int", nullable: true),
                    ODPRAWA_CELNA_WYWOZ = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true),
                    ODPRAWA_CELNA_WWOZ_ID = table.Column<int>(type: "int", nullable: true),
                    ODPRAWA_CELNA_WWOZ = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true),
                    ODPRAWA_GRANICZNA_ID = table.Column<int>(type: "int", nullable: true),
                    ODPRAWA_GRANICZNA = table.Column<string>(type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    TRASA_ID = table.Column<int>(type: "int", nullable: true),
                    TRASA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    TRASA_EDYCJA = table.Column<int>(type: "int", nullable: true),
                    TRASA_ODL = table.Column<double>(type: "float", nullable: true),
                    TRASA_ODL_DOJAZD = table.Column<double>(type: "float", nullable: true),
                    TRASA_ODL_GL = table.Column<double>(type: "float", nullable: true),
                    TRASA_ZLEC_ODL = table.Column<double>(type: "float", nullable: true),
                    TRASA_ZLEC_ODL_DOJAZD = table.Column<double>(type: "float", nullable: true),
                    TRASA_ZLEC_ODL_GL = table.Column<double>(type: "float", nullable: true),
                    TRASA_ODL_ROZN = table.Column<double>(type: "float", nullable: true),
                    OPIS_TOWARU = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true),
                    OPIS_WYMAG_TABORU = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true),
                    WARTOSC_LADUNKU = table.Column<double>(type: "float", nullable: true),
                    WARTOSC_LADUNKU_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    JEDN_WAGI = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    WAGA_LADUNKU = table.Column<double>(type: "float", nullable: true),
                    OBJETOSC_LADUNKU = table.Column<double>(type: "float", nullable: true),
                    WYSOKOSC = table.Column<double>(type: "float", nullable: true),
                    SZEROKOSC = table.Column<double>(type: "float", nullable: true),
                    DLUGOSC = table.Column<double>(type: "float", nullable: true),
                    TYP_OPAKOWANIA = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    ILOSC_OPAKOWAN = table.Column<double>(type: "float", nullable: true),
                    DOD_OPAKOWANIA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ADR = table.Column<int>(type: "int", nullable: true),
                    DOD_JM = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DOD_IL = table.Column<int>(type: "int", nullable: true),
                    KUBATURA_POJAZDU = table.Column<int>(type: "int", nullable: true),
                    INFO_DOD = table.Column<string>(type: "varchar(5000)", unicode: false, maxLength: 5000, nullable: true),
                    INFO_DOD_KL = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true),
                    OFERTA_ID = table.Column<int>(type: "int", nullable: true),
                    OFERTA_POZYCJA_ID = table.Column<int>(type: "int", nullable: true),
                    OFERTA = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    WYJAZD_ID = table.Column<int>(type: "int", nullable: true),
                    WYJAZD = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    CMR_ID = table.Column<int>(type: "int", nullable: true),
                    CMR = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DATA_CMR = table.Column<DateTime>(type: "datetime", nullable: true),
                    FAKTURA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    FAKTURA_ZB_ID = table.Column<int>(type: "int", nullable: true),
                    FAKTURA_ZB = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    FAKTURA_K = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    FAKTURA_K_ZB_ID = table.Column<int>(type: "int", nullable: true),
                    FAKTURA_K_ZB = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SAMOCHOD_NR_BOCZNY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SAMOCHOD_ID = table.Column<int>(type: "int", nullable: true),
                    SAMOCHOD = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    NACZEPA_KLIENTA = table.Column<int>(type: "int", nullable: true),
                    NACZEPA_NR_BOCZNY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NACZEPA_ID = table.Column<int>(type: "int", nullable: true),
                    NACZEPA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KIEROWCA1_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA1 = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    KIEROWCA1_TEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KIEROWCA2_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA2 = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    KIEROWCA2_TEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    CENNIK_FTL_ID = table.Column<int>(type: "int", nullable: true),
                    CENNIK_FTL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    CENNIK_FTL_P_ID = table.Column<int>(type: "int", nullable: true),
                    CENNIK_FTL_P = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KWOTA_K = table.Column<double>(type: "float", nullable: true),
                    WALUTA_K = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    TYP_KURS_K = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    FORMA_PLATNOSCI_K = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TERMIN_K = table.Column<int>(type: "int", nullable: true),
                    ODC_KRAJOWY_KM_K = table.Column<int>(type: "int", nullable: true),
                    ODC_KRAJOWY_K = table.Column<double>(type: "float", nullable: true),
                    ODC_KRAJOWY_VAT_K = table.Column<double>(type: "float", nullable: true),
                    ODC_KRAJOWY_VAT_ID_K = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    ODC_UE_KM_K = table.Column<int>(type: "int", nullable: true),
                    ODC_UE_K = table.Column<double>(type: "float", nullable: true),
                    ODC_UE_VAT_K = table.Column<double>(type: "float", nullable: true),
                    ODC_UE_VAT_ID_K = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    ODC_ZAGRANICZNY_KM_K = table.Column<int>(type: "int", nullable: true),
                    ODC_ZAGRANICZNY_K = table.Column<double>(type: "float", nullable: true),
                    ODC_ZAGRANICZNY_VAT_K = table.Column<double>(type: "float", nullable: true),
                    ODC_ZAGRANICZNY_VAT_ID_K = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    KWOTA_P = table.Column<double>(type: "float", nullable: true),
                    WALUTA_P = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    TYP_KURS_P = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    FORMA_PLATNOSCI_P = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TERMIN_P = table.Column<int>(type: "int", nullable: true),
                    ODC_KRAJOWY_KM_P = table.Column<int>(type: "int", nullable: true),
                    ODC_KRAJOWY_P = table.Column<double>(type: "float", nullable: true),
                    ODC_KRAJOWY_VAT_P = table.Column<double>(type: "float", nullable: true),
                    ODC_KRAJOWY_VAT_ID_P = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    ODC_UE_KM_P = table.Column<int>(type: "int", nullable: true),
                    ODC_UE_P = table.Column<double>(type: "float", nullable: true),
                    ODC_UE_VAT_P = table.Column<double>(type: "float", nullable: true),
                    ODC_UE_VAT_ID_P = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    ODC_ZAGRANICZNY_KM_P = table.Column<int>(type: "int", nullable: true),
                    ODC_ZAGRANICZNY_P = table.Column<double>(type: "float", nullable: true),
                    ODC_ZAGRANICZNY_VAT_P = table.Column<double>(type: "float", nullable: true),
                    ODC_ZAGRANICZNY_VAT_ID_P = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    STATUS = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    STATUS_MAIL = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    STATUS_EMISJA = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    REF_NAD = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_ODB = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_POS = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    MIES_ROZL = table.Column<int>(type: "int", nullable: true),
                    ROK_ROZL = table.Column<int>(type: "int", nullable: true),
                    KWOTA_K_USTALONA = table.Column<double>(type: "float", nullable: true),
                    STAWKA_ZA_KM = table.Column<double>(type: "float", nullable: true),
                    IDCTK = table.Column<int>(type: "int", nullable: true),
                    PODST_PROWIZJI_KIER = table.Column<double>(type: "float", nullable: true),
                    ZLECENIE_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PODZLECENIE = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PROCENT_KOSZTOW = table.Column<double>(type: "float", nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    USTALENIA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    USTALENIA_POTW = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    INFO_DLA_KSIEG = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    OK = table.Column<int>(type: "int", nullable: true),
                    A_SUMA_FRA_PW = table.Column<double>(type: "float", nullable: true),
                    A_SUMA_KM_PW = table.Column<double>(type: "float", nullable: true),
                    A_STAWKA_PW = table.Column<double>(type: "float", nullable: true),
                    A_STAWKA_UST_M = table.Column<double>(type: "float", nullable: true),
                    A_STAWKA_UST = table.Column<double>(type: "float", nullable: true),
                    A_STAT_OPLAC = table.Column<int>(type: "int", nullable: true),
                    SFM_STATUS = table.Column<int>(type: "int", nullable: true),
                    SFM_VER = table.Column<int>(type: "int", nullable: true),
                    SFM_L_ZA_WY = table.Column<int>(type: "int", nullable: true),
                    SFM_WYSL = table.Column<int>(type: "int", nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    VAT_NA_SADZIE = table.Column<int>(type: "int", nullable: true),
                    FAKTURA_DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    STAWKA_ZA_WAGA_KM = table.Column<double>(type: "float", nullable: true),
                    KONTENER = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KONTENER_ID = table.Column<int>(type: "int", nullable: true),
                    TEMP_PRZEWOZU = table.Column<double>(type: "float", nullable: true),
                    TEMP_PRZEWOZU_O = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    LOKALIZACJA_POSR = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    OPIEKUN = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ROZL_KIER = table.Column<int>(type: "int", nullable: true),
                    ROZ_KIER_AKT = table.Column<int>(type: "int", nullable: true),
                    ROZ_KIER_FRACHT = table.Column<double>(type: "float", nullable: true),
                    OPIS_TOWARU_UN = table.Column<string>(type: "varchar(35)", unicode: false, maxLength: 35, nullable: true),
                    WYMIANA_PALET = table.Column<int>(type: "int", nullable: true),
                    NACZEPA_PALETY_POCZ = table.Column<int>(type: "int", nullable: true),
                    NACZEPA_PALETY_KON = table.Column<int>(type: "int", nullable: true),
                    NACZEPA_PALETY_BILANS = table.Column<int>(type: "int", nullable: true),
                    WYMIANA_PALET_ROZL = table.Column<int>(type: "int", nullable: true),
                    RODZ_ZLEC = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    PROM = table.Column<int>(type: "int", nullable: true),
                    TABOR_PROFIL_ID = table.Column<int>(type: "int", nullable: true),
                    TABOR_PROFIL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    STATUS_WSTEPNE = table.Column<int>(type: "int", nullable: true),
                    STATUS_WSTEPNE_OPIS = table.Column<string>(type: "text", nullable: true),
                    KWOTA_P_USTALONA = table.Column<double>(type: "float", nullable: true),
                    STAWKA_ZA_KM_P = table.Column<double>(type: "float", nullable: true),
                    STAWKA_ZA_WAGA_KM_P = table.Column<double>(type: "float", nullable: true),
                    WAGONY_NR = table.Column<string>(type: "text", nullable: true),
                    WAGONY_DATY = table.Column<string>(type: "text", nullable: true),
                    WAGONY_WAGI = table.Column<string>(type: "text", nullable: true),
                    LISTY_LINIOWE_ID = table.Column<int>(type: "int", nullable: true),
                    LISTY_LINIOWE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TRASA_DOJAZDU = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    ORG_FRACHT_P = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')"),
                    DOD_FRACHT_WEWN = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')"),
                    LICZBA_ZAWY = table.Column<double>(type: "float", nullable: true),
                    CENA_ZA_M_ZAWY = table.Column<double>(type: "float", nullable: true),
                    CENA_ZA_M_ZAWY_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    TRASA_DOLAD = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WYMIANA_PALET_WYSL = table.Column<int>(type: "int", nullable: true),
                    WYMIANA_PALET_WYSL_DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    MYJNIA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    BEZ_SFM = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    TRAFIK_ID = table.Column<int>(type: "int", nullable: true),
                    TRAFIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DATA_POTWIERDZENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    ODDZIAL_ID = table.Column<int>(type: "int", nullable: true),
                    ODDZIAL_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    ODDZIAL_ADRES = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ODDZIAL_MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ODDZIAL_KOD = table.Column<string>(type: "varchar(6)", unicode: false, maxLength: 6, nullable: true),
                    ODDZIAL_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    ZA_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    ZA_GODZ_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZA_GODZ_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    WY_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    WY_GODZ_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    WY_GODZ_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    OPIS_TOWARU_HACCP = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OPIS_TOWARU_SQAS = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    CYSTERNA_DO_PELNA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    STATUS_KOSZTY = table.Column<int>(type: "int", nullable: true),
                    REF_4 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_5 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PRZELADUNEK = table.Column<int>(type: "int", nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    SA_KONTAKTY = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    NR_BL = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    NR_BL_ODB = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    NR_BL_ODB_ID = table.Column<int>(type: "int", nullable: true),
                    NR_BL_ARM = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    NR_BL_ARM_ID = table.Column<int>(type: "int", nullable: true),
                    NR_AWB = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    NR_AWB_ODB = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    NR_AWB_ODB_ID = table.Column<int>(type: "int", nullable: true),
                    NR_AWB_LOT = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    NR_AWB_LOT_ID = table.Column<int>(type: "int", nullable: true),
                    DOK_OK = table.Column<int>(type: "int", nullable: true),
                    DOK_OK_DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    JEST_RW = table.Column<int>(type: "int", nullable: true),
                    DYSPOZYTOR_ID = table.Column<int>(type: "int", nullable: true),
                    DYSPOZYTOR = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    WY_DATA_RZ_K = table.Column<DateTime>(type: "datetime", nullable: true),
                    WY_GODZ_RZ_K = table.Column<DateTime>(type: "datetime", nullable: true),
                    WAGA_LADUNKU_RZ = table.Column<double>(type: "float", nullable: true),
                    FAKTURA_PF = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TYP_TAB_K = table.Column<int>(type: "int", nullable: true),
                    TYP_TAB_P = table.Column<int>(type: "int", nullable: true),
                    GODZ_ZLECENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    WALUTA_FV_K = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    WALUTA_FV_P = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    ZA_DATA_DOK = table.Column<DateTime>(type: "datetime", nullable: true),
                    WY_DATA_DOK = table.Column<DateTime>(type: "datetime", nullable: true),
                    TRANZYT = table.Column<int>(type: "int", nullable: true),
                    TRASA_MAP_ODL = table.Column<double>(type: "float", nullable: true),
                    TRASA_MAP_ODL_DOJAZD = table.Column<double>(type: "float", nullable: true),
                    TRASA_MAP_ODL_GL = table.Column<double>(type: "float", nullable: true),
                    ZAFAKTUROWANE = table.Column<int>(type: "int", nullable: true),
                    CLENIE = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    STATUS_CELNY_ID = table.Column<int>(type: "int", nullable: true),
                    TRIG_TIMESTAMP = table.Column<DateTime>(type: "datetime", nullable: true),
                    STATUS_KALK = table.Column<int>(type: "int", nullable: true),
                    LOKALIZACJA_NADZ = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    SPEDYTOR_AS_ID = table.Column<int>(type: "int", nullable: true),
                    SPEDYTOR_AS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KURS_WG_K = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    KURS_Z_DNIA_P_K = table.Column<int>(type: "int", nullable: true),
                    KURS_WG_P = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    KURS_Z_DNIA_P_P = table.Column<int>(type: "int", nullable: true),
                    SLOT_1 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_2 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_3 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_4 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_5 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    POZYCJA_OFERTY = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    TRASA_MAP_MYTO = table.Column<double>(type: "float", nullable: true),
                    TRASA_MAP_KM_PLATNE = table.Column<double>(type: "float", nullable: true),
                    PCA_DT = table.Column<DateTime>(type: "datetime", nullable: true),
                    PCA_DT_RZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    VAT_W_PLN_K = table.Column<int>(type: "int", nullable: true),
                    VAT_W_PLN_P = table.Column<int>(type: "int", nullable: true),
                    ZAGROZENIE = table.Column<int>(type: "int", nullable: true),
                    EMI_ORG_ID = table.Column<int>(type: "int", nullable: true),
                    ASYSTA_PKT = table.Column<int>(type: "int", nullable: true),
                    ASYSTA_UZYTKOWNIK_ID = table.Column<int>(type: "int", nullable: true),
                    MOBILESTATUS = table.Column<int>(type: "int", nullable: true, comment: "status wysyłki do mSPEED (10-do wysyłki / 20-odebrano)"),
                    MOBILESEQUENCE = table.Column<int>(type: "int", nullable: true),
                    DATA_WYK = table.Column<DateTime>(type: "datetime", nullable: true),
                    JEST_UBEZP = table.Column<int>(type: "int", nullable: true),
                    TYP_UBEZP = table.Column<int>(type: "int", nullable: true),
                    PRZEWOZNIK_EMAIL = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    WWOZ_AGENCJA_ID = table.Column<int>(type: "int", nullable: true),
                    WYWOZ_AGENCJA_ID = table.Column<int>(type: "int", nullable: true),
                    POTW_ODPR = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA1_DO = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    KIEROWCA2_DO = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TRASA_CC_ODL = table.Column<double>(type: "float", nullable: true),
                    TRASA_CC_ODL_DOJAZD = table.Column<double>(type: "float", nullable: true),
                    TRASA_CC_ODL_GL = table.Column<double>(type: "float", nullable: true),
                    ANULOWANE = table.Column<int>(type: "int", nullable: true),
                    TrybPracyAgregatu = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    DATA_KONTR_WYKAZ_WL = table.Column<DateTime>(type: "datetime", nullable: true),
                    WYNIK_KONTR_WYKAZ_WL = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    REQUEST_ID = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    SolverTaskId = table.Column<int>(type: "int", nullable: true),
                    UsrFldXServer = table.Column<int>(type: "int", nullable: true),
                    MASZ_KWOTA_K = table.Column<double>(type: "float", nullable: true),
                    UBEZP_PROC_STAWKA = table.Column<double>(type: "float", nullable: true),
                    UBEZP_PROC = table.Column<double>(type: "float", nullable: true),
                    UBEZP_WARTOSC = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZLECENIA", x => x.ID_ZLECENIA);
                });

            migrationBuilder.CreateTable(
                name: "ZLECENIA_C",
                columns: table => new
                {
                    ID_ZLECENIA_C = table.Column<int>(type: "int", nullable: false),
                    DATA_REJESTRACJI = table.Column<DateTime>(type: "datetime", nullable: true),
                    NR_ZLECENIA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_ZLECENIA_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    NR_ZLECENIA_ROK = table.Column<int>(type: "int", nullable: true),
                    NR_ZLECENIA_MIES = table.Column<int>(type: "int", nullable: true),
                    STATUS = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    TYP = table.Column<int>(type: "int", nullable: true),
                    RODZAJ = table.Column<int>(type: "int", nullable: true),
                    PROCEDURA = table.Column<int>(type: "int", nullable: true),
                    KLIENT_ID = table.Column<int>(type: "int", nullable: true),
                    KLIENT_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KLIENT_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KLIENT_ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KLIENT_MIASTO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KLIENT_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    KLIENT_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KLIENT_NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    KLIENT_FAX = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KLIENT_KONT = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KLIENT_TEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PLATNIK_ID = table.Column<int>(type: "int", nullable: true),
                    PLATNIK_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    PLATNIK_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    PLATNIK_ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    PLATNIK_MIASTO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    PLATNIK_KOD = table.Column<string>(type: "varchar(6)", unicode: false, maxLength: 6, nullable: true),
                    PLATNIK_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    PLATNIK_NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    ZAFAKTUROWANE = table.Column<int>(type: "int", nullable: true),
                    FV_NA_PLATNIKA = table.Column<int>(type: "int", nullable: true),
                    ODROCZONY_VAT = table.Column<int>(type: "int", nullable: true),
                    REJESTRUJACY_ID = table.Column<int>(type: "int", nullable: true),
                    REJESTRUJACY = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    AGENT_CELNY_ID = table.Column<int>(type: "int", nullable: true),
                    AGENT_CELNY = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    REF_1 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_3 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_4 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_5 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DATA_ZWOLNIENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_ZAKONCZENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    PRZEW_DATA_ZAKONCZENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    NUMER_ZEWN = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    CN = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    MRN = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    NR_ZGLOSZENIA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DATA_ZGLOSZENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    UPOWAZNIENIE_ID = table.Column<int>(type: "int", nullable: true),
                    UPOWAZNIENIE_NR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    UPOWAZNIENIE_INNY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZABEZPIECZENIE = table.Column<int>(type: "int", nullable: true),
                    ZABEZPIECZENIE_ID = table.Column<int>(type: "int", nullable: true),
                    ZABEZPIECZENIE_NR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    UWAGI = table.Column<string>(type: "text", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    ANULOWANE = table.Column<int>(type: "int", nullable: true),
                    NR_FAKTURY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KOD_TOWARU = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    OPIS_TOWARU = table.Column<string>(type: "varchar(280)", unicode: false, maxLength: 280, nullable: true),
                    WARTOSC_STATYSTYCZNA = table.Column<double>(type: "float", nullable: true),
                    WARTOSC_TOWARU = table.Column<double>(type: "float", nullable: true),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KURS_WALUTY = table.Column<double>(type: "float", nullable: true),
                    KRAJ_ZALADUNKU = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    KRAJ_ROZLADUNKU = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    KRAJ_POCZATKOWY = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    KRAJ_KONCOWY = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    DATA_PRZYJECIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_PLATNOSCI = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_PRZELEWU = table.Column<DateTime>(type: "datetime", nullable: true),
                    IMPEKSP_ID = table.Column<int>(type: "int", nullable: true),
                    IMPEKSP_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    IMPEKSP_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    IMPEKSP_ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    IMPEKSP_MIASTO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    IMPEKSP_KOD = table.Column<string>(type: "varchar(6)", unicode: false, maxLength: 6, nullable: true),
                    IMPEKSP_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    IMPEKSP_NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    UPOWAZNIENIE_INNE = table.Column<int>(type: "int", nullable: true),
                    PRZELEWY_CELNE_ID = table.Column<int>(type: "int", nullable: true),
                    PRZELEWY_CELNE_NR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ROZLICZONY_VAT = table.Column<int>(type: "int", nullable: true),
                    URZAD_CELNY = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    NR_DECYZJI = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZLECENIE_UZUP = table.Column<int>(type: "int", nullable: true),
                    SLOT_1 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_2 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_3 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_4 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_5 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    MASA_BRUTTO = table.Column<double>(type: "float", nullable: true),
                    MASA_NETTO = table.Column<double>(type: "float", nullable: true),
                    CENNIK_SQL_PRZYCHODY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    CENNIK_SQL_KOSZTY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZLECENIA_C", x => x.ID_ZLECENIA_C);
                });

            migrationBuilder.CreateTable(
                name: "ZLECENIA_C_CHECKLIST",
                columns: table => new
                {
                    ID_ZLECENIA_C_CHECKLIST = table.Column<int>(type: "int", nullable: false),
                    ZLECENIA_C_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Relacja do zlecenia morskiego"),
                    CHECKLISTDEFID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Relacja do pozycji checklisty"),
                    LP = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Lp"),
                    COMPLETED = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Flaga czy wykonano"),
                    COMPLETEDDT = table.Column<DateTime>(type: "datetime", nullable: true, comment: "DT kiedy wykonano"),
                    DESCRIPTION = table.Column<string>(type: "varchar(250)", unicode: false, maxLength: 250, nullable: true, comment: "Uwagi"),
                    CHANGEDT = table.Column<DateTime>(type: "datetime", nullable: true, comment: "DT kiedy zmieniono"),
                    CHANGEUSERID = table.Column<int>(type: "int", nullable: true, comment: "User który wykonał zmianę"),
                    ExpirationDT = table.Column<DateTime>(type: "datetime", nullable: true, comment: "DT do kiedy")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZLECENIA_C_CHECKLIST", x => x.ID_ZLECENIA_C_CHECKLIST);
                });

            migrationBuilder.CreateTable(
                name: "ZLECENIA_C_POZ",
                columns: table => new
                {
                    ID_ZLECENIA_C_POZ = table.Column<int>(type: "int", nullable: false),
                    ZLECENIE_C_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE_NR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZLECENIE_RODZAJ = table.Column<int>(type: "int", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZLECENIA_C_POZ", x => x.ID_ZLECENIA_C_POZ);
                });

            migrationBuilder.CreateTable(
                name: "ZLECENIA_CYST",
                columns: table => new
                {
                    ID_ZLECENIA = table.Column<int>(type: "int", nullable: false),
                    KOMORA_1 = table.Column<int>(type: "int", nullable: true),
                    LADUNEK_1 = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WAGA_1 = table.Column<double>(type: "float", nullable: true),
                    JEDN_WAGI_1 = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    OBJ_1 = table.Column<double>(type: "float", nullable: true),
                    ADR_1 = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    KOMORA_2 = table.Column<int>(type: "int", nullable: true),
                    LADUNEK_2 = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WAGA_2 = table.Column<double>(type: "float", nullable: true),
                    JEDN_WAGI_2 = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    OBJ_2 = table.Column<double>(type: "float", nullable: true),
                    ADR_2 = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    KOMORA_3 = table.Column<int>(type: "int", nullable: true),
                    LADUNEK_3 = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WAGA_3 = table.Column<double>(type: "float", nullable: true),
                    JEDN_WAGI_3 = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    OBJ_3 = table.Column<double>(type: "float", nullable: true),
                    ADR_3 = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    KOMORA_4 = table.Column<int>(type: "int", nullable: true),
                    LADUNEK_4 = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WAGA_4 = table.Column<double>(type: "float", nullable: true),
                    JEDN_WAGI_4 = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    OBJ_4 = table.Column<double>(type: "float", nullable: true),
                    ADR_4 = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    KOMORA_5 = table.Column<int>(type: "int", nullable: true),
                    LADUNEK_5 = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WAGA_5 = table.Column<double>(type: "float", nullable: true),
                    JEDN_WAGI_5 = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    OBJ_5 = table.Column<double>(type: "float", nullable: true),
                    ADR_5 = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    KOMORA_6 = table.Column<int>(type: "int", nullable: true),
                    LADUNEK_6 = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WAGA_6 = table.Column<double>(type: "float", nullable: true),
                    JEDN_WAGI_6 = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    OBJ_6 = table.Column<double>(type: "float", nullable: true),
                    ADR_6 = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    KOMORA_7 = table.Column<int>(type: "int", nullable: true),
                    LADUNEK_7 = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WAGA_7 = table.Column<double>(type: "float", nullable: true),
                    JEDN_WAGI_7 = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    OBJ_7 = table.Column<double>(type: "float", nullable: true),
                    ADR_7 = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    GESTOSC_1 = table.Column<double>(type: "float", nullable: true),
                    GESTOSC_2 = table.Column<double>(type: "float", nullable: true),
                    GESTOSC_3 = table.Column<double>(type: "float", nullable: true),
                    GESTOSC_4 = table.Column<double>(type: "float", nullable: true),
                    GESTOSC_5 = table.Column<double>(type: "float", nullable: true),
                    GESTOSC_6 = table.Column<double>(type: "float", nullable: true),
                    GESTOSC_7 = table.Column<double>(type: "float", nullable: true),
                    WAGA_RZ_1 = table.Column<double>(type: "float", nullable: true),
                    CISN_1 = table.Column<double>(type: "float", nullable: true),
                    JEDN_CISN_1 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    TEMP_1 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TEMP_RZ_1 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    WAGA_ZEST_1 = table.Column<double>(type: "float", nullable: true),
                    WAGA_BRUTTO_1 = table.Column<double>(type: "float", nullable: true),
                    WAGA_RZ_2 = table.Column<double>(type: "float", nullable: true),
                    CISN_2 = table.Column<double>(type: "float", nullable: true),
                    JEDN_CISN_2 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    TEMP_2 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TEMP_RZ_2 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    WAGA_ZEST_2 = table.Column<double>(type: "float", nullable: true),
                    WAGA_BRUTTO_2 = table.Column<double>(type: "float", nullable: true),
                    WAGA_RZ_3 = table.Column<double>(type: "float", nullable: true),
                    CISN_3 = table.Column<double>(type: "float", nullable: true),
                    JEDN_CISN_3 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    TEMP_3 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TEMP_RZ_3 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    WAGA_ZEST_3 = table.Column<double>(type: "float", nullable: true),
                    WAGA_BRUTTO_3 = table.Column<double>(type: "float", nullable: true),
                    WAGA_RZ_4 = table.Column<double>(type: "float", nullable: true),
                    CISN_4 = table.Column<double>(type: "float", nullable: true),
                    JEDN_CISN_4 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    TEMP_4 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TEMP_RZ_4 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    WAGA_ZEST_4 = table.Column<double>(type: "float", nullable: true),
                    WAGA_BRUTTO_4 = table.Column<double>(type: "float", nullable: true),
                    WAGA_RZ_5 = table.Column<double>(type: "float", nullable: true),
                    CISN_5 = table.Column<double>(type: "float", nullable: true),
                    JEDN_CISN_5 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    TEMP_5 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TEMP_RZ_5 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    WAGA_ZEST_5 = table.Column<double>(type: "float", nullable: true),
                    WAGA_BRUTTO_5 = table.Column<double>(type: "float", nullable: true),
                    WAGA_RZ_6 = table.Column<double>(type: "float", nullable: true),
                    CISN_6 = table.Column<double>(type: "float", nullable: true),
                    JEDN_CISN_6 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    TEMP_6 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TEMP_RZ_6 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    WAGA_ZEST_6 = table.Column<double>(type: "float", nullable: true),
                    WAGA_BRUTTO_6 = table.Column<double>(type: "float", nullable: true),
                    WAGA_RZ_7 = table.Column<double>(type: "float", nullable: true),
                    CISN_7 = table.Column<double>(type: "float", nullable: true),
                    JEDN_CISN_7 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    TEMP_7 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TEMP_RZ_7 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    WAGA_ZEST_7 = table.Column<double>(type: "float", nullable: true),
                    WAGA_BRUTTO_7 = table.Column<double>(type: "float", nullable: true),
                    OBJ_RZ_1 = table.Column<double>(type: "float", nullable: true),
                    OBJ_RZ_2 = table.Column<double>(type: "float", nullable: true),
                    OBJ_RZ_3 = table.Column<double>(type: "float", nullable: true),
                    OBJ_RZ_4 = table.Column<double>(type: "float", nullable: true),
                    OBJ_RZ_5 = table.Column<double>(type: "float", nullable: true),
                    OBJ_RZ_6 = table.Column<double>(type: "float", nullable: true),
                    OBJ_RZ_7 = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZLECENIA_CYST", x => x.ID_ZLECENIA);
                });

            migrationBuilder.CreateTable(
                name: "ZLECENIA_DO_WYSL",
                columns: table => new
                {
                    ID_ZLECENIA_DO_WYSL = table.Column<int>(type: "int", nullable: false),
                    ZLECENIE_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do zlecenia, tab: ZLECENIA"),
                    TYLKO_SMS = table.Column<short>(type: "smallint", nullable: true, comment: "0/1 - wyślij zlec. za pomocą SMS")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZLECENIA_DO_WYSL", x => x.ID_ZLECENIA_DO_WYSL);
                },
                comment: "Zlecenia do wysłania (na potrzeby SFM)");

            migrationBuilder.CreateTable(
                name: "ZLECENIA_DOKUMENTY",
                columns: table => new
                {
                    ID_ZLECENIA_DOKUMENTY = table.Column<int>(type: "int", nullable: false),
                    ZLECENIE_ID = table.Column<int>(type: "int", nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    KOD = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WYMAGANY = table.Column<int>(type: "int", nullable: true),
                    WPLYNAL = table.Column<int>(type: "int", nullable: true),
                    DATA_WPLYWU = table.Column<DateTime>(type: "datetime", nullable: true),
                    UZYTKOWNIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    ROD = table.Column<int>(type: "int", nullable: true),
                    ROD_DO = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    ROD_WYSZEDL = table.Column<int>(type: "int", nullable: true),
                    ROD_DATA_WYJSCIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    ROD_UZYTKOWNIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KOD_KRESKOWY = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    ILOSC = table.Column<int>(type: "int", nullable: true),
                    ILOSC_ROZL = table.Column<int>(type: "int", nullable: true),
                    EROD = table.Column<int>(type: "int", nullable: true),
                    WYDR_ETYK = table.Column<int>(type: "int", nullable: true),
                    MASZONSKI_MASTER_ZLEC_DOK_ID = table.Column<int>(type: "int", nullable: true, comment: "MASZONSKI (dedyk.) - pole wskazuje na dokum. zlecenie z którego powstała bieżąca pozycja"),
                    UZYTKOWNIK_POTW = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZLECENIA_DOKUMENTY", x => x.ID_ZLECENIA_DOKUMENTY);
                },
                comment: "Dokumenty do zleceń FTL");

            migrationBuilder.CreateTable(
                name: "ZLECENIA_DOKUMENTY_M",
                columns: table => new
                {
                    ID_ZLECENIA_DOKUMENTY_M = table.Column<int>(type: "int", nullable: false),
                    ZLECENIE_ID = table.Column<int>(type: "int", nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    KOD = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WYMAGANY = table.Column<int>(type: "int", nullable: true),
                    WPLYNAL = table.Column<int>(type: "int", nullable: true),
                    DATA_WPLYWU = table.Column<DateTime>(type: "datetime", nullable: true),
                    UZYTKOWNIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ROD = table.Column<int>(type: "int", nullable: true),
                    ROD_DO = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    ROD_WYSZEDL = table.Column<int>(type: "int", nullable: true),
                    ROD_DATA_WYJSCIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    ROD_UZYTKOWNIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KOD_KRESKOWY = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    ILOSC = table.Column<int>(type: "int", nullable: true),
                    ILOSC_ROZL = table.Column<int>(type: "int", nullable: true),
                    EROD = table.Column<int>(type: "int", nullable: true),
                    WYDR_ETYK = table.Column<int>(type: "int", nullable: true),
                    UZYTKOWNIK_POTW = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZLECENIA_DOKUMENTY_M", x => x.ID_ZLECENIA_DOKUMENTY_M);
                },
                comment: "Dokumenty do zleceń morskich");

            migrationBuilder.CreateTable(
                name: "ZLECENIA_DOKUMENTY_RAIL",
                columns: table => new
                {
                    ID_ZLECENIA_DOKUMENTY_RAIL = table.Column<int>(type: "int", nullable: false),
                    ZLECENIE_ID = table.Column<int>(type: "int", nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    KOD = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WYMAGANY = table.Column<int>(type: "int", nullable: true),
                    WPLYNAL = table.Column<int>(type: "int", nullable: true),
                    DATA_WPLYWU = table.Column<DateTime>(type: "datetime", nullable: true),
                    UZYTKOWNIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ROD = table.Column<int>(type: "int", nullable: true),
                    EROD = table.Column<int>(type: "int", nullable: true),
                    ROD_DO = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    ROD_WYSZEDL = table.Column<int>(type: "int", nullable: true),
                    ROD_DATA_WYJSCIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    ROD_UZYTKOWNIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KOD_KRESKOWY = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    ILOSC = table.Column<int>(type: "int", nullable: true),
                    ILOSC_ROZL = table.Column<int>(type: "int", nullable: true),
                    WYDR_ETYK = table.Column<int>(type: "int", nullable: true),
                    UZYTKOWNIK_POTW = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZLECENIA_DOKUMENTY_RAIL", x => x.ID_ZLECENIA_DOKUMENTY_RAIL);
                },
                comment: "Dokumenty do zleceń");

            migrationBuilder.CreateTable(
                name: "ZLECENIA_DOKUMENTY_UWAGI",
                columns: table => new
                {
                    ID_ZLECENIA_DOKUMENTY_UWAGI = table.Column<int>(type: "int", nullable: false),
                    ZLECENIA_DOKUMENTY_ID = table.Column<int>(type: "int", nullable: true),
                    DOKUMENTY_UWAGI_ID = table.Column<int>(type: "int", nullable: true),
                    OPIS_DOD = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZLECENIA_DOKUMENTY_UWAGI", x => x.ID_ZLECENIA_DOKUMENTY_UWAGI);
                });

            migrationBuilder.CreateTable(
                name: "ZLECENIA_EXT",
                columns: table => new
                {
                    ID_ZLECENIA = table.Column<int>(type: "int", nullable: false),
                    INFO_SFM = table.Column<string>(type: "text", nullable: true, comment: "Informacje dla SFM-a"),
                    MAP_ROUTEID = table.Column<string>(type: "varchar(40)", unicode: false, maxLength: 40, nullable: true, comment: "Trasa zlecenia - id z mapy"),
                    MAP_PROFIL_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do profilu użytego do obliczeń trasy"),
                    SA_DOD_POZ_K = table.Column<short>(type: "smallint", nullable: true, comment: "Flaga, czy są dodatkowe pozycje kosztów"),
                    SA_DOD_POZ_P = table.Column<short>(type: "smallint", nullable: true, comment: "Flaga, czy są dodatkowe pozycje przychodu"),
                    SFM_VER = table.Column<int>(type: "int", nullable: true),
                    POTW_PRZEN_WAR = table.Column<short>(type: "smallint", nullable: true, comment: "Dedykowane: TARGOR"),
                    CZAS_TRWANIA_ZLECENIA = table.Column<double>(type: "float", nullable: true, comment: "Czas trwania zlecenia na potrzeby rozliczeń m-okresowych"),
                    FV_NA_PLATNIKA = table.Column<short>(type: "smallint", nullable: true, comment: "Flaga, czy faktura na płatnika"),
                    NIEZGODNOSC = table.Column<short>(type: "smallint", nullable: true, comment: "Flaga, czy jest niezgodnosc"),
                    REKLAMACJA = table.Column<short>(type: "smallint", nullable: true, comment: "Flaga, czy jest reklamacja"),
                    PRZEWOZNIK_ODDZIAL_ID = table.Column<int>(type: "int", nullable: true),
                    PRZEWOZNIK_ODDZIAL_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    PRZEWOZNIK_ODDZIAL_ADRES = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PRZEWOZNIK_ODDZIAL_MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PRZEWOZNIK_ODDZIAL_KOD = table.Column<string>(type: "varchar(6)", unicode: false, maxLength: 6, nullable: true),
                    PRZEWOZNIK_ODDZIAL_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    OCENA_PRZEWOZNIKA = table.Column<short>(type: "smallint", nullable: true, comment: "Ocena wykonania zlecenia przez przewoźnika"),
                    DO_MORSKIEGO = table.Column<short>(type: "smallint", nullable: true),
                    PROCEDURA_MYCIA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "procedura mycia"),
                    KOR_DO_ZERA = table.Column<short>(type: "smallint", nullable: true),
                    DOD_PALIWOWY = table.Column<double>(type: "float", nullable: true, comment: "Dodatek paliwowy doliczany do frachtu"),
                    GIELDA_POJAZDOW_ID = table.Column<int>(type: "int", nullable: true),
                    RHENUS_ROZL_TRAS_ID = table.Column<int>(type: "int", nullable: true),
                    CENNIK_KONTROLA = table.Column<int>(type: "int", nullable: true),
                    KOR_DO_ZERA_K = table.Column<short>(type: "smallint", nullable: true),
                    IS_EXPORTED = table.Column<int>(type: "int", nullable: true),
                    IS_EXPORTED_DT = table.Column<DateTime>(type: "datetime", nullable: true),
                    TRASA_MAP_ODL_AUTOSTRADY = table.Column<double>(type: "float", nullable: true),
                    TRASA_MAP_ODL_EKSPR_KRAJ = table.Column<double>(type: "float", nullable: true),
                    TRASA_MAP_ODL_POZOSTALE = table.Column<double>(type: "float", nullable: true),
                    IS_TELEROUTE = table.Column<int>(type: "int", nullable: true),
                    IS_TELEROUTE_DT = table.Column<DateTime>(type: "datetime", nullable: true),
                    IS_TELEROUTE_USER_ID = table.Column<int>(type: "int", nullable: true),
                    INFO_KIER = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true, comment: "Informacje dla kierowcy"),
                    INFO_SPED = table.Column<string>(type: "text", nullable: true, comment: "Informacje dla spedytora"),
                    CLENIE_UWAGI = table.Column<string>(type: "text", nullable: true),
                    NIE_FAKTURUJ = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')", comment: "Flaga, czy nie fakturować"),
                    CELNA_BEZ_AUTO_ZLEC_C = table.Column<int>(type: "int", nullable: true),
                    ZLEC_PAL_KLIENT_ID = table.Column<int>(type: "int", nullable: true),
                    BILANS_OPAK_LOK_POZ_ID = table.Column<int>(type: "int", nullable: true),
                    IS_TIMOCOM = table.Column<int>(type: "int", nullable: true),
                    IS_TIMOCOM_DT = table.Column<DateTime>(type: "datetime", nullable: true),
                    IS_TIMOCOM_USER_ID = table.Column<int>(type: "int", nullable: true),
                    IS_TRANSWIDE = table.Column<int>(type: "int", nullable: true),
                    IS_TRANSWIDE_DT = table.Column<DateTime>(type: "datetime", nullable: true),
                    IS_TRANSWIDE_USER_ID = table.Column<int>(type: "int", nullable: true),
                    IS_TRANS = table.Column<int>(type: "int", nullable: true),
                    IS_TRANS_DT = table.Column<DateTime>(type: "datetime", nullable: true),
                    IS_TRANS_USER_ID = table.Column<int>(type: "int", nullable: true),
                    IS_TRANS_NUMBER = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    MASZONSKI_MASTER_ZLEC_ID = table.Column<int>(type: "int", nullable: true, comment: "MASZONSKI (dedyk.) - pole wskazuje na zlecenie z którego powstało bieżące zlecenie"),
                    IS_ZALADUJ24 = table.Column<int>(type: "int", nullable: true),
                    IS_ZALADUJ24_DT = table.Column<DateTime>(type: "datetime", nullable: true),
                    IS_ZALADUJ24_USER_ID = table.Column<int>(type: "int", nullable: true),
                    IS_ZALADUJ24_NUMBER = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SENT_State = table.Column<int>(type: "int", nullable: true),
                    SENT_RefNo = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SENT_DT = table.Column<DateTime>(type: "datetime", nullable: true),
                    SENT = table.Column<int>(type: "int", nullable: true),
                    TRANSPOREON_ID = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TRANSPOREON_NUMBER = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    DO_KOLEJOWEGO = table.Column<short>(type: "smallint", nullable: true),
                    SZABLONY_ZLECEN_ID = table.Column<int>(type: "int", nullable: true),
                    SENT_GEO_LOK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    ZLEC_KOSZERNE = table.Column<short>(type: "smallint", nullable: true),
                    MYCIE_KOSZERNE = table.Column<short>(type: "smallint", nullable: true),
                    MATRYCA_MYCIA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "(0/1) czy procedura mycia określona na podstawie matrycy mycia"),
                    ZLEC_PAL_KLIENT_NAD_ID = table.Column<int>(type: "int", nullable: true),
                    UbezpGrupaTowarowaId = table.Column<int>(type: "int", nullable: true),
                    UbezpKlauzulaSpecjalnaId = table.Column<int>(type: "int", nullable: true),
                    UbezpOswZgodnosci = table.Column<int>(type: "int", nullable: true),
                    HereAverageKmCost = table.Column<double>(type: "float", nullable: true, comment: "Średni koszt za km"),
                    HereAverageHourCost = table.Column<double>(type: "float", nullable: true, comment: "Średni koszt godziny"),
                    HereRouteCost = table.Column<double>(type: "float", nullable: true, comment: "Koszt stały na trasę"),
                    HereCostCurrency = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    HereRouteCalculateType = table.Column<int>(type: "int", nullable: true, comment: "Wyznaczenie trasy: 1=szybka, 2=krótka, 3=optymalna"),
                    HereTollCalculate = table.Column<int>(type: "int", nullable: true, comment: "Liczy myto: 1=EUR"),
                    HereViolation = table.Column<int>(type: "int", nullable: true, comment: "Naruszanie ograniczeń: 1=zgoda, 0=brak zgody, 2=unikaj"),
                    HereFerries = table.Column<int>(type: "int", nullable: true, comment: "Unikaj promów"),
                    HereHighways = table.Column<int>(type: "int", nullable: true, comment: "Unikaj autostrad"),
                    HerePayments = table.Column<int>(type: "int", nullable: true, comment: "Unikaj płatności"),
                    HereTunels = table.Column<int>(type: "int", nullable: true, comment: "Unikaj tuneli"),
                    HereHazardous = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true, comment: "towary niebezpieczne"),
                    HereTollCalculateBaseCurr = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    HereTollCalculateOtherCurr = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MapLink = table.Column<string>(type: "varchar(4000)", unicode: false, maxLength: 4000, nullable: true),
                    VIP = table.Column<int>(type: "int", nullable: true),
                    IS_TRANS_REF_NUMBER = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    IS_TRANS_METHOD = table.Column<int>(type: "int", nullable: true),
                    IS_TRANS_TO_SEND = table.Column<int>(type: "int", nullable: true),
                    IS_TRANS_ORDER_ID = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    IS_TRANS_ORDER_NUMBER = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    IS_TRANS_ATTACH = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    USR_FLD_POPRZEDNI_SAMOCHOD_ID = table.Column<int>(type: "int", nullable: true),
                    usr_fld_TEAM = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    RESTRICTED_COUNTRIES = table.Column<string>(type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    RESTRICTED_AREAS = table.Column<string>(type: "varchar(1000)", unicode: false, maxLength: 1000, nullable: true),
                    PORTBASE_State = table.Column<int>(type: "int", nullable: true, comment: "Status wysyłki zgłoszenia do PORTBASE: -1=przekazane do wysyłki, -2=błędna struktura, 0=wysłane, 1=przyjęte, 2=odrzucone, 3=zaakceptowane"),
                    PORTBASE_Error = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Kod błędu w przypadku odrzucenia"),
                    PORTBASE_ProcessingState = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Status obsługi zgłoszenia wysłanego do PORTBASE")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZLECENIA_EXT", x => x.ID_ZLECENIA);
                });

            migrationBuilder.CreateTable(
                name: "ZLECENIA_INSTR_DOD",
                columns: table => new
                {
                    ID_ZLECENIA_INSTR_DOD = table.Column<int>(type: "int", nullable: false),
                    ZLECENIA_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Relacja do przesyłki, tab: ZLECENIA"),
                    KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Redundantnie na podstwie słownika INSTRUKCJE_DOD"),
                    WYMAGANY_OPIS = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Redundantnie na podstwie słownika INSTRUKCJE_DOD"),
                    UWAGI = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    WYMAGANA_DATA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Redundantnie na podstwie słownika INSTRUKCJE_DOD"),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    WYMAGANA_KWOTA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Redundantnie na podstwie słownika INSTRUKCJE_DOD"),
                    KWOTA = table.Column<double>(type: "float", nullable: true),
                    KWOTA_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    COD = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Redundantnie na podstwie słownika INSTRUKCJE_DOD"),
                    CENNIK = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Redundantnie na podstwie słownika INSTRUKCJE_DOD"),
                    OPCJONALNA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Redundantnie na podstwie słownika INSTRUKCJE_DOD"),
                    WYMAGANA_ILOSC = table.Column<int>(type: "int", nullable: true),
                    ILOSC = table.Column<double>(type: "float", nullable: true),
                    WYMAGANA_JT = table.Column<int>(type: "int", nullable: true),
                    ILOSC_JT = table.Column<double>(type: "float", nullable: true),
                    JT = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    WYMAGANY_OPIS_DOD = table.Column<int>(type: "int", nullable: true),
                    OPIS_DOD = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    WYMAGANY_CHECKBOX = table.Column<int>(type: "int", nullable: true),
                    CHECKBOX = table.Column<double>(type: "float", nullable: true),
                    DOT_KLIENTA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Redundantnie na podstwie słownika INSTRUKCJE_DOD"),
                    DOT_PRZEWOZNIKA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')", comment: "Redundantnie na podstwie słownika INSTRUKCJE_DOD")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZLECENIA_INSTR_DOD", x => x.ID_ZLECENIA_INSTR_DOD);
                });

            migrationBuilder.CreateTable(
                name: "ZLECENIA_M",
                columns: table => new
                {
                    ID_ZLECENIA_M = table.Column<int>(type: "int", nullable: false),
                    FRM_ID = table.Column<int>(type: "int", nullable: true),
                    NUMER = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    NUMER_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    NUMER_ROK = table.Column<int>(type: "int", nullable: true),
                    NUMER_MIES = table.Column<int>(type: "int", nullable: true),
                    NUMER_ZEWN = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    NUMER_HBL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NUMER_REJSU = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    JEZYK_ZLECENIA = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, defaultValueSql: "('PL')"),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    TYDZ = table.Column<int>(type: "int", nullable: true),
                    INCO = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    TYP = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KIERUNEK = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    STATUS = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    STATUS_EMISJA = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    ANULOWANE = table.Column<int>(type: "int", nullable: true),
                    ZAFAKTUROWANE = table.Column<int>(type: "int", nullable: true),
                    DOKUM_OK = table.Column<int>(type: "int", nullable: true),
                    KLIENT_ID = table.Column<int>(type: "int", nullable: true),
                    KLIENT_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KLIENT_NAZWA = table.Column<string>(type: "varchar(250)", unicode: false, maxLength: 250, nullable: true),
                    KLIENT_ADRES = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    KLIENT_MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KLIENT_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    KLIENT_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KLIENT_NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    KLIENT_TEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KLIENT_FAX = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PLATNIK_ID = table.Column<int>(type: "int", nullable: true),
                    PLATNIK_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    PLATNIK_NAZWA = table.Column<string>(type: "varchar(250)", unicode: false, maxLength: 250, nullable: true),
                    PLATNIK_ADRES = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    PLATNIK_MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PLATNIK_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    PLATNIK_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    PLATNIK_NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    ODDZIAL_ID = table.Column<int>(type: "int", nullable: true),
                    ODDZIAL_NAZWA = table.Column<string>(type: "varchar(250)", unicode: false, maxLength: 250, nullable: true),
                    ODDZIAL_ADRES = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    ODDZIAL_MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ODDZIAL_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    ODDZIAL_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    ZAL_U_NADAWCY = table.Column<int>(type: "int", nullable: true),
                    NADAWCA_ID = table.Column<int>(type: "int", nullable: true),
                    NADAWCA_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    NADAWCA_NAZWA = table.Column<string>(type: "varchar(250)", unicode: false, maxLength: 250, nullable: true),
                    NADAWCA_ADRES = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    NADAWCA_MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NADAWCA_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    NADAWCA_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    NADAWCA_NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    NADAWCA_TEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NADAWCA_FAX = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ROZL_U_ODBIORCY = table.Column<int>(type: "int", nullable: true),
                    ODBIORCA_ID = table.Column<int>(type: "int", nullable: true),
                    ODBIORCA_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    ODBIORCA_NAZWA = table.Column<string>(type: "varchar(250)", unicode: false, maxLength: 250, nullable: true),
                    ODBIORCA_ADRES = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    ODBIORCA_MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ODBIORCA_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    ODBIORCA_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    ODBIORCA_NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    ODBIORCA_TEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ODBIORCA_FAX = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ARMATOR_ID = table.Column<int>(type: "int", nullable: true),
                    ARMATOR = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    AGENT_ID = table.Column<int>(type: "int", nullable: true),
                    AGENT = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    ODPRAWA_CELNA_ID = table.Column<int>(type: "int", nullable: true),
                    ODPRAWA_CELNA = table.Column<string>(type: "varchar(250)", unicode: false, maxLength: 250, nullable: true),
                    SPEDYTOR_ID = table.Column<int>(type: "int", nullable: true),
                    SPEDYTOR = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPIEKUN = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TECZKA_ID = table.Column<int>(type: "int", nullable: true),
                    TECZKA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TRAFIK_ID = table.Column<int>(type: "int", nullable: true),
                    TRAFIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    POL_MIEJSCE_ID = table.Column<int>(type: "int", nullable: true),
                    POL_MIEJSCE = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    POL_MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    POL_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    ETD = table.Column<DateTime>(type: "datetime", nullable: true),
                    RTD = table.Column<DateTime>(type: "datetime", nullable: true),
                    POD_MIEJSCE_ID = table.Column<int>(type: "int", nullable: true),
                    POD_MIEJSCE = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    POD_MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    POD_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    ETA = table.Column<DateTime>(type: "datetime", nullable: true),
                    RTA = table.Column<DateTime>(type: "datetime", nullable: true),
                    NAZWA_STATKU = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TRASA = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    OPIS_LADUNKU = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OPAKOWANIE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KONTENER = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ILOSC = table.Column<double>(type: "float", nullable: true),
                    ILOSC_TEU = table.Column<double>(type: "float", nullable: true),
                    WAGA = table.Column<double>(type: "float", nullable: true),
                    OBJ = table.Column<double>(type: "float", nullable: true),
                    FAKTURA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    FAKTURA_PF = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    FAKTURA_K = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_1 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_3 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_4 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_5 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    UWAGI = table.Column<string>(type: "text", nullable: true),
                    USTALENIA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    USTALENIA_POTW = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    INFO_DLA_KSIEG = table.Column<string>(type: "varchar(250)", unicode: false, maxLength: 250, nullable: true),
                    OK = table.Column<int>(type: "int", nullable: true),
                    SA_KONTAKTY = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    SA_PODZLECENIA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    NUMER_MBL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    FV_NA_PLATNIKA = table.Column<int>(type: "int", nullable: true),
                    SERVICE_CONTRACT = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    TERMINAL_ID = table.Column<int>(type: "int", nullable: true),
                    TERMINAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    POL_PORT_NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    POD_PORT_NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TYP_KONTENERA = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    UBEZP_CARGO = table.Column<int>(type: "int", nullable: true),
                    CLENIE = table.Column<int>(type: "int", nullable: true),
                    CLENIE_TYP_ODPR = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    CLENIE_MIEJSCE = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    CLENIE_MIEJSCE_ID = table.Column<int>(type: "int", nullable: true),
                    CLENIE_DATA_WEJ = table.Column<DateTime>(type: "datetime", nullable: true),
                    CLENIE_DATA_WYJ = table.Column<DateTime>(type: "datetime", nullable: true),
                    CLENIE_UWAGI = table.Column<string>(type: "text", nullable: true),
                    UWAGI_POD = table.Column<string>(type: "text", nullable: true),
                    UWAGI_POTW = table.Column<string>(type: "text", nullable: true),
                    UBEZP_PROC_STAWKA = table.Column<double>(type: "float", nullable: true),
                    UBEZP_PROC = table.Column<double>(type: "float", nullable: true),
                    WARTOSC_LADUNKU = table.Column<double>(type: "float", nullable: true),
                    WARTOSC_LADUNKU_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    UBEZP_WARTOSC = table.Column<double>(type: "float", nullable: true),
                    CLENIE_DEMURRAGE = table.Column<int>(type: "int", nullable: true),
                    NADAWCA_KONT = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    ODBIORCA_KONT = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    NUMER_SC = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    CLENIE_KONTRAH = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    CLENIE_KONTRAH_ID = table.Column<int>(type: "int", nullable: true),
                    CLENIE_KONTRAH_KONT = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    CLENIE_POTW_ODPR = table.Column<int>(type: "int", nullable: true),
                    CLENIE_NR_DOK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    DATA_DOST_ODB = table.Column<DateTime>(type: "datetime", nullable: true),
                    MIEJSCE_DOST_ODB_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE_DOST_ODB = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    DATA_ROZL_STATKU = table.Column<DateTime>(type: "datetime", nullable: true),
                    UBEZP_ALL_IN = table.Column<int>(type: "int", nullable: true),
                    ODROCZONY_VAT = table.Column<int>(type: "int", nullable: true),
                    CHECKLISTOK = table.Column<int>(type: "int", nullable: true),
                    DATA_CUTOFF = table.Column<DateTime>(type: "datetime", nullable: true),
                    INCO_MIEJSCE = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true),
                    KLIENT_KONT = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    ARMATOR_KONT = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    AGENT_KONT = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    OPIEKUN_HANDL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ZWOLN_KONT_DLA_ID = table.Column<int>(type: "int", nullable: true),
                    ZWOLN_KONT_DLA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    STATUS_CELNY_ID = table.Column<int>(type: "int", nullable: true),
                    CLENIE_DATA_WAZN_DOK = table.Column<DateTime>(type: "datetime", nullable: true),
                    CELNA_NR_PRZEJSCIA_GR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    LOKALIZACJA_CLO_WW = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    LOKALIZACJA_CLO_WY = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    CELNA_IMPORT = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE_C_ZA_AGENCJA_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE_C_ZA_AGENCJA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    MIEJSCE_C_ZA_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE_C_ZA_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    MIEJSCE_C_ZA_ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    MIEJSCE_C_ZA_MIASTO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    MIEJSCE_C_ZA_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    MIEJSCE_C_ZA_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    MIEJSCE_C_ZA_TEL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MIEJSCE_C_ZA_KONT = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    MIEJSCE_C_ZA_STREFA = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    CELNA_EXPORT = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE_C_WY_AGENCJA_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE_C_WY_AGENCJA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    MIEJSCE_C_WY = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    MIEJSCE_C_WY_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE_C_WY_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    MIEJSCE_C_WY_ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    MIEJSCE_C_WY_MIASTO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    MIEJSCE_C_WY_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    MIEJSCE_C_WY_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    MIEJSCE_C_WY_TEL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MIEJSCE_C_WY_KONT = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    MIEJSCE_C_WY_STREFA = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    KONOSAMENT = table.Column<int>(type: "int", nullable: true),
                    SLOT_1 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_2 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_3 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_4 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_5 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    UBEZPIECZYCIEL_ID = table.Column<int>(type: "int", nullable: true),
                    UBEZPIECZYCIEL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    VAT_NA_SADZIE = table.Column<int>(type: "int", nullable: true),
                    POZYCJA_OFERTY = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    OFERTA_ID = table.Column<int>(type: "int", nullable: true),
                    OFERTA_POZYCJA_ID = table.Column<int>(type: "int", nullable: true),
                    OFERTA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    CELNA_BEZ_AUTO_ZLEC_C = table.Column<int>(type: "int", nullable: true),
                    KOPIA_Z_ID = table.Column<int>(type: "int", nullable: true),
                    DATA_CUTOFF_DOK = table.Column<DateTime>(type: "datetime", nullable: true),
                    STATUS_KOSZTY = table.Column<int>(type: "int", nullable: true),
                    DATA_WYK = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_CUTOFF_VGM = table.Column<DateTime>(type: "datetime", nullable: true),
                    PRZYCHODY_SP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Nazwa cennika SP dla przychodów"),
                    KOSZTY_SP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Nazwa cennika SP dla kosztów"),
                    DATA_DO_CENNIKA = table.Column<DateTime>(type: "datetime", nullable: true),
                    POTW_ODPR = table.Column<int>(type: "int", nullable: true),
                    TransitTime = table.Column<int>(type: "int", nullable: true),
                    UbezpGrupaTowarowaId = table.Column<int>(type: "int", nullable: true),
                    UbezpKlauzulaSpecjalnaId = table.Column<int>(type: "int", nullable: true),
                    UbezpOswZgodnosci = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZLECENIA_M", x => x.ID_ZLECENIA_M);
                });

            migrationBuilder.CreateTable(
                name: "ZLECENIA_M_CHECKLIST",
                columns: table => new
                {
                    ID_ZLECENIA_M_CHECKLIST = table.Column<int>(type: "int", nullable: false),
                    ZLECENIA_M_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Relacja do zlecenia morskiego"),
                    CHECKLISTDEFID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Relacja do pozycji checklisty"),
                    LP = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Lp"),
                    COMPLETED = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Flaga czy wykonano"),
                    COMPLETEDDT = table.Column<DateTime>(type: "datetime", nullable: true, comment: "DT kiedy wykonano"),
                    DESCRIPTION = table.Column<string>(type: "varchar(250)", unicode: false, maxLength: 250, nullable: true, comment: "Uwagi"),
                    CHANGEDT = table.Column<DateTime>(type: "datetime", nullable: true, comment: "DT kiedy zmieniono"),
                    CHANGEUSERID = table.Column<int>(type: "int", nullable: true, comment: "User który wykonał zmianę"),
                    ZLECENIA_RAIL_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Relacja do zlecenia morskiego"),
                    ExpirationDT = table.Column<DateTime>(type: "datetime", nullable: true, comment: "DT do kiedy")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZLECENIA_M_CHECKLIST", x => x.ID_ZLECENIA_M_CHECKLIST);
                });

            migrationBuilder.CreateTable(
                name: "ZLECENIA_M_LAD",
                columns: table => new
                {
                    ID_ZLECENIA_M_LAD = table.Column<int>(type: "int", nullable: false),
                    ZLECENIA_M_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do zlecenia"),
                    LP = table.Column<int>(type: "int", nullable: true, comment: "Lp"),
                    OPIS_ID = table.Column<int>(type: "int", nullable: true),
                    OPIS = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true, comment: "Opis towaru"),
                    OPAKOWANIE_ID = table.Column<int>(type: "int", nullable: true),
                    KOD_OPAK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Kod opakowania"),
                    OPAKOWANIE = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Symbol opakowania"),
                    PIETROWANIE = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy możliwe piętrowanie"),
                    KOD_UN = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "ADR - kod UN"),
                    KLASA_ADR = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "ADR - Klasa"),
                    GRUPA_ADR = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "ADR - Grupa"),
                    OPIS_ADR = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "ADR - Opis"),
                    ILOSC_DEKL = table.Column<int>(type: "int", nullable: true, comment: "Ilość pierwotna"),
                    ILOSC_RZ = table.Column<int>(type: "int", nullable: true, comment: "Ilość rzeczywista"),
                    WAGA_JEDN = table.Column<double>(type: "float", nullable: true, comment: "Waga deklarowana"),
                    WAGA_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Waga deklarowana"),
                    WAGA_RZ = table.Column<double>(type: "float", nullable: true, comment: "Waga rzeczywista"),
                    OBJ_JEDN = table.Column<double>(type: "float", nullable: true, comment: "Waga deklarowana"),
                    OBJ_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Objętość deklarowana"),
                    OBJ_RZ = table.Column<double>(type: "float", nullable: true, comment: "Objętość rzeczywista"),
                    DL_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Długość deklarowana"),
                    WY_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Wysokość deklarowana"),
                    SZ_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Szerokość deklarowana"),
                    DL_RZ = table.Column<double>(type: "float", nullable: true, comment: "Długość rzeczywista"),
                    WY_RZ = table.Column<double>(type: "float", nullable: true, comment: "Wysokość rzeczywista"),
                    SZ_RZ = table.Column<double>(type: "float", nullable: true, comment: "Szerokość rzeczywista"),
                    LDM_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Metry ładowne deklarowane"),
                    LDM_RZ = table.Column<double>(type: "float", nullable: true, comment: "Metry ładowne rzeczywiste"),
                    DLUZYCA_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Metry dłużycowe deklarowane"),
                    DLUZYCA_RZ = table.Column<double>(type: "float", nullable: true, comment: "Metry dłużycowe rzeczywiste"),
                    MP_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Miejsca paletowe deklarowane"),
                    MP_RZ = table.Column<double>(type: "float", nullable: true, comment: "Miejsca paletowe rzeczywiste"),
                    WAGA_KUBATUROWA = table.Column<double>(type: "float", nullable: true, comment: "Waga kubaturowa"),
                    WAGA_LADOWNA = table.Column<double>(type: "float", nullable: true, comment: "Waga ładowna"),
                    DLUZYCA_DOD = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy jest dodatek za dłużycę"),
                    DLUZYCA_DOD_KG = table.Column<double>(type: "float", nullable: true, comment: "Dodatkowe KG za dłużycę"),
                    WAGA_OBL = table.Column<double>(type: "float", nullable: true, comment: "Waga obliczeniowa"),
                    WARTOSC_LADUNKU = table.Column<double>(type: "float", nullable: true, comment: "Wartość ładunku"),
                    WARTOSC_LADUNKU_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Wartość ładunku - waluta"),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    REF_1 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_3 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_4 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_5 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    MODEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    INDEKS = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZLECENIA_M_LAD", x => x.ID_ZLECENIA_M_LAD);
                });

            migrationBuilder.CreateTable(
                name: "ZLECENIA_M_POWIADOMIENIA",
                columns: table => new
                {
                    ID_ZLECENIA_M_POWIADOMIENIA = table.Column<int>(type: "int", nullable: false),
                    ZLECENIA_M_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do zlecenia, tab: ZLECENIA_M_ID"),
                    KTO = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Do kogo np. ZLEC, PLATN, PRZEWOZNIK, INNY"),
                    TYP = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true, comment: "Typ powiadomienia np. SMS, EMAIL etc"),
                    CO_WYZWALA = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true, comment: "Statusy wyzwalające zapisane jako ciąg rozdzielany ;"),
                    EMAIL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true, comment: "Adres email na jaki zostanie wysłane powiadomienie"),
                    KRAJ = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "Symbol kraju"),
                    TEL_PREFIX = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Prefix telefonu"),
                    TEL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nr telefonu"),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia powiadomoenia (=ZLECENIA.DATA_ZLECENIA)"),
                    DT = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data/Godzina wyzwolenia powiadomienia"),
                    TRESC = table.Column<string>(type: "varchar(600)", unicode: false, maxLength: 600, nullable: true, comment: "Treść komunikatu")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZLECENIA_M_POWIADOMIENIA", x => x.ID_ZLECENIA_M_POWIADOMIENIA);
                },
                comment: "Powiadomienia do zleceń morskich - detal do tabeli ZLECENIA_M");

            migrationBuilder.CreateTable(
                name: "ZLECENIA_M_PRZELICZNIKI",
                columns: table => new
                {
                    ID_ZLECENIA_M_PRZELICZNIKI = table.Column<int>(type: "int", nullable: false),
                    ZLECENIA_M_ID = table.Column<int>(type: "int", nullable: true),
                    WARTOSC_Z = table.Column<int>(type: "int", nullable: true),
                    JM_Z = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    WARTOSC_DO = table.Column<int>(type: "int", nullable: true),
                    JM_DO = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    JT = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZLECENIA_M_PRZELICZNIKI", x => x.ID_ZLECENIA_M_PRZELICZNIKI);
                });

            migrationBuilder.CreateTable(
                name: "ZLECENIA_M_ZA_WY",
                columns: table => new
                {
                    ID_ZLECENIA_M_ZA_WY = table.Column<int>(type: "int", nullable: false),
                    TYP = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TELEFONY = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    DYSP_GODZ_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DYSP_GODZ_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_RZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_RZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_RZ_K = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_RZ_K = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_RZ_P = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_RZ_P = table.Column<DateTime>(type: "datetime", nullable: true),
                    DOD_OPIS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DOD_OPIS_RZ = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPOZNIENIE = table.Column<double>(type: "float", nullable: true),
                    OPOZNIENIE_POWOD = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KOR_GODZ = table.Column<int>(type: "int", nullable: true),
                    LADUNEK_ID = table.Column<int>(type: "int", nullable: true),
                    LADUNEK = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    TEMP_PRZEWOZU_O = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TEMP_PRZEWOZU_O_RZ = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    LICZNIK = table.Column<double>(type: "float", nullable: true),
                    WAGA = table.Column<double>(type: "float", nullable: true),
                    WAGA_RZ = table.Column<double>(type: "float", nullable: true),
                    WAGA_ZESTAWU = table.Column<double>(type: "float", nullable: true),
                    JEDN_WAGI = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    PALETY = table.Column<double>(type: "float", nullable: true),
                    PALETY_WYM = table.Column<double>(type: "float", nullable: true),
                    JM = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PALIWO = table.Column<double>(type: "float", nullable: true, comment: "zużyte paliwo w trakcie zdarzenia"),
                    WYJAZD_ID = table.Column<int>(type: "int", nullable: true),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    GEO_LONGI = table.Column<double>(type: "float", nullable: true),
                    GEO_LAT = table.Column<double>(type: "float", nullable: true),
                    INNE_UWAGI = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WYSYLAC_UWAGI = table.Column<int>(type: "int", nullable: true),
                    CZAS_TRWANIA = table.Column<double>(type: "float", nullable: true),
                    MAX_OPOZN = table.Column<double>(type: "float", nullable: true),
                    PUSTY = table.Column<int>(type: "int", nullable: true),
                    IDPOIEXTN = table.Column<long>(type: "bigint", nullable: true, defaultValueSql: "('0')"),
                    ZA_WY_NADRZ_ID = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    ZA_WY_GLOWNE_ID = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    PORT_NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PORT_SYMBOL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KONTENER_ID = table.Column<int>(type: "int", nullable: true),
                    KONTENER = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KONTENER2_ID = table.Column<int>(type: "int", nullable: true),
                    KONTENER2 = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    AUTOMAT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    LP_PW = table.Column<int>(type: "int", nullable: true),
                    PROMY_ID = table.Column<int>(type: "int", nullable: true),
                    GEO_LONGI_RZ = table.Column<double>(type: "float", nullable: true),
                    GEO_LAT_RZ = table.Column<double>(type: "float", nullable: true),
                    ANUL_ZL = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    ANUL_PW = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    PALIWO_LICZNIK = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')", comment: "końcowy stan licznika paliwa"),
                    PIETROWANIE = table.Column<int>(type: "int", nullable: true),
                    ETA_EVENTS_ID = table.Column<int>(type: "int", nullable: true),
                    GF_DEF_ID = table.Column<int>(type: "int", nullable: true, comment: "id definicji geofencingu (referencja do tabeli GF_DEF)"),
                    ILOSC_RZ = table.Column<double>(type: "float", nullable: true),
                    LP_ZLECENIA_ZB = table.Column<int>(type: "int", nullable: true),
                    DLUGOSC = table.Column<double>(type: "float", nullable: true),
                    WYSOKOSC = table.Column<double>(type: "float", nullable: true),
                    SZEROKOSC = table.Column<double>(type: "float", nullable: true),
                    OBJ = table.Column<double>(type: "float", nullable: true),
                    LDM = table.Column<double>(type: "float", nullable: true),
                    KONTAKT = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    EMAIL = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true),
                    DATA_RZ_W = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_RZ_W = table.Column<DateTime>(type: "datetime", nullable: true),
                    NIE_WYSYLAJ = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    REF_1 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_3 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_4 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_5 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OBJ_RZ = table.Column<double>(type: "float", nullable: true),
                    PO_PRZELADUNKU = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    ADRES = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true),
                    TRASA_KM = table.Column<int>(type: "int", nullable: true),
                    TRASA_KM_ROSN = table.Column<int>(type: "int", nullable: true),
                    TRASA_CZAS = table.Column<int>(type: "int", nullable: true),
                    TRASA_CZAS_ROSN = table.Column<int>(type: "int", nullable: true),
                    AWIZACJA_PRZED = table.Column<DateTime>(type: "datetime", nullable: true),
                    ETA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DisableETA = table.Column<int>(type: "int", nullable: true, comment: "Wyłączenie analizy ETA")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZLECENIA_M_ZA_WY", x => x.ID_ZLECENIA_M_ZA_WY);
                });

            migrationBuilder.CreateTable(
                name: "ZLECENIA_OST_LADUNKI",
                columns: table => new
                {
                    ID_ZLECENIA_OST_LADUNKI = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ZLECENIE_ID = table.Column<int>(type: "int", nullable: true),
                    TYP = table.Column<int>(type: "int", nullable: true),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    KOMORA = table.Column<int>(type: "int", nullable: true),
                    LADUNEK_ID = table.Column<int>(type: "int", nullable: true),
                    GRUPA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZLECENIA_OST_LADUNKI", x => x.ID_ZLECENIA_OST_LADUNKI);
                });

            migrationBuilder.CreateTable(
                name: "ZLECENIA_OTH_POZ",
                columns: table => new
                {
                    ID_ZLECENIA_OTH_POZ = table.Column<int>(type: "int", nullable: false),
                    ZLECENIE_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Relacja do zlecenia - tab: ZLECENIA lub inne"),
                    TYP = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: false, defaultValueSql: "('')", comment: "typ zlecenia ZC - Celne"),
                    LP = table.Column<int>(type: "int", nullable: true, comment: "Lp"),
                    ILOSC = table.Column<double>(type: "float", nullable: true),
                    OTH_POZ_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do słownika pozycji - tab: OTH_POZ"),
                    OPIS_DOD = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZLECENIA_OTH_POZ", x => x.ID_ZLECENIA_OTH_POZ);
                },
                comment: "Usługi inne - detal do tabeli ZLECENIA");

            migrationBuilder.CreateTable(
                name: "ZLECENIA_POWIADOMIENIA",
                columns: table => new
                {
                    ID_ZLECENIA_POWIADOMIENIA = table.Column<int>(type: "int", nullable: false),
                    ZLECENIA_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do przesyłki, tab: ZLECENIA"),
                    KTO = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Do kogo np. ZLEC, PLATN, PRZEWOZNIK, INNY"),
                    TYP = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true, comment: "Typ powiadomienia np. SMS, EMAIL etc"),
                    CO_WYZWALA = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true, comment: "Statusy wyzwalające zapisane jako ciąg rozdzielany ;"),
                    EMAIL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true, comment: "Adres email na jaki zostanie wysłane powiadomienie"),
                    KRAJ = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "Symbol kraju"),
                    TEL_PREFIX = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Prefix telefonu"),
                    TEL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nr telefonu"),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia powiadomoenia (=ZLECENIA.DATA_ZLECENIA)"),
                    DT = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data/Godzina wyzwolenia powiadomienia"),
                    TRESC = table.Column<string>(type: "varchar(600)", unicode: false, maxLength: 600, nullable: true, comment: "Treść komunikatu")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZLECENIA_POWIADOMIENIA", x => x.ID_ZLECENIA_POWIADOMIENIA);
                },
                comment: "Powiadomienia do zleceń - detal do tabeli ZLECENIA");

            migrationBuilder.CreateTable(
                name: "ZLECENIA_POZ_FAKT",
                columns: table => new
                {
                    ID_ZLECENIA_POZ_FAKT = table.Column<int>(type: "int", nullable: false),
                    ZLECENIE_ID = table.Column<int>(type: "int", nullable: true),
                    FAKTURY_POZYCJE_ID = table.Column<int>(type: "int", nullable: true),
                    FAKTURY_ID = table.Column<int>(type: "int", nullable: true),
                    FAKTURY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    RODZ_PRZYCHODOW = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    TYTUL_ID = table.Column<int>(type: "int", nullable: true),
                    TYTUL = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    TYTUL_OPIS = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    PKWIU = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    JM = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    ILOSC = table.Column<double>(type: "float", nullable: true),
                    NETTO_WARTOSC = table.Column<double>(type: "float", nullable: true),
                    VAT_ID = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    VAT_STAWKA = table.Column<double>(type: "float", nullable: true),
                    WALUTA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KURS_WALUTY = table.Column<double>(type: "float", nullable: true),
                    KURSY_WALUT_ID = table.Column<int>(type: "int", nullable: true),
                    NR_TABELI_KURSOW = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    DATA_TABELI_KURSOW = table.Column<DateTime>(type: "datetime", nullable: true),
                    KLIENT_ID = table.Column<int>(type: "int", nullable: true),
                    KLIENT = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TYP = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    RODZ_KOSZTOW = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: true),
                    KONTRAH = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    CENA_JEDN = table.Column<double>(type: "float", nullable: true),
                    PROMY_ID = table.Column<int>(type: "int", nullable: true),
                    KOR_DO_ZERA = table.Column<short>(type: "smallint", nullable: true),
                    WALUTA_FV = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    RM = table.Column<int>(type: "int", nullable: true),
                    RO = table.Column<int>(type: "int", nullable: true),
                    TYTUL_KOD = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    JAK_ROZL = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "FV/NO/RW"),
                    KONTENERY_ID = table.Column<int>(type: "int", nullable: true),
                    KONTENERY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    RKNZ = table.Column<int>(type: "int", nullable: true),
                    RKNZ_WARTOSC = table.Column<double>(type: "float", nullable: true),
                    RKNZ_WARTOSC_FV = table.Column<double>(type: "float", nullable: true),
                    RKNZ_KALK_TRASY_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do kalulacji na ZB (używane w RKNZ)"),
                    RKNZ_FV_POZ_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do pozycji faktury (używane w RKNZ)"),
                    RKNZ_RW_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do RW (używane w RKTNP)"),
                    WPROW_LOK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    WPROW_DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    MASZONSKI_MASTER_ZLEC_POZ_FAKT_ID = table.Column<int>(type: "int", nullable: true, comment: "MASZONSKI (dedyk.) - pole wskazuje na poz. dod. zlecenie z którego powstała bieżąca pozycja"),
                    MASZONSKI_MASTER_ZLEC_POZ_FAKT_K_ID = table.Column<int>(type: "int", nullable: true, comment: "MASZONSKI (dedyk.) - pole wskazuje na poz. dod. koszt. zlecenie z którego powstała bieżąca pozycja"),
                    UBEZP = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZLECENIA_POZ_FAKT", x => x.ID_ZLECENIA_POZ_FAKT);
                });

            migrationBuilder.CreateTable(
                name: "ZLECENIA_PROMY",
                columns: table => new
                {
                    ID_ZLECENIA_PROMY = table.Column<int>(type: "int", nullable: false),
                    ZLECENIA_ID = table.Column<int>(type: "int", nullable: true),
                    PROMY_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZLECENIA_PROMY", x => x.ID_ZLECENIA_PROMY);
                });

            migrationBuilder.CreateTable(
                name: "ZLECENIA_PRZEWOZNICY",
                columns: table => new
                {
                    ID_ZLECENIA_PRZEWOZNICY = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ZLECENIA_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')"),
                    KONTRAH_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZLECENIA_PRZEWOZNICY", x => x.ID_ZLECENIA_PRZEWOZNICY);
                });

            migrationBuilder.CreateTable(
                name: "ZLECENIA_RAIL",
                columns: table => new
                {
                    ID_ZLECENIA_RAIL = table.Column<int>(type: "int", nullable: false),
                    FRM_ID = table.Column<int>(type: "int", nullable: true),
                    NUMER = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    NUMER_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    NUMER_ROK = table.Column<int>(type: "int", nullable: true),
                    NUMER_MIES = table.Column<int>(type: "int", nullable: true),
                    NUMER_ZEWN = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    JEZYK_ZLECENIA = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, defaultValueSql: "('PL')"),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_CUTOFF = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_CUTOFF_DOK = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_CUTOFF_VGM = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_WYK = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_DO_CENNIKA = table.Column<DateTime>(type: "datetime", nullable: true),
                    TYDZ = table.Column<int>(type: "int", nullable: true),
                    INCO = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    INCO_MIEJSCE = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true),
                    TYP = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KIERUNEK = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    STATUS = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_1 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_2 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_3 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_4 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_5 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    STATUS_EMISJA = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    ANULOWANE = table.Column<int>(type: "int", nullable: true),
                    ZAFAKTUROWANE = table.Column<int>(type: "int", nullable: true),
                    DOKUM_OK = table.Column<int>(type: "int", nullable: true),
                    STATUS_KOSZTY = table.Column<int>(type: "int", nullable: true),
                    KLIENT_ID = table.Column<int>(type: "int", nullable: true),
                    KLIENT_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KLIENT_NAZWA = table.Column<string>(type: "varchar(250)", unicode: false, maxLength: 250, nullable: true),
                    KLIENT_ADRES = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    KLIENT_MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KLIENT_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    KLIENT_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    KLIENT_NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    KLIENT_TEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KLIENT_FAX = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KLIENT_KONT = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    PLATNIK_ID = table.Column<int>(type: "int", nullable: true),
                    PLATNIK_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    PLATNIK_NAZWA = table.Column<string>(type: "varchar(250)", unicode: false, maxLength: 250, nullable: true),
                    PLATNIK_ADRES = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    PLATNIK_MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PLATNIK_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    PLATNIK_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    PLATNIK_NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    FV_NA_PLATNIKA = table.Column<int>(type: "int", nullable: true),
                    ODDZIAL_ID = table.Column<int>(type: "int", nullable: true),
                    ODDZIAL_NAZWA = table.Column<string>(type: "varchar(250)", unicode: false, maxLength: 250, nullable: true),
                    ODDZIAL_ADRES = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    ODDZIAL_MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ODDZIAL_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    ODDZIAL_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    ZAL_U_NADAWCY = table.Column<int>(type: "int", nullable: true),
                    NADAWCA_ID = table.Column<int>(type: "int", nullable: true),
                    NADAWCA_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    NADAWCA_NAZWA = table.Column<string>(type: "varchar(250)", unicode: false, maxLength: 250, nullable: true),
                    NADAWCA_ADRES = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    NADAWCA_MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NADAWCA_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    NADAWCA_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    NADAWCA_NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    NADAWCA_TEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NADAWCA_FAX = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NADAWCA_KONT = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    ROZL_U_ODBIORCY = table.Column<int>(type: "int", nullable: true),
                    ODBIORCA_ID = table.Column<int>(type: "int", nullable: true),
                    ODBIORCA_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    ODBIORCA_NAZWA = table.Column<string>(type: "varchar(250)", unicode: false, maxLength: 250, nullable: true),
                    ODBIORCA_ADRES = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    ODBIORCA_MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ODBIORCA_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    ODBIORCA_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    ODBIORCA_NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    ODBIORCA_TEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ODBIORCA_FAX = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ODBIORCA_KONT = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    SPEDYTOR_ID = table.Column<int>(type: "int", nullable: true),
                    SPEDYTOR = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPIEKUN = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPIEKUN_HANDL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TECZKA_ID = table.Column<int>(type: "int", nullable: true),
                    TECZKA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TRAFIK_ID = table.Column<int>(type: "int", nullable: true),
                    TRAFIK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    POL_MIEJSCE_ID = table.Column<int>(type: "int", nullable: true),
                    POL_MIEJSCE = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    POL_MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    POL_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    POL_PORT_NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ETD = table.Column<DateTime>(type: "datetime", nullable: true),
                    RTD = table.Column<DateTime>(type: "datetime", nullable: true),
                    POD_MIEJSCE_ID = table.Column<int>(type: "int", nullable: true),
                    POD_MIEJSCE = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    POD_MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    POD_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    POD_PORT_NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ETA = table.Column<DateTime>(type: "datetime", nullable: true),
                    RTA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_DOST_ODB = table.Column<DateTime>(type: "datetime", nullable: true),
                    MIEJSCE_DOST_ODB_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE_DOST_ODB = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    DATA_ROZL_STATKU = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZWOLN_KONT_DLA_ID = table.Column<int>(type: "int", nullable: true),
                    ZWOLN_KONT_DLA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    TRASA = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    OPIS_LADUNKU = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OPAKOWANIE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TYP_KONTENERA = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    KONTENER = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ILOSC = table.Column<double>(type: "float", nullable: true),
                    ILOSC_TEU = table.Column<double>(type: "float", nullable: true),
                    WAGA = table.Column<double>(type: "float", nullable: true),
                    OBJ = table.Column<double>(type: "float", nullable: true),
                    FAKTURA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    FAKTURA_PF = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    FAKTURA_K = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_1 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_3 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_4 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_5 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    UBEZP_CARGO = table.Column<int>(type: "int", nullable: true),
                    UBEZP_PROC_STAWKA = table.Column<double>(type: "float", nullable: true),
                    UBEZP_PROC = table.Column<double>(type: "float", nullable: true),
                    UBEZP_ALL_IN = table.Column<int>(type: "int", nullable: true),
                    UBEZPIECZYCIEL_ID = table.Column<int>(type: "int", nullable: true),
                    UBEZPIECZYCIEL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    WARTOSC_LADUNKU = table.Column<double>(type: "float", nullable: true),
                    WARTOSC_LADUNKU_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    UBEZP_WARTOSC = table.Column<double>(type: "float", nullable: true),
                    CLENIE = table.Column<int>(type: "int", nullable: true),
                    STATUS_CELNY_ID = table.Column<int>(type: "int", nullable: true),
                    POTW_ODPR = table.Column<int>(type: "int", nullable: true),
                    CLENIE_TYP_ODPR = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    CLENIE_KONTRAH = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    CLENIE_KONTRAH_ID = table.Column<int>(type: "int", nullable: true),
                    CLENIE_KONTRAH_KONT = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    CLENIE_MIEJSCE = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    CLENIE_MIEJSCE_ID = table.Column<int>(type: "int", nullable: true),
                    CLENIE_DATA_WEJ = table.Column<DateTime>(type: "datetime", nullable: true),
                    CLENIE_DATA_WYJ = table.Column<DateTime>(type: "datetime", nullable: true),
                    CLENIE_UWAGI = table.Column<string>(type: "text", nullable: true),
                    CLENIE_DEMURRAGE = table.Column<int>(type: "int", nullable: true),
                    CLENIE_POTW_ODPR = table.Column<int>(type: "int", nullable: true),
                    CLENIE_NR_DOK = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    CLENIE_DATA_WAZN_DOK = table.Column<DateTime>(type: "datetime", nullable: true),
                    CELNA_NR_PRZEJSCIA_GR = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    CELNA_BEZ_AUTO_ZLEC_C = table.Column<int>(type: "int", nullable: true),
                    ODPRAWA_CELNA_ID = table.Column<int>(type: "int", nullable: true),
                    ODPRAWA_CELNA = table.Column<string>(type: "varchar(250)", unicode: false, maxLength: 250, nullable: true),
                    ODROCZONY_VAT = table.Column<int>(type: "int", nullable: true),
                    VAT_NA_SADZIE = table.Column<int>(type: "int", nullable: true),
                    LOKALIZACJA_CLO_WW = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    LOKALIZACJA_CLO_WY = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    CELNA_IMPORT = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE_C_ZA_AGENCJA_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE_C_ZA_AGENCJA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    MIEJSCE_C_ZA_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE_C_ZA_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    MIEJSCE_C_ZA_ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    MIEJSCE_C_ZA_MIASTO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    MIEJSCE_C_ZA_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    MIEJSCE_C_ZA_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    MIEJSCE_C_ZA_TEL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MIEJSCE_C_ZA_KONT = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    MIEJSCE_C_ZA_STREFA = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    CELNA_EXPORT = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE_C_WY_AGENCJA_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE_C_WY_AGENCJA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    MIEJSCE_C_WY = table.Column<string>(type: "varchar(1)", unicode: false, maxLength: 1, nullable: true),
                    MIEJSCE_C_WY_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE_C_WY_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    MIEJSCE_C_WY_ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    MIEJSCE_C_WY_MIASTO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    MIEJSCE_C_WY_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    MIEJSCE_C_WY_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    MIEJSCE_C_WY_TEL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MIEJSCE_C_WY_KONT = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    MIEJSCE_C_WY_STREFA = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    OPERATOR_ID = table.Column<int>(type: "int", nullable: true),
                    OPERATOR = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    OPERATOR_KONT = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    NAZWA_POCIAGU = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    AWIZACJA_RAIL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    UWAGI = table.Column<string>(type: "text", nullable: true),
                    UWAGI_POD = table.Column<string>(type: "text", nullable: true),
                    UWAGI_POTW = table.Column<string>(type: "text", nullable: true),
                    USTALENIA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    USTALENIA_POTW = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    INFO_DLA_KSIEG = table.Column<string>(type: "varchar(250)", unicode: false, maxLength: 250, nullable: true),
                    KONOSAMENT = table.Column<int>(type: "int", nullable: true),
                    OK = table.Column<int>(type: "int", nullable: true),
                    SA_KONTAKTY = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    SA_PODZLECENIA = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    CheckListOk = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    POZYCJA_OFERTY = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    OFERTA_ID = table.Column<int>(type: "int", nullable: true),
                    OFERTA_POZYCJA_ID = table.Column<int>(type: "int", nullable: true),
                    OFERTA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KOPIA_Z_ID = table.Column<int>(type: "int", nullable: true),
                    PRZYCHODY_SP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Nazwa cennika SP dla przychodów"),
                    KOSZTY_SP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Nazwa cennika SP dla kosztów"),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    UbezpGrupaTowarowaId = table.Column<int>(type: "int", nullable: true),
                    UbezpKlauzulaSpecjalnaId = table.Column<int>(type: "int", nullable: true),
                    UbezpOswZgodnosci = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZLECENIA_RAIL", x => x.ID_ZLECENIA_RAIL);
                });

            migrationBuilder.CreateTable(
                name: "ZLECENIA_RAIL_CheckList",
                columns: table => new
                {
                    ID_ZLECENIA_RAIL_CheckList = table.Column<int>(type: "int", nullable: false),
                    ZLECENIA_RAIL_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Relacja do zlecenia morskiego"),
                    CheckListDefId = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Relacja do pozycji checklisty"),
                    Lp = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Lp"),
                    Completed = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Flaga czy wykonano"),
                    CompletedDT = table.Column<DateTime>(type: "datetime", nullable: true, comment: "DT kiedy wykonano"),
                    Description = table.Column<string>(type: "varchar(250)", unicode: false, maxLength: 250, nullable: true, comment: "Uwagi"),
                    ExpirationDT = table.Column<DateTime>(type: "datetime", nullable: true, comment: "DT do kiedy"),
                    ChangeDT = table.Column<DateTime>(type: "datetime", nullable: true, comment: "DT kiedy zmieniono"),
                    ChangeUserId = table.Column<int>(type: "int", nullable: true, comment: "User który wykonał zmianę")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZLECENIA_RAIL_CheckList", x => x.ID_ZLECENIA_RAIL_CheckList);
                });

            migrationBuilder.CreateTable(
                name: "ZLECENIA_RAIL_LAD",
                columns: table => new
                {
                    ID_ZLECENIA_RAIL_LAD = table.Column<int>(type: "int", nullable: false),
                    ZLECENIA_RAIL_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do zlecenia"),
                    LP = table.Column<int>(type: "int", nullable: true, comment: "Lp"),
                    OPIS_ID = table.Column<int>(type: "int", nullable: true),
                    OPIS = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true, comment: "Opis towaru"),
                    OPAKOWANIE_ID = table.Column<int>(type: "int", nullable: true),
                    KOD_OPAK = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true, comment: "Kod opakowania"),
                    OPAKOWANIE = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Symbol opakowania"),
                    PIETROWANIE = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy możliwe piętrowanie"),
                    KOD_UN = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "ADR - kod UN"),
                    KLASA_ADR = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "ADR - Klasa"),
                    GRUPA_ADR = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "ADR - Grupa"),
                    OPIS_ADR = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "ADR - Opis"),
                    ILOSC_DEKL = table.Column<int>(type: "int", nullable: true, comment: "Ilość pierwotna"),
                    ILOSC_RZ = table.Column<int>(type: "int", nullable: true, comment: "Ilość rzeczywista"),
                    WAGA_JEDN = table.Column<double>(type: "float", nullable: true, comment: "Waga deklarowana"),
                    WAGA_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Waga deklarowana"),
                    WAGA_RZ = table.Column<double>(type: "float", nullable: true, comment: "Waga rzeczywista"),
                    OBJ_JEDN = table.Column<double>(type: "float", nullable: true, comment: "Waga deklarowana"),
                    OBJ_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Objętość deklarowana"),
                    OBJ_RZ = table.Column<double>(type: "float", nullable: true, comment: "Objętość rzeczywista"),
                    DL_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Długość deklarowana"),
                    WY_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Wysokość deklarowana"),
                    SZ_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Szerokość deklarowana"),
                    DL_RZ = table.Column<double>(type: "float", nullable: true, comment: "Długość rzeczywista"),
                    WY_RZ = table.Column<double>(type: "float", nullable: true, comment: "Wysokość rzeczywista"),
                    SZ_RZ = table.Column<double>(type: "float", nullable: true, comment: "Szerokość rzeczywista"),
                    LDM_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Metry ładowne deklarowane"),
                    LDM_RZ = table.Column<double>(type: "float", nullable: true, comment: "Metry ładowne rzeczywiste"),
                    DLUZYCA_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Metry dłużycowe deklarowane"),
                    DLUZYCA_RZ = table.Column<double>(type: "float", nullable: true, comment: "Metry dłużycowe rzeczywiste"),
                    MP_DEKL = table.Column<double>(type: "float", nullable: true, comment: "Miejsca paletowe deklarowane"),
                    MP_RZ = table.Column<double>(type: "float", nullable: true, comment: "Miejsca paletowe rzeczywiste"),
                    WAGA_KUBATUROWA = table.Column<double>(type: "float", nullable: true, comment: "Waga kubaturowa"),
                    WAGA_LADOWNA = table.Column<double>(type: "float", nullable: true, comment: "Waga ładowna"),
                    DLUZYCA_DOD = table.Column<int>(type: "int", nullable: true, comment: "Flaga, czy jest dodatek za dłużycę"),
                    DLUZYCA_DOD_KG = table.Column<double>(type: "float", nullable: true, comment: "Dodatkowe KG za dłużycę"),
                    WAGA_OBL = table.Column<double>(type: "float", nullable: true, comment: "Waga obliczeniowa"),
                    WARTOSC_LADUNKU = table.Column<double>(type: "float", nullable: true, comment: "Wartość ładunku"),
                    WARTOSC_LADUNKU_WAL = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true, comment: "Wartość ładunku - waluta"),
                    REF_1 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_3 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_4 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_5 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    MODEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    INDEKS = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NHM = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZLECENIA_RAIL_LAD", x => x.ID_ZLECENIA_RAIL_LAD);
                });

            migrationBuilder.CreateTable(
                name: "ZLECENIA_RAIL_POWIADOMIENIA",
                columns: table => new
                {
                    ID_ZLECENIA_RAIL_POWIADOMIENIA = table.Column<int>(type: "int", nullable: false),
                    ZLECENIA_RAIL_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do zlecenia, tab: ZLECENIA_RAIL_ID"),
                    KTO = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "Do kogo np. ZLEC, PLATN, PRZEWOZNIK, INNY"),
                    TYP = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true, comment: "Typ powiadomienia np. SMS, EMAIL etc"),
                    CO_WYZWALA = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true, comment: "Statusy wyzwalające zapisane jako ciąg rozdzielany ;"),
                    EMAIL = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true, comment: "Adres email na jaki zostanie wysłane powiadomienie"),
                    KRAJ = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true, comment: "Symbol kraju"),
                    TEL_PREFIX = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Prefix telefonu"),
                    TEL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nr telefonu"),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia powiadomoenia (=ZLECENIA.DATA_ZLECENIA)"),
                    DT = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data/Godzina wyzwolenia powiadomienia"),
                    TRESC = table.Column<string>(type: "varchar(600)", unicode: false, maxLength: 600, nullable: true, comment: "Treść komunikatu")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZLECENIA_RAIL_POWIADOMIENIA", x => x.ID_ZLECENIA_RAIL_POWIADOMIENIA);
                });

            migrationBuilder.CreateTable(
                name: "ZLECENIA_RAIL_PRZELICZNIKI",
                columns: table => new
                {
                    ID_ZLECENIA_RAIL_PRZELICZNIKI = table.Column<int>(type: "int", nullable: false),
                    ZLECENIA_RAIL_ID = table.Column<int>(type: "int", nullable: true),
                    WARTOSC_Z = table.Column<int>(type: "int", nullable: true),
                    JM_Z = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    WARTOSC_DO = table.Column<int>(type: "int", nullable: true),
                    JM_DO = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    JT = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZLECENIA_RAIL_PRZELICZNIKI", x => x.ID_ZLECENIA_RAIL_PRZELICZNIKI);
                });

            migrationBuilder.CreateTable(
                name: "ZLECENIA_RAIL_ZA_WY",
                columns: table => new
                {
                    ID_ZLECENIA_RAIL_ZA_WY = table.Column<int>(type: "int", nullable: false),
                    TYP = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    LP_PW = table.Column<int>(type: "int", nullable: true),
                    LP_ZLECENIA_ZB = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TELEFONY = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    EMAIL = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true),
                    KONTAKT = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    DYSP_GODZ_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DYSP_GODZ_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_RZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_RZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_RZ_K = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_RZ_K = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_RZ_P = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_RZ_P = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_RZ_W = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_RZ_W = table.Column<DateTime>(type: "datetime", nullable: true),
                    DOD_OPIS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DOD_OPIS_RZ = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPOZNIENIE = table.Column<double>(type: "float", nullable: true),
                    OPOZNIENIE_POWOD = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KOR_GODZ = table.Column<int>(type: "int", nullable: true),
                    LADUNEK_ID = table.Column<int>(type: "int", nullable: true),
                    LADUNEK = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    TEMP_PRZEWOZU_O = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TEMP_PRZEWOZU_O_RZ = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    LICZNIK = table.Column<double>(type: "float", nullable: true),
                    WAGA = table.Column<double>(type: "float", nullable: true),
                    WAGA_RZ = table.Column<double>(type: "float", nullable: true),
                    WAGA_ZESTAWU = table.Column<double>(type: "float", nullable: true),
                    JEDN_WAGI = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    PALETY = table.Column<double>(type: "float", nullable: true),
                    ILOSC_RZ = table.Column<double>(type: "float", nullable: true),
                    PALETY_WYM = table.Column<double>(type: "float", nullable: true),
                    JM = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DLUGOSC = table.Column<double>(type: "float", nullable: true),
                    WYSOKOSC = table.Column<double>(type: "float", nullable: true),
                    SZEROKOSC = table.Column<double>(type: "float", nullable: true),
                    OBJ = table.Column<double>(type: "float", nullable: true),
                    OBJ_RZ = table.Column<double>(type: "float", nullable: true),
                    LDM = table.Column<double>(type: "float", nullable: true),
                    PALIWO = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')", comment: "zużyte paliwo w trakcie zdarzenia"),
                    PALIWO_LICZNIK = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')", comment: "końcowy stan licznika paliwa"),
                    WYJAZD_ID = table.Column<int>(type: "int", nullable: true),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    PROMY_ID = table.Column<int>(type: "int", nullable: true),
                    GEO_LONGI = table.Column<double>(type: "float", nullable: true),
                    GEO_LAT = table.Column<double>(type: "float", nullable: true),
                    GEO_LONGI_RZ = table.Column<double>(type: "float", nullable: true),
                    GEO_LAT_RZ = table.Column<double>(type: "float", nullable: true),
                    INNE_UWAGI = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WYSYLAC_UWAGI = table.Column<int>(type: "int", nullable: true),
                    CZAS_TRWANIA = table.Column<double>(type: "float", nullable: true),
                    MAX_OPOZN = table.Column<double>(type: "float", nullable: true),
                    PUSTY = table.Column<int>(type: "int", nullable: true),
                    IDPOIEXTN = table.Column<long>(type: "bigint", nullable: true, defaultValueSql: "('0')"),
                    ZA_WY_NADRZ_ID = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    ZA_WY_GLOWNE_ID = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    KONTENER_ID = table.Column<int>(type: "int", nullable: true),
                    KONTENER = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KONTENER2_ID = table.Column<int>(type: "int", nullable: true),
                    KONTENER2 = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    AUTOMAT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    ANUL_ZL = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    ANUL_PW = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    PO_PRZELADUNKU = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    PIETROWANIE = table.Column<int>(type: "int", nullable: true),
                    ETA_EVENTS_ID = table.Column<int>(type: "int", nullable: true),
                    GF_DEF_ID = table.Column<int>(type: "int", nullable: true, comment: "id definicji geofencingu (referencja do tabeli GF_DEF)"),
                    NIE_WYSYLAJ = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    STACJA_NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    STACJA_SYMBOL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_1 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_3 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_4 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_5 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ADRES = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true),
                    TRASA_KM = table.Column<int>(type: "int", nullable: true),
                    TRASA_KM_ROSN = table.Column<int>(type: "int", nullable: true),
                    TRASA_CZAS = table.Column<int>(type: "int", nullable: true),
                    TRASA_CZAS_ROSN = table.Column<int>(type: "int", nullable: true),
                    AWIZACJA_PRZED = table.Column<DateTime>(type: "datetime", nullable: true),
                    ETA = table.Column<DateTime>(type: "datetime", nullable: true),
                    DisableETA = table.Column<int>(type: "int", nullable: true, comment: "Wyłączenie analizy ETA")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZLECENIA_RAIL_ZA_WY", x => x.ID_ZLECENIA_RAIL_ZA_WY);
                });

            migrationBuilder.CreateTable(
                name: "ZLECENIA_SAM",
                columns: table => new
                {
                    ID_ZLECENIA_SAM = table.Column<int>(type: "int", nullable: false),
                    ZLECENIE_ID = table.Column<int>(type: "int", nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    MARKA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    MODEL = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    NADWOZIE = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    VIN = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ROK_PROD = table.Column<int>(type: "int", nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    M_ZAL_ID = table.Column<int>(type: "int", nullable: true),
                    M_ROZ_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZLECENIA_SAM", x => x.ID_ZLECENIA_SAM);
                });

            migrationBuilder.CreateTable(
                name: "ZLECENIA_WYM_TABORU",
                columns: table => new
                {
                    ID_ZLECENIA_WYM_TABORU = table.Column<int>(type: "int", nullable: false),
                    ZLECENIE_ID = table.Column<int>(type: "int", nullable: true),
                    NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    ILOSC = table.Column<int>(type: "int", nullable: true),
                    TYP = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "WYM.WYP, TYP.ZAB, SP.LAD"),
                    ZAMIENNIK = table.Column<int>(type: "int", nullable: true),
                    NIE_BLOKUJ = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZLECENIA_WYM_TABORU", x => x.ID_ZLECENIA_WYM_TABORU);
                });

            migrationBuilder.CreateTable(
                name: "ZLECENIA_ZA_WY",
                columns: table => new
                {
                    ID_ZLECENIA_ZA_WY = table.Column<int>(type: "int", nullable: false),
                    TYP = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE = table.Column<string>(type: "varchar(2000)", unicode: false, maxLength: 2000, nullable: true),
                    MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    TELEFONY = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_RZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_RZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    DOD_OPIS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DOD_OPIS_RZ = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    OPOZNIENIE = table.Column<double>(type: "float", nullable: true),
                    OPOZNIENIE_POWOD = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    LADUNEK = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    LICZNIK = table.Column<double>(type: "float", nullable: true),
                    WAGA = table.Column<double>(type: "float", nullable: true),
                    JEDN_WAGI = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    PALETY = table.Column<double>(type: "float", nullable: true),
                    JM = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PALIWO = table.Column<double>(type: "float", nullable: true, comment: "zużyte paliwo w trakcie zdarzenia"),
                    WYJAZD_ID = table.Column<int>(type: "int", nullable: true),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    GEO_LONGI = table.Column<double>(type: "float", nullable: true),
                    GEO_LAT = table.Column<double>(type: "float", nullable: true),
                    INNE_UWAGI = table.Column<string>(type: "varchar(2500)", unicode: false, maxLength: 2500, nullable: true),
                    CZAS_TRWANIA = table.Column<double>(type: "float", nullable: true),
                    MAX_OPOZN = table.Column<double>(type: "float", nullable: true),
                    WYSYLAC_UWAGI = table.Column<int>(type: "int", nullable: true),
                    TEMP_PRZEWOZU_O = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PALETY_WYM = table.Column<double>(type: "float", nullable: true),
                    DATA_RZ_K = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_RZ_K = table.Column<DateTime>(type: "datetime", nullable: true),
                    PUSTY = table.Column<int>(type: "int", nullable: true),
                    IDPOIEXTN = table.Column<long>(type: "bigint", nullable: true, defaultValueSql: "('0')"),
                    AUTOMAT = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    GODZ_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_RZ_P = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_RZ_P = table.Column<DateTime>(type: "datetime", nullable: true),
                    LADUNEK_ID = table.Column<int>(type: "int", nullable: true),
                    WAGA_ZESTAWU = table.Column<double>(type: "float", nullable: true),
                    TEMP_PRZEWOZU_O_RZ = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    WAGA_RZ = table.Column<double>(type: "float", nullable: true),
                    ZA_WY_NADRZ_ID = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    ZA_WY_GLOWNE_ID = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    KOR_GODZ = table.Column<int>(type: "int", nullable: true),
                    DYSP_GODZ_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DYSP_GODZ_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    SFM_STATUS = table.Column<int>(type: "int", nullable: true, comment: "Status SFM (jak dla zleceń)"),
                    STATUS = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "Status SPEED"),
                    ETA_EVENTS_ID = table.Column<int>(type: "int", nullable: true),
                    KONTENER_ID = table.Column<int>(type: "int", nullable: true),
                    KONTENER = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KONTENER2_ID = table.Column<int>(type: "int", nullable: true),
                    KONTENER2 = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    LP_PW = table.Column<int>(type: "int", nullable: true),
                    PROMY_ID = table.Column<int>(type: "int", nullable: true),
                    GEO_LONGI_RZ = table.Column<double>(type: "float", nullable: true),
                    GEO_LAT_RZ = table.Column<double>(type: "float", nullable: true),
                    ANUL_ZL = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    ANUL_PW = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    GF_DEF_ID = table.Column<int>(type: "int", nullable: true, comment: "id definicji geofencingu (referencja do tabeli GF_DEF)"),
                    PALIWO_LICZNIK = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')", comment: "końcowy stan licznika paliwa"),
                    PIETROWANIE = table.Column<int>(type: "int", nullable: true),
                    ILOSC_RZ = table.Column<double>(type: "float", nullable: true),
                    LP_ZLECENIA_ZB = table.Column<int>(type: "int", nullable: true),
                    NIE_WYSYLAJ = table.Column<short>(type: "smallint", nullable: true, defaultValueSql: "('0')"),
                    DLUGOSC = table.Column<double>(type: "float", nullable: true),
                    WYSOKOSC = table.Column<double>(type: "float", nullable: true),
                    SZEROKOSC = table.Column<double>(type: "float", nullable: true),
                    OBJ = table.Column<double>(type: "float", nullable: true),
                    LDM = table.Column<double>(type: "float", nullable: true),
                    KONTAKT = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    CC_ISSENT = table.Column<int>(type: "int", nullable: true, comment: "czy wysłano trasę do zdarzenia (0-NIE /1-TAK)"),
                    MASZONSKI_MASTER_ZLECENIA_ZA_WY_ID = table.Column<int>(type: "int", nullable: true, comment: "MASZONSKI (dedyk.) - pole wskazuje na rekord ZA/WY z którego powstała bieżąca pozycja"),
                    EMAIL = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true),
                    DATA_RZ_W = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_RZ_W = table.Column<DateTime>(type: "datetime", nullable: true),
                    REF_1 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_3 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_4 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_5 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    OBJ_RZ = table.Column<double>(type: "float", nullable: true),
                    PO_PRZELADUNKU = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    ADRES = table.Column<string>(type: "varchar(60)", unicode: false, maxLength: 60, nullable: true),
                    TRASA_KM = table.Column<int>(type: "int", nullable: true),
                    TRASA_KM_ROSN = table.Column<int>(type: "int", nullable: true),
                    TRASA_CZAS = table.Column<int>(type: "int", nullable: true),
                    TRASA_CZAS_ROSN = table.Column<int>(type: "int", nullable: true),
                    SQL_DEBUG_INFO = table.Column<string>(type: "nchar(50)", fixedLength: true, maxLength: 50, nullable: true),
                    AWIZACJA_PRZED = table.Column<DateTime>(type: "datetime", nullable: true),
                    ETA = table.Column<DateTime>(type: "datetime", nullable: true),
                    nazwa = table.Column<string>(type: "varchar(max)", unicode: false, nullable: true),
                    kod = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    USR_FLD_POPRZEDNIA_DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    USR_FLD_POPRZEDNIE_MIEJSCE_ID = table.Column<int>(type: "int", nullable: true),
                    Data_Godz = table.Column<string>(type: "varchar(61)", unicode: false, maxLength: 61, nullable: true, computedColumnSql: "((CONVERT([varchar],[data],(112))+' ')+CONVERT([varchar],isnull([GODZ],(0)),(108)))", stored: false),
                    Data_Godz_Od = table.Column<string>(type: "varchar(61)", unicode: false, maxLength: 61, nullable: true, computedColumnSql: "((CONVERT([varchar],[data],(112))+' ')+CONVERT([varchar],isnull([GODZ_OD],(0)),(108)))", stored: false),
                    Data_Godz_Do = table.Column<string>(type: "varchar(61)", unicode: false, maxLength: 61, nullable: true, computedColumnSql: "((CONVERT([varchar],[data],(112))+' ')+CONVERT([varchar],isnull([GODZ_DO],(-1.00001157407407)),(108)))", stored: false),
                    DisableETA = table.Column<int>(type: "int", nullable: true, comment: "Wyłączenie analizy ETA")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZLECENIA_ZA_WY", x => x.ID_ZLECENIA_ZA_WY);
                });

            migrationBuilder.CreateTable(
                name: "ZLECENIA_ZA_WY_CYST",
                columns: table => new
                {
                    ID_ZLECENIA_ZA_WY = table.Column<int>(type: "int", nullable: false),
                    ZLECENIE_ID = table.Column<int>(type: "int", nullable: true),
                    KOMORA_1 = table.Column<int>(type: "int", nullable: true),
                    LADUNEK_1 = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WAGA_1 = table.Column<double>(type: "float", nullable: true),
                    JEDN_WAGI_1 = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    OBJ_1 = table.Column<double>(type: "float", nullable: true),
                    ADR_1 = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    KOMORA_2 = table.Column<int>(type: "int", nullable: true),
                    LADUNEK_2 = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WAGA_2 = table.Column<double>(type: "float", nullable: true),
                    JEDN_WAGI_2 = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    OBJ_2 = table.Column<double>(type: "float", nullable: true),
                    ADR_2 = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    KOMORA_3 = table.Column<int>(type: "int", nullable: true),
                    LADUNEK_3 = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WAGA_3 = table.Column<double>(type: "float", nullable: true),
                    JEDN_WAGI_3 = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    OBJ_3 = table.Column<double>(type: "float", nullable: true),
                    ADR_3 = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    KOMORA_4 = table.Column<int>(type: "int", nullable: true),
                    LADUNEK_4 = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WAGA_4 = table.Column<double>(type: "float", nullable: true),
                    JEDN_WAGI_4 = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    OBJ_4 = table.Column<double>(type: "float", nullable: true),
                    ADR_4 = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    KOMORA_5 = table.Column<int>(type: "int", nullable: true),
                    LADUNEK_5 = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WAGA_5 = table.Column<double>(type: "float", nullable: true),
                    JEDN_WAGI_5 = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    OBJ_5 = table.Column<double>(type: "float", nullable: true),
                    ADR_5 = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    KOMORA_6 = table.Column<int>(type: "int", nullable: true),
                    LADUNEK_6 = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WAGA_6 = table.Column<double>(type: "float", nullable: true),
                    JEDN_WAGI_6 = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    OBJ_6 = table.Column<double>(type: "float", nullable: true),
                    ADR_6 = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    KOMORA_7 = table.Column<int>(type: "int", nullable: true),
                    LADUNEK_7 = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WAGA_7 = table.Column<double>(type: "float", nullable: true),
                    JEDN_WAGI_7 = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    OBJ_7 = table.Column<double>(type: "float", nullable: true),
                    ADR_7 = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    GESTOSC_1 = table.Column<double>(type: "float", nullable: true),
                    GESTOSC_2 = table.Column<double>(type: "float", nullable: true),
                    GESTOSC_3 = table.Column<double>(type: "float", nullable: true),
                    GESTOSC_4 = table.Column<double>(type: "float", nullable: true),
                    GESTOSC_5 = table.Column<double>(type: "float", nullable: true),
                    GESTOSC_6 = table.Column<double>(type: "float", nullable: true),
                    GESTOSC_7 = table.Column<double>(type: "float", nullable: true),
                    WAGA_RZ_1 = table.Column<double>(type: "float", nullable: true),
                    CISN_1 = table.Column<double>(type: "float", nullable: true),
                    JEDN_CISN_1 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    TEMP_1 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TEMP_RZ_1 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    WAGA_ZEST_1 = table.Column<double>(type: "float", nullable: true),
                    WAGA_BRUTTO_1 = table.Column<double>(type: "float", nullable: true),
                    WAGA_RZ_2 = table.Column<double>(type: "float", nullable: true),
                    CISN_2 = table.Column<double>(type: "float", nullable: true),
                    JEDN_CISN_2 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    TEMP_2 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TEMP_RZ_2 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    WAGA_ZEST_2 = table.Column<double>(type: "float", nullable: true),
                    WAGA_BRUTTO_2 = table.Column<double>(type: "float", nullable: true),
                    WAGA_RZ_3 = table.Column<double>(type: "float", nullable: true),
                    CISN_3 = table.Column<double>(type: "float", nullable: true),
                    JEDN_CISN_3 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    TEMP_3 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TEMP_RZ_3 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    WAGA_ZEST_3 = table.Column<double>(type: "float", nullable: true),
                    WAGA_BRUTTO_3 = table.Column<double>(type: "float", nullable: true),
                    WAGA_RZ_4 = table.Column<double>(type: "float", nullable: true),
                    CISN_4 = table.Column<double>(type: "float", nullable: true),
                    JEDN_CISN_4 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    TEMP_4 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TEMP_RZ_4 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    WAGA_ZEST_4 = table.Column<double>(type: "float", nullable: true),
                    WAGA_BRUTTO_4 = table.Column<double>(type: "float", nullable: true),
                    WAGA_RZ_5 = table.Column<double>(type: "float", nullable: true),
                    CISN_5 = table.Column<double>(type: "float", nullable: true),
                    JEDN_CISN_5 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    TEMP_5 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TEMP_RZ_5 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    WAGA_ZEST_5 = table.Column<double>(type: "float", nullable: true),
                    WAGA_BRUTTO_5 = table.Column<double>(type: "float", nullable: true),
                    WAGA_RZ_6 = table.Column<double>(type: "float", nullable: true),
                    CISN_6 = table.Column<double>(type: "float", nullable: true),
                    JEDN_CISN_6 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    TEMP_6 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TEMP_RZ_6 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    WAGA_ZEST_6 = table.Column<double>(type: "float", nullable: true),
                    WAGA_BRUTTO_6 = table.Column<double>(type: "float", nullable: true),
                    WAGA_RZ_7 = table.Column<double>(type: "float", nullable: true),
                    CISN_7 = table.Column<double>(type: "float", nullable: true),
                    JEDN_CISN_7 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    TEMP_7 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    TEMP_RZ_7 = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    WAGA_ZEST_7 = table.Column<double>(type: "float", nullable: true),
                    WAGA_BRUTTO_7 = table.Column<double>(type: "float", nullable: true),
                    OBJ_RZ_1 = table.Column<double>(type: "float", nullable: true),
                    OBJ_RZ_2 = table.Column<double>(type: "float", nullable: true),
                    OBJ_RZ_3 = table.Column<double>(type: "float", nullable: true),
                    OBJ_RZ_4 = table.Column<double>(type: "float", nullable: true),
                    OBJ_RZ_5 = table.Column<double>(type: "float", nullable: true),
                    OBJ_RZ_6 = table.Column<double>(type: "float", nullable: true),
                    OBJ_RZ_7 = table.Column<double>(type: "float", nullable: true),
                    OBJ_15_1 = table.Column<double>(type: "float", nullable: true),
                    OBJ_15_2 = table.Column<double>(type: "float", nullable: true),
                    OBJ_15_3 = table.Column<double>(type: "float", nullable: true),
                    OBJ_15_4 = table.Column<double>(type: "float", nullable: true),
                    OBJ_15_5 = table.Column<double>(type: "float", nullable: true),
                    OBJ_15_6 = table.Column<double>(type: "float", nullable: true),
                    OBJ_15_7 = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZLECENIA_ZA_WY_CYST", x => x.ID_ZLECENIA_ZA_WY);
                });

            migrationBuilder.CreateTable(
                name: "ZLECENIA_ZA_WY_PROD",
                columns: table => new
                {
                    ID_ZLECENIA_ZA_WY_PROD = table.Column<int>(type: "int", nullable: false),
                    ZLECENIA_ID = table.Column<int>(type: "int", nullable: false, comment: "Relacja do zlecenia, tab: ZLECENIA"),
                    ZLECENIA_ZA_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do POI-a ZA na zleceniu, tab: ZLECENIA_ZA_WY"),
                    ZLECENIA_WY_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do POI-a WY na zleceniu, tab: ZLECENIA_ZA_WY"),
                    LP = table.Column<int>(type: "int", nullable: true),
                    OPIS_TOWARU_ID = table.Column<int>(type: "int", nullable: true),
                    OPIS_TOWARU = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    ILOSC = table.Column<double>(type: "float", nullable: true),
                    OPAKOWANIE_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    OPAKOWANIE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    WAGA = table.Column<double>(type: "float", nullable: true),
                    JEDN_WAGI = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    OBJ = table.Column<double>(type: "float", nullable: true),
                    NR_ZEWN_1 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_ZEWN_2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_ZEWN_3 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_ZEWN_4 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NR_ZEWN_5 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ADR = table.Column<int>(type: "int", nullable: true),
                    ADR_UN = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    ADR_KLASA = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    GRUPA_ADR = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true, comment: "ADR - Grupa"),
                    OPIS_ADR = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true, comment: "ADR - Opis"),
                    ADR_OGR_TUNELE = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "ADR - Ograniczenia tuneli"),
                    ADR_ILOSC_I_RODZ = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true, comment: "ADR - Ilosć i rodzaj"),
                    ADR_ILOSC_CALK = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true, comment: "ADR - Ilość całkowita"),
                    ADR_WAGA_NETTO = table.Column<double>(type: "float", nullable: true),
                    ADR_WYL_LQ = table.Column<int>(type: "int", nullable: true),
                    METRY_LADOWNE = table.Column<double>(type: "float", nullable: true),
                    PIETROWANIE = table.Column<int>(type: "int", nullable: true),
                    ADR_ENV = table.Column<int>(type: "int", nullable: true),
                    GESTOSC = table.Column<double>(type: "float", nullable: true),
                    TEMP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    ZLECENIA_POI_ID = table.Column<int>(type: "int", nullable: true, comment: "Relacja do POI-a <> ZA/WY na zleceniu, tab: ZLECENIA_ZA_WY")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZLECENIA_ZA_WY_PROD", x => x.ID_ZLECENIA_ZA_WY_PROD);
                },
                comment: "Produkty za/wyładowywane na danym POI-i");

            migrationBuilder.CreateTable(
                name: "ZLECENIA_ZB",
                columns: table => new
                {
                    ID_ZLECENIA_ZB = table.Column<int>(type: "int", nullable: false),
                    TRIG_TIMESTAMP = table.Column<DateTime>(type: "datetime", nullable: true),
                    NR_ZLECENIA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    NR_ZLEC_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    NR_ZLEC_ROK = table.Column<int>(type: "int", nullable: true),
                    NR_ZLEC_MIES = table.Column<int>(type: "int", nullable: true),
                    SPEDYTOR_ID = table.Column<int>(type: "int", nullable: true),
                    SPEDYTOR = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    OPIEKUN = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DATA_ZLECENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_ZLECENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    TYP_ZLECENIA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    PRZEWOZNIK_ID = table.Column<int>(type: "int", nullable: true),
                    PRZEWOZNIK_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    PRZEWOZNIK_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    PRZEWOZNIK_ADRES = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    PRZEWOZNIK_MIASTO = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    PRZEWOZNIK_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    PRZEWOZNIK_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    PRZEWOZNIK_NIP = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: true),
                    PRZEWOZNIK_TEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PRZEWOZNIK_KONT = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PRZEWOZNIK_ODDZIAL_ID = table.Column<int>(type: "int", nullable: true),
                    PRZEWOZNIK_ODDZIAL_NAZWA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    PRZEWOZNIK_ODDZIAL_ADRES = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    PRZEWOZNIK_ODDZIAL_MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PRZEWOZNIK_ODDZIAL_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    PRZEWOZNIK_ODDZIAL_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    SAMOCHOD_NR_BOCZNY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    SAMOCHOD_ID = table.Column<int>(type: "int", nullable: true),
                    SAMOCHOD = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    NACZEPA_NR_BOCZNY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    NACZEPA_ID = table.Column<int>(type: "int", nullable: true),
                    NACZEPA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    KIEROWCA1_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA1 = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    KIEROWCA1_TEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KIEROWCA2_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA2 = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    KIEROWCA2_TEL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZA_MIEJSCE = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    ZA_MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ZA_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    ZA_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    ZA_DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZA_GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZA_DATA_RZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZA_GODZ_RZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZA_GODZ_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZA_GODZ_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    WY_MIEJSCE = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WY_MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    WY_KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    WY_KOD = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    WY_DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    WY_GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    WY_DATA_RZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    WY_GODZ_RZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    WY_DATA_RZ_K = table.Column<DateTime>(type: "datetime", nullable: true),
                    WY_GODZ_RZ_K = table.Column<DateTime>(type: "datetime", nullable: true),
                    WY_GODZ_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    WY_GODZ_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    TRASA_ID = table.Column<int>(type: "int", nullable: true),
                    TRASA = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    TRASA_EDYCJA = table.Column<int>(type: "int", nullable: true),
                    TRASA_ODL = table.Column<double>(type: "float", nullable: true),
                    TRASA_ODL_DOJAZD = table.Column<double>(type: "float", nullable: true),
                    TRASA_ODL_GL = table.Column<double>(type: "float", nullable: true),
                    TRASA_ZLEC_ODL = table.Column<double>(type: "float", nullable: true),
                    TRASA_ZLEC_ODL_DOJAZD = table.Column<double>(type: "float", nullable: true),
                    TRASA_ZLEC_ODL_GL = table.Column<double>(type: "float", nullable: true),
                    TRASA_ODL_ROZN = table.Column<double>(type: "float", nullable: true),
                    TRASA_MAP_ODL = table.Column<double>(type: "float", nullable: true),
                    TRASA_MAP_ODL_DOJAZD = table.Column<double>(type: "float", nullable: true),
                    TRASA_MAP_ODL_GL = table.Column<double>(type: "float", nullable: true),
                    ADR = table.Column<int>(type: "int", nullable: true),
                    REF_1 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_3 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_4 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_5 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KOSZTY_SQL = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    STATUS = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    STATUS_EMISJA = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    RKNZ_PLAN = table.Column<int>(type: "int", nullable: true),
                    RKNZ_RZ = table.Column<int>(type: "int", nullable: true),
                    SFM_STATUS = table.Column<int>(type: "int", nullable: true),
                    INFO_DOD = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    USTALENIA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    SFM_VER = table.Column<int>(type: "int", nullable: true),
                    SFM_L_ZA_WY = table.Column<int>(type: "int", nullable: true),
                    SFM_WYSL = table.Column<int>(type: "int", nullable: true),
                    DYSPOZYTOR_ID = table.Column<int>(type: "int", nullable: true),
                    DYSPOZYTOR = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DZIAL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    PROM = table.Column<int>(type: "int", nullable: true),
                    TRASA_MAP_MYTO = table.Column<double>(type: "float", nullable: true),
                    TRASA_MAP_KM_PLATNE = table.Column<double>(type: "float", nullable: true),
                    SLOT_1 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_2 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_3 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_4 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    SLOT_5 = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    TRASA_CC_ODL = table.Column<double>(type: "float", nullable: true),
                    TRASA_CC_ODL_DOJAZD = table.Column<double>(type: "float", nullable: true),
                    TRASA_CC_ODL_GL = table.Column<double>(type: "float", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZLECENIA_ZB", x => x.ID_ZLECENIA_ZB);
                },
                comment: "Zlecenia zbiorcze");

            migrationBuilder.CreateTable(
                name: "ZLECENIA_ZB_POZ",
                columns: table => new
                {
                    ID_ZLECENIA_ZB_POZ = table.Column<int>(type: "int", nullable: false),
                    ZLECENIA_ZB_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZLECENIA_ZB_POZ", x => x.ID_ZLECENIA_ZB_POZ);
                },
                comment: "Zlecenia zbiorcze - pozycje");

            migrationBuilder.CreateTable(
                name: "ZLECENIA_ZB_PROMY",
                columns: table => new
                {
                    ID_ZLECENIA_ZB_PROMY = table.Column<int>(type: "int", nullable: false),
                    ZLECENIA_ZB_ID = table.Column<int>(type: "int", nullable: true),
                    PROMY_ID = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZLECENIA_ZB_PROMY", x => x.ID_ZLECENIA_ZB_PROMY);
                });

            migrationBuilder.CreateTable(
                name: "ZLECENIA_ZB_WYM_TABORU",
                columns: table => new
                {
                    ID_ZLECENIA_ZB_WYM_TABORU = table.Column<int>(type: "int", nullable: false),
                    ZLECENIA_ZB_ID = table.Column<int>(type: "int", nullable: true),
                    TYP = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true, comment: "WYM.WYP, TYP.ZAB, SP.LAD"),
                    NAZWA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(248)", unicode: false, maxLength: 248, nullable: true),
                    ILOSC = table.Column<int>(type: "int", nullable: true),
                    ZAMIENNIK = table.Column<int>(type: "int", nullable: true),
                    NIE_BLOKUJ = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZLECENIA_ZB_WYM_TABORU", x => x.ID_ZLECENIA_ZB_WYM_TABORU);
                });

            migrationBuilder.CreateTable(
                name: "ZLECENIA_ZB_ZDARZENIA",
                columns: table => new
                {
                    ID_ZLECENIA_ZB_ZDARZENIA = table.Column<int>(type: "int", nullable: false),
                    ZLECENIA_ZB_ID = table.Column<int>(type: "int", nullable: true),
                    LP_ZLECENIA_ZB = table.Column<int>(type: "int", nullable: true),
                    TYP = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    MIEJSCE_ID = table.Column<int>(type: "int", nullable: true),
                    MIEJSCE = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    MIASTO = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    KRAJ = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    TELEFONY = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    KOR_GODZ = table.Column<int>(type: "int", nullable: true),
                    DYSP_GODZ_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    DYSP_GODZ_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    LKM_START = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')", comment: "początkowy stan licznika kilometrów"),
                    LICZNIK = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')", comment: "końcowy stan licznika kilometrów"),
                    WAGA = table.Column<double>(type: "float", nullable: true),
                    WAGA_RZ = table.Column<double>(type: "float", nullable: true),
                    WAGA_ZESTAWU = table.Column<double>(type: "float", nullable: true),
                    JEDN_WAGI = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    PALETY = table.Column<double>(type: "float", nullable: true),
                    ILOSC_RZ = table.Column<double>(type: "float", nullable: true),
                    PALETY_WYM = table.Column<double>(type: "float", nullable: true),
                    TYP_Z = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE_ID = table.Column<int>(type: "int", nullable: true),
                    ZLECENIE = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PRZELADUNEK = table.Column<int>(type: "int", nullable: true),
                    DATA_RZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_RZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_RZ_K = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_RZ_K = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_RZ_P = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_RZ_P = table.Column<DateTime>(type: "datetime", nullable: true),
                    DOD_OPIS = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    DOD_OPIS_RZ = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    OPOZNIENIE = table.Column<double>(type: "float", nullable: true),
                    OPOZNIENIE_POWOD = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    LADUNEK_ID = table.Column<int>(type: "int", nullable: true),
                    LADUNEK = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    TEMP_PRZEWOZU_O = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TEMP_PRZEWOZU_O_RZ = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    JM = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    PALIWO = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')", comment: "zużyte paliwo w trakcie zdarzenia"),
                    PALIWO_LICZNIK = table.Column<double>(type: "float", nullable: true, defaultValueSql: "('0')", comment: "końcowy stan licznika paliwa"),
                    GEO_LONGI = table.Column<double>(type: "float", nullable: true),
                    GEO_LAT = table.Column<double>(type: "float", nullable: true),
                    GEO_LONGI_RZ = table.Column<double>(type: "float", nullable: true),
                    GEO_LAT_RZ = table.Column<double>(type: "float", nullable: true),
                    INNE_UWAGI = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    WYSYLAC_UWAGI = table.Column<int>(type: "int", nullable: true),
                    TABOR_ID = table.Column<int>(type: "int", nullable: true),
                    CZAS_TRWANIA = table.Column<double>(type: "float", nullable: true),
                    MAX_OPOZN = table.Column<double>(type: "float", nullable: true),
                    PUSTY = table.Column<int>(type: "int", nullable: true),
                    KONTENER_ID = table.Column<int>(type: "int", nullable: true),
                    KONTENER = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KONTENER2_ID = table.Column<int>(type: "int", nullable: true),
                    KONTENER2 = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    ANUL_PW = table.Column<int>(type: "int", nullable: true, defaultValueSql: "('0')"),
                    PIETROWANIE = table.Column<int>(type: "int", nullable: true),
                    GF_DEF_ID = table.Column<int>(type: "int", nullable: true, comment: "id definicji geofencingu (referencja do tabeli GF_DEF)"),
                    DLUGOSC = table.Column<double>(type: "float", nullable: true),
                    WYSOKOSC = table.Column<double>(type: "float", nullable: true),
                    SZEROKOSC = table.Column<double>(type: "float", nullable: true),
                    OBJ = table.Column<double>(type: "float", nullable: true),
                    LDM = table.Column<double>(type: "float", nullable: true),
                    EMAIL = table.Column<string>(type: "varchar(200)", unicode: false, maxLength: 200, nullable: true),
                    KONTAKT = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    DATA_RZ_W = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_RZ_W = table.Column<DateTime>(type: "datetime", nullable: true),
                    AWIZACJA_PRZED = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZLECENIA_ZB_ZDARZENIA", x => x.ID_ZLECENIA_ZB_ZDARZENIA);
                },
                comment: "Zlecenia zbiorcze - zdarzenia");

            migrationBuilder.CreateTable(
                name: "ZleceniaZaplanowane",
                schema: "opti",
                columns: table => new
                {
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    dt = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    SolverTaskId = table.Column<int>(type: "int", nullable: true),
                    SessionId = table.Column<int>(type: "int", nullable: true),
                    ID_TABORU = table.Column<int>(type: "int", nullable: true),
                    ID_ZLECENIA = table.Column<int>(type: "int", nullable: true),
                    OPIS_TOWARU = table.Column<string>(type: "nvarchar(500)", maxLength: 500, nullable: true),
                    VIP = table.Column<int>(type: "int", nullable: true),
                    FIX = table.Column<int>(type: "int", nullable: true),
                    TRASA_ODL = table.Column<double>(type: "float", nullable: true),
                    ID_ZLECENIA_ZA_WY = table.Column<int>(type: "int", nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    ZA_WY_TYP = table.Column<string>(type: "nvarchar(10)", maxLength: 10, nullable: true),
                    CZAS_TRWANIA = table.Column<double>(type: "float", nullable: true),
                    ZA_WY_MIEJSCE_ID = table.Column<int>(type: "int", nullable: true),
                    ZA_WY_MIEJSCE = table.Column<string>(type: "nvarchar(500)", maxLength: 500, nullable: true),
                    ZA_WY_LON = table.Column<double>(type: "float", nullable: true),
                    ZA_WY_LAT = table.Column<double>(type: "float", nullable: true),
                    ZA_WY_DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZA_WY_GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZA_WY_GODZ_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZA_WY_GODZ_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZA_WY_OBJ = table.Column<double>(type: "float", nullable: true),
                    ZA_WY_WAGA = table.Column<double>(type: "float", nullable: true),
                    PALETY = table.Column<int>(type: "int", nullable: true),
                    ILOSC_RZ = table.Column<int>(type: "int", nullable: true),
                    DLUGOSC = table.Column<double>(type: "float", nullable: true),
                    SZEROKOSC = table.Column<double>(type: "float", nullable: true),
                    WYSOKOSC = table.Column<double>(type: "float", nullable: true),
                    AWIZACJA_PRZED = table.Column<int>(type: "int", nullable: true),
                    ILOSC_WY = table.Column<int>(type: "int", nullable: true),
                    REF_5 = table.Column<string>(type: "nvarchar(255)", maxLength: 255, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZleceniaZaplanowane", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "ZleceniaZaznaczone",
                schema: "opti",
                columns: table => new
                {
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    dt = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    SolverTaskId = table.Column<int>(type: "int", nullable: true),
                    SessionId = table.Column<int>(type: "int", nullable: true),
                    ID_ZLECENIA = table.Column<int>(type: "int", nullable: true),
                    OPIS_TOWARU = table.Column<string>(type: "nvarchar(500)", maxLength: 500, nullable: true),
                    VIP = table.Column<int>(type: "int", nullable: true),
                    FIX = table.Column<int>(type: "int", nullable: true),
                    TRASA_ODL = table.Column<double>(type: "float", nullable: true),
                    ID_ZLECENIA_ZA_WY = table.Column<int>(type: "int", nullable: true),
                    LP = table.Column<int>(type: "int", nullable: true),
                    ZA_WY_TYP = table.Column<string>(type: "nvarchar(10)", maxLength: 10, nullable: true),
                    CZAS_TRWANIA = table.Column<double>(type: "float", nullable: true),
                    ZA_WY_MIEJSCE_ID = table.Column<int>(type: "int", nullable: true),
                    ZA_WY_MIEJSCE = table.Column<string>(type: "nvarchar(500)", maxLength: 500, nullable: true),
                    ZA_WY_LON = table.Column<double>(type: "float", nullable: true),
                    ZA_WY_LAT = table.Column<double>(type: "float", nullable: true),
                    ZA_WY_DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZA_WY_GODZ = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZA_WY_GODZ_OD = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZA_WY_GODZ_DO = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZA_WY_OBJ = table.Column<double>(type: "float", nullable: true),
                    ZA_WY_WAGA = table.Column<double>(type: "float", nullable: true),
                    PALETY = table.Column<int>(type: "int", nullable: true),
                    ILOSC_RZ = table.Column<int>(type: "int", nullable: true),
                    DLUGOSC = table.Column<double>(type: "float", nullable: true),
                    SZEROKOSC = table.Column<double>(type: "float", nullable: true),
                    WYSOKOSC = table.Column<double>(type: "float", nullable: true),
                    AWIZACJA_PRZED = table.Column<int>(type: "int", nullable: true),
                    ILOSC_WY = table.Column<int>(type: "int", nullable: true),
                    REF_5 = table.Column<string>(type: "nvarchar(255)", maxLength: 255, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZleceniaZaznaczone", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "ZleceniaZaznaczoneWymagania",
                schema: "opti",
                columns: table => new
                {
                    SolverTaskId = table.Column<int>(type: "int", nullable: true),
                    SessionId = table.Column<int>(type: "int", nullable: true),
                    ID_ZLECENIA = table.Column<int>(type: "int", nullable: true),
                    TYP = table.Column<string>(type: "nvarchar(255)", maxLength: 255, nullable: true),
                    ILOSC = table.Column<int>(type: "int", nullable: true),
                    NAZWA = table.Column<string>(type: "nvarchar(255)", maxLength: 255, nullable: true),
                    ZAMIENNIK = table.Column<int>(type: "int", nullable: true),
                    NIE_BLOKUJ = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "ZLP",
                columns: table => new
                {
                    ID_ZLP = table.Column<int>(type: "int", nullable: false),
                    NR_ZLP = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    NR_ZLP_KOLEJNY = table.Column<int>(type: "int", nullable: true),
                    NR_ZLP_ROK = table.Column<int>(type: "int", nullable: true),
                    NR_ZLP_MIES = table.Column<int>(type: "int", nullable: true),
                    LISTY_LINIOWE_ID = table.Column<int>(type: "int", nullable: true),
                    LISTY_LINIOWE_ZA_WY_ID = table.Column<int>(type: "int", nullable: true),
                    LISTY_LINIOWE_WY_ID = table.Column<int>(type: "int", nullable: true),
                    LOKALIZACJA = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    KLIENT_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    KLIENT_ODB_SYMBOL = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    DATA_UTWORZENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    ANULOWANY = table.Column<int>(type: "int", nullable: true),
                    KOD_KRESKOWY = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    UZUP_DANE_MAX_ID = table.Column<int>(type: "int", nullable: true),
                    STATUS_EMISJA = table.Column<string>(type: "varchar(2)", unicode: false, maxLength: 2, nullable: true),
                    DATA_DORECZENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_DORECZENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    OSOBA_ODBIORCA = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    POTWIERDZONY = table.Column<int>(type: "int", nullable: true),
                    STATUS = table.Column<string>(type: "varchar(5)", unicode: false, maxLength: 5, nullable: true),
                    CREATE_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika tworzącego rekord - tab: UZYTKOWNIK"),
                    CREATE_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika tworzącego rekord"),
                    CREATE_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data utworzenia"),
                    CREATE_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina utworzenia"),
                    MODIFY_ID_USER = table.Column<int>(type: "int", nullable: true, comment: "Relacja do użytkownika który ostatni modyfikował rekord - tab: UZYTKOWNIK"),
                    MODIFY_USER_NAME = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true, comment: "Nazwa użytkownika modyfikującego rekord"),
                    MODIFY_DATE = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Data ostatniej modyfikacji"),
                    MODIFY_TIME = table.Column<DateTime>(type: "datetime", nullable: true, comment: "Godzina ostatniej modyfikacji"),
                    DATA_PODJECIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    GODZ_PODJECIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZAFAKTUROWANE = table.Column<int>(type: "int", nullable: true),
                    REF_1 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_2 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_3 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_4 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    REF_5 = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    ILE_PRZES_ORG = table.Column<int>(type: "int", nullable: true),
                    ILE_PRZES = table.Column<int>(type: "int", nullable: true),
                    P_DATA_PODJECIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    P_GODZ_PODJECIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    P_DATA_DORECZENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    P_GODZ_DORECZENIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    ZALACZNIKI = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZLP", x => x.ID_ZLP);
                });

            migrationBuilder.CreateTable(
                name: "zs_OPONY_PRZEGLAD",
                columns: table => new
                {
                    CIAGNIK = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true),
                    CIAGNIK_ID = table.Column<int>(type: "int", nullable: true),
                    NACZEPA = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true),
                    NACZEPA_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    DATA = table.Column<DateTime>(type: "datetime", nullable: true),
                    C1P_C = table.Column<double>(type: "float", nullable: true),
                    C1P_B = table.Column<double>(type: "float", nullable: true),
                    C1P_U = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true),
                    C1L_C = table.Column<double>(type: "float", nullable: true),
                    C1L_B = table.Column<double>(type: "float", nullable: true),
                    C1L_U = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true),
                    C2PZ_C = table.Column<double>(type: "float", nullable: true),
                    C2PZ_B = table.Column<double>(type: "float", nullable: true),
                    C2PZ_U = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true),
                    C2PW_C = table.Column<double>(type: "float", nullable: true),
                    C2PW_B = table.Column<double>(type: "float", nullable: true),
                    C2PW_U = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true),
                    C2LZ_C = table.Column<double>(type: "float", nullable: true),
                    C2LZ_B = table.Column<double>(type: "float", nullable: true),
                    C2LZ_U = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true),
                    C2LW_C = table.Column<double>(type: "float", nullable: true),
                    C2LW_B = table.Column<double>(type: "float", nullable: true),
                    C2LW_U = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true),
                    C3P_C = table.Column<double>(type: "float", nullable: true),
                    C3P_B = table.Column<double>(type: "float", nullable: true),
                    C3P_U = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true),
                    C3L_C = table.Column<double>(type: "float", nullable: true),
                    C3L_B = table.Column<double>(type: "float", nullable: true),
                    C3L_U = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true),
                    N1PZ_C = table.Column<double>(type: "float", nullable: true),
                    N1PZ_B = table.Column<double>(type: "float", nullable: true),
                    N1PZ_U = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true),
                    N1PW_C = table.Column<double>(type: "float", nullable: true),
                    N1PW_B = table.Column<double>(type: "float", nullable: true),
                    N1PW_U = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true),
                    N1LZ_C = table.Column<double>(type: "float", nullable: true),
                    N1LZ_B = table.Column<double>(type: "float", nullable: true),
                    N1LZ_U = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true),
                    N1LW_C = table.Column<double>(type: "float", nullable: true),
                    N1LW_B = table.Column<double>(type: "float", nullable: true),
                    N1LW_U = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true),
                    N2PZ_C = table.Column<double>(type: "float", nullable: true),
                    N2PZ_B = table.Column<double>(type: "float", nullable: true),
                    N2PZ_U = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true),
                    N2PW_C = table.Column<double>(type: "float", nullable: true),
                    N2PW_B = table.Column<double>(type: "float", nullable: true),
                    N2PW_U = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true),
                    N2LZ_C = table.Column<double>(type: "float", nullable: true),
                    N2LZ_B = table.Column<double>(type: "float", nullable: true),
                    N2LZ_U = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true),
                    N2LW_C = table.Column<double>(type: "float", nullable: true),
                    N2LW_B = table.Column<double>(type: "float", nullable: true),
                    N2LW_U = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true),
                    N3P_C = table.Column<double>(type: "float", nullable: true),
                    N3P_B = table.Column<double>(type: "float", nullable: true),
                    N3P_U = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true),
                    N3L_C = table.Column<double>(type: "float", nullable: true),
                    N3L_B = table.Column<double>(type: "float", nullable: true),
                    N3L_U = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true),
                    LICZNIK = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "zs_PW_OTWARCIE",
                columns: table => new
                {
                    id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    sid_id = table.Column<int>(type: "int", nullable: true),
                    obj_id = table.Column<int>(type: "int", nullable: true),
                    rec_id = table.Column<int>(type: "int", nullable: true),
                    POLE_DOD_1 = table.Column<int>(type: "int", nullable: true),
                    POLE_DOD_2 = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    POLE_DOD_3 = table.Column<DateTime>(type: "datetime", nullable: true),
                    POLE_DOD_4 = table.Column<DateTime>(type: "datetime", nullable: true),
                    POLE_DOD_5 = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true),
                    POLE_DOD_6 = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    GDPR = table.Column<int>(type: "int", nullable: true),
                    POLE_DOD_7 = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "zs_PW_ZAMKNIECIE",
                columns: table => new
                {
                    id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    sid_id = table.Column<int>(type: "int", nullable: true),
                    obj_id = table.Column<int>(type: "int", nullable: true),
                    rec_id = table.Column<int>(type: "int", nullable: true),
                    POLE_DOD_1 = table.Column<int>(type: "int", nullable: true),
                    POLE_DOD_2 = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    POLE_DOD_3 = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    POLE_DOD_4 = table.Column<DateTime>(type: "datetime", nullable: true),
                    POLE_DOD_5 = table.Column<DateTime>(type: "datetime", nullable: true),
                    POLE_DOD_6 = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: true),
                    GDPR = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "zz_ESPEED_DOKUMENTY",
                columns: table => new
                {
                    ID = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    Tittle = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    FileName = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    Language = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    Lokalizacja = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    a = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    wie = table.Column<int>(type: "int", nullable: true),
                    kol = table.Column<int>(type: "int", nullable: true),
                    wynik = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "zz_ESPEED_P_DOKUMENTY_KIEROWCY",
                columns: table => new
                {
                    KOD = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    a = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    wie = table.Column<int>(type: "int", nullable: true),
                    kol = table.Column<int>(type: "int", nullable: true),
                    wynik = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "zz_ESPEED_P_DOKUMENTY_OGOLNE",
                columns: table => new
                {
                    KOD = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    a = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    wie = table.Column<int>(type: "int", nullable: true),
                    kol = table.Column<int>(type: "int", nullable: true),
                    wynik = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "zz_ESPEED_P_DOKUMENTY_TABOR",
                columns: table => new
                {
                    KOD = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    a = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    wie = table.Column<int>(type: "int", nullable: true),
                    kol = table.Column<int>(type: "int", nullable: true),
                    wynik = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "zz_ESPEED_P_DOKUMENTY_ZLECENIA",
                columns: table => new
                {
                    KOD = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    a = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    wie = table.Column<int>(type: "int", nullable: true),
                    kol = table.Column<int>(type: "int", nullable: true),
                    wynik = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "zz_ESPEED_PORADY",
                columns: table => new
                {
                    ID = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    Tittle = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    Description = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    Language = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    CreateDate = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    ShortDescription = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    FileName = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    Type = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    a = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    wie = table.Column<int>(type: "int", nullable: true),
                    kol = table.Column<int>(type: "int", nullable: true),
                    wynik = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "zz_FTL_KOSZT_FRACHT_stawki",
                columns: table => new
                {
                    przewoznik = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    nrrejestracyjny = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    waluta = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    data_od = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    aktywny = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    wiersz_tytulowy = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    wie = table.Column<int>(type: "int", nullable: true),
                    kol = table.Column<int>(type: "int", nullable: true),
                    wynik = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "zz_KOSZT_DZIENNY_STAWKI",
                columns: table => new
                {
                    DATA_OD = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    wie = table.Column<int>(type: "int", nullable: true),
                    kol = table.Column<int>(type: "int", nullable: true),
                    wynik = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "zz_OPTYMALIZACJA_DomyslnyCasObslPunktu",
                columns: table => new
                {
                    kol1 = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    wie = table.Column<int>(type: "int", nullable: true),
                    kol = table.Column<int>(type: "int", nullable: true),
                    wynik = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "zz_OPTYMALIZACJA_LiczbaKakotazyDlaAutLPG",
                columns: table => new
                {
                    wie = table.Column<int>(type: "int", nullable: true),
                    kol = table.Column<int>(type: "int", nullable: true),
                    wynik = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "zz_OPTYMALIZACJA_WspolczynnikKmDlaAutDE",
                columns: table => new
                {
                    wie = table.Column<int>(type: "int", nullable: true),
                    kol = table.Column<int>(type: "int", nullable: true),
                    wynik = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "zz_OPTYMALIZACJA_WylKrajWozki",
                columns: table => new
                {
                    wie1 = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    wie = table.Column<int>(type: "int", nullable: true),
                    kol = table.Column<int>(type: "int", nullable: true),
                    wynik = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "zz_OPTYMALIZACJA_ZakazyPrzejazduPrzezKraje",
                columns: table => new
                {
                    wie = table.Column<int>(type: "int", nullable: true),
                    kol = table.Column<int>(type: "int", nullable: true),
                    wynik = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "zz_TRANSP_KONTRAH",
                columns: table => new
                {
                    ID_KONTRAH = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    MIASTO_ZA = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    OPIS = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    wie = table.Column<int>(type: "int", nullable: true),
                    kol = table.Column<int>(type: "int", nullable: true),
                    wynik = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "zz_TRANSP_Min_Fracht",
                columns: table => new
                {
                    Data_od = table.Column<string>(type: "varchar(300)", unicode: false, maxLength: 300, nullable: true),
                    wie = table.Column<int>(type: "int", nullable: true),
                    kol = table.Column<int>(type: "int", nullable: true),
                    wynik = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "zzEvents4joinAttachment",
                schema: "edi",
                columns: table => new
                {
                    IdzzEvents4joinAttachment = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    insertDT = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    doneDT = table.Column<DateTime>(type: "datetime", nullable: true),
                    done = table.Column<int>(type: "int", nullable: true, defaultValueSql: "((0))"),
                    doneINFO = table.Column<string>(type: "text", nullable: true),
                    attObject = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    attObjectId = table.Column<int>(type: "int", nullable: true),
                    attType = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    attDescription = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    attFileName = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    attEdycja = table.Column<int>(type: "int", nullable: true, defaultValueSql: "((0))"),
                    attFileStream = table.Column<int>(type: "int", nullable: true, defaultValueSql: "((0))"),
                    useAttFileNameAsAttachmentFileName = table.Column<int>(type: "int", nullable: true, defaultValueSql: "((0))")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__zzEvents__5FEE0E349FEBC0E1", x => x.IdzzEvents4joinAttachment);
                });

            migrationBuilder.CreateTable(
                name: "zzEvents4joinAttachmentDetail",
                schema: "edi",
                columns: table => new
                {
                    IdzzEvents4joinAttachmentDetail = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    zzEvents4joinAttachmentId = table.Column<int>(type: "int", nullable: false),
                    attachmentId = table.Column<int>(type: "int", nullable: false),
                    lp = table.Column<int>(type: "int", nullable: false),
                    deleteAfter = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__zzEvents__A3B6C0244241FCF0", x => x.IdzzEvents4joinAttachmentDetail);
                });

            migrationBuilder.CreateTable(
                name: "zzEvents4Lufthansa",
                schema: "edi",
                columns: table => new
                {
                    id_zzEvents4Lufthansa = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    zlecenieId = table.Column<int>(type: "int", nullable: false),
                    insertDT = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    doneDT = table.Column<DateTime>(type: "datetime", nullable: true),
                    done = table.Column<int>(type: "int", nullable: true, defaultValueSql: "((0))"),
                    doneInfo = table.Column<string>(type: "text", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__zzEvents__DAA13073FB26ACDE", x => x.id_zzEvents4Lufthansa);
                });

            migrationBuilder.CreateTable(
                name: "ZZZ_EMAPA_OBLICZ",
                columns: table => new
                {
                    ID_ZZZ_EMAPA_OBLICZ = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ZLECENIE_ID = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "Id zlecenia"),
                    OBLICZONE = table.Column<int>(type: "int", nullable: false, defaultValueSql: "('0')", comment: "status")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ZZZ_EMAPA_OBLICZ", x => x.ID_ZZZ_EMAPA_OBLICZ);
                });

            migrationBuilder.CreateTable(
                name: "zzz_PRZEKAZANIE_POJAZDU",
                columns: table => new
                {
                    DATA_PRZEKAZANIA = table.Column<DateTime>(type: "datetime", nullable: true),
                    CIAGNIK = table.Column<string>(type: "varchar(25)", unicode: false, maxLength: 25, nullable: true),
                    CIAGNIK_ID = table.Column<int>(type: "int", nullable: true),
                    NACZEPA = table.Column<string>(type: "varchar(25)", unicode: false, maxLength: 25, nullable: true),
                    NACZEPA_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA_ZDAJACY = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    KIEROWCA_ZDAJACY_ID = table.Column<int>(type: "int", nullable: true),
                    KIEROWCA_POBIERAJACY = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    KIEROWCA_POBIERAJACY_ID = table.Column<int>(type: "int", nullable: true),
                    WYDAL_POLECENIE = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    NADZORUJACY = table.Column<string>(type: "varchar(150)", unicode: false, maxLength: 150, nullable: true),
                    PASY_KRZYZOWE = table.Column<double>(type: "float", nullable: true),
                    PASY_LADUNKOWE = table.Column<double>(type: "float", nullable: true),
                    MATY = table.Column<double>(type: "float", nullable: true),
                    NAROZNIKI = table.Column<double>(type: "float", nullable: true),
                    DRABINA = table.Column<double>(type: "float", nullable: true),
                    BELKA = table.Column<double>(type: "float", nullable: true),
                    APTECZKA = table.Column<double>(type: "float", nullable: true),
                    GASNICA = table.Column<double>(type: "float", nullable: true),
                    KLINY = table.Column<double>(type: "float", nullable: true),
                    KLUCZ_DO_KOL = table.Column<double>(type: "float", nullable: true),
                    KOLO_ZP_CIAGIK = table.Column<double>(type: "float", nullable: true),
                    KOLO_ZP_NACZEPA = table.Column<double>(type: "float", nullable: true),
                    LANCUCH = table.Column<double>(type: "float", nullable: true),
                    LAMPKA = table.Column<double>(type: "float", nullable: true),
                    KLUCZE_KPL = table.Column<double>(type: "float", nullable: true),
                    MIOTLA = table.Column<double>(type: "float", nullable: true),
                    PISTOLET_DO_PRZEDMUCH = table.Column<double>(type: "float", nullable: true),
                    PISTOLET_MANOMETR = table.Column<double>(type: "float", nullable: true),
                    PRZEWOD_POWIETRZNY = table.Column<double>(type: "float", nullable: true),
                    PODNOSNIK = table.Column<double>(type: "float", nullable: true),
                    RADIO = table.Column<double>(type: "float", nullable: true),
                    RADIO_CB = table.Column<double>(type: "float", nullable: true),
                    TROJKAT = table.Column<double>(type: "float", nullable: true),
                    GOBOX_SHELL = table.Column<double>(type: "float", nullable: true),
                    VIATOLL = table.Column<double>(type: "float", nullable: true),
                    PREMID = table.Column<double>(type: "float", nullable: true),
                    GO_AUSTRIA = table.Column<double>(type: "float", nullable: true),
                    UWAGI = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    CERTYFIKAT_L = table.Column<double>(type: "float", nullable: true),
                    CERTYFIKAT_EURO = table.Column<double>(type: "float", nullable: true),
                    KARTA_SHELL = table.Column<double>(type: "float", nullable: true),
                    KARTA_IDS = table.Column<double>(type: "float", nullable: true),
                    POLISA = table.Column<double>(type: "float", nullable: true),
                    DOW_REJ = table.Column<double>(type: "float", nullable: true),
                    KSIAZKA_GWAR = table.Column<double>(type: "float", nullable: true),
                    LICENCJA = table.Column<double>(type: "float", nullable: true),
                    UPO_LEASING = table.Column<double>(type: "float", nullable: true),
                    KARTA_TOLL_COLECT = table.Column<double>(type: "float", nullable: true),
                    UWAGI_DOK = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    CZY_USZKODZENIA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    USZKODZENIA = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    INNE_USZKODZENIA = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    USZKODEZENIA_INNE = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    SKANER = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "zzz_test",
                columns: table => new
                {
                    msg_short = table.Column<string>(type: "varchar(500)", unicode: false, maxLength: 500, nullable: true),
                    msg = table.Column<string>(type: "varchar(max)", unicode: false, nullable: true),
                    opiekun = table.Column<string>(type: "varchar(255)", unicode: false, maxLength: 255, nullable: true),
                    id_zlecenia = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "ZZZ_USR_TABLE_PETROMANAGER",
                columns: table => new
                {
                    opis = table.Column<string>(type: "xml", nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "ZZZ_WYNGRODZENIA_KOLKA",
                columns: table => new
                {
                    ID_K = table.Column<int>(type: "int", nullable: true),
                    ID_Z = table.Column<int>(type: "int", nullable: true),
                    TRASA = table.Column<string>(type: "varchar(max)", unicode: false, nullable: true),
                    DATA_P = table.Column<DateTime>(type: "datetime", nullable: true),
                    DATA_K = table.Column<DateTime>(type: "datetime", nullable: true),
                    ID_W = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                });

            migrationBuilder.CreateTable(
                name: "CC_debug_pos",
                columns: table => new
                {
                    id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    cc_debug_id = table.Column<int>(type: "int", nullable: true),
                    id_sfm_term = table.Column<int>(type: "int", nullable: true),
                    id_tabor = table.Column<int>(type: "int", nullable: true),
                    id_sfm_pos = table.Column<int>(type: "int", nullable: true),
                    czas = table.Column<DateTime>(type: "datetime", nullable: true),
                    lon = table.Column<double>(type: "float", nullable: true),
                    lat = table.Column<double>(type: "float", nullable: true),
                    lon0 = table.Column<double>(type: "float", nullable: true),
                    lat0 = table.Column<double>(type: "float", nullable: true),
                    lon1 = table.Column<double>(type: "float", nullable: true),
                    lat1 = table.Column<double>(type: "float", nullable: true),
                    lon2 = table.Column<double>(type: "float", nullable: true),
                    lat2 = table.Column<double>(type: "float", nullable: true),
                    id_sfm_route = table.Column<int>(type: "int", nullable: true),
                    dt_alert = table.Column<DateTime>(type: "datetime", nullable: true),
                    ID_Kierowcy = table.Column<int>(type: "int", nullable: true),
                    nazwisko = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    imie = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_CC_debug_pos", x => x.id);
                    table.ForeignKey(
                        name: "FK1_CC_debug_pos",
                        column: x => x.cc_debug_id,
                        principalTable: "cc_debug",
                        principalColumn: "id_cc_debug",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "DictionaryText",
                schema: "ling",
                columns: table => new
                {
                    DictionaryId = table.Column<int>(type: "int", nullable: false),
                    TextId = table.Column<int>(type: "int", nullable: false),
                    LanguageId = table.Column<int>(type: "int", nullable: false),
                    DictionaryTextId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    TextTypeId = table.Column<int>(type: "int", nullable: true),
                    Text = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    CustomText = table.Column<string>(type: "nvarchar(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_DictionaryText", x => new { x.DictionaryId, x.LanguageId, x.TextId });
                    table.ForeignKey(
                        name: "FK_DictionaryText_Dictionary",
                        column: x => x.DictionaryId,
                        principalSchema: "ling",
                        principalTable: "Dictionary",
                        principalColumn: "DictionaryId");
                });

            migrationBuilder.CreateTable(
                name: "AppNewActionsUse",
                columns: table => new
                {
                    idAppNewActionsUse = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    idAppNewActions = table.Column<int>(type: "int", nullable: false),
                    idProfile = table.Column<int>(type: "int", nullable: false),
                    windowType = table.Column<int>(type: "int", nullable: true),
                    windowMode = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    dtCreate = table.Column<DateTime>(type: "datetime", nullable: false, defaultValueSql: "(getdate())")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__AppNewAc__996ABC7ED310219F", x => x.idAppNewActionsUse);
                    table.ForeignKey(
                        name: "FK1_AppNewActionsUse",
                        column: x => x.idAppNewActions,
                        principalTable: "AppNewActions",
                        principalColumn: "idAppNewActions",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK2_AppNewActionsUse",
                        column: x => x.idProfile,
                        principalTable: "PROFILE",
                        principalColumn: "ID_PROFILE",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "RightsProfileItemHist",
                columns: table => new
                {
                    IdRightsProfileItemHist = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    RightsProfileHistId = table.Column<int>(type: "int", nullable: true),
                    Class = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    TypeWB = table.Column<int>(type: "int", nullable: true),
                    Mode = table.Column<string>(type: "varchar(30)", unicode: false, maxLength: 30, nullable: true),
                    Action = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    Disabled = table.Column<int>(type: "int", nullable: true),
                    Hidden = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__RightsPr__87411C4D1734E102", x => x.IdRightsProfileItemHist);
                    table.ForeignKey(
                        name: "FK1_RightsProfileItemHist",
                        column: x => x.RightsProfileHistId,
                        principalTable: "RightsProfileHist",
                        principalColumn: "IdRightsProfileHist",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "SFM_Msg_Attach",
                columns: table => new
                {
                    ID_SFM_Msg_Attach = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    DT = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    IsSent = table.Column<int>(type: "int", nullable: true, defaultValueSql: "((0))"),
                    ID_SFM_Msg = table.Column<int>(type: "int", nullable: true),
                    IdGroup = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
                    FileName = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    FileData = table.Column<byte[]>(type: "varbinary(max)", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_Msg_Attach", x => x.ID_SFM_Msg_Attach);
                    table.ForeignKey(
                        name: "FK1_SFM_Msg_Attach",
                        column: x => x.ID_SFM_Msg,
                        principalTable: "SFM_MSG",
                        principalColumn: "ID_SFM_MSG",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "SFM_Msg_Recipients",
                columns: table => new
                {
                    ID_SFM_Msg_Recipients = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_SFM_Msg = table.Column<int>(type: "int", nullable: false),
                    Address = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    AddressMode = table.Column<int>(type: "int", nullable: true, defaultValueSql: "((0))")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_Msg_Recipients", x => x.ID_SFM_Msg_Recipients);
                    table.ForeignKey(
                        name: "FK1_SFM_Msg_Recipients",
                        column: x => x.ID_SFM_Msg,
                        principalTable: "SFM_MSG",
                        principalColumn: "ID_SFM_MSG",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "SFM_Msg_Ref",
                columns: table => new
                {
                    ID_SFM_Msg_Ref = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_SFM_Msg = table.Column<int>(type: "int", nullable: false),
                    ID_OBJ = table.Column<int>(type: "int", nullable: true),
                    ID_REC = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_Msg_Ref", x => x.ID_SFM_Msg_Ref);
                    table.ForeignKey(
                        name: "FK1_SFM_Msg_Ref",
                        column: x => x.ID_SFM_Msg,
                        principalTable: "SFM_MSG",
                        principalColumn: "ID_SFM_MSG",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "SFM_MsgDefMenuWindow",
                columns: table => new
                {
                    ID_SFM_MsgDefMenuWindow = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ID_SFM_MsgDefMenu = table.Column<int>(type: "int", nullable: false),
                    ClassName = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SFM_MsgDefMenuWindow", x => x.ID_SFM_MsgDefMenuWindow);
                    table.ForeignKey(
                        name: "FK1_SFM_MsgDefMenu",
                        column: x => x.ID_SFM_MsgDefMenu,
                        principalTable: "SFM_MSGDEFMENU",
                        principalColumn: "ID_SFM_MSGDEFMENU",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "SFM_Route_ViaPoint",
                columns: table => new
                {
                    id_SFM_Route_ViaPoint = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    id_SFM_Route = table.Column<int>(type: "int", nullable: true),
                    dstObjType = table.Column<int>(type: "int", nullable: true),
                    dstObjId = table.Column<int>(type: "int", nullable: true),
                    enabled = table.Column<int>(type: "int", nullable: true),
                    lp = table.Column<int>(type: "int", nullable: true),
                    viaType = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    description = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    lon = table.Column<double>(type: "float", nullable: true),
                    lat = table.Column<double>(type: "float", nullable: true),
                    direction = table.Column<int>(type: "int", nullable: true),
                    country = table.Column<string>(type: "varchar(3)", unicode: false, maxLength: 3, nullable: true),
                    zipCode = table.Column<string>(type: "varchar(15)", unicode: false, maxLength: 15, nullable: true),
                    place = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    street = table.Column<string>(type: "varchar(80)", unicode: false, maxLength: 80, nullable: true),
                    name = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true),
                    namePOI = table.Column<string>(type: "varchar(254)", unicode: false, maxLength: 254, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__SFM_Rout__BAA81CFF1A0D2B73", x => x.id_SFM_Route_ViaPoint);
                    table.ForeignKey(
                        name: "FK__SFM_Route__id_SF__16FA1676",
                        column: x => x.id_SFM_Route,
                        principalTable: "SFM_ROUTE",
                        principalColumn: "ID_SFM_ROUTE",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "SFM_Route_Obj_Item",
                columns: table => new
                {
                    id_SFM_Route_Obj_Item = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    id_SFM_Route_Obj = table.Column<int>(type: "int", nullable: true),
                    lon = table.Column<double>(type: "float", nullable: false),
                    lat = table.Column<double>(type: "float", nullable: false),
                    direction = table.Column<int>(type: "int", nullable: true),
                    kind = table.Column<short>(type: "smallint", nullable: true),
                    description = table.Column<string>(type: "nvarchar(100)", maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__SFM_Rout__C72A8A262AD1371A", x => x.id_SFM_Route_Obj_Item);
                    table.ForeignKey(
                        name: "FK__SFM_Route__id_SF__1605F23D",
                        column: x => x.id_SFM_Route_Obj,
                        principalTable: "SFM_Route_Obj",
                        principalColumn: "id_SFM_Route_Obj",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "SolverPoi2PoiMatrixes",
                schema: "opti",
                columns: table => new
                {
                    SolverTaskId = table.Column<int>(type: "int", nullable: false),
                    MatrixId = table.Column<int>(type: "int", nullable: false),
                    MatrixTypeId = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SolverPoi2PoiMatrixes", x => new { x.SolverTaskId, x.MatrixId });
                    table.ForeignKey(
                        name: "FK_SolverPoi2PoiMatrixes_TypeId",
                        column: x => x.MatrixTypeId,
                        principalSchema: "opti",
                        principalTable: "SolverPoi2PoiMatrixTypes",
                        principalColumn: "MatrixTypeId");
                });

            migrationBuilder.CreateTable(
                name: "SolverTasks",
                schema: "opti",
                columns: table => new
                {
                    SolverTaskId = table.Column<int>(type: "int", nullable: false),
                    StatusId = table.Column<int>(type: "int", nullable: false),
                    SolverTaskTypeId = table.Column<int>(type: "int", nullable: false),
                    SolverConfig = table.Column<string>(type: "xml", nullable: true),
                    BestSolutionId = table.Column<int>(type: "int", nullable: true),
                    SessionId = table.Column<int>(type: "int", nullable: true),
                    ERROR_MSG = table.Column<string>(type: "nvarchar(max)", nullable: true),
                    ObjId = table.Column<int>(type: "int", nullable: true),
                    Recid = table.Column<int>(type: "int", nullable: true),
                    DateCreated = table.Column<DateTime>(type: "datetime", nullable: true),
                    DateModified = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SolverTasks", x => x.SolverTaskId);
                    table.ForeignKey(
                        name: "FK_SolverTasks_SolverTaskTypeId",
                        column: x => x.SolverTaskTypeId,
                        principalSchema: "opti",
                        principalTable: "SolverTaskTypes",
                        principalColumn: "SolverTaskTypeId");
                    table.ForeignKey(
                        name: "FK_SolverTasks_StatusId",
                        column: x => x.StatusId,
                        principalSchema: "opti",
                        principalTable: "SolverTaskStatuses",
                        principalColumn: "SolverTaskStatusId");
                });

            migrationBuilder.CreateTable(
                name: "SolverPricelist",
                schema: "opti",
                columns: table => new
                {
                    SolverTaskId = table.Column<int>(type: "int", nullable: false),
                    PricelistId = table.Column<int>(type: "int", nullable: false),
                    Name = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    SolverCarrierId = table.Column<int>(type: "int", nullable: true),
                    SolverTruckProfileId = table.Column<int>(type: "int", nullable: true),
                    PricelistTypeId = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SolverPricelist", x => new { x.SolverTaskId, x.PricelistId });
                    table.ForeignKey(
                        name: "FK_SolverPricelist_Carrier",
                        columns: x => new { x.SolverTaskId, x.SolverCarrierId },
                        principalSchema: "opti",
                        principalTable: "SolverCarriers",
                        principalColumns: new[] { "SolverTaskId", "SolverCarrierId" });
                    table.ForeignKey(
                        name: "FK_SolverPricelist_TruckProfile",
                        columns: x => new { x.SolverTaskId, x.SolverTruckProfileId },
                        principalSchema: "opti",
                        principalTable: "SolverTruckProfile",
                        principalColumns: new[] { "SolverTaskId", "SolverTruckProfileId" });
                    table.ForeignKey(
                        name: "FK_SolverPricelist_Type",
                        column: x => x.PricelistTypeId,
                        principalSchema: "opti",
                        principalTable: "SolverPricelistTypes",
                        principalColumn: "PricelistTypeId");
                });

            migrationBuilder.CreateTable(
                name: "TerminateAppRequestSessions",
                columns: table => new
                {
                    IdTerminateAppRequestSessions = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    TerminateAppRequestId = table.Column<int>(type: "int", nullable: true),
                    RegisterDate = table.Column<DateTime>(type: "datetime", nullable: true, defaultValueSql: "(getdate())"),
                    AppName = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    UserId = table.Column<int>(type: "int", nullable: true),
                    ID_SPEED_LOG = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK__Terminat__B5F3854A1CC437A8", x => x.IdTerminateAppRequestSessions);
                    table.ForeignKey(
                        name: "FK1_TerminateAppRequestSessions",
                        column: x => x.TerminateAppRequestId,
                        principalTable: "TerminateAppRequest",
                        principalColumn: "IdTerminateAppRequest",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ToolGroupDefinition",
                schema: "app",
                columns: table => new
                {
                    ToolGroupDefinitionId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ToolGroupId = table.Column<int>(type: "int", nullable: false),
                    ToolId = table.Column<int>(type: "int", nullable: false),
                    ToolName = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    ClientToolName = table.Column<string>(type: "varchar(256)", unicode: false, maxLength: 256, nullable: true),
                    ToolOrder = table.Column<int>(type: "int", nullable: true),
                    Location = table.Column<int>(type: "int", nullable: true, defaultValueSql: "((2))"),
                    DefaultAction = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ToolGroupDefinition", x => x.ToolGroupDefinitionId);
                    table.ForeignKey(
                        name: "FK_ToolGroupDefinition_Tool",
                        column: x => x.ToolId,
                        principalSchema: "app",
                        principalTable: "Tool",
                        principalColumn: "ToolId");
                });

            migrationBuilder.CreateTable(
                name: "SolverSolutions",
                schema: "opti",
                columns: table => new
                {
                    SolverSolutionId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SolverTaskId = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SolverSolutions", x => x.SolverSolutionId);
                    table.ForeignKey(
                        name: "FK_SolverSolutions_SolverTaskId",
                        column: x => x.SolverTaskId,
                        principalSchema: "opti",
                        principalTable: "SolverTasks",
                        principalColumn: "SolverTaskId");
                });

            migrationBuilder.CreateTable(
                name: "SolverFlatPricelist",
                schema: "opti",
                columns: table => new
                {
                    SolverTaskId = table.Column<int>(type: "int", nullable: false),
                    PricelistId = table.Column<int>(type: "int", nullable: false),
                    ItemName = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: false),
                    Price = table.Column<double>(type: "float", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SolverFlatPricelist", x => new { x.SolverTaskId, x.PricelistId, x.ItemName });
                    table.ForeignKey(
                        name: "FK_SolverFlatPricelist_PricelistId",
                        columns: x => new { x.SolverTaskId, x.PricelistId },
                        principalSchema: "opti",
                        principalTable: "SolverPricelist",
                        principalColumns: new[] { "SolverTaskId", "PricelistId" });
                });

            migrationBuilder.CreateTable(
                name: "SolverPerWeightPricelist",
                schema: "opti",
                columns: table => new
                {
                    SolverTaskId = table.Column<int>(type: "int", nullable: false),
                    PricelistId = table.Column<int>(type: "int", nullable: false),
                    Weight = table.Column<double>(type: "float", nullable: false),
                    Price = table.Column<double>(type: "float", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SolverPerWeightPricelist", x => new { x.SolverTaskId, x.PricelistId, x.Weight });
                    table.ForeignKey(
                        name: "FK_SolverPerWeightPricelist_PricelistId",
                        columns: x => new { x.SolverTaskId, x.PricelistId },
                        principalSchema: "opti",
                        principalTable: "SolverPricelist",
                        principalColumns: new[] { "SolverTaskId", "PricelistId" });
                });

            migrationBuilder.CreateTable(
                name: "SolverPois",
                schema: "opti",
                columns: table => new
                {
                    SolverTaskId = table.Column<int>(type: "int", nullable: false),
                    SolverPoiId = table.Column<int>(type: "int", nullable: false),
                    CountryCode2 = table.Column<string>(type: "char(2)", unicode: false, fixedLength: true, maxLength: 2, nullable: false),
                    ZipCode = table.Column<string>(type: "varchar(10)", unicode: false, maxLength: 10, nullable: false),
                    Latitude = table.Column<double>(type: "float", nullable: false),
                    Longitude = table.Column<double>(type: "float", nullable: false),
                    ServiceTimeAdm = table.Column<double>(type: "float", nullable: false),
                    ServiceTimePerWeightUnit = table.Column<double>(type: "float", nullable: false),
                    PricelistId = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SolverPois", x => new { x.SolverTaskId, x.SolverPoiId });
                    table.ForeignKey(
                        name: "FK_SolverPois_CountryCode2",
                        columns: x => new { x.SolverTaskId, x.CountryCode2 },
                        principalSchema: "opti",
                        principalTable: "SolverCountries",
                        principalColumns: new[] { "SolverTaskId", "CountryCode2" });
                    table.ForeignKey(
                        name: "FK_SolverPois_PricelistId",
                        columns: x => new { x.SolverTaskId, x.PricelistId },
                        principalSchema: "opti",
                        principalTable: "SolverPricelist",
                        principalColumns: new[] { "SolverTaskId", "PricelistId" });
                });

            migrationBuilder.CreateTable(
                name: "SolverPricelistFeatures",
                schema: "opti",
                columns: table => new
                {
                    SolverTaskId = table.Column<int>(type: "int", nullable: false),
                    PricelistId = table.Column<int>(type: "int", nullable: false),
                    PricelistFeatureTypeId = table.Column<int>(type: "int", nullable: false),
                    PricelistFeatureValue = table.Column<double>(type: "float", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SolverPricelistFeatures", x => new { x.SolverTaskId, x.PricelistId, x.PricelistFeatureTypeId });
                    table.ForeignKey(
                        name: "FK_SolverPricelistFeatures_FeatureType",
                        column: x => x.PricelistFeatureTypeId,
                        principalSchema: "opti",
                        principalTable: "SolverPricelistFeatureTypes",
                        principalColumn: "PricelistFeatureTypeId");
                    table.ForeignKey(
                        name: "FK_SolverPricelistFeatures_Pricelist",
                        columns: x => new { x.SolverTaskId, x.PricelistId },
                        principalSchema: "opti",
                        principalTable: "SolverPricelist",
                        principalColumns: new[] { "SolverTaskId", "PricelistId" });
                });

            migrationBuilder.CreateTable(
                name: "SolverPricelistRangedPrices",
                schema: "opti",
                columns: table => new
                {
                    SolverTaskId = table.Column<int>(type: "int", nullable: false),
                    PricelistId = table.Column<int>(type: "int", nullable: false),
                    LowerBound = table.Column<double>(type: "float", nullable: false),
                    UpperBound = table.Column<double>(type: "float", nullable: true),
                    Price = table.Column<double>(type: "float", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PricelistRangedPrices", x => new { x.SolverTaskId, x.PricelistId, x.LowerBound });
                    table.ForeignKey(
                        name: "FK_PricelistRangedPrices_Pricelist",
                        columns: x => new { x.SolverTaskId, x.PricelistId },
                        principalSchema: "opti",
                        principalTable: "SolverPricelist",
                        principalColumns: new[] { "SolverTaskId", "PricelistId" });
                });

            migrationBuilder.CreateTable(
                name: "SolverMessages",
                schema: "opti",
                columns: table => new
                {
                    MessageId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SolverTaskId = table.Column<int>(type: "int", nullable: false),
                    SolverSolutionId = table.Column<int>(type: "int", nullable: true),
                    MessageTypeId = table.Column<int>(type: "int", nullable: false),
                    Message = table.Column<string>(type: "xml", nullable: false)
                },
                constraints: table =>
                {
                    table.ForeignKey(
                        name: "SolverMessages_SolverMessageType",
                        column: x => x.MessageTypeId,
                        principalSchema: "opti",
                        principalTable: "SolverMessageTypes",
                        principalColumn: "MessageTypeId");
                    table.ForeignKey(
                        name: "SolverMessages_SolverSolutionId",
                        column: x => x.SolverSolutionId,
                        principalSchema: "opti",
                        principalTable: "SolverSolutions",
                        principalColumn: "SolverSolutionId");
                    table.ForeignKey(
                        name: "SolverMessages_SolverTask",
                        column: x => x.SolverTaskId,
                        principalSchema: "opti",
                        principalTable: "SolverTasks",
                        principalColumn: "SolverTaskId");
                });

            migrationBuilder.CreateTable(
                name: "SolverFleet",
                schema: "opti",
                columns: table => new
                {
                    SolverTaskId = table.Column<int>(type: "int", nullable: false),
                    FleetId = table.Column<int>(type: "int", nullable: false),
                    SolverTruckProfileId = table.Column<int>(type: "int", nullable: false),
                    SolverCarrierId = table.Column<int>(type: "int", nullable: true),
                    VehicleId = table.Column<int>(type: "int", nullable: true),
                    Count = table.Column<int>(type: "int", nullable: false),
                    AssignedPoiId = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SolverFleet", x => new { x.SolverTaskId, x.FleetId });
                    table.ForeignKey(
                        name: "FK_SolverFleet_AssignedPoi",
                        columns: x => new { x.SolverTaskId, x.AssignedPoiId },
                        principalSchema: "opti",
                        principalTable: "SolverPois",
                        principalColumns: new[] { "SolverTaskId", "SolverPoiId" });
                    table.ForeignKey(
                        name: "FK_SolverFleet_Carrier",
                        columns: x => new { x.SolverTaskId, x.SolverCarrierId },
                        principalSchema: "opti",
                        principalTable: "SolverCarriers",
                        principalColumns: new[] { "SolverTaskId", "SolverCarrierId" });
                    table.ForeignKey(
                        name: "FK_SolverFleet_TruckProfile",
                        columns: x => new { x.SolverTaskId, x.SolverTruckProfileId },
                        principalSchema: "opti",
                        principalTable: "SolverTruckProfile",
                        principalColumns: new[] { "SolverTaskId", "SolverTruckProfileId" });
                });

            migrationBuilder.CreateTable(
                name: "SolverOrders",
                schema: "opti",
                columns: table => new
                {
                    SolverTaskId = table.Column<int>(type: "int", nullable: false),
                    SolverOrderId = table.Column<int>(type: "int", nullable: false),
                    SrcPoiId = table.Column<int>(type: "int", nullable: true),
                    DstPoiId = table.Column<int>(type: "int", nullable: true),
                    Weight = table.Column<double>(type: "float", nullable: true),
                    Volume = table.Column<double>(type: "float", nullable: true),
                    Amount = table.Column<double>(type: "float", nullable: true),
                    AmountUnit = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true),
                    LoadDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    TypeId = table.Column<int>(type: "int", nullable: false, defaultValueSql: "((1))")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SolverOrders", x => new { x.SolverTaskId, x.SolverOrderId });
                    table.ForeignKey(
                        name: "FK_SolverOrders_DstPoiId",
                        columns: x => new { x.SolverTaskId, x.DstPoiId },
                        principalSchema: "opti",
                        principalTable: "SolverPois",
                        principalColumns: new[] { "SolverTaskId", "SolverPoiId" });
                    table.ForeignKey(
                        name: "FK_SolverOrders_SrcPoiId",
                        columns: x => new { x.SolverTaskId, x.SrcPoiId },
                        principalSchema: "opti",
                        principalTable: "SolverPois",
                        principalColumns: new[] { "SolverTaskId", "SolverPoiId" });
                    table.ForeignKey(
                        name: "FK_SolverOrders_TypeId",
                        column: x => x.TypeId,
                        principalSchema: "opti",
                        principalTable: "SolverOrderTypes",
                        principalColumn: "OrderTypeId");
                });

            migrationBuilder.CreateTable(
                name: "SolverPerPoiBorderCrossings",
                schema: "opti",
                columns: table => new
                {
                    SolverTaskId = table.Column<int>(type: "int", nullable: false),
                    SolverPoiId = table.Column<int>(type: "int", nullable: false),
                    SolverBorderCrossingPoiId = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SolverPerPoiBorderCrossing", x => new { x.SolverTaskId, x.SolverPoiId });
                    table.ForeignKey(
                        name: "FK_SolverPerPoiBorderCrossing_Crossing",
                        columns: x => new { x.SolverTaskId, x.SolverBorderCrossingPoiId },
                        principalSchema: "opti",
                        principalTable: "SolverPois",
                        principalColumns: new[] { "SolverTaskId", "SolverPoiId" });
                    table.ForeignKey(
                        name: "FK_SolverPerPoiBorderCrossing_Poi",
                        columns: x => new { x.SolverTaskId, x.SolverPoiId },
                        principalSchema: "opti",
                        principalTable: "SolverPois",
                        principalColumns: new[] { "SolverTaskId", "SolverPoiId" });
                });

            migrationBuilder.CreateTable(
                name: "SolverPerPoiFlatRate",
                schema: "opti",
                columns: table => new
                {
                    SolverTaskId = table.Column<int>(type: "int", nullable: false),
                    SolverCarrierId = table.Column<int>(type: "int", nullable: false),
                    SolverPoiId = table.Column<int>(type: "int", nullable: false),
                    FlatRate = table.Column<double>(type: "float", nullable: false),
                    Distance = table.Column<double>(type: "float", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SolverPerPoiFlatRate", x => new { x.SolverTaskId, x.SolverCarrierId, x.SolverPoiId });
                    table.ForeignKey(
                        name: "FK_SolverPerPoiFlatRate_SolverCarrierId",
                        columns: x => new { x.SolverTaskId, x.SolverCarrierId },
                        principalSchema: "opti",
                        principalTable: "SolverCarriers",
                        principalColumns: new[] { "SolverTaskId", "SolverCarrierId" });
                    table.ForeignKey(
                        name: "FK_SolverPerPoiFlatRate_SolverPoiId",
                        columns: x => new { x.SolverTaskId, x.SolverPoiId },
                        principalSchema: "opti",
                        principalTable: "SolverPois",
                        principalColumns: new[] { "SolverTaskId", "SolverPoiId" });
                });

            migrationBuilder.CreateTable(
                name: "SolverPoi2PoiMatrixValues",
                schema: "opti",
                columns: table => new
                {
                    SolverTaskId = table.Column<int>(type: "int", nullable: false),
                    MatrixId = table.Column<int>(type: "int", nullable: false),
                    SrcPoiId = table.Column<int>(type: "int", nullable: false),
                    DstPoiId = table.Column<int>(type: "int", nullable: false),
                    Value = table.Column<double>(type: "float", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SolverPoi2PoiMatrixValues", x => new { x.SolverTaskId, x.MatrixId, x.SrcPoiId, x.DstPoiId });
                    table.ForeignKey(
                        name: "FK_SolverPoi2PoiMatrixValues_DstPoiId",
                        columns: x => new { x.SolverTaskId, x.DstPoiId },
                        principalSchema: "opti",
                        principalTable: "SolverPois",
                        principalColumns: new[] { "SolverTaskId", "SolverPoiId" });
                    table.ForeignKey(
                        name: "FK_SolverPoi2PoiMatrixValues_MatrixId",
                        columns: x => new { x.SolverTaskId, x.MatrixId },
                        principalSchema: "opti",
                        principalTable: "SolverPoi2PoiMatrixes",
                        principalColumns: new[] { "SolverTaskId", "MatrixId" });
                    table.ForeignKey(
                        name: "FK_SolverPoi2PoiMatrixValues_SrcPoiId",
                        columns: x => new { x.SolverTaskId, x.SrcPoiId },
                        principalSchema: "opti",
                        principalTable: "SolverPois",
                        principalColumns: new[] { "SolverTaskId", "SolverPoiId" });
                });

            migrationBuilder.CreateTable(
                name: "SolverPoiEquipmentRequirements",
                schema: "opti",
                columns: table => new
                {
                    SolverTaskId = table.Column<int>(type: "int", nullable: false),
                    SolverPoiId = table.Column<int>(type: "int", nullable: false),
                    EquipmentName = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SolverPoiEquipmentRequirements", x => new { x.SolverTaskId, x.SolverPoiId });
                    table.ForeignKey(
                        name: "FK_SolverPoiEquipmentRequirements_PoiId",
                        columns: x => new { x.SolverTaskId, x.SolverPoiId },
                        principalSchema: "opti",
                        principalTable: "SolverPois",
                        principalColumns: new[] { "SolverTaskId", "SolverPoiId" });
                });

            migrationBuilder.CreateTable(
                name: "SolverPoiGates",
                schema: "opti",
                columns: table => new
                {
                    SolverTaskId = table.Column<int>(type: "int", nullable: false),
                    IsVirtual = table.Column<bool>(type: "bit", nullable: false),
                    SolverPoiGateId = table.Column<long>(type: "bigint", nullable: false),
                    SolverPoiId = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SolverPoiGates", x => new { x.SolverTaskId, x.SolverPoiGateId, x.IsVirtual });
                    table.ForeignKey(
                        name: "FK_SolverPoiGates_SolverPoiId",
                        columns: x => new { x.SolverTaskId, x.SolverPoiId },
                        principalSchema: "opti",
                        principalTable: "SolverPois",
                        principalColumns: new[] { "SolverTaskId", "SolverPoiId" });
                });

            migrationBuilder.CreateTable(
                name: "SolverPoiPairFlatRatePricelist",
                schema: "opti",
                columns: table => new
                {
                    SolverTaskId = table.Column<int>(type: "int", nullable: false),
                    PricelistId = table.Column<int>(type: "int", nullable: false),
                    SrcPoiId = table.Column<int>(type: "int", nullable: false),
                    DstPoiId = table.Column<int>(type: "int", nullable: false),
                    Price = table.Column<double>(type: "float", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SolverPoiPairFlatRatePricelist", x => new { x.SolverTaskId, x.PricelistId, x.SrcPoiId, x.DstPoiId });
                    table.ForeignKey(
                        name: "FK_SolverPoiPairFlatRatePricelist_DstPoiId",
                        columns: x => new { x.SolverTaskId, x.DstPoiId },
                        principalSchema: "opti",
                        principalTable: "SolverPois",
                        principalColumns: new[] { "SolverTaskId", "SolverPoiId" });
                    table.ForeignKey(
                        name: "FK_SolverPoiPairFlatRatePricelist_PricelistId",
                        columns: x => new { x.SolverTaskId, x.PricelistId },
                        principalSchema: "opti",
                        principalTable: "SolverPricelist",
                        principalColumns: new[] { "SolverTaskId", "PricelistId" });
                    table.ForeignKey(
                        name: "FK_SolverPoiPairFlatRatePricelist_SrcPoiId",
                        columns: x => new { x.SolverTaskId, x.SrcPoiId },
                        principalSchema: "opti",
                        principalTable: "SolverPois",
                        principalColumns: new[] { "SolverTaskId", "SolverPoiId" });
                });

            migrationBuilder.CreateTable(
                name: "SolverPoiRelations",
                schema: "opti",
                columns: table => new
                {
                    SolverTaskId = table.Column<int>(type: "int", nullable: false),
                    SubjectPoiId = table.Column<int>(type: "int", nullable: false),
                    ObjectPoiId = table.Column<int>(type: "int", nullable: false),
                    PoiRelationTypeId = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SolverPoiRelations", x => new { x.SolverTaskId, x.SubjectPoiId, x.ObjectPoiId, x.PoiRelationTypeId });
                    table.ForeignKey(
                        name: "FK_SolverPoiRelations_ObjectPoiId",
                        columns: x => new { x.SolverTaskId, x.ObjectPoiId },
                        principalSchema: "opti",
                        principalTable: "SolverPois",
                        principalColumns: new[] { "SolverTaskId", "SolverPoiId" });
                    table.ForeignKey(
                        name: "FK_SolverPoiRelations_RelationType",
                        column: x => x.PoiRelationTypeId,
                        principalSchema: "opti",
                        principalTable: "SolverPoiRelationTypes",
                        principalColumn: "PoiRelationTypeId");
                    table.ForeignKey(
                        name: "FK_SolverPoiRelations_SubjectPoiId",
                        columns: x => new { x.SolverTaskId, x.SubjectPoiId },
                        principalSchema: "opti",
                        principalTable: "SolverPois",
                        principalColumns: new[] { "SolverTaskId", "SolverPoiId" });
                });

            migrationBuilder.CreateTable(
                name: "SolverFleetFeatures",
                schema: "opti",
                columns: table => new
                {
                    SolverTaskId = table.Column<int>(type: "int", nullable: false),
                    FleetId = table.Column<int>(type: "int", nullable: false),
                    FleetFeatureTypeId = table.Column<int>(type: "int", nullable: false),
                    FleetFeatureValue = table.Column<double>(type: "float", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SolverFleetFeatures", x => new { x.SolverTaskId, x.FleetId, x.FleetFeatureTypeId });
                    table.ForeignKey(
                        name: "FK_SolverFleetFeatures_FeatureType",
                        column: x => x.FleetFeatureTypeId,
                        principalSchema: "opti",
                        principalTable: "SolverFleetFeatureTypes",
                        principalColumn: "FleetFeatureTypeId");
                    table.ForeignKey(
                        name: "FK_SolverFleetFeatures_Fleet",
                        columns: x => new { x.SolverTaskId, x.FleetId },
                        principalSchema: "opti",
                        principalTable: "SolverFleet",
                        principalColumns: new[] { "SolverTaskId", "FleetId" });
                });

            migrationBuilder.CreateTable(
                name: "SolverFleetPositions",
                schema: "opti",
                columns: table => new
                {
                    SolverTaskId = table.Column<int>(type: "int", nullable: false),
                    FleetId = table.Column<int>(type: "int", nullable: false),
                    SolverPoiId = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SolverFleetPositions", x => new { x.SolverTaskId, x.FleetId });
                    table.ForeignKey(
                        name: "FK_SolverFleetPositions_Fleet",
                        columns: x => new { x.SolverTaskId, x.FleetId },
                        principalSchema: "opti",
                        principalTable: "SolverFleet",
                        principalColumns: new[] { "SolverTaskId", "FleetId" });
                    table.ForeignKey(
                        name: "FK_SolverFleetPositions_Poi",
                        columns: x => new { x.SolverTaskId, x.SolverPoiId },
                        principalSchema: "opti",
                        principalTable: "SolverPois",
                        principalColumns: new[] { "SolverTaskId", "SolverPoiId" });
                });

            migrationBuilder.CreateTable(
                name: "SolverFleetTimeWindows",
                schema: "opti",
                columns: table => new
                {
                    SolverTaskId = table.Column<int>(type: "int", nullable: false),
                    FleetId = table.Column<int>(type: "int", nullable: false),
                    WindowStart = table.Column<DateTime>(type: "datetime", nullable: true),
                    WindowEnd = table.Column<DateTime>(type: "datetime", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SolverFleetTimeWindows", x => new { x.SolverTaskId, x.FleetId });
                    table.ForeignKey(
                        name: "FK_SolverFleetTimeWindows_Fleet",
                        columns: x => new { x.SolverTaskId, x.FleetId },
                        principalSchema: "opti",
                        principalTable: "SolverFleet",
                        principalColumns: new[] { "SolverTaskId", "FleetId" });
                });

            migrationBuilder.CreateTable(
                name: "SolverRoutes",
                schema: "opti",
                columns: table => new
                {
                    SolverRouteId = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    SolverSolutionId = table.Column<int>(type: "int", nullable: false),
                    SolverTaskId = table.Column<int>(type: "int", nullable: false),
                    SolverCarrierId = table.Column<int>(type: "int", nullable: true),
                    Cost = table.Column<double>(type: "float", nullable: true),
                    Distance = table.Column<double>(type: "float", nullable: true),
                    Duration = table.Column<double>(type: "float", nullable: true),
                    SolverTruckProfileId = table.Column<int>(type: "int", nullable: true),
                    GroupName = table.Column<string>(type: "varchar(50)", unicode: false, maxLength: 50, nullable: true),
                    FleetId = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SolverRoutes", x => x.SolverRouteId);
                    table.UniqueConstraint("AK_SolverRoutes_SolverSolutionId_SolverRouteId", x => new { x.SolverSolutionId, x.SolverRouteId });
                    table.ForeignKey(
                        name: "FK_SolverRoutes_Fleet",
                        columns: x => new { x.SolverTaskId, x.FleetId },
                        principalSchema: "opti",
                        principalTable: "SolverFleet",
                        principalColumns: new[] { "SolverTaskId", "FleetId" });
                    table.ForeignKey(
                        name: "FK_SolverRoutes_SolverCarrierId",
                        columns: x => new { x.SolverTaskId, x.SolverCarrierId },
                        principalSchema: "opti",
                        principalTable: "SolverCarriers",
                        principalColumns: new[] { "SolverTaskId", "SolverCarrierId" });
                    table.ForeignKey(
                        name: "FK_SolverRoutes_SolverSolutionId",
                        column: x => x.SolverSolutionId,
                        principalSchema: "opti",
                        principalTable: "SolverSolutions",
                        principalColumn: "SolverSolutionId");
                    table.ForeignKey(
                        name: "FK_SolverRoutes_SolverTruckProfileId",
                        columns: x => new { x.SolverTaskId, x.SolverTruckProfileId },
                        principalSchema: "opti",
                        principalTable: "SolverTruckProfile",
                        principalColumns: new[] { "SolverTaskId", "SolverTruckProfileId" });
                });

            migrationBuilder.CreateTable(
                name: "SolverFleet2OrdersMatrixValues",
                schema: "opti",
                columns: table => new
                {
                    SolverTaskId = table.Column<int>(type: "int", nullable: false),
                    MatrixId = table.Column<int>(type: "int", nullable: false),
                    FleetId = table.Column<int>(type: "int", nullable: false),
                    SolverOrderId = table.Column<int>(type: "int", nullable: false),
                    Value = table.Column<double>(type: "float", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SolverFleet2OrdersMatrixValues", x => new { x.SolverTaskId, x.MatrixId, x.FleetId, x.SolverOrderId });
                    table.ForeignKey(
                        name: "FK_SolverFleet2OrdersMatrixValues_Fleet",
                        columns: x => new { x.SolverTaskId, x.FleetId },
                        principalSchema: "opti",
                        principalTable: "SolverFleet",
                        principalColumns: new[] { "SolverTaskId", "FleetId" });
                    table.ForeignKey(
                        name: "FK_SolverFleet2OrdersMatrixValues_Matrix",
                        columns: x => new { x.SolverTaskId, x.MatrixId },
                        principalSchema: "opti",
                        principalTable: "SolverFleet2OrdersMatrix",
                        principalColumns: new[] { "SolverTaskId", "MatrixId" });
                    table.ForeignKey(
                        name: "FK_SolverFleet2OrdersMatrixValues_Order",
                        columns: x => new { x.SolverTaskId, x.SolverOrderId },
                        principalSchema: "opti",
                        principalTable: "SolverOrders",
                        principalColumns: new[] { "SolverTaskId", "SolverOrderId" });
                });

            migrationBuilder.CreateTable(
                name: "SolverOrderEquipmentRequirements",
                schema: "opti",
                columns: table => new
                {
                    SolverTaskId = table.Column<int>(type: "int", nullable: false),
                    SolverOrderId = table.Column<int>(type: "int", nullable: false),
                    EquipmentName = table.Column<string>(type: "varchar(100)", unicode: false, maxLength: 100, nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SolverOrderEquipmentRequirements", x => new { x.SolverTaskId, x.SolverOrderId });
                    table.ForeignKey(
                        name: "FK_SolverOrderEquipmentRequirements_OrderId",
                        columns: x => new { x.SolverTaskId, x.SolverOrderId },
                        principalSchema: "opti",
                        principalTable: "SolverOrders",
                        principalColumns: new[] { "SolverTaskId", "SolverOrderId" });
                });

            migrationBuilder.CreateTable(
                name: "SolverOrderServiceTimes",
                schema: "opti",
                columns: table => new
                {
                    SolverTaskId = table.Column<int>(type: "int", nullable: false),
                    SolverOrderId = table.Column<int>(type: "int", nullable: false),
                    ServiceTime = table.Column<double>(type: "float", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SolverOrderServiceTimes", x => new { x.SolverTaskId, x.SolverOrderId });
                    table.ForeignKey(
                        name: "FK_SolverOrderServiceTimes_Order",
                        columns: x => new { x.SolverTaskId, x.SolverOrderId },
                        principalSchema: "opti",
                        principalTable: "SolverOrders",
                        principalColumns: new[] { "SolverTaskId", "SolverOrderId" });
                });

            migrationBuilder.CreateTable(
                name: "SolverOrdersFeatures",
                schema: "opti",
                columns: table => new
                {
                    SolverTaskId = table.Column<int>(type: "int", nullable: false),
                    SolverOrderId = table.Column<int>(type: "int", nullable: false),
                    FeatureTypeId = table.Column<int>(type: "int", nullable: false),
                    FeatureValue = table.Column<double>(type: "float", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SolverOrdersFeatures", x => new { x.SolverTaskId, x.SolverOrderId, x.FeatureTypeId });
                    table.ForeignKey(
                        name: "FK_SolverOrdersFeatures_Order",
                        columns: x => new { x.SolverTaskId, x.SolverOrderId },
                        principalSchema: "opti",
                        principalTable: "SolverOrders",
                        principalColumns: new[] { "SolverTaskId", "SolverOrderId" });
                    table.ForeignKey(
                        name: "FK_SolverOrdersFeatures_Type",
                        column: x => x.FeatureTypeId,
                        principalSchema: "opti",
                        principalTable: "SolverOrdersFeatureTypes",
                        principalColumn: "FeatureTypeId");
                });

            migrationBuilder.CreateTable(
                name: "SolverOrdersItems",
                schema: "opti",
                columns: table => new
                {
                    SolverTaskId = table.Column<int>(type: "int", nullable: false),
                    SolverOrderId = table.Column<int>(type: "int", nullable: false),
                    OrderItemId = table.Column<int>(type: "int", nullable: false),
                    Amount = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SolverOrdersItems", x => new { x.SolverTaskId, x.SolverOrderId, x.OrderItemId });
                    table.ForeignKey(
                        name: "FK_SolverOrdersItems_SolverOrders",
                        columns: x => new { x.SolverTaskId, x.SolverOrderId },
                        principalSchema: "opti",
                        principalTable: "SolverOrders",
                        principalColumns: new[] { "SolverTaskId", "SolverOrderId" });
                });

            migrationBuilder.CreateTable(
                name: "SolverOrdersRelationRestrictions",
                schema: "opti",
                columns: table => new
                {
                    SolverTaskId = table.Column<int>(type: "int", nullable: false),
                    SolverOrder1Id = table.Column<int>(type: "int", nullable: false),
                    SolverOrder2Id = table.Column<int>(type: "int", nullable: false),
                    RestrictionTypeId = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SolverOrdersRelationRestrictions", x => new { x.SolverTaskId, x.SolverOrder1Id, x.SolverOrder2Id });
                    table.ForeignKey(
                        name: "FK_SolverOrdersRelationRestrictions_Order1Id",
                        columns: x => new { x.SolverTaskId, x.SolverOrder1Id },
                        principalSchema: "opti",
                        principalTable: "SolverOrders",
                        principalColumns: new[] { "SolverTaskId", "SolverOrderId" });
                    table.ForeignKey(
                        name: "FK_SolverOrdersRelationRestrictions_Order2Id",
                        columns: x => new { x.SolverTaskId, x.SolverOrder2Id },
                        principalSchema: "opti",
                        principalTable: "SolverOrders",
                        principalColumns: new[] { "SolverTaskId", "SolverOrderId" });
                    table.ForeignKey(
                        name: "FK_SolverOrdersRelationRestrictions_RestrictionTypeId",
                        column: x => x.RestrictionTypeId,
                        principalSchema: "opti",
                        principalTable: "SolverOrdersRelationRestrictionTypes",
                        principalColumn: "RestrictionTypeId");
                });

            migrationBuilder.CreateTable(
                name: "SolverOrderTimeWindows",
                schema: "opti",
                columns: table => new
                {
                    SolverTaskId = table.Column<int>(type: "int", nullable: false),
                    SolverOrderId = table.Column<int>(type: "int", nullable: false),
                    WindowStart = table.Column<DateTime>(type: "datetime", nullable: true),
                    WindowEnd = table.Column<DateTime>(type: "datetime", nullable: true),
                    TypeId = table.Column<int>(type: "int", nullable: false, defaultValueSql: "((2))")
                },
                constraints: table =>
                {
                    table.ForeignKey(
                        name: "FK_SolverOrderTimeWindows_SolverOrderId",
                        columns: x => new { x.SolverTaskId, x.SolverOrderId },
                        principalSchema: "opti",
                        principalTable: "SolverOrders",
                        principalColumns: new[] { "SolverTaskId", "SolverOrderId" });
                    table.ForeignKey(
                        name: "FK_SolverOrderTimeWindows_Type",
                        column: x => x.TypeId,
                        principalSchema: "opti",
                        principalTable: "SolverTimeWindowTypes",
                        principalColumn: "SolverTimeWindowTypeId");
                });

            migrationBuilder.CreateTable(
                name: "SolverPoiGateTimeWindows",
                schema: "opti",
                columns: table => new
                {
                    SolverTaskId = table.Column<int>(type: "int", nullable: false),
                    SolverPoiGateId = table.Column<long>(type: "bigint", nullable: false),
                    WindowStart = table.Column<DateTime>(type: "datetime", nullable: true),
                    WindowEnd = table.Column<DateTime>(type: "datetime", nullable: true),
                    IsVirtual = table.Column<bool>(type: "bit", nullable: false),
                    IsValid = table.Column<bool>(type: "bit", nullable: false, defaultValueSql: "((1))")
                },
                constraints: table =>
                {
                    table.ForeignKey(
                        name: "FK_SolverPoiGateTimeWindows_SolverPoiGateId",
                        columns: x => new { x.SolverTaskId, x.SolverPoiGateId, x.IsVirtual },
                        principalSchema: "opti",
                        principalTable: "SolverPoiGates",
                        principalColumns: new[] { "SolverTaskId", "SolverPoiGateId", "IsVirtual" });
                });

            migrationBuilder.CreateTable(
                name: "SolverRouteBundles",
                schema: "opti",
                columns: table => new
                {
                    SolverRouteId = table.Column<int>(type: "int", nullable: false),
                    BundleId = table.Column<int>(type: "int", nullable: false),
                    BundleTypeId = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SolverRouteBundles", x => new { x.SolverRouteId, x.BundleId });
                    table.ForeignKey(
                        name: "FK_SolverRouteBundles_Route",
                        column: x => x.SolverRouteId,
                        principalSchema: "opti",
                        principalTable: "SolverRoutes",
                        principalColumn: "SolverRouteId");
                    table.ForeignKey(
                        name: "FK_SolverRouteBundles_Type",
                        column: x => x.BundleTypeId,
                        principalSchema: "opti",
                        principalTable: "SolverOrdersItemsBundleTypes",
                        principalColumn: "BundleTypeId");
                });

            migrationBuilder.CreateTable(
                name: "SolverRouteEvents",
                schema: "opti",
                columns: table => new
                {
                    SolverRouteId = table.Column<int>(type: "int", nullable: false),
                    EventRoutePos = table.Column<int>(type: "int", nullable: false),
                    EventTypeId = table.Column<int>(type: "int", nullable: false),
                    EventTypeScope = table.Column<string>(type: "varchar(20)", unicode: false, maxLength: 20, nullable: false, defaultValueSql: "('ROUTE')"),
                    EventDate = table.Column<DateTime>(type: "datetime", nullable: true),
                    EventRouteDistance = table.Column<double>(type: "float", nullable: true),
                    IsValid = table.Column<int>(type: "int", nullable: false, defaultValueSql: "((1))")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SolverRouteEvents", x => new { x.SolverRouteId, x.EventRoutePos });
                    table.ForeignKey(
                        name: "FK_SolverRouteEvents_EventTypeId",
                        columns: x => new { x.EventTypeId, x.EventTypeScope },
                        principalSchema: "opti",
                        principalTable: "SolverEventTypes",
                        principalColumns: new[] { "EventTypeId", "EventTypeScope" });
                    table.ForeignKey(
                        name: "FK_SolverRouteEvents_SolverRouteId",
                        column: x => x.SolverRouteId,
                        principalSchema: "opti",
                        principalTable: "SolverRoutes",
                        principalColumn: "SolverRouteId");
                });

            migrationBuilder.CreateTable(
                name: "SolverRouteRelations",
                schema: "opti",
                columns: table => new
                {
                    SolverSolutionId = table.Column<int>(type: "int", nullable: false),
                    SubjectRouteId = table.Column<int>(type: "int", nullable: false),
                    ObjectRouteId = table.Column<int>(type: "int", nullable: false),
                    RouteRelationTypeId = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SolverRouteRelations", x => new { x.SolverSolutionId, x.SubjectRouteId, x.ObjectRouteId, x.RouteRelationTypeId });
                    table.ForeignKey(
                        name: "FK_SolverRouteRelations_ObjectRouteId",
                        columns: x => new { x.SolverSolutionId, x.ObjectRouteId },
                        principalSchema: "opti",
                        principalTable: "SolverRoutes",
                        principalColumns: new[] { "SolverSolutionId", "SolverRouteId" });
                    table.ForeignKey(
                        name: "FK_SolverRouteRelations_RelationTypeId",
                        column: x => x.RouteRelationTypeId,
                        principalSchema: "opti",
                        principalTable: "SolverRouteRelationTypes",
                        principalColumn: "RouteRelationTypeId");
                    table.ForeignKey(
                        name: "FK_SolverRouteRelations_SubjectRouteId",
                        columns: x => new { x.SolverSolutionId, x.SubjectRouteId },
                        principalSchema: "opti",
                        principalTable: "SolverRoutes",
                        principalColumns: new[] { "SolverSolutionId", "SolverRouteId" });
                });

            migrationBuilder.CreateTable(
                name: "SolverOrdersItemsFeatures",
                schema: "opti",
                columns: table => new
                {
                    SolverTaskId = table.Column<int>(type: "int", nullable: false),
                    SolverOrderId = table.Column<int>(type: "int", nullable: false),
                    OrderItemId = table.Column<int>(type: "int", nullable: false),
                    FeatureTypeId = table.Column<int>(type: "int", nullable: false),
                    FeatureValue = table.Column<double>(type: "float", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SolverOrdersItemsFeatures", x => new { x.SolverTaskId, x.SolverOrderId, x.OrderItemId, x.FeatureTypeId });
                    table.ForeignKey(
                        name: "FK_SolverOrdersItemsFeatures_FeatureId",
                        column: x => x.FeatureTypeId,
                        principalSchema: "opti",
                        principalTable: "SolverOrdersFeatureTypes",
                        principalColumn: "FeatureTypeId");
                    table.ForeignKey(
                        name: "FK_SolverOrdersItemsFeatures_OrderItem",
                        columns: x => new { x.SolverTaskId, x.SolverOrderId, x.OrderItemId },
                        principalSchema: "opti",
                        principalTable: "SolverOrdersItems",
                        principalColumns: new[] { "SolverTaskId", "SolverOrderId", "OrderItemId" });
                });

            migrationBuilder.CreateTable(
                name: "SolverRouteBundleItems",
                schema: "opti",
                columns: table => new
                {
                    SolverRouteId = table.Column<int>(type: "int", nullable: false),
                    BundleId = table.Column<int>(type: "int", nullable: false),
                    SolverTaskId = table.Column<int>(type: "int", nullable: false),
                    SolverOrderId = table.Column<int>(type: "int", nullable: false),
                    OrderItemId = table.Column<int>(type: "int", nullable: false),
                    Amount = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SolverRouteBundleItems", x => new { x.SolverRouteId, x.BundleId, x.SolverTaskId, x.SolverOrderId, x.OrderItemId });
                    table.ForeignKey(
                        name: "FK_SolverRouteBundleItems_Bundle",
                        columns: x => new { x.SolverRouteId, x.BundleId },
                        principalSchema: "opti",
                        principalTable: "SolverRouteBundles",
                        principalColumns: new[] { "SolverRouteId", "BundleId" });
                    table.ForeignKey(
                        name: "FK_SolverRouteBundleItems_Item",
                        columns: x => new { x.SolverTaskId, x.SolverOrderId, x.OrderItemId },
                        principalSchema: "opti",
                        principalTable: "SolverOrdersItems",
                        principalColumns: new[] { "SolverTaskId", "SolverOrderId", "OrderItemId" });
                });

            migrationBuilder.CreateTable(
                name: "SolverRouteEventBundles",
                schema: "opti",
                columns: table => new
                {
                    SolverRouteId = table.Column<int>(type: "int", nullable: false),
                    EventRoutePos = table.Column<int>(type: "int", nullable: false),
                    BundleId = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SolverRouteEventBundles", x => new { x.SolverRouteId, x.EventRoutePos, x.BundleId });
                    table.ForeignKey(
                        name: "FK_SolverRouteEventBundles_Bundle",
                        columns: x => new { x.SolverRouteId, x.BundleId },
                        principalSchema: "opti",
                        principalTable: "SolverRouteBundles",
                        principalColumns: new[] { "SolverRouteId", "BundleId" });
                    table.ForeignKey(
                        name: "FK_SolverRouteEventBundles_Event",
                        columns: x => new { x.SolverRouteId, x.EventRoutePos },
                        principalSchema: "opti",
                        principalTable: "SolverRouteEvents",
                        principalColumns: new[] { "SolverRouteId", "EventRoutePos" });
                });

            migrationBuilder.CreateTable(
                name: "SolverRouteEventCosts",
                schema: "opti",
                columns: table => new
                {
                    SolverRouteId = table.Column<int>(type: "int", nullable: false),
                    EventRoutePos = table.Column<int>(type: "int", nullable: false),
                    CostTypeId = table.Column<int>(type: "int", nullable: false),
                    CostValue = table.Column<double>(type: "float", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SolverRouteEventCosts", x => new { x.SolverRouteId, x.EventRoutePos, x.CostTypeId });
                    table.ForeignKey(
                        name: "FK_SolverRouteEventCosts_Event",
                        columns: x => new { x.SolverRouteId, x.EventRoutePos },
                        principalSchema: "opti",
                        principalTable: "SolverRouteEvents",
                        principalColumns: new[] { "SolverRouteId", "EventRoutePos" });
                    table.ForeignKey(
                        name: "FK_SolverRouteEventCosts_Type",
                        column: x => x.CostTypeId,
                        principalSchema: "opti",
                        principalTable: "SolverEventCostTypes",
                        principalColumn: "CostTypeId");
                });

            migrationBuilder.CreateTable(
                name: "SolverRouteEventGates",
                schema: "opti",
                columns: table => new
                {
                    SolverRouteId = table.Column<int>(type: "int", nullable: false),
                    EventRoutePos = table.Column<int>(type: "int", nullable: false),
                    SolverTaskId = table.Column<int>(type: "int", nullable: false),
                    SolverPoiGateId = table.Column<long>(type: "bigint", nullable: false),
                    IsVirtual = table.Column<bool>(type: "bit", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SolverRouteEventGates", x => new { x.SolverRouteId, x.EventRoutePos });
                    table.ForeignKey(
                        name: "FK_SolverRouteEventGates_Event",
                        columns: x => new { x.SolverRouteId, x.EventRoutePos },
                        principalSchema: "opti",
                        principalTable: "SolverRouteEvents",
                        principalColumns: new[] { "SolverRouteId", "EventRoutePos" });
                    table.ForeignKey(
                        name: "FK_SolverRouteEventGates_Gate",
                        columns: x => new { x.SolverTaskId, x.SolverPoiGateId, x.IsVirtual },
                        principalSchema: "opti",
                        principalTable: "SolverPoiGates",
                        principalColumns: new[] { "SolverTaskId", "SolverPoiGateId", "IsVirtual" });
                });

            migrationBuilder.CreateTable(
                name: "SolverRouteEventOrders",
                schema: "opti",
                columns: table => new
                {
                    SolverRouteId = table.Column<int>(type: "int", nullable: false),
                    EventRoutePos = table.Column<int>(type: "int", nullable: false),
                    SolverOrderId = table.Column<int>(type: "int", nullable: false),
                    SolverTaskId = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SolverRouteEventOrders", x => new { x.SolverRouteId, x.EventRoutePos, x.SolverOrderId });
                    table.ForeignKey(
                        name: "FK_SolverRouteEventOrders_Event",
                        columns: x => new { x.SolverRouteId, x.EventRoutePos },
                        principalSchema: "opti",
                        principalTable: "SolverRouteEvents",
                        principalColumns: new[] { "SolverRouteId", "EventRoutePos" });
                    table.ForeignKey(
                        name: "FK_SolverRouteEventOrders_Order",
                        columns: x => new { x.SolverTaskId, x.SolverOrderId },
                        principalSchema: "opti",
                        principalTable: "SolverOrders",
                        principalColumns: new[] { "SolverTaskId", "SolverOrderId" });
                });

            migrationBuilder.CreateIndex(
                name: "AKT_FAKTUROWANE_IDX1",
                table: "AKT_FAKTUROWANE",
                columns: new[] { "KALKULACJE_ID", "ZLECENIE_ID", "ZLEC_POZ_FAKT_ID", "LIST_LINIOWY_ID", "POZ_KOREKTA_ID", "PROMY_ID" },
                unique: true,
                filter: "[KALKULACJE_ID] IS NOT NULL AND [ZLECENIE_ID] IS NOT NULL AND [ZLEC_POZ_FAKT_ID] IS NOT NULL AND [LIST_LINIOWY_ID] IS NOT NULL AND [POZ_KOREKTA_ID] IS NOT NULL AND [PROMY_ID] IS NOT NULL");

            migrationBuilder.CreateIndex(
                name: "AKT_PRZELEWY_IDX1",
                table: "AKT_PRZELEWY",
                columns: new[] { "OBJ_ID", "REC_ID" },
                unique: true,
                filter: "[OBJ_ID] IS NOT NULL AND [REC_ID] IS NOT NULL");

            migrationBuilder.CreateIndex(
                name: "APP_MSG_IDX1",
                table: "APP_MSG",
                column: "ID_USER");

            migrationBuilder.CreateIndex(
                name: "APP_MSG_IDX2",
                table: "APP_MSG",
                column: "TYP");

            migrationBuilder.CreateIndex(
                name: "APP_MSG_IDX3",
                table: "APP_MSG",
                column: "SID");

            migrationBuilder.CreateIndex(
                name: "APP_MSG_IDX4",
                table: "APP_MSG",
                column: "TITLE");

            migrationBuilder.CreateIndex(
                name: "IDX1_App_Msg",
                table: "APP_MSG",
                columns: new[] { "ID_USER", "SID" });

            migrationBuilder.CreateIndex(
                name: "AppNewActions_IDX1",
                table: "AppNewActions",
                column: "windowClassName");

            migrationBuilder.CreateIndex(
                name: "AppNewActionsUse_IDX1",
                table: "AppNewActionsUse",
                columns: new[] { "idAppNewActions", "idProfile", "windowType", "windowMode" });

            migrationBuilder.CreateIndex(
                name: "IX_AppNewActionsUse_idProfile",
                table: "AppNewActionsUse",
                column: "idProfile");

            migrationBuilder.CreateIndex(
                name: "AppSkipCreateIndex_IDX1",
                table: "AppSkipCreateIndex",
                column: "indexName");

            migrationBuilder.CreateIndex(
                name: "Auction_Idx1",
                table: "Auction",
                columns: new[] { "ObjectId", "RecordId" });

            migrationBuilder.CreateIndex(
                name: "AuctionHistory_Idx1",
                table: "AuctionHistory",
                column: "AuctionId");

            migrationBuilder.CreateIndex(
                name: "AuctionHistory_Idx2",
                table: "AuctionHistory",
                column: "CarrierId");

            migrationBuilder.CreateIndex(
                name: "AuctionHistory_Idx3",
                table: "AuctionHistory",
                column: "UserId");

            migrationBuilder.CreateIndex(
                name: "AUTO_POZ_FAKT_IDX1",
                table: "AUTO_POZ_FAKTUR",
                column: "POZYCJA_ID");

            migrationBuilder.CreateIndex(
                name: "AUTO_POZ_FAKT_IDX2",
                table: "AUTO_POZ_FAKTUR",
                column: "VAT_ID");

            migrationBuilder.CreateIndex(
                name: "AUTO_POZ_FAKT_IDX3",
                table: "AUTO_POZ_FAKTUR",
                columns: new[] { "ZB", "RODZ_FV", "TYP_FV", "ODC" });

            migrationBuilder.CreateIndex(
                name: "AUTO_POZ_FA_2_IDX1",
                table: "AUTO_POZ_FAKTUR_2",
                column: "POZYCJA_ID");

            migrationBuilder.CreateIndex(
                name: "AUTO_POZ_FA_2_IDX2",
                table: "AUTO_POZ_FAKTUR_2",
                column: "VAT_ID");

            migrationBuilder.CreateIndex(
                name: "AUTO_POZ_FA_2_IDX3",
                table: "AUTO_POZ_FAKTUR_2",
                columns: new[] { "RODZ_PRZYCHODOW", "KIERUNEK", "RODZ_TRANSP", "KLIENT", "ODCINEK" });

            migrationBuilder.CreateIndex(
                name: "AUTORYZACJE_PRA_IDX1",
                table: "AUTORYZACJE_PRAWA",
                column: "SOURCE_ID",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "AWIZACJE_POJ_IDX1",
                table: "AWIZACJE_POJAZDOW",
                column: "SAMOCHOD_ID");

            migrationBuilder.CreateIndex(
                name: "AWIZACJE_POJ_IDX2",
                table: "AWIZACJE_POJAZDOW",
                column: "NACZEPA_ID");

            migrationBuilder.CreateIndex(
                name: "AWIZACJE_POJ_IDX3",
                table: "AWIZACJE_POJAZDOW",
                column: "PRZEWOZNIK_ID");

            migrationBuilder.CreateIndex(
                name: "AWIZACJE_POJ_IDX4",
                table: "AWIZACJE_POJAZDOW",
                column: "DATA");

            migrationBuilder.CreateIndex(
                name: "AWIZACJE_POJ_IDX5",
                table: "AWIZACJE_POJAZDOW",
                column: "GODZ");

            migrationBuilder.CreateIndex(
                name: "AW_POJ_ODL_IDX1",
                table: "AWIZACJE_POJAZDOW_ODL",
                column: "AWIZACJE_POJAZDOW_ID");

            migrationBuilder.CreateIndex(
                name: "AW_POJ_ODL_IDX2",
                table: "AWIZACJE_POJAZDOW_ODL",
                column: "ID_SESJI");

            migrationBuilder.CreateIndex(
                name: "BIL_OP_LOK_POZ_IDX1",
                table: "BILANS_OPAK_LOK_POZ",
                column: "BILANS_OPAK_LOK_ID");

            migrationBuilder.CreateIndex(
                name: "BIL_OP_LOK_POZ_IDX2",
                table: "BILANS_OPAK_LOK_POZ",
                column: "LOKALIZACJA_Z");

            migrationBuilder.CreateIndex(
                name: "BIL_OP_LOK_POZ_IDX3",
                table: "BILANS_OPAK_LOK_POZ",
                column: "LOKALIZACJA_DO");

            migrationBuilder.CreateIndex(
                name: "BIL_OP_LOK_POZ_IDX4",
                table: "BILANS_OPAK_LOK_POZ",
                column: "KOD_OPAK");

            migrationBuilder.CreateIndex(
                name: "BIL_PLIK_POZ_IDX1",
                table: "BILINGI_PLIK_POZ",
                column: "SIM_ID");

            migrationBuilder.CreateIndex(
                name: "BIL_PLIK_POZ_IDX2",
                table: "BILINGI_PLIK_POZ",
                column: "TABOR_ID");

            migrationBuilder.CreateIndex(
                name: "BIL_PLIK_POZ_IDX3",
                table: "BILINGI_PLIK_POZ",
                column: "WYJAZD_ID");

            migrationBuilder.CreateIndex(
                name: "BIL_PLIK_POZ_IDX4",
                table: "BILINGI_PLIK_POZ",
                column: "DELEGACJA_ID");

            migrationBuilder.CreateIndex(
                name: "BIL_PLIK_POZ_IDX5",
                table: "BILINGI_PLIK_POZ",
                column: "FAKTURA_ID");

            migrationBuilder.CreateIndex(
                name: "BIL_PLIK_POZ_IDX6",
                table: "BILINGI_PLIK_POZ",
                column: "ID_TRANSAKCJI");

            migrationBuilder.CreateIndex(
                name: "BILING_TYP_OP_IDX1",
                table: "BILINGI_TYPY_OPER",
                column: "BILINGI_OPER_ID");

            migrationBuilder.CreateIndex(
                name: "BLEDY_OBIEKTOW_IDX1",
                table: "BLEDY_OBIEKTOW",
                columns: new[] { "OBIEKT_TYP", "OBIEKT_ID" });

            migrationBuilder.CreateIndex(
                name: "BLOKADY_IDX1",
                table: "BLOKADY",
                columns: new[] { "BLOKADY_TYPY_ID", "TABELA", "REC_ID" });

            migrationBuilder.CreateIndex(
                name: "IX_BLOKADY_TABELA",
                table: "BLOKADY",
                columns: new[] { "TABELA", "REC_ID", "ODBLOK_DT" });

            migrationBuilder.CreateIndex(
                name: "BLOKADY_LOG_IDX1",
                table: "BLOKADY_LOG",
                column: "BLOKADY_ID");

            migrationBuilder.CreateIndex(
                name: "BLOK_TYP_PRAWA_IDX1",
                table: "BLOKADY_TYPY_PRAWA",
                column: "BLOKADY_TYPY_ID");

            migrationBuilder.CreateIndex(
                name: "BLOK_TYP_PRAWA_IDX2",
                table: "BLOKADY_TYPY_PRAWA",
                column: "UZYTKOWNIK_ID");

            migrationBuilder.CreateIndex(
                name: "BOXSETTINGS_IDX1",
                table: "BOXSETTINGS",
                columns: new[] { "BOX_CLASS", "BOX_NAME" });

            migrationBuilder.CreateIndex(
                name: "BOXSETTINGS_IDX2",
                table: "BOXSETTINGS",
                column: "BOX_TYPE");

            migrationBuilder.CreateIndex(
                name: "BoxSettingsHist_EXTIDX1",
                table: "BoxSettingsHist",
                columns: new[] { "Box_Class", "Box_Name", "Box_Type", "Ctrl_Name", "ActionDT" });

            migrationBuilder.CreateIndex(
                name: "BOXSETTINGSUSER_IDX1",
                table: "BOXSETTINGSUSER",
                column: "ID_BOXSETTINGS");

            migrationBuilder.CreateIndex(
                name: "BOXSETTINGSUSER_IDX2",
                table: "BOXSETTINGSUSER",
                column: "ID_USER");

            migrationBuilder.CreateIndex(
                name: "BOXSETTINGSUSER_IDX3",
                table: "BOXSETTINGSUSER",
                column: "ID_PROFILE");

            migrationBuilder.CreateIndex(
                name: "IX_CC_debug_pos_cc_debug_id",
                table: "CC_debug_pos",
                column: "cc_debug_id");

            migrationBuilder.CreateIndex(
                name: "CC_mSpeed_SFMEXT_IDX1",
                table: "CC_mSpeed",
                columns: new[] { "taskObjId", "masterRecId" });

            migrationBuilder.CreateIndex(
                name: "CENNIKI_PRZELIC_IDX1",
                table: "CENNIKI_PRZELICZNIKI",
                column: "CENNIKI_ID");

            migrationBuilder.CreateIndex(
                name: "CENNIKI_SQL_ERR_IDX1",
                table: "CENNIKI_SQL_ERR",
                columns: new[] { "OBIEKT_TYP", "OBIEKT_ID" });

            migrationBuilder.CreateIndex(
                name: "CENNIKI_SQL_PRA_IDX1",
                table: "CENNIKI_SQL_PRAWA",
                column: "LOKALIZACJA");

            migrationBuilder.CreateIndex(
                name: "CENNIKI_SQL_PRA_IDX2",
                table: "CENNIKI_SQL_PRAWA",
                column: "DZIAL");

            migrationBuilder.CreateIndex(
                name: "CENNIKI_SQL_PRA_IDX3",
                table: "CENNIKI_SQL_PRAWA",
                column: "CENNIK_ID");

            migrationBuilder.CreateIndex(
                name: "CENNIKI_SQL_UPR_IDX1",
                table: "CENNIKI_SQL_UPRAWNIENIA",
                column: "CENNIK_ID");

            migrationBuilder.CreateIndex(
                name: "CENNIKI_SQL_UPR_IDX2",
                table: "CENNIKI_SQL_UPRAWNIENIA",
                columns: new[] { "TYP", "OBIEKT_ID" });

            migrationBuilder.CreateIndex(
                name: "CL_HIST_IDX1",
                table: "CHECKLIST_HIST",
                column: "ID_TABOR");

            migrationBuilder.CreateIndex(
                name: "CL_HIST_IDX2",
                table: "CHECKLIST_HIST",
                column: "ID_KIEROWCA");

            migrationBuilder.CreateIndex(
                name: "CL_HIST_IDX3",
                table: "CHECKLIST_HIST",
                column: "DT");

            migrationBuilder.CreateIndex(
                name: "CL_HISTPOZ_IDX1",
                table: "CHECKLIST_HISTPOZ",
                column: "ID_CHECKLIST_HIST");

            migrationBuilder.CreateIndex(
                name: "CL_HISTPOZ_IDX2",
                table: "CHECKLIST_HISTPOZ",
                column: "ID_CHECKLIST_PYT");

            migrationBuilder.CreateIndex(
                name: "CL_TABOR_IDX1",
                table: "CHECKLIST_TABOR",
                column: "ID_TABOR");

            migrationBuilder.CreateIndex(
                name: "CL_TABOR_IDX2",
                table: "CHECKLIST_TABOR",
                column: "ID_CHECKLIST_PYT");

            migrationBuilder.CreateIndex(
                name: "CL_WYSLIJ_IDX1",
                table: "CHECKLIST_WYSLIJ",
                column: "ID_TABOR");

            migrationBuilder.CreateIndex(
                name: "CL_WYSLIJ_IDX2",
                table: "CHECKLIST_WYSLIJ",
                column: "WYSLANO");

            migrationBuilder.CreateIndex(
                name: "CHECKLISTDEF_IDX1",
                table: "CHECKLISTDEF",
                column: "OBJID");

            migrationBuilder.CreateIndex(
                name: "CHECKLISTDEF_IDX2",
                table: "CHECKLISTDEF",
                column: "INUSE");

            migrationBuilder.CreateIndex(
                name: "lng_Control_Name_ExtIdx1",
                schema: "lng",
                table: "Control",
                column: "Name");

            migrationBuilder.CreateIndex(
                name: "CRM_CEL_UPRAWN_IDX1",
                table: "CRM_CEL_UPRAWNIENIA",
                column: "CRM_CEL_ID");

            migrationBuilder.CreateIndex(
                name: "CRM_CEL_UPRAWN_IDX2",
                table: "CRM_CEL_UPRAWNIENIA",
                columns: new[] { "TYP", "OBIEKT_ID" });

            migrationBuilder.CreateIndex(
                name: "ix_SessionId",
                schema: "opti",
                table: "CutsETALogs",
                column: "SessionId");

            migrationBuilder.CreateIndex(
                name: "ix_ID_TABORU",
                schema: "opti",
                table: "CutsOrdersLogs",
                column: "ID_TABORU");

            migrationBuilder.CreateIndex(
                name: "ix_ID_ZLECENIA",
                schema: "opti",
                table: "CutsOrdersLogs",
                column: "ID_ZLECENIA");

            migrationBuilder.CreateIndex(
                name: "ix_SessionId",
                schema: "opti",
                table: "CutsOrdersLogs",
                column: "SessionId");

            migrationBuilder.CreateIndex(
                name: "ix_SolverTaskId",
                schema: "opti",
                table: "CutsOrdersLogs",
                column: "SolverTaskId");

            migrationBuilder.CreateIndex(
                name: "CZYNN_PRZEG_POZ_IDX1",
                table: "CZYNNOSCI_PRZEG_POZ",
                column: "CZYNNOSCI_ID");

            migrationBuilder.CreateIndex(
                name: "DANE_AWB_IDX1",
                table: "DANE_AWB",
                columns: new[] { "OBJ_ID", "REC_ID" });

            migrationBuilder.CreateIndex(
                name: "D_AWB_KOSZTY_IDX1",
                table: "DANE_AWB_KOSZTY",
                column: "DANE_AWB_ID");

            migrationBuilder.CreateIndex(
                name: "D_AWB_OPL_DOD_IDX1",
                table: "DANE_AWB_OPL_DOD",
                column: "DANE_AWB_ID");

            migrationBuilder.CreateIndex(
                name: "DANE_EXT_IDX1",
                table: "DANE_EXT",
                columns: new[] { "OBIEKT_TYP", "OBIEKT_ID" });

            migrationBuilder.CreateIndex(
                name: "DANE_EXT_DEF_IDX1",
                table: "DANE_EXT_DEF",
                columns: new[] { "OBIEKT_TYP", "FRM_ID" });

            migrationBuilder.CreateIndex(
                name: "UQ__DataReco__737584F651478E58",
                table: "DataRecordKind",
                column: "Name",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "ix_data_status_0",
                table: "DataRecordPunchTraceData",
                columns: new[] { "systemId", "status", "idDataRecordPunchTraceData" },
                unique: true,
                filter: "([status]=(0))");

            migrationBuilder.CreateIndex(
                name: "UQ__DataReco__737584F62E2783E9",
                table: "DataRecordType",
                column: "Name",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "DELEGACJE_IDX1",
                table: "DELEGACJE",
                column: "WYJAZD_ID");

            migrationBuilder.CreateIndex(
                name: "IDXDELEG_IS_EXP",
                table: "DELEGACJE",
                column: "IS_EXPORTED");

            migrationBuilder.CreateIndex(
                name: "DELEGACJE_DIETY_IDX1",
                table: "DELEGACJE_DIETY",
                column: "DELEGACJA_ID");

            migrationBuilder.CreateIndex(
                name: "SRV_DeletedAttachments_EXTIDX1",
                table: "DeletedAttachments",
                columns: new[] { "FileName", "TerminalType" });

            migrationBuilder.CreateIndex(
                name: "DICT_VAL_IDX1",
                table: "DICTIONARY_VALUES",
                column: "DICTIONARIES_ID");

            migrationBuilder.CreateIndex(
                name: "DictionaryText_idx1",
                schema: "ling",
                table: "DictionaryText",
                columns: new[] { "DictionaryId", "LanguageId", "TextId" },
                unique: true);

            migrationBuilder.CreateIndex(
                name: "lng_DictionaryText_ExtIdx1",
                schema: "lng",
                table: "DictionaryText",
                columns: new[] { "MultilingualTextId", "DatabaseLanguageId" });

            migrationBuilder.CreateIndex(
                name: "DOKUMENTY_KIERO_IDX1",
                table: "DOKUMENTY_KIEROWCY",
                column: "PRACOWNIK_ID");

            migrationBuilder.CreateIndex(
                name: "DOKUMENTY_KIERO_IDX2",
                table: "DOKUMENTY_KIEROWCY",
                column: "DOKUMENT_ID");

            migrationBuilder.CreateIndex(
                name: "DOKUMENTY_KIERO_IDX3",
                table: "DOKUMENTY_KIEROWCY",
                column: "DATA_DO");

            migrationBuilder.CreateIndex(
                name: "DostepnyTabor_OptiExtIdx1",
                schema: "opti",
                table: "DostepnyTabor",
                columns: new[] { "SessionId", "ID_TABORU" });

            migrationBuilder.CreateIndex(
                name: "ix_ID_TABORU",
                schema: "opti",
                table: "DostepnyTabor",
                column: "ID_TABORU");

            migrationBuilder.CreateIndex(
                name: "ix_SessionId",
                schema: "opti",
                table: "DostepnyTabor",
                column: "SessionId");

            migrationBuilder.CreateIndex(
                name: "ix_SolverTaskId",
                schema: "opti",
                table: "DostepnyTabor",
                column: "SolverTaskId");

            migrationBuilder.CreateIndex(
                name: "DPS-Opti_Routes_GetTaskGroups_Task_IDX1",
                schema: "opti",
                table: "DPS-Opti_Routes_GetTaskGroups_Task",
                column: "SessionId");

            migrationBuilder.CreateIndex(
                name: "DZIALY_PRAWA_IDX1",
                table: "DZIALY_PRAWA",
                column: "DZIALY_ID");

            migrationBuilder.CreateIndex(
                name: "DZIALY_PRAWA_IDX2",
                table: "DZIALY_PRAWA",
                column: "UZYTKOWNIK_ID");

            migrationBuilder.CreateIndex(
                name: "E_ADRES_IDX1",
                table: "E_ADRES",
                column: "KRAJ_ID");

            migrationBuilder.CreateIndex(
                name: "E_ADRES_IDX2",
                table: "E_ADRES",
                column: "MIASTO_ID");

            migrationBuilder.CreateIndex(
                name: "E_DOK_HIST_IDX1",
                table: "E_DOK_HIST",
                columns: new[] { "OBIEKT_TYP", "OBIEKT_ID" });

            migrationBuilder.CreateIndex(
                name: "E_MIASTO_IDX1",
                table: "E_MIASTO",
                column: "KRAJ_ID");

            migrationBuilder.CreateIndex(
                name: "IDX_EDI_REQUEST_1",
                table: "EDI_REQUEST",
                column: "FLAG");

            migrationBuilder.CreateIndex(
                name: "IDX1_EMAIL_ATTACH",
                table: "EMAIL_ATTACH",
                column: "ID_EMAIL_MSG");

            migrationBuilder.CreateIndex(
                name: "IDX1_EMAIL_CROSS",
                table: "EMAIL_CROSS",
                columns: new[] { "ID_OBJ", "ID_REC" });

            migrationBuilder.CreateIndex(
                name: "IDX1_EMAIL_MSG",
                table: "EMAIL_MSG",
                column: "ID_EMAIL_SRV");

            migrationBuilder.CreateIndex(
                name: "IDX2_EMAIL_MSG",
                table: "EMAIL_MSG",
                column: "INOUT");

            migrationBuilder.CreateIndex(
                name: "IDX3_EMAIL_MSG",
                table: "EMAIL_MSG",
                column: "STATUS");

            migrationBuilder.CreateIndex(
                name: "IDX4_EMAIL_MSG",
                table: "EMAIL_MSG",
                column: "FOLDER");

            migrationBuilder.CreateIndex(
                name: "IDX5_EMAIL_MSG",
                table: "EMAIL_MSG",
                column: "MAIL_DATE");

            migrationBuilder.CreateIndex(
                name: "IDX6_EMAIL_MSG",
                table: "EMAIL_MSG",
                columns: new[] { "MAIL_DATE", "INOUT", "FOLDER", "ID_EMAIL_SRV" });

            migrationBuilder.CreateIndex(
                name: "ETA_EVENTS_IDX1",
                table: "ETA_EVENTS",
                column: "ID_OBJ");

            migrationBuilder.CreateIndex(
                name: "ETA_EVENTS_IDX2",
                table: "ETA_EVENTS",
                column: "ID_REC");

            migrationBuilder.CreateIndex(
                name: "ETA_EVENTS_IDX3",
                table: "ETA_EVENTS",
                column: "DT_ETA");

            migrationBuilder.CreateIndex(
                name: "ETA_EVENTS_IDX4",
                table: "ETA_EVENTS",
                column: "DT_EXPIRE");

            migrationBuilder.CreateIndex(
                name: "ETA_EVENTS_IDX5",
                table: "ETA_EVENTS",
                column: "ID_ETA_EVENTS_FMT");

            migrationBuilder.CreateIndex(
                name: "ETA_EVT_FMT_IDX1",
                table: "ETA_EVENTS_FMT",
                column: "ID_OBJ");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_IDX1",
                table: "FAKTURY",
                column: "KONTRAH_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_IDX10",
                table: "FAKTURY",
                column: "DELEGACJA_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_IDX11",
                table: "FAKTURY",
                column: "ZALICZKA_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_IDX12",
                table: "FAKTURY",
                column: "PARAGON");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_IDX13",
                table: "FAKTURY",
                column: "DATA_WYSTAWIENIA");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_IDX14",
                table: "FAKTURY",
                column: "ROK_FAKTURY");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_IDX15",
                table: "FAKTURY",
                column: "LOKALIZACJA");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_IDX16",
                table: "FAKTURY",
                column: "KOREKTA");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_IDX17",
                table: "FAKTURY",
                column: "MIES_FAKTURY");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_IDX2",
                table: "FAKTURY",
                column: "NUMER_FAKTURY");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_IDX20",
                table: "FAKTURY",
                columns: new[] { "FAKTURA_OTRZYMANA", "DATA_SPRZEDAZY", "WALUTA", "KARTA_TYP", "KARTA_NR", "BRUTTO_RAZEM" });

            migrationBuilder.CreateIndex(
                name: "FAKTURY_IDX21",
                table: "FAKTURY",
                columns: new[] { "FAKTURA_OTRZYMANA", "DATA_SPRZEDAZY", "KARTA_TYP", "KARTA_NR" });

            migrationBuilder.CreateIndex(
                name: "FAKTURY_IDX22",
                table: "FAKTURY",
                column: "KOREKTA_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_IDX23",
                table: "FAKTURY",
                column: "SZKODA_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_IDX24",
                table: "FAKTURY",
                column: "BEZ_IMP_PLAT_Z_FK");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_IDX25",
                table: "FAKTURY",
                columns: new[] { "KONTRAH_ID", "FAKTURA_OTRZYMANA", "ZAPLACONO", "FAKTURA_WALUTOWA", "ANULOWANA" });

            migrationBuilder.CreateIndex(
                name: "FAKTURY_IDX26",
                table: "FAKTURY",
                column: "VAT_W_PLN");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_IDX27",
                table: "FAKTURY",
                column: "BUFOR");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_IDX28",
                table: "FAKTURY",
                column: "STATUS_WINDYKACJI");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_IDX29",
                table: "FAKTURY",
                column: "ZALICZKOWA");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_IDX3",
                table: "FAKTURY",
                column: "RODZ_FV");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_IDX30",
                table: "FAKTURY",
                column: "ZALICZKOWA_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_IDX31",
                table: "FAKTURY",
                column: "W_ZLECENIE_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_IDX32",
                table: "FAKTURY",
                column: "NOTA");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_IDX33",
                table: "FAKTURY",
                column: "PF_ZALICZKOWA_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_IDX34",
                table: "FAKTURY",
                column: "ZLECENIE_C_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_IDX35",
                table: "FAKTURY",
                columns: new[] { "FAKTURA_OTRZYMANA", "RODZ_KOSZTOW" });

            migrationBuilder.CreateIndex(
                name: "FAKTURY_IDX36",
                table: "FAKTURY",
                columns: new[] { "KOREKTA", "W_PZ_ID" });

            migrationBuilder.CreateIndex(
                name: "FAKTURY_IDX4",
                table: "FAKTURY",
                column: "TYP_FV");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_IDX5",
                table: "FAKTURY",
                column: "ZLECENIE_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_IDX6",
                table: "FAKTURY",
                column: "WYJAZD_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_IDX7",
                table: "FAKTURY",
                column: "PRZESYLKA_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_IDX8",
                table: "FAKTURY",
                column: "TABOR_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_IDX9",
                table: "FAKTURY",
                column: "FAKTURA_OTRZYMANA");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_MASZ_IDX1",
                table: "FAKTURY",
                column: "MASZONSKI_MASTER_FV_S_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_MASZ_IDX2",
                table: "FAKTURY",
                column: "MASZONSKI_MASTER_FV_K_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_W_IDX1",
                table: "FAKTURY",
                column: "Z_WARSZTATU");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_WARSZTAT_IDX1",
                table: "FAKTURY",
                columns: new[] { "W_PZ_ID", "KOREKTA" },
                filter: "([W_PZ_ID]>(0))");

            migrationBuilder.CreateIndex(
                name: "FAKT_DEKR_IDX1",
                table: "FAKTURY_DEKRET",
                column: "FAKTURY_ID");

            migrationBuilder.CreateIndex(
                name: "FAKT_POZ_MASZ_IDX1",
                table: "FAKTURY_POZYCJE",
                column: "MASZONSKI_MASTER_FV_S_ID");

            migrationBuilder.CreateIndex(
                name: "FAKT_POZ_MASZ_IDX2",
                table: "FAKTURY_POZYCJE",
                column: "MASZONSKI_MASTER_FV_POZ_S_ID");

            migrationBuilder.CreateIndex(
                name: "FAKT_POZ_MASZ_IDX3",
                table: "FAKTURY_POZYCJE",
                column: "MASZONSKI_MASTER_FV_K_ID");

            migrationBuilder.CreateIndex(
                name: "FAKT_POZ_MASZ_IDX4",
                table: "FAKTURY_POZYCJE",
                column: "MASZONSKI_MASTER_FV_POZ_K_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_POZYCJ_IDX10",
                table: "FAKTURY_POZYCJE",
                column: "KIEROWCA_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_POZYCJ_IDX11",
                table: "FAKTURY_POZYCJE",
                column: "ZLECENIE_M_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_POZYCJ_IDX12",
                table: "FAKTURY_POZYCJE",
                column: "W_ZLECENIE_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_POZYCJ_IDX13",
                table: "FAKTURY_POZYCJE",
                column: "ZLEC_POZ_FAKT_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_POZYCJ_IDX14",
                table: "FAKTURY_POZYCJE",
                column: "RODZ_KOSZTOW");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_POZYCJ_IDX15",
                table: "FAKTURY_POZYCJE",
                column: "KWIT_PAL_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_POZYCJ_IDX16",
                table: "FAKTURY_POZYCJE",
                column: "KWIT_PAL_POZ_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_POZYCJ_IDX17",
                table: "FAKTURY_POZYCJE",
                column: "PREFAKTURY_POZ_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_POZYCJ_IDX18",
                table: "FAKTURY_POZYCJE",
                column: "PRZESYLKA_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_POZYCJ_IDX19",
                table: "FAKTURY_POZYCJE",
                columns: new[] { "FAKTURY_ID", "PROMY_ID", "KALKULACJE_ID", "ZLECENIE_ID" });

            migrationBuilder.CreateIndex(
                name: "FAKTURY_POZYCJ_IDX20",
                table: "FAKTURY_POZYCJE",
                column: "ZLECENIE_C_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_POZYCJ_IDX21",
                table: "FAKTURY_POZYCJE",
                column: "ZLECENIE_RAIL_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_POZYCJE_IDX1",
                table: "FAKTURY_POZYCJE",
                column: "FAKTURY_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_POZYCJE_IDX2",
                table: "FAKTURY_POZYCJE",
                column: "ZLECENIE_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_POZYCJE_IDX4",
                table: "FAKTURY_POZYCJE",
                column: "TABOR_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_POZYCJE_IDX5",
                table: "FAKTURY_POZYCJE",
                column: "KALKULACJE_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_POZYCJE_IDX6",
                table: "FAKTURY_POZYCJE",
                column: "LIST_LINIOWY_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_POZYCJE_IDX7",
                table: "FAKTURY_POZYCJE",
                column: "WYJAZD_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_POZYCJE_IDX8",
                table: "FAKTURY_POZYCJE",
                column: "PROMY_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_POZYCJE_IDX9",
                table: "FAKTURY_POZYCJE",
                column: "SZKODA_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_POZ_ZB_IDX1",
                table: "FAKTURY_POZYCJE_ZB",
                column: "FAKTURY_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_POZ_ZB_IDX10",
                table: "FAKTURY_POZYCJE_ZB",
                column: "RODZ_KOSZTOW");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_POZ_ZB_IDX11",
                table: "FAKTURY_POZYCJE_ZB",
                column: "PREFAKTURY_POZ_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_POZ_ZB_IDX12",
                table: "FAKTURY_POZYCJE_ZB",
                column: "PRZESYLKA_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_POZ_ZB_IDX13",
                table: "FAKTURY_POZYCJE_ZB",
                columns: new[] { "FAKTURY_ID", "PROMY_ID", "KALKULACJE_ID", "ZLECENIE_ID" });

            migrationBuilder.CreateIndex(
                name: "FAKTURY_POZ_ZB_IDX14",
                table: "FAKTURY_POZYCJE_ZB",
                column: "ZLECENIE_C_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_POZ_ZB_IDX15",
                table: "FAKTURY_POZYCJE_ZB",
                column: "ZLECENIE_RAIL_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_POZ_ZB_IDX2",
                table: "FAKTURY_POZYCJE_ZB",
                column: "ZLECENIE_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_POZ_ZB_IDX4",
                table: "FAKTURY_POZYCJE_ZB",
                column: "TABOR_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_POZ_ZB_IDX5",
                table: "FAKTURY_POZYCJE_ZB",
                column: "KALKULACJE_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_POZ_ZB_IDX6",
                table: "FAKTURY_POZYCJE_ZB",
                column: "WYJAZD_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_POZ_ZB_IDX7",
                table: "FAKTURY_POZYCJE_ZB",
                column: "ZLECENIE_M_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_POZ_ZB_IDX8",
                table: "FAKTURY_POZYCJE_ZB",
                column: "ZLEC_POZ_FAKT_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_POZ_ZB_IDX9",
                table: "FAKTURY_POZYCJE_ZB",
                column: "LIST_LINIOWY_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_PROW_PR_IDX1",
                table: "FAKTURY_PROW_PRAC",
                column: "FAKTURY_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_SPLATY_IDX1",
                table: "FAKTURY_SPLATY",
                column: "FAKTURY_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_SPLATY_IDX2",
                table: "FAKTURY_SPLATY",
                column: "KOMPENSATY_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_SPLATY_IDX3",
                table: "FAKTURY_SPLATY",
                column: "SPLATA_W_PLN");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_SPLATY_IDX4",
                table: "FAKTURY_SPLATY",
                column: "WYC_BANK_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_SPLATY_IDX5",
                table: "FAKTURY_SPLATY",
                column: "WYC_BANK_OPER_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_SPLATY_IDX6",
                table: "FAKTURY_SPLATY",
                column: "Z_ZALICZKOWEJ_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_VAT_IDX1",
                table: "FAKTURY_VAT",
                column: "FAKTURY_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_VAT_JPK_OZN_IDX1",
                table: "FAKTURY_VAT_JPK_OZN",
                column: "FAKTURY_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_VAT_JPK_OZN_DOD_IDX1",
                table: "FAKTURY_VAT_JPK_OZN_DOD",
                column: "FAKTURY_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_WZORCE_IDX1",
                table: "FAKTURY_WZORCE",
                column: "KONTRAH_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_WZORCE_IDX2",
                table: "FAKTURY_WZORCE",
                column: "NAZWA_WZORCA");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_WZORCE_IDX3",
                table: "FAKTURY_WZORCE",
                column: "LOKALIZACJA");

            migrationBuilder.CreateIndex(
                name: "FAKT_WZOR_POZ_IDX1",
                table: "FAKTURY_WZORCE_POZYCJE",
                column: "FAKTURY_WZORCE_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_ZLEC_IDX1",
                table: "FAKTURY_ZLEC",
                column: "FAKTURA_ID");

            migrationBuilder.CreateIndex(
                name: "FAKTURY_ZLEC_IDX2",
                table: "FAKTURY_ZLEC",
                columns: new[] { "TYP", "ZLECENIE_ID" });

            migrationBuilder.CreateIndex(
                name: "FORMTEXT_IDX1",
                table: "FORMTEXT",
                column: "FORM");

            migrationBuilder.CreateIndex(
                name: "FORMTEXT_IDX2",
                table: "FORMTEXT",
                column: "FORM_TYPE");

            migrationBuilder.CreateIndex(
                name: "FORM_PLATN_TLUM_IDX1",
                table: "FORMY_PLATNOSCI_TLUMACZ",
                column: "FORMY_PLATNOSCI_ID");

            migrationBuilder.CreateIndex(
                name: "FtlCalcCostItems_Idx1",
                table: "FtlCalcCostItems",
                column: "IdFtlCalc");

            migrationBuilder.CreateIndex(
                name: "FtlCalcCostItems_Idx2",
                table: "FtlCalcCostItems",
                column: "IdItemDict");

            migrationBuilder.CreateIndex(
                name: "FtlCalcEvents_Idx1",
                table: "FtlCalcEvents",
                column: "IdFtlCalc");

            migrationBuilder.CreateIndex(
                name: "FtlCalcEvents_Idx2",
                table: "FtlCalcEvents",
                column: "IdPoi");

            migrationBuilder.CreateIndex(
                name: "FtlCalcIncomeItems_Idx1",
                table: "FtlCalcIncomeItems",
                column: "IdFtlCalc");

            migrationBuilder.CreateIndex(
                name: "FtlCalcIncomeItems_Idx2",
                table: "FtlCalcIncomeItems",
                column: "IdItemDict");

            migrationBuilder.CreateIndex(
                name: "GF_STAT_IDX1",
                table: "GEOFENCING_STAT",
                columns: new[] { "ID_GEOFENCING", "ID_TABOR" });

            migrationBuilder.CreateIndex(
                name: "GF_STAT_IDX2",
                table: "GEOFENCING_STAT",
                columns: new[] { "ID_EXT", "ID_TABOR" });

            migrationBuilder.CreateIndex(
                name: "GF_STAT_IDX3",
                table: "GEOFENCING_STAT",
                columns: new[] { "ID_EXT1", "ID_TABOR" });

            migrationBuilder.CreateIndex(
                name: "GF_TABOR_IDX1",
                table: "GEOFENCING_TABOR",
                columns: new[] { "ID_GEOFENCING", "ID_TABOR" });

            migrationBuilder.CreateIndex(
                name: "GF_ACTION_IDX1",
                table: "GF_ACTION",
                column: "OBJ_TYP");

            migrationBuilder.CreateIndex(
                name: "GF_DEF_IDX1",
                table: "GF_DEF",
                column: "OBJ_TYP");

            migrationBuilder.CreateIndex(
                name: "GF_DEF_IDX2",
                table: "GF_DEF",
                column: "ACTION_ENTER_ID");

            migrationBuilder.CreateIndex(
                name: "GF_DEF_IDX3",
                table: "GF_DEF",
                column: "ACTION_EXIT_ID");

            migrationBuilder.CreateIndex(
                name: "GF_DEF_IDX4",
                table: "GF_DEF",
                column: "ACTION_DURATION_ID");

            migrationBuilder.CreateIndex(
                name: "GF_DEF_IDX5",
                table: "GF_DEF",
                column: "ACTION_ETA_ID");

            migrationBuilder.CreateIndex(
                name: "GF_DEF_POI_OBJ_IDX1",
                table: "GF_DEF_POI_OBJ",
                column: "POI_ID");

            migrationBuilder.CreateIndex(
                name: "GF_DEF_POI_OBJ_IDX2",
                table: "GF_DEF_POI_OBJ",
                column: "OBJ_TYP");

            migrationBuilder.CreateIndex(
                name: "GF_DEF_POI_OBJ_IDX3",
                table: "GF_DEF_POI_OBJ",
                column: "GF_DEF_ID");

            migrationBuilder.CreateIndex(
                name: "GF_EVENT_DEF_IDX1",
                table: "GF_EVENT_DEF",
                column: "GF_DEF_ID");

            migrationBuilder.CreateIndex(
                name: "GF_EVENT_DEF_IDX2",
                table: "GF_EVENT_DEF",
                column: "POI_ID");

            migrationBuilder.CreateIndex(
                name: "GF_EVENT_DEF_IDX3",
                table: "GF_EVENT_DEF",
                column: "DT_TOSEND");

            migrationBuilder.CreateIndex(
                name: "GF_EVENT_DEF_IDX4",
                table: "GF_EVENT_DEF",
                column: "DT_VALIDITY");

            migrationBuilder.CreateIndex(
                name: "GF_SEND_LIST_IDX1",
                table: "GF_SEND_LIST",
                columns: new[] { "OBJ_TYP", "REC_ID" });

            migrationBuilder.CreateIndex(
                name: "GF_SEND_LIST_IDX10",
                table: "GF_SEND_LIST",
                column: "DT_MODIFY");

            migrationBuilder.CreateIndex(
                name: "GF_SEND_LIST_IDX2",
                table: "GF_SEND_LIST",
                column: "TABOR_ID");

            migrationBuilder.CreateIndex(
                name: "GF_SEND_LIST_IDX3",
                table: "GF_SEND_LIST",
                column: "SFM_TERM_ID");

            migrationBuilder.CreateIndex(
                name: "GF_SEND_LIST_IDX4",
                table: "GF_SEND_LIST",
                column: "ACTION");

            migrationBuilder.CreateIndex(
                name: "GF_SEND_LIST_IDX5",
                table: "GF_SEND_LIST",
                column: "DT_SEND");

            migrationBuilder.CreateIndex(
                name: "GF_SEND_LIST_IDX6",
                table: "GF_SEND_LIST",
                column: "DT_CANCEL");

            migrationBuilder.CreateIndex(
                name: "GF_SEND_LIST_IDX7",
                table: "GF_SEND_LIST",
                column: "EXT_ID_ENTER");

            migrationBuilder.CreateIndex(
                name: "GF_SEND_LIST_IDX8",
                table: "GF_SEND_LIST",
                column: "EXT_ID_EXIT");

            migrationBuilder.CreateIndex(
                name: "GF_SEND_LIST_IDX9",
                table: "GF_SEND_LIST",
                column: "EXT_ID_DURATION");

            migrationBuilder.CreateIndex(
                name: "GIELDA_POJAZDOW_IDX1",
                table: "GIELDA_POJAZDOW",
                column: "TABOR_ID");

            migrationBuilder.CreateIndex(
                name: "GIELDA_POJAZDOW_IDX2",
                table: "GIELDA_POJAZDOW",
                columns: new[] { "OBIEKT_TYP", "OBIEKT_ID" });

            migrationBuilder.CreateIndex(
                name: "GIELDA_POJAZDOW_IDX3",
                table: "GIELDA_POJAZDOW",
                column: "LOKALIZACJA");

            migrationBuilder.CreateIndex(
                name: "GIELDA_POJAZDOW_IDX4",
                table: "GIELDA_POJAZDOW",
                column: "PRACOWNIK_ID");

            migrationBuilder.CreateIndex(
                name: "GIELDA_POJAZDOW_IDX5",
                table: "GIELDA_POJAZDOW",
                column: "ANULOWANY");

            migrationBuilder.CreateIndex(
                name: "GIELDA_POJAZDOW_IDX6",
                table: "GIELDA_POJAZDOW",
                column: "RODZAJ");

            migrationBuilder.CreateIndex(
                name: "GRUPY_LADUNKOW_IDX1",
                table: "GRUPY_LADUNKOW",
                column: "UBEZP");

            migrationBuilder.CreateIndex(
                name: "GRUPY_LADUNKOW_SFMEXT_IDX1",
                table: "GRUPY_LADUNKOW",
                column: "KOD");

            migrationBuilder.CreateIndex(
                name: "GR_LAD_PARAM_IDX1",
                table: "GRUPY_LADUNKOW_PARAMETRY",
                column: "GRUPY_LADUNKOW_ID");

            migrationBuilder.CreateIndex(
                name: "GR_LAD_PARAM_IDX2",
                table: "GRUPY_LADUNKOW_PARAMETRY",
                column: "KONTRAH_ID");

            migrationBuilder.CreateIndex(
                name: "GR_LAD_PARAM_IDX3",
                table: "GRUPY_LADUNKOW_PARAMETRY",
                column: "MIEJSCA_ZA_ROZLADUNKU_ID");

            migrationBuilder.CreateIndex(
                name: "GRUPY_LADUNKOW_PARAMETRY_SFMEXT_IDX1",
                table: "GRUPY_LADUNKOW_PARAMETRY",
                columns: new[] { "GRUPY_LADUNKOW_ID", "GRUPA_LADUNKU_PO_ID" });

            migrationBuilder.CreateIndex(
                name: "HARMONOGRAMY_IDX1",
                table: "HARMONOGRAMY",
                column: "KLIENT_ID");

            migrationBuilder.CreateIndex(
                name: "HARMONOGRAMY_IDX2",
                table: "HARMONOGRAMY",
                columns: new[] { "MIEJSCE_TYP", "MIEJSCE_ID" });

            migrationBuilder.CreateIndex(
                name: "HARMONOGRAMY_PO_IDX1",
                table: "HARMONOGRAMY_POZ",
                column: "HARMONOGRAMY_ID");

            migrationBuilder.CreateIndex(
                name: "HISTORIA_KONTROLI_WYKAZ_WL_IDX1",
                table: "HISTORIA_KONTROLI_WYKAZ_WL",
                columns: new[] { "OBIEKT_TYP", "OBIEKT_ID" });

            migrationBuilder.CreateIndex(
                name: "HISTORIA_KONTROLI_WYKAZ_WL_IDX2",
                table: "HISTORIA_KONTROLI_WYKAZ_WL",
                column: "KONTRAH_ID");

            migrationBuilder.CreateIndex(
                name: "INCOTERMS_POZ_IDX1",
                table: "INCOTERMS_POZ",
                column: "INCOTERMS_ID");

            migrationBuilder.CreateIndex(
                name: "INI_HIST_IDX1",
                table: "INI_HIST",
                column: "DATA_GODZ_PLIKU");

            migrationBuilder.CreateIndex(
                name: "INSTRUKCJE_DOD_IDX1",
                table: "INSTRUKCJE_DOD",
                column: "KOD");

            migrationBuilder.CreateIndex(
                name: "INSTRUKCJE_DOD_KONFIG_IDX1",
                table: "INSTRUKCJE_DOD_KONFIG",
                column: "INSTRUKCJE_DOD_ID");

            migrationBuilder.CreateIndex(
                name: "INSTRUKCJE_DOD_KONFIG_IDX2",
                table: "INSTRUKCJE_DOD_KONFIG",
                column: "MIEJSCE_ZA_ID");

            migrationBuilder.CreateIndex(
                name: "INSTRUKCJE_DOD_KONFIG_IDX3",
                table: "INSTRUKCJE_DOD_KONFIG",
                column: "KLIENT_ID");

            migrationBuilder.CreateIndex(
                name: "ix_ID_TABORU",
                schema: "opti",
                table: "Kabotaze",
                column: "ID_TABORU");

            migrationBuilder.CreateIndex(
                name: "ix_ID_ZLECENIA",
                schema: "opti",
                table: "Kabotaze",
                column: "ID_ZLECENIA");

            migrationBuilder.CreateIndex(
                name: "ix_SessionId",
                schema: "opti",
                table: "Kabotaze",
                column: "SessionId");

            migrationBuilder.CreateIndex(
                name: "ix_SolverTaskId",
                schema: "opti",
                table: "Kabotaze",
                column: "SolverTaskId");

            migrationBuilder.CreateIndex(
                name: "KALENDARZ_EXTIDX1",
                table: "KALENDARZ",
                columns: new[] { "DATA", "TYP", "KRAJ" });

            migrationBuilder.CreateIndex(
                name: "KALENDARZ_IDX1",
                table: "KALENDARZ",
                column: "TYP");

            migrationBuilder.CreateIndex(
                name: "KALENDARZ_IDX2",
                table: "KALENDARZ",
                column: "ROK");

            migrationBuilder.CreateIndex(
                name: "KALENDARZ_IDX3",
                table: "KALENDARZ",
                column: "DATA");

            migrationBuilder.CreateIndex(
                name: "KALENDARZ_IDX4",
                table: "KALENDARZ",
                column: "KRAJ");

            migrationBuilder.CreateIndex(
                name: "KALK_STAWKI_AIR_IDX1",
                table: "KALK_STAWKI_AIR",
                column: "PRZESYLKI_AIR_ID");

            migrationBuilder.CreateIndex(
                name: "KALK_STAWKI_LTL_IDX1",
                table: "KALK_STAWKI_LTL",
                column: "PRZESYLKI_ID");

            migrationBuilder.CreateIndex(
                name: "KALKULACJE_IDX1",
                table: "KALKULACJE",
                column: "DOTYCZY");

            migrationBuilder.CreateIndex(
                name: "KALKULACJE_IDX10",
                table: "KALKULACJE",
                column: "RKTNP_KALK_TRASY_ID");

            migrationBuilder.CreateIndex(
                name: "KALKULACJE_IDX11",
                table: "KALKULACJE",
                columns: new[] { "DOTYCZY", "OBIEKT_ID", "TYP", "LP" });

            migrationBuilder.CreateIndex(
                name: "KALKULACJE_IDX2",
                table: "KALKULACJE",
                column: "OBIEKT_ID");

            migrationBuilder.CreateIndex(
                name: "KALKULACJE_IDX3",
                table: "KALKULACJE",
                columns: new[] { "DOTYCZY", "OBIEKT_ID", "TYP" });

            migrationBuilder.CreateIndex(
                name: "KALKULACJE_IDX4",
                table: "KALKULACJE",
                column: "LISTY_LINIOWE_ID");

            migrationBuilder.CreateIndex(
                name: "KALKULACJE_IDX5",
                table: "KALKULACJE",
                column: "GOT_DO_FV");

            migrationBuilder.CreateIndex(
                name: "KALKULACJE_IDX6",
                table: "KALKULACJE",
                column: "PROMY_ID");

            migrationBuilder.CreateIndex(
                name: "KALKULACJE_IDX7",
                table: "KALKULACJE",
                column: "AKCEPT");

            migrationBuilder.CreateIndex(
                name: "KALKULACJE_IDX8",
                table: "KALKULACJE",
                column: "RM");

            migrationBuilder.CreateIndex(
                name: "KALKULACJE_IDX9",
                table: "KALKULACJE",
                column: "RKTNP");

            migrationBuilder.CreateIndex(
                name: "KARNETY_TIR_IDX1",
                table: "KARNETY_TIR",
                column: "FAKTURA_ID");

            migrationBuilder.CreateIndex(
                name: "KARNETY_TIR_IDX2",
                table: "KARNETY_TIR",
                column: "WYJAZD_ID");

            migrationBuilder.CreateIndex(
                name: "KARNETY_TIR_IDX3",
                table: "KARNETY_TIR",
                column: "TABOR_ID");

            migrationBuilder.CreateIndex(
                name: "KARNETY_TIR_IDX4",
                table: "KARNETY_TIR",
                column: "ZLECENIE_ID");

            migrationBuilder.CreateIndex(
                name: "KARNETY_TIR_IDX5",
                table: "KARNETY_TIR",
                column: "KIEROWCA_ID");

            migrationBuilder.CreateIndex(
                name: "KARNETY_TIR_IDX6",
                table: "KARNETY_TIR",
                column: "ZWROT");

            migrationBuilder.CreateIndex(
                name: "KARNETY_TIR_IDX7",
                table: "KARNETY_TIR",
                column: "ROZLICZONO");

            migrationBuilder.CreateIndex(
                name: "KARNETY_TIR_IDX8",
                table: "KARNETY_TIR",
                column: "DATA_WAZNOSCI");

            migrationBuilder.CreateIndex(
                name: "KARTY_IDX1",
                table: "KARTY",
                column: "DATA_WAZNOSCI_DO");

            migrationBuilder.CreateIndex(
                name: "KARTY_IDX2",
                table: "KARTY",
                column: "TABOR_ID");

            migrationBuilder.CreateIndex(
                name: "KARTY_IDX3",
                table: "KARTY",
                column: "STATUS");

            migrationBuilder.CreateIndex(
                name: "KARTY_IDX4",
                table: "KARTY",
                column: "KIEROWCA_ID");

            migrationBuilder.CreateIndex(
                name: "KARTY_CENY_IDX1",
                table: "KARTY_CENY",
                column: "KARTY_WYDAWCY_ID");

            migrationBuilder.CreateIndex(
                name: "KARTY_PLIKI_IDX1",
                table: "KARTY_PLIKI",
                column: "STAN");

            migrationBuilder.CreateIndex(
                name: "KARTY_PLIKI_IDX2",
                table: "KARTY_PLIKI",
                column: "LOKALIZACJA");

            migrationBuilder.CreateIndex(
                name: "KARTY_PLIKI_IDX3",
                table: "KARTY_PLIKI",
                column: "W_MAG_WYDANIA_ID");

            migrationBuilder.CreateIndex(
                name: "KARTY_PRZYDZIAL_IDX1",
                table: "KARTY_PRZYDZIAL",
                column: "KARTY_ID");

            migrationBuilder.CreateIndex(
                name: "K_ROZL_FZ_IDX1",
                table: "KARTY_ROZL_FZ",
                column: "FAKTURA_ID");

            migrationBuilder.CreateIndex(
                name: "K_ROZL_FZ_POZ_IDX1",
                table: "KARTY_ROZL_FZ_POZ",
                column: "KARTY_ROZL_FZ_ID");

            migrationBuilder.CreateIndex(
                name: "K_ROZL_FZ_POZ_IDX2",
                table: "KARTY_ROZL_FZ_POZ",
                column: "WZ_ID");

            migrationBuilder.CreateIndex(
                name: "KARTY_TRANS_IDX1",
                table: "KARTY_TRANSAKCJE",
                column: "KARTA_ID");

            migrationBuilder.CreateIndex(
                name: "KARTY_TRANS_IDX2",
                table: "KARTY_TRANSAKCJE",
                column: "TABOR_ID");

            migrationBuilder.CreateIndex(
                name: "KARTY_TRANS_IDX3",
                table: "KARTY_TRANSAKCJE",
                column: "WYJAZD_ID");

            migrationBuilder.CreateIndex(
                name: "KARTY_TRANS_IDX4",
                table: "KARTY_TRANSAKCJE",
                column: "DELEGACJA_ID");

            migrationBuilder.CreateIndex(
                name: "KARTY_TRANS_IDX5",
                table: "KARTY_TRANSAKCJE",
                column: "FAKTURA_ID");

            migrationBuilder.CreateIndex(
                name: "KARTY_TRANS_IDX6",
                table: "KARTY_TRANSAKCJE",
                column: "W_MAG_WYDANIA_POZ_ID");

            migrationBuilder.CreateIndex(
                name: "KARTY_TRANS_IDX7",
                table: "KARTY_TRANSAKCJE",
                column: "SFM_COSTS_ID");

            migrationBuilder.CreateIndex(
                name: "KARTY_TRANS_IDX8",
                table: "KARTY_TRANSAKCJE",
                column: "EF_KARTY_ID");

            migrationBuilder.CreateIndex(
                name: "KART_TYP_OP_IDX1",
                table: "KARTY_TYPY_OPER",
                column: "KARTY_WYDAWCY_ID");

            migrationBuilder.CreateIndex(
                name: "KARTY_WYDAWCY_IDX1",
                table: "KARTY_WYDAWCY",
                column: "AKTYWNA");

            migrationBuilder.CreateIndex(
                name: "KATEGORIE_IDX1",
                table: "KATEGORIE",
                columns: new[] { "TYP", "NAZWA" });

            migrationBuilder.CreateIndex(
                name: "KATEGORIE_IDX2",
                table: "KATEGORIE",
                column: "AKTYWNA");

            migrationBuilder.CreateIndex(
                name: "IX_KIEROWCY_AKTYWNY",
                table: "KIEROWCY",
                column: "AKTYWNY");

            migrationBuilder.CreateIndex(
                name: "IX_KIEROWCY_AKTYWNY_NAZWISKO",
                table: "KIEROWCY",
                columns: new[] { "AKTYWNY", "NAZWISKO" });

            migrationBuilder.CreateIndex(
                name: "IX_KIEROWCY_USER1",
                table: "KIEROWCY",
                column: "ID_KIEROWCY",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_KIEROWCY_UZYTKOWNIK_ID",
                table: "KIEROWCY",
                column: "UZYTKOWNIK_ID");

            migrationBuilder.CreateIndex(
                name: "KIEROWCY_IDX1",
                table: "KIEROWCY",
                column: "AKTYWNY");

            migrationBuilder.CreateIndex(
                name: "KIEROWCY_IDX2",
                table: "KIEROWCY",
                column: "OBCY");

            migrationBuilder.CreateIndex(
                name: "SFMSRV_KIEROWCY_EXTIDX1",
                table: "KIEROWCY",
                column: "KIEROWCA");

            migrationBuilder.CreateIndex(
                name: "SFMSRV_KIEROWCY_EXTIDX2",
                table: "KIEROWCY",
                columns: new[] { "KIEROWCA", "AKTYWNY", "MOBILE_ACTIVE" });

            migrationBuilder.CreateIndex(
                name: "KIEROWCY_GRUPY__IDX1",
                table: "KIEROWCY_GRUPY_HIST",
                column: "KIEROWCY_ID");

            migrationBuilder.CreateIndex(
                name: "KIEROWCY_GRUPY__IDX2",
                table: "KIEROWCY_GRUPY_HIST",
                columns: new[] { "DATA_OD", "GODZ_OD" });

            migrationBuilder.CreateIndex(
                name: "KIEROWCY_GRUPY__IDX3",
                table: "KIEROWCY_GRUPY_HIST",
                column: "KIEROWCY_GRUPY_ID");

            migrationBuilder.CreateIndex(
                name: "KIEROWCY_HIST_Z_IDX1",
                table: "KIEROWCY_HIST_ZATR",
                column: "KIEROWCY_ID");

            migrationBuilder.CreateIndex(
                name: "KIEROWCY_UWAGI_IDX1",
                table: "KIEROWCY_UWAGI",
                column: "KIEROWCA_ID");

            migrationBuilder.CreateIndex(
                name: "KIEROWCY_UWAGI_IDX2",
                table: "KIEROWCY_UWAGI",
                column: "SAMOCHOD_ID");

            migrationBuilder.CreateIndex(
                name: "KIEROWCY_UWAGI_IDX3",
                table: "KIEROWCY_UWAGI",
                column: "WYJAZD_ID");

            migrationBuilder.CreateIndex(
                name: "KIEROWCY_UWAGI_IDX4",
                table: "KIEROWCY_UWAGI",
                column: "ZLECENIE_ID");

            migrationBuilder.CreateIndex(
                name: "KIEROWCY_UWAGI_IDX5",
                table: "KIEROWCY_UWAGI",
                column: "LISTY_LINIOWE_ID");

            migrationBuilder.CreateIndex(
                name: "KIEROWCY_UWAGI_IDX6",
                table: "KIEROWCY_UWAGI",
                column: "ZAMKNIETY");

            migrationBuilder.CreateIndex(
                name: "KIEROWCY_UWAGI_SFMEXT_IDX1",
                table: "KIEROWCY_UWAGI",
                column: "DATA");

            migrationBuilder.CreateIndex(
                name: "KIER_WYNAGR_IDX1",
                table: "KIEROWCY_WYNAGR",
                column: "KIEROWCY_ID");

            migrationBuilder.CreateIndex(
                name: "KIER_WYP_SZ_POZ_IDX1",
                table: "KIEROWCY_WYPOS_SZABLON_POZ",
                column: "KIEROWCY_WYPOS_SZABLON_ID");

            migrationBuilder.CreateIndex(
                name: "KIEROWCY_WYPOSA_IDX1",
                table: "KIEROWCY_WYPOSAZENIE",
                column: "KIEROWCY_ID");

            migrationBuilder.CreateIndex(
                name: "KIEROWCY_ZAKAZY_IDX1",
                table: "KIEROWCY_ZAKAZY",
                columns: new[] { "KIEROWCY_ID", "OBIEKT_TYP", "OBIEKT_ID" });

            migrationBuilder.CreateIndex(
                name: "KOD_STREFA_POZ_SFMEXTIDX1",
                table: "KOD_STREFA_POZ",
                column: "KOD_STREFA_ID");

            migrationBuilder.CreateIndex(
                name: "KOD_STREFA_POZ_SFMEXTIDX2",
                table: "KOD_STREFA_POZ",
                columns: new[] { "KOD_STREFA_ID", "LOKALIZACJA" });

            migrationBuilder.CreateIndex(
                name: "ZIP_ZONE_POS_IDX1",
                table: "KOD_STREFA_POZ",
                column: "KOD_STREFA_ID");

            migrationBuilder.CreateIndex(
                name: "IX_KODY_US",
                table: "KODY_US",
                column: "SYMBOL",
                unique: true,
                filter: "[SYMBOL] IS NOT NULL");

            migrationBuilder.CreateIndex(
                name: "KOLEJKA_WYDR_IDX1",
                table: "KOLEJKA_WYDRUKOW",
                columns: new[] { "SERWER_ID", "UZYTKOWNIK_ID", "DATA_GODZ", "KOD_WYDRUKU", "WYDRUK_OK" });

            migrationBuilder.CreateIndex(
                name: "KOLEJKA_WYDR_IDX2",
                table: "KOLEJKA_WYDRUKOW",
                columns: new[] { "SERWER_ID", "DATA_GODZ", "UZYTKOWNIK_ID" });

            migrationBuilder.CreateIndex(
                name: "KOMPENSATY_IDX1",
                table: "KOMPENSATY",
                column: "KLIENT_ID");

            migrationBuilder.CreateIndex(
                name: "KOMPENSATY_POZ_IDX1",
                table: "KOMPENSATY_POZ",
                column: "KOMPENSATY_ID");

            migrationBuilder.CreateIndex(
                name: "KOMPENSATY_POZ_IDX2",
                table: "KOMPENSATY_POZ",
                column: "TYP");

            migrationBuilder.CreateIndex(
                name: "KOMPENSATY_POZ_IDX3",
                table: "KOMPENSATY_POZ",
                column: "RODZ");

            migrationBuilder.CreateIndex(
                name: "KOMPENSATY_POZ_IDX4",
                table: "KOMPENSATY_POZ",
                column: "FAKTURA_ID");

            migrationBuilder.CreateIndex(
                name: "KONTENERY_IDX1",
                table: "KONTENERY",
                column: "K_NUMBER");

            migrationBuilder.CreateIndex(
                name: "KONTENERY_IDX2",
                table: "KONTENERY",
                column: "K_SERIAL_NO");

            migrationBuilder.CreateIndex(
                name: "KONTENERY_IDX3",
                table: "KONTENERY",
                column: "K_BOOK_NO");

            migrationBuilder.CreateIndex(
                name: "KONTENERY_IDX4",
                table: "KONTENERY",
                column: "TYP");

            migrationBuilder.CreateIndex(
                name: "KONTENERY_IDX5",
                table: "KONTENERY",
                column: "NUMER");

            migrationBuilder.CreateIndex(
                name: "KONTENERY_IDX6",
                table: "KONTENERY",
                column: "LOKALIZACJA");

            migrationBuilder.CreateIndex(
                name: "KONTENERY_WYM_T_IDX1",
                table: "KONTENERY_WYM_TABORU",
                column: "KONTENERY_ID");

            migrationBuilder.CreateIndex(
                name: "KONTENERY_WYM_T_IDX2",
                table: "KONTENERY_WYM_TABORU",
                column: "TYP");

            migrationBuilder.CreateIndex(
                name: "KONTENERY_ZLECE_IDX1",
                table: "KONTENERY_ZLECENIA",
                column: "KONTENERY_ID");

            migrationBuilder.CreateIndex(
                name: "KONTENERY_ZLECE_IDX2",
                table: "KONTENERY_ZLECENIA",
                column: "ZLECENIA_ID");

            migrationBuilder.CreateIndex(
                name: "KONTENERY_ZLECE_IDX3",
                table: "KONTENERY_ZLECENIA",
                columns: new[] { "ZLECENIA_TYP", "ZLECENIA_ID" });

            migrationBuilder.CreateIndex(
                name: "KONTRAH_AIR_AWB_IDX1",
                table: "KONTRAH_AIR_AWB",
                columns: new[] { "KONTRAH_ID", "STATUS" });

            migrationBuilder.CreateIndex(
                name: "KONTRAH_AIR_AWB_IDX2",
                table: "KONTRAH_AIR_AWB",
                column: "LISTY_LINIOWE_ID");

            migrationBuilder.CreateIndex(
                name: "KONTRAH_AIR_AWB_IDX3",
                table: "KONTRAH_AIR_AWB",
                column: "RECZNIE");

            migrationBuilder.CreateIndex(
                name: "KONTR_OGR_LAD_IDX1",
                table: "KONTRAH_OGR_LAD",
                column: "KONTRAH_ID");

            migrationBuilder.CreateIndex(
                name: "KONTR_OGR_LAD_IDX2",
                table: "KONTRAH_OGR_LAD",
                column: "GRUPY_LADUNKOW_ID");

            migrationBuilder.CreateIndex(
                name: "KONTRAH_OGR_LAD_SFMIDX1",
                table: "KONTRAH_OGR_LAD",
                columns: new[] { "KONTRAH_ID", "GRUPY_LADUNKOW", "ALGORYTM" });

            migrationBuilder.CreateIndex(
                name: "KONTR_OGR_LAD_P_IDX1",
                table: "KONTRAH_OGR_LAD_POZ",
                column: "KONTRAH_OGR_LAD_ID");

            migrationBuilder.CreateIndex(
                name: "KONTR_OGR_LAD_P_IDX2",
                table: "KONTRAH_OGR_LAD_POZ",
                column: "GRUPY_LADUNKOW_ID");

            migrationBuilder.CreateIndex(
                name: "KONTR_OGR_LAD_P_IDX3",
                table: "KONTRAH_OGR_LAD_POZ",
                column: "KONTRAH_ID");

            migrationBuilder.CreateIndex(
                name: "KONTRAH_OGR_LAD_POZ_SFMIDX1",
                table: "KONTRAH_OGR_LAD_POZ",
                columns: new[] { "KONTRAH_OGR_LAD_ID", "GRUPY_LADUNKOW" });

            migrationBuilder.CreateIndex(
                name: "KONTRAH_POWIAD_IDX1",
                table: "KONTRAH_POWIADOMIENIA",
                columns: new[] { "KONTRAH_ID", "OBJ_ID" });

            migrationBuilder.CreateIndex(
                name: "KONTRAH_SEGMENT_IDX1",
                table: "KONTRAH_SEGMENT",
                column: "KONTRAH_ID");

            migrationBuilder.CreateIndex(
                name: "KONTRAH_SEGMENT_IDX2",
                table: "KONTRAH_SEGMENT",
                column: "DICTIONARY_VALUES_ID");

            migrationBuilder.CreateIndex(
                name: "KONTRAH_TOWARY_IDX1",
                table: "KONTRAH_TOWARY",
                columns: new[] { "KONTRAH_ID", "OPISY_TOWARU_ID" });

            migrationBuilder.CreateIndex(
                name: "KONTRAH_TYP_REP_IDX1",
                table: "KONTRAH_TYP_REPREZ",
                column: "KIND");

            migrationBuilder.CreateIndex(
                name: "KONTRAH_WOLUMENY_OKR_IDX1",
                table: "KONTRAH_WOLUMENY_OKR",
                column: "KONTRAH_ID");

            migrationBuilder.CreateIndex(
                name: "KONTRAH_WOLUMENY_OKR_POZ_IDX1",
                table: "KONTRAH_WOLUMENY_OKR_POZ",
                column: "KONTRAH_WOLUMENY_OKR_ID");

            migrationBuilder.CreateIndex(
                name: "IX_KONTRAH_AKTYWNY",
                table: "KONTRAHENCI",
                columns: new[] { "AKTYWNY", "ID_KONTRAH" });

            migrationBuilder.CreateIndex(
                name: "IX_KONTRAHENCI_AKTYWNY_BLOKADY",
                table: "KONTRAHENCI",
                columns: new[] { "AKTYWNY", "ID_KONTRAH" });

            migrationBuilder.CreateIndex(
                name: "IX_KONTRAHENCI_NIP_PREFIX_NIP",
                table: "KONTRAHENCI",
                columns: new[] { "NIP", "PREFIX_NIP" });

            migrationBuilder.CreateIndex(
                name: "KONTRAHENCI_IDX1",
                table: "KONTRAHENCI",
                column: "SYMBOL");

            migrationBuilder.CreateIndex(
                name: "KONTRAHENCI_IDX10",
                table: "KONTRAHENCI",
                columns: new[] { "NAZWA", "ID_KONTRAH" });

            migrationBuilder.CreateIndex(
                name: "KONTRAHENCI_IDX11",
                table: "KONTRAHENCI",
                columns: new[] { "SYMBOL", "ID_KONTRAH" });

            migrationBuilder.CreateIndex(
                name: "KONTRAHENCI_IDX12",
                table: "KONTRAHENCI",
                column: "ViesGusStateDate");

            migrationBuilder.CreateIndex(
                name: "KONTRAHENCI_IDX13",
                table: "KONTRAHENCI",
                column: "PREFIX_NIP");

            migrationBuilder.CreateIndex(
                name: "KONTRAHENCI_IDX2",
                table: "KONTRAHENCI",
                column: "AKTYWNY");

            migrationBuilder.CreateIndex(
                name: "KONTRAHENCI_IDX3",
                table: "KONTRAHENCI",
                column: "DATA_OCP");

            migrationBuilder.CreateIndex(
                name: "KONTRAHENCI_IDX4",
                table: "KONTRAHENCI",
                column: "LICENCJA_WAZNOSC");

            migrationBuilder.CreateIndex(
                name: "KONTRAHENCI_IDX5",
                table: "KONTRAHENCI",
                column: "MIEJSCA_ZA_WY_ID");

            migrationBuilder.CreateIndex(
                name: "KONTRAHENCI_IDX6",
                table: "KONTRAHENCI",
                column: "OPIEKUN");

            migrationBuilder.CreateIndex(
                name: "KONTRAHENCI_IDX7",
                table: "KONTRAHENCI",
                column: "KONTRAH_ID");

            migrationBuilder.CreateIndex(
                name: "KONTRAHENCI_IDX8",
                table: "KONTRAHENCI",
                column: "E_FAKTURY");

            migrationBuilder.CreateIndex(
                name: "KONTRAHENCI_IDX9",
                table: "KONTRAHENCI",
                column: "FAKTOR_ID");

            migrationBuilder.CreateIndex(
                name: "KONTRAHENCI_BLO_IDX1",
                table: "KONTRAHENCI_BLOKADY",
                column: "KONTRAH_ID");

            migrationBuilder.CreateIndex(
                name: "KONTRAHENCI_CEN_IDX1",
                table: "KONTRAHENCI_CENNIKI",
                column: "KONTRAH_ID");

            migrationBuilder.CreateIndex(
                name: "KONTRAHENCI_CEN_IDX2",
                table: "KONTRAHENCI_CENNIKI",
                column: "TYP");

            migrationBuilder.CreateIndex(
                name: "KONTRAHENCI_CEN_IDX3",
                table: "KONTRAHENCI_CENNIKI",
                column: "DATA_OD");

            migrationBuilder.CreateIndex(
                name: "KONTRAH_CEN_DEF_IDX1",
                table: "KONTRAHENCI_CENNIKI_DEF",
                column: "KONTRAH_ID");

            migrationBuilder.CreateIndex(
                name: "KONTRAH_CEN_DEF_IDX2",
                table: "KONTRAHENCI_CENNIKI_DEF",
                columns: new[] { "TYP", "DOTYCZY" });

            migrationBuilder.CreateIndex(
                name: "KONTRAH_CEN_DEF_IDX3",
                table: "KONTRAHENCI_CENNIKI_DEF",
                column: "LOKALIZACJA");

            migrationBuilder.CreateIndex(
                name: "KONTRAH_CEN_DEF_IDX4",
                table: "KONTRAHENCI_CENNIKI_DEF",
                column: "DZIAL");

            migrationBuilder.CreateIndex(
                name: "KONTRAHENCI_CRM_IDX1",
                table: "KONTRAHENCI_CRM",
                column: "KONTRAH_ID");

            migrationBuilder.CreateIndex(
                name: "KONTRAHENCI_DOK_IDX1",
                table: "KONTRAHENCI_DOKUMENTY",
                column: "KONTRAH_ID");

            migrationBuilder.CreateIndex(
                name: "KONTRAHENCI_DOK_IDX2",
                table: "KONTRAHENCI_DOKUMENTY",
                column: "GRUPA");

            migrationBuilder.CreateIndex(
                name: "KONTRAHENCI_FIN_IDX1",
                table: "KONTRAHENCI_FINANSE",
                column: "KONTRAH_ID");

            migrationBuilder.CreateIndex(
                name: "KONTRAHENCI_FOR_IDX1",
                table: "KONTRAHENCI_FORMATKI_CR",
                column: "KONTRAH_ID");

            migrationBuilder.CreateIndex(
                name: "KONTRAHENCI_FTP_IDX1",
                table: "KONTRAHENCI_FTP",
                column: "KONTRAH_ID");

            migrationBuilder.CreateIndex(
                name: "KONTRAHENCI_GIE_IDX1",
                table: "KONTRAHENCI_GIELDY",
                column: "KONTRAH_ID");

            migrationBuilder.CreateIndex(
                name: "KONTRAH_KAT_IDX1",
                table: "KONTRAHENCI_KAT",
                column: "KONTRAH_ID");

            migrationBuilder.CreateIndex(
                name: "KONTRAH_KAT_IDX2",
                table: "KONTRAHENCI_KAT",
                column: "KAT_ID");

            migrationBuilder.CreateIndex(
                name: "KONTRAHENCI_KON_IDX1",
                table: "KONTRAHENCI_KONTA",
                column: "KONTRAH_ID");

            migrationBuilder.CreateIndex(
                name: "KONTRAHENCI_KON_IDX2",
                table: "KONTRAHENCI_KONTA",
                column: "FAKTOR_ID");

            migrationBuilder.CreateIndex(
                name: "KONTRAHENCI_KON_IDX3",
                table: "KONTRAHENCI_KONTA",
                column: "SUB_GENER_KONTRAH_ID");

            migrationBuilder.CreateIndex(
                name: "KONTRAHENCI_KON_IDX4",
                table: "KONTRAHENCI_KONTA",
                column: "AKTYWNE");

            migrationBuilder.CreateIndex(
                name: "KONTRAHENCI_KON_IDX5",
                table: "KONTRAHENCI_KONTA",
                column: "KIEROWCA_ID");

            migrationBuilder.CreateIndex(
                name: "KONTRAH_LICZN_IDX1",
                table: "KONTRAHENCI_LICZNIKI",
                column: "KONTRAH_ID");

            migrationBuilder.CreateIndex(
                name: "KONTRAHENCI_MAX_IDX1",
                table: "KONTRAHENCI_MAX_DLUG",
                column: "KONTRAH_ID");

            migrationBuilder.CreateIndex(
                name: "KONTRAHENCI_MAX_IDX2",
                table: "KONTRAHENCI_MAX_DLUG",
                column: "ODDZIAL_WLASNY_ID");

            migrationBuilder.CreateIndex(
                name: "KONTRAHENCI_ODD_IDX1",
                table: "KONTRAHENCI_ODDZIALY",
                column: "KONTRAH_ID");

            migrationBuilder.CreateIndex(
                name: "KONTRAHENCI_ODD_IDX2",
                table: "KONTRAHENCI_ODDZIALY",
                column: "MIEJSCA_ZA_ROZLADUNKU_ID");

            migrationBuilder.CreateIndex(
                name: "KONTRAHENCI_OPA_IDX1",
                table: "KONTRAHENCI_OPAK",
                column: "KONTRAH_ID");

            migrationBuilder.CreateIndex(
                name: "KONTRAHENCI_OPA_IDX2",
                table: "KONTRAHENCI_OPAK",
                column: "OPAKOWANIA_ID");

            migrationBuilder.CreateIndex(
                name: "KONTRAH_OPIEK_IDX1",
                table: "KONTRAHENCI_OPIEK",
                columns: new[] { "KONTRAH_ID", "KIND" });

            migrationBuilder.CreateIndex(
                name: "KONTRAH_OPIEK_IDX2",
                table: "KONTRAHENCI_OPIEK",
                column: "USER_ID");

            migrationBuilder.CreateIndex(
                name: "IDX_KONTRAH_POD_1",
                table: "KONTRAHENCI_POD",
                column: "KONTRAH_ID");

            migrationBuilder.CreateIndex(
                name: "KONTRAHENCI_POL_IDX1",
                table: "KONTRAHENCI_POLISY_OC",
                column: "KONTRAH_ID");

            migrationBuilder.CreateIndex(
                name: "KONTRAHENCI_POL_IDX2",
                table: "KONTRAHENCI_POLISY_OC",
                column: "UBEZP_ID");

            migrationBuilder.CreateIndex(
                name: "KONTRAHENCI_POL_IDX3",
                table: "KONTRAHENCI_POLISY_OC",
                column: "POLISA_ID");

            migrationBuilder.CreateIndex(
                name: "KONTRAHENCI_POL_IDX4",
                table: "KONTRAHENCI_POLISY_OC",
                column: "DATA");

            migrationBuilder.CreateIndex(
                name: "KONTRAHENCI_POW_IDX1",
                table: "KONTRAHENCI_POWIAZANI",
                columns: new[] { "KONTRAH1_ID", "KONTRAH2_ID" });

            migrationBuilder.CreateIndex(
                name: "KONTRAHENCI_PRZ_IDX1",
                table: "KONTRAHENCI_PRZELICZNIKI",
                column: "KONTRAH_ID");

            migrationBuilder.CreateIndex(
                name: "KONTRAHENCI_REP_IDX1",
                table: "KONTRAHENCI_REPREZ",
                column: "KONTRAH_ID");

            migrationBuilder.CreateIndex(
                name: "KONTRAHENCI_SKO_IDX1",
                table: "KONTRAHENCI_SKONTO",
                column: "KONTRAH_ID");

            migrationBuilder.CreateIndex(
                name: "KONTRAH_TABOR_IDX1",
                table: "KONTRAHENCI_TABOR",
                column: "KONTRAH_ID");

            migrationBuilder.CreateIndex(
                name: "KONTRAH_TABOR_IDX2",
                table: "KONTRAHENCI_TABOR",
                column: "TABOR_ID");

            migrationBuilder.CreateIndex(
                name: "KONTRAH_UDZIALY_IDX1",
                table: "KONTRAHENCI_UDZIALY",
                column: "KONTRAH_ID");

            migrationBuilder.CreateIndex(
                name: "KONTRAH_UDZIALY_IDX2",
                table: "KONTRAHENCI_UDZIALY",
                column: "DOTYCZY");

            migrationBuilder.CreateIndex(
                name: "KONTRAH_UDZIALY_IDX3",
                table: "KONTRAHENCI_UDZIALY",
                column: "LOKALIZACJA");

            migrationBuilder.CreateIndex(
                name: "KONTRAH_UDZIALY_IDX4",
                table: "KONTRAHENCI_UDZIALY",
                column: "DZIAL");

            migrationBuilder.CreateIndex(
                name: "KONTRAHENCI_WAL_IDX1",
                table: "KONTRAHENCI_WALUTY",
                column: "KONTRAH_ID");

            migrationBuilder.CreateIndex(
                name: "KONTRAHENCI_WWW_IDX1",
                table: "KONTRAHENCI_WWW",
                column: "KLIENT_ID");

            migrationBuilder.CreateIndex(
                name: "KONTRAHENCI_ZAL_IDX1",
                table: "KONTRAHENCI_ZALACZNIKI",
                column: "KONTRAH_ID");

            migrationBuilder.CreateIndex(
                name: "KRAJE_ISO_3_EXTIDX1",
                table: "KRAJE",
                column: "KOD_ISO_3");

            migrationBuilder.CreateIndex(
                name: "KS_POCZT_DOKUM_IDX1",
                table: "KS_POCZT_DOKUM",
                column: "TYP");

            migrationBuilder.CreateIndex(
                name: "KS_POCZT_DOKUM_IDX2",
                table: "KS_POCZT_DOKUM",
                column: "NAD");

            migrationBuilder.CreateIndex(
                name: "KS_POCZT_DOKUM_IDX3",
                table: "KS_POCZT_DOKUM",
                column: "ODB");

            migrationBuilder.CreateIndex(
                name: "KS_POCZT_DOKUM_IDX4",
                table: "KS_POCZT_DOKUM",
                column: "AKTYWNY");

            migrationBuilder.CreateIndex(
                name: "KS_POCZT_DOKUM_IDX5",
                table: "KS_POCZT_DOKUM",
                column: "DOPISZ_WIELE");

            migrationBuilder.CreateIndex(
                name: "KS_POCZT_OTRZ_IDX1",
                table: "KSIAZKA_POCZTOWA_OTRZ",
                column: "NADAWCA_ID");

            migrationBuilder.CreateIndex(
                name: "KS_POCZT_OTRZ_IDX2",
                table: "KSIAZKA_POCZTOWA_OTRZ",
                column: "UZYTKOWNIK_ID");

            migrationBuilder.CreateIndex(
                name: "KS_POCZT_OTRZ_IDX3",
                table: "KSIAZKA_POCZTOWA_OTRZ",
                column: "DATA_OTRZYMANIA");

            migrationBuilder.CreateIndex(
                name: "KS_POCZT_OTRZ_IDX4",
                table: "KSIAZKA_POCZTOWA_OTRZ",
                column: "OBIEKT_TYP");

            migrationBuilder.CreateIndex(
                name: "KS_POC_OTR_DOK_IDX1",
                table: "KSIAZKA_POCZTOWA_OTRZ_POZ",
                column: "KSIAZKA_POCZTOWA_OTRZ_ID");

            migrationBuilder.CreateIndex(
                name: "KS_POC_OTR_DOK_IDX2",
                table: "KSIAZKA_POCZTOWA_OTRZ_POZ",
                column: "OBIEKT_TYP");

            migrationBuilder.CreateIndex(
                name: "KS_POC_OTR_DOK_IDX3",
                table: "KSIAZKA_POCZTOWA_OTRZ_POZ",
                column: "OBIEKT_ID");

            migrationBuilder.CreateIndex(
                name: "KS_POC_OTRZ_R_IDX1",
                table: "KSIAZKA_POCZTOWA_OTRZ_ROZDZ",
                column: "KSIAZKA_POCZTOWA_OTRZ_ID");

            migrationBuilder.CreateIndex(
                name: "KS_POC_OTRZ_R_IDX2",
                table: "KSIAZKA_POCZTOWA_OTRZ_ROZDZ",
                column: "UZYTKOWNIK_ID");

            migrationBuilder.CreateIndex(
                name: "IX_KSIAZKA_POCZTOWA_POZ_LOKALIZACJA",
                table: "KSIAZKA_POCZTOWA_POZ",
                column: "LOKALIZACJA");

            migrationBuilder.CreateIndex(
                name: "KS_POCZT_POZ_IDX1",
                table: "KSIAZKA_POCZTOWA_POZ",
                column: "ADRESAT_ID");

            migrationBuilder.CreateIndex(
                name: "KS_POCZT_POZ_IDX2",
                table: "KSIAZKA_POCZTOWA_POZ",
                column: "NADAWCA_ID");

            migrationBuilder.CreateIndex(
                name: "KS_POCZT_POZ_IDX3",
                table: "KSIAZKA_POCZTOWA_POZ",
                column: "UZYTKOWNIK_ID");

            migrationBuilder.CreateIndex(
                name: "KS_POCZT_POZ_IDX4",
                table: "KSIAZKA_POCZTOWA_POZ",
                column: "DATA_UTW");

            migrationBuilder.CreateIndex(
                name: "KS_POCZT_POZ_IDX5",
                table: "KSIAZKA_POCZTOWA_POZ",
                column: "DATA_WYSLANIA");

            migrationBuilder.CreateIndex(
                name: "KS_POCZT_POZ_IDX6",
                table: "KSIAZKA_POCZTOWA_POZ",
                column: "OBIEKT_TYP");

            migrationBuilder.CreateIndex(
                name: "KS_POCZT_POZ_IDX7",
                table: "KSIAZKA_POCZTOWA_POZ",
                column: "DATA_WYDRUKU");

            migrationBuilder.CreateIndex(
                name: "KS_POCZT_POZ_IDX8",
                table: "KSIAZKA_POCZTOWA_POZ",
                column: "KOD_KRESKOWY");

            migrationBuilder.CreateIndex(
                name: "KS_POCZT_POZ_IDX9",
                table: "KSIAZKA_POCZTOWA_POZ",
                column: "KRAJ_ZAGR");

            migrationBuilder.CreateIndex(
                name: "KS_POC_POZ_DOK_IDX1",
                table: "KSIAZKA_POCZTOWA_POZ_DOK",
                column: "KSIAZKA_POCZTOWA_POZ_ID");

            migrationBuilder.CreateIndex(
                name: "KS_POC_POZ_DOK_IDX2",
                table: "KSIAZKA_POCZTOWA_POZ_DOK",
                column: "OBIEKT_TYP");

            migrationBuilder.CreateIndex(
                name: "KS_POC_POZ_DOK_IDX3",
                table: "KSIAZKA_POCZTOWA_POZ_DOK",
                column: "OBIEKT_ID");

            migrationBuilder.CreateIndex(
                name: "KURSY_IDX1",
                table: "KURSY",
                column: "TABELA_ID");

            migrationBuilder.CreateIndex(
                name: "KURSY_IDX2",
                table: "KURSY",
                column: "WALUTA");

            migrationBuilder.CreateIndex(
                name: "KURSY_D_IDX1",
                table: "KURSY_D",
                column: "TABELA_ID");

            migrationBuilder.CreateIndex(
                name: "KURSY_D_IDX2",
                table: "KURSY_D",
                column: "WALUTA");

            migrationBuilder.CreateIndex(
                name: "KWIT_PAL_IDX1",
                table: "KWIT_PAL",
                column: "NR_KP_ROK");

            migrationBuilder.CreateIndex(
                name: "KWIT_PAL_IDX2",
                table: "KWIT_PAL",
                column: "KLIENT_ID");

            migrationBuilder.CreateIndex(
                name: "KWIT_PAL_IDX4",
                table: "KWIT_PAL",
                column: "LOKALIZACJA");

            migrationBuilder.CreateIndex(
                name: "KWIT_PAL_IDX5",
                table: "KWIT_PAL",
                column: "WEZWANIE");

            migrationBuilder.CreateIndex(
                name: "KWIT_PAL_POZ_IDX1",
                table: "KWIT_PAL_POZ",
                column: "KWIT_PAL_ID");

            migrationBuilder.CreateIndex(
                name: "KWIT_PAL_POZ_IDX10",
                table: "KWIT_PAL_POZ",
                column: "ZLECENIA_ID");

            migrationBuilder.CreateIndex(
                name: "KWIT_PAL_POZ_IDX11",
                table: "KWIT_PAL_POZ",
                column: "ZLECENIA_ZA_WY_ID");

            migrationBuilder.CreateIndex(
                name: "KWIT_PAL_POZ_IDX12",
                table: "KWIT_PAL_POZ",
                column: "BILANS_OPAK_POZ_ID");

            migrationBuilder.CreateIndex(
                name: "KWIT_PAL_POZ_IDX2",
                table: "KWIT_PAL_POZ",
                column: "LISTY_LINIOWE_ID");

            migrationBuilder.CreateIndex(
                name: "KWIT_PAL_POZ_IDX3",
                table: "KWIT_PAL_POZ",
                column: "PRZESYLKI_ID");

            migrationBuilder.CreateIndex(
                name: "KWIT_PAL_POZ_IDX4",
                table: "KWIT_PAL_POZ",
                column: "PACZKI_ID");

            migrationBuilder.CreateIndex(
                name: "KWIT_PAL_POZ_IDX5",
                table: "KWIT_PAL_POZ",
                column: "MAGAZYN_ZDARZENIA_ID");

            migrationBuilder.CreateIndex(
                name: "KWIT_PAL_POZ_IDX6A",
                table: "KWIT_PAL_POZ",
                column: "OPAKOWANIE");

            migrationBuilder.CreateIndex(
                name: "KWIT_PAL_POZ_IDX7",
                table: "KWIT_PAL_POZ",
                column: "TYP");

            migrationBuilder.CreateIndex(
                name: "KWIT_PAL_POZ_IDX8",
                table: "KWIT_PAL_POZ",
                column: "KOD_OPAK");

            migrationBuilder.CreateIndex(
                name: "KWIT_PAL_POZ_IDX9",
                table: "KWIT_PAL_POZ",
                column: "LOKALIZACJA_NADZ");

            migrationBuilder.CreateIndex(
                name: "KWIT_PAL_ROZL_IDX1",
                table: "KWIT_PAL_ROZL",
                column: "NR_ROZL_ROK");

            migrationBuilder.CreateIndex(
                name: "KWIT_PAL_ROZL_IDX2",
                table: "KWIT_PAL_ROZL",
                column: "KLIENT_ID");

            migrationBuilder.CreateIndex(
                name: "KWIT_PAL_ROZL_IDX3",
                table: "KWIT_PAL_ROZL",
                column: "LOKALIZACJA");

            migrationBuilder.CreateIndex(
                name: "KWIT_PAL_ROZL_IDX4",
                table: "KWIT_PAL_ROZL",
                column: "ROZL_Z");

            migrationBuilder.CreateIndex(
                name: "KW_PAL_ROZL_LOK_IDX1",
                table: "KWIT_PAL_ROZL_LOK",
                column: "TYP");

            migrationBuilder.CreateIndex(
                name: "KW_PAL_ROZL_LOK_IDX2",
                table: "KWIT_PAL_ROZL_LOK",
                column: "NR_ROZL_LOK_ROK");

            migrationBuilder.CreateIndex(
                name: "KW_PAL_ROZL_LOK_IDX3",
                table: "KWIT_PAL_ROZL_LOK",
                column: "LOKALIZACJA_Z");

            migrationBuilder.CreateIndex(
                name: "KW_PAL_ROZL_LOK_IDX4",
                table: "KWIT_PAL_ROZL_LOK",
                column: "LOKALIZACJA_DO");

            migrationBuilder.CreateIndex(
                name: "KW_PAL_R_L_POZ_IDX1",
                table: "KWIT_PAL_ROZL_LOK_POZ",
                column: "KWIT_PAL_ROZL_LOK_ID");

            migrationBuilder.CreateIndex(
                name: "KW_PAL_R_L_POZ_IDX2",
                table: "KWIT_PAL_ROZL_LOK_POZ",
                column: "KWIT_PAL_ROZL_ID");

            migrationBuilder.CreateIndex(
                name: "KW_PAL_R_L_POZ_IDX3",
                table: "KWIT_PAL_ROZL_LOK_POZ",
                column: "KWIT_PAL_ROZL_POZ_ID");

            migrationBuilder.CreateIndex(
                name: "KW_PAL_R_L_POZ_IDX4",
                table: "KWIT_PAL_ROZL_LOK_POZ",
                column: "PRZESYLKI_ID");

            migrationBuilder.CreateIndex(
                name: "KW_PAL_R_L_POZ_IDX5",
                table: "KWIT_PAL_ROZL_LOK_POZ",
                column: "PACZKI_ID");

            migrationBuilder.CreateIndex(
                name: "KW_PAL_R_L_POZ_IDX6",
                table: "KWIT_PAL_ROZL_LOK_POZ",
                column: "OPAKOWANIE");

            migrationBuilder.CreateIndex(
                name: "KW_PAL_R_L_POZ_IDX7",
                table: "KWIT_PAL_ROZL_LOK_POZ",
                column: "KOD_OPAK");

            migrationBuilder.CreateIndex(
                name: "KW_PAL_R_L_POZ_IDX8",
                table: "KWIT_PAL_ROZL_LOK_POZ",
                column: "LOKALIZACJA_NADZ");

            migrationBuilder.CreateIndex(
                name: "KW_PAL_R_POZ_IDX1",
                table: "KWIT_PAL_ROZL_POZ",
                column: "KWIT_PAL_ROZL_ID");

            migrationBuilder.CreateIndex(
                name: "KW_PAL_R_POZ_IDX10",
                table: "KWIT_PAL_ROZL_POZ",
                column: "KWIT_PAL_ROZL_LOK_ID");

            migrationBuilder.CreateIndex(
                name: "KW_PAL_R_POZ_IDX11",
                table: "KWIT_PAL_ROZL_POZ",
                column: "BILANS_OPAK_LOK_ID");

            migrationBuilder.CreateIndex(
                name: "KW_PAL_R_POZ_IDX12",
                table: "KWIT_PAL_ROZL_POZ",
                column: "ZLECENIA_ID");

            migrationBuilder.CreateIndex(
                name: "KW_PAL_R_POZ_IDX2",
                table: "KWIT_PAL_ROZL_POZ",
                column: "KWIT_PAL_POZ_ID");

            migrationBuilder.CreateIndex(
                name: "KW_PAL_R_POZ_IDX3",
                table: "KWIT_PAL_ROZL_POZ",
                column: "LISTY_LINIOWE_ID");

            migrationBuilder.CreateIndex(
                name: "KW_PAL_R_POZ_IDX4",
                table: "KWIT_PAL_ROZL_POZ",
                column: "PRZESYLKI_ID");

            migrationBuilder.CreateIndex(
                name: "KW_PAL_R_POZ_IDX5",
                table: "KWIT_PAL_ROZL_POZ",
                column: "PACZKI_ID");

            migrationBuilder.CreateIndex(
                name: "KW_PAL_R_POZ_IDX6",
                table: "KWIT_PAL_ROZL_POZ",
                column: "OPAKOWANIE");

            migrationBuilder.CreateIndex(
                name: "KW_PAL_R_POZ_IDX7",
                table: "KWIT_PAL_ROZL_POZ",
                column: "KOD_OPAK");

            migrationBuilder.CreateIndex(
                name: "KW_PAL_R_POZ_IDX8",
                table: "KWIT_PAL_ROZL_POZ",
                column: "KWIT_PAL_ID");

            migrationBuilder.CreateIndex(
                name: "KW_PAL_R_POZ_IDX9",
                table: "KWIT_PAL_ROZL_POZ",
                column: "LOKALIZACJA_NADZ");

            migrationBuilder.CreateIndex(
                name: "ling_Language_LanguageId_ExtIdx1",
                schema: "ling",
                table: "Language",
                column: "LanguageId");

            migrationBuilder.CreateIndex(
                name: "lng_Language_DatabaseLanguageId_ExtIdx1",
                schema: "lng",
                table: "Language",
                column: "DatabaseLanguageId");

            migrationBuilder.CreateIndex(
                name: "LICENCJA_AKTYWNA_IDX1",
                table: "LICENCJA",
                column: "AKTYWNA");

            migrationBuilder.CreateIndex(
                name: "LICENCJA_ID_IDX1",
                table: "LICENCJA",
                column: "ID_LICENCJI");

            migrationBuilder.CreateIndex(
                name: "LIC_MODUL_ID_IDX1",
                table: "LICENCJA_MODUL",
                column: "PROFIL_ID");

            migrationBuilder.CreateIndex(
                name: "LIC_UZYTK_ID_IDX1",
                table: "LICENCJA_UZYTKOWNIK",
                column: "PROFIL_ID");

            migrationBuilder.CreateIndex(
                name: "LIC_UZYTK_ID_IDX2",
                table: "LICENCJA_UZYTKOWNIK",
                column: "UZYTKOWNIK_ID");

            migrationBuilder.CreateIndex(
                name: "LICZNIKI_IDX1",
                table: "LICZNIKI",
                column: "ID_LICZNIKA");

            migrationBuilder.CreateIndex(
                name: "LICZNIKI_IDX2",
                table: "LICZNIKI",
                columns: new[] { "ID_LICZNIKA", "NA_ROK" });

            migrationBuilder.CreateIndex(
                name: "LICZNIKI_IDX3",
                table: "LICZNIKI",
                columns: new[] { "ID_LICZNIKA", "NA_ROK", "NA_LOKALIZACJE" });

            migrationBuilder.CreateIndex(
                name: "LICZNIKI_IDX4",
                table: "LICZNIKI",
                columns: new[] { "ID_LICZNIKA", "NA_ROK", "NA_LOKALIZACJE", "NA_DZIAL" });

            migrationBuilder.CreateIndex(
                name: "LICZNIKI_IDX5",
                table: "LICZNIKI",
                column: "ID_LICZNIKI");

            migrationBuilder.CreateIndex(
                name: "IX_PLANER_2",
                table: "LISTY_LINIOWE",
                column: "NR_LISTU_ROK");

            migrationBuilder.CreateIndex(
                name: "LISTY_L_SFM_IDX1",
                table: "LISTY_LINIOWE",
                column: "DYSPOZYTOR_ID");

            migrationBuilder.CreateIndex(
                name: "LISTY_L_SFM_IDX2",
                table: "LISTY_LINIOWE",
                column: "SFM_VER");

            migrationBuilder.CreateIndex(
                name: "LISTY_LIN_IDX1",
                table: "LISTY_LINIOWE",
                column: "RODZAJ");

            migrationBuilder.CreateIndex(
                name: "LISTY_LIN_IDX10",
                table: "LISTY_LINIOWE",
                column: "LOKALIZACJA");

            migrationBuilder.CreateIndex(
                name: "LISTY_LIN_IDX11",
                table: "LISTY_LINIOWE",
                column: "LOKALIZACJA_POSR");

            migrationBuilder.CreateIndex(
                name: "LISTY_LIN_IDX12",
                table: "LISTY_LINIOWE",
                column: "AWIZO_WEWN");

            migrationBuilder.CreateIndex(
                name: "LISTY_LIN_IDX13",
                table: "LISTY_LINIOWE",
                column: "LOKALIZACJA_NADZ");

            migrationBuilder.CreateIndex(
                name: "LISTY_LIN_IDX2",
                table: "LISTY_LINIOWE",
                column: "SFM_VER");

            migrationBuilder.CreateIndex(
                name: "LISTY_LIN_IDX3",
                table: "LISTY_LINIOWE",
                column: "TECZKA_ID");

            migrationBuilder.CreateIndex(
                name: "LISTY_LIN_IDX4",
                table: "LISTY_LINIOWE",
                column: "AWIZO_DO_ID");

            migrationBuilder.CreateIndex(
                name: "LISTY_LIN_IDX5",
                table: "LISTY_LINIOWE",
                column: "DATA");

            migrationBuilder.CreateIndex(
                name: "LISTY_LIN_IDX6",
                table: "LISTY_LINIOWE",
                column: "NR_LISTU_ROK");

            migrationBuilder.CreateIndex(
                name: "LISTY_LIN_IDX7",
                table: "LISTY_LINIOWE",
                column: "STATUS");

            migrationBuilder.CreateIndex(
                name: "LISTY_LIN_IDX8",
                table: "LISTY_LINIOWE",
                column: "SAMOCHOD_ID");

            migrationBuilder.CreateIndex(
                name: "LISTY_LIN_IDX9",
                table: "LISTY_LINIOWE",
                column: "PLAN_DATA_ZALAD");

            migrationBuilder.CreateIndex(
                name: "LISTY_LINIOWE_MSGEXT_IDX1",
                table: "LISTY_LINIOWE",
                column: "NR_LISTU");

            migrationBuilder.CreateIndex(
                name: "LISTY_LINIOWE_SFMEXT_IDX1",
                table: "LISTY_LINIOWE",
                column: "PLAN_DATA_ZALAD");

            migrationBuilder.CreateIndex(
                name: "LISTY_LINIOWE_SFMEXT_IDX2",
                table: "LISTY_LINIOWE",
                column: "PLAN_DATA_ROZLAD");

            migrationBuilder.CreateIndex(
                name: "LISTY_L_KIE_IDX1",
                table: "LISTY_LINIOWE_KIERUNKI",
                column: "LISTY_LINIOWE_ID");

            migrationBuilder.CreateIndex(
                name: "LISTY_L_KOM_IDX1",
                table: "LISTY_LINIOWE_KOMUNIK",
                column: "LISTY_LINIOWE_ID");

            migrationBuilder.CreateIndex(
                name: "LISTY_L_LOK_IDX1",
                table: "LISTY_LINIOWE_LOK",
                column: "LISTY_LINIOWE_ID");

            migrationBuilder.CreateIndex(
                name: "LISTY_L_LOK_IDX2",
                table: "LISTY_LINIOWE_LOK",
                columns: new[] { "LISTY_LINIOWE_ID", "ETAP" });

            migrationBuilder.CreateIndex(
                name: "IX_USER_PLANER",
                table: "LISTY_LINIOWE_POZ",
                column: "LOKALIZACJA_Z");

            migrationBuilder.CreateIndex(
                name: "LISTY_L_POZ_IDX1",
                table: "LISTY_LINIOWE_POZ",
                column: "LP");

            migrationBuilder.CreateIndex(
                name: "LISTY_L_POZ_IDX10",
                table: "LISTY_LINIOWE_POZ",
                column: "MAGAZYN_ZDARZENIA_POZ_PZ_ID");

            migrationBuilder.CreateIndex(
                name: "LISTY_L_POZ_IDX11",
                table: "LISTY_LINIOWE_POZ",
                column: "AWIZO_WEWN");

            migrationBuilder.CreateIndex(
                name: "LISTY_L_POZ_IDX12",
                table: "LISTY_LINIOWE_POZ",
                column: "ZLP_ID");

            migrationBuilder.CreateIndex(
                name: "LISTY_L_POZ_IDX13",
                table: "LISTY_LINIOWE_POZ",
                column: "LL_ZA_ID");

            migrationBuilder.CreateIndex(
                name: "LISTY_L_POZ_IDX14",
                table: "LISTY_LINIOWE_POZ",
                column: "LL_WY_ID");

            migrationBuilder.CreateIndex(
                name: "LISTY_L_POZ_IDX15",
                table: "LISTY_LINIOWE_POZ",
                column: "ZLP_ID_ANUL");

            migrationBuilder.CreateIndex(
                name: "LISTY_L_POZ_IDX2",
                table: "LISTY_LINIOWE_POZ",
                column: "LISTY_LINIOWE_ID");

            migrationBuilder.CreateIndex(
                name: "LISTY_L_POZ_IDX3",
                table: "LISTY_LINIOWE_POZ",
                column: "PRZESYLKI_ID");

            migrationBuilder.CreateIndex(
                name: "LISTY_L_POZ_IDX4",
                table: "LISTY_LINIOWE_POZ",
                column: "LOKALIZACJA_Z");

            migrationBuilder.CreateIndex(
                name: "LISTY_L_POZ_IDX5",
                table: "LISTY_LINIOWE_POZ",
                column: "LOKALIZACJA_DO");

            migrationBuilder.CreateIndex(
                name: "LISTY_L_POZ_IDX6",
                table: "LISTY_LINIOWE_POZ",
                columns: new[] { "LISTY_LINIOWE_ID", "PRZESYLKI_ID" });

            migrationBuilder.CreateIndex(
                name: "LISTY_L_POZ_IDX7",
                table: "LISTY_LINIOWE_POZ",
                column: "WYJATEK_RI_ANULOWANA");

            migrationBuilder.CreateIndex(
                name: "LISTY_L_POZ_IDX8",
                table: "LISTY_LINIOWE_POZ",
                column: "DOKUM_OK");

            migrationBuilder.CreateIndex(
                name: "LISTY_L_POZ_IDX9",
                table: "LISTY_LINIOWE_POZ",
                column: "MAGAZYN_ZDARZENIA_POZ_ID");

            migrationBuilder.CreateIndex(
                name: "SRV_LISTY_LINIOWE_POZ_EXTIDX1",
                table: "LISTY_LINIOWE_POZ",
                column: "PRZESYLKI_ID");

            migrationBuilder.CreateIndex(
                name: "LISTY_L_POZ_P_IDX1",
                table: "LISTY_LINIOWE_POZ_P",
                column: "LP");

            migrationBuilder.CreateIndex(
                name: "LISTY_L_POZ_P_IDX2",
                table: "LISTY_LINIOWE_POZ_P",
                column: "LISTY_LINIOWE_POZ_ID");

            migrationBuilder.CreateIndex(
                name: "LISTY_L_POZ_P_IDX3",
                table: "LISTY_LINIOWE_POZ_P",
                column: "LISTY_LINIOWE_ID");

            migrationBuilder.CreateIndex(
                name: "LISTY_L_POZ_P_IDX4",
                table: "LISTY_LINIOWE_POZ_P",
                column: "PRZESYLKI_ID");

            migrationBuilder.CreateIndex(
                name: "LISTY_L_POZ_P_IDX5",
                table: "LISTY_LINIOWE_POZ_P",
                column: "PACZKI_ID");

            migrationBuilder.CreateIndex(
                name: "LISTY_L_PR_IDX1",
                table: "LISTY_LINIOWE_PROMY",
                column: "LISTY_LINIOWE_ID");

            migrationBuilder.CreateIndex(
                name: "LISTY_L_PR_IDX2",
                table: "LISTY_LINIOWE_PROMY",
                column: "PROMY_ID");

            migrationBuilder.CreateIndex(
                name: "LISTY_L_ZA_IDX1",
                table: "LISTY_LINIOWE_ZA_WY",
                column: "LISTY_LINIOWE_ID");

            migrationBuilder.CreateIndex(
                name: "LISTY_L_ZA_IDX2",
                table: "LISTY_LINIOWE_ZA_WY",
                column: "MIEJSCE_ID");

            migrationBuilder.CreateIndex(
                name: "LISTY_L_ZA_IDX3",
                table: "LISTY_LINIOWE_ZA_WY",
                column: "TYP");

            migrationBuilder.CreateIndex(
                name: "LISTY_L_ZA_IDX4",
                table: "LISTY_LINIOWE_ZA_WY",
                column: "GODZ_RZ");

            migrationBuilder.CreateIndex(
                name: "LISTY_L_ZA_IDX5",
                table: "LISTY_LINIOWE_ZA_WY",
                column: "ETA_EVENTS_ID");

            migrationBuilder.CreateIndex(
                name: "LISTY_L_ZA_IDX6",
                table: "LISTY_LINIOWE_ZA_WY",
                column: "ZLP_ID");

            migrationBuilder.CreateIndex(
                name: "LISTY_L_ZA_IDX7",
                table: "LISTY_LINIOWE_ZA_WY",
                column: "STATUS");

            migrationBuilder.CreateIndex(
                name: "LISTY_L_ZA_IDX8",
                table: "LISTY_LINIOWE_ZA_WY",
                column: "SYGN_POI");

            migrationBuilder.CreateIndex(
                name: "LISTY_L_ZA_IDX9",
                table: "LISTY_LINIOWE_ZA_WY",
                column: "STATUS_PDA");

            migrationBuilder.CreateIndex(
                name: "LISTY_L_ZA_WY_SFM1",
                table: "LISTY_LINIOWE_ZA_WY",
                column: "DATA");

            migrationBuilder.CreateIndex(
                name: "LISTY_L_ZA_WY_SFM2",
                table: "LISTY_LINIOWE_ZA_WY",
                column: "GF_DEF_ID");

            migrationBuilder.CreateIndex(
                name: "LISTY_LINIOWE_ZA_WY_SFMEXT_IDX1",
                table: "LISTY_LINIOWE_ZA_WY",
                columns: new[] { "LISTY_LINIOWE_ID", "TYP" });

            migrationBuilder.CreateIndex(
                name: "LOG_GF_IDX1",
                table: "LOG_GF",
                columns: new[] { "OBJ_TYP", "REC_ID" });

            migrationBuilder.CreateIndex(
                name: "LOG_GF_IDX2",
                table: "LOG_GF",
                column: "EXT_ID");

            migrationBuilder.CreateIndex(
                name: "LOG_GF_IDX3",
                table: "LOG_GF",
                column: "TABOR_ID");

            migrationBuilder.CreateIndex(
                name: "LOG_GF_IDX4",
                table: "LOG_GF",
                column: "SFM_TERM_ID");

            migrationBuilder.CreateIndex(
                name: "LOG_GF_IDX5",
                table: "LOG_GF",
                column: "LOG_ACTION");

            migrationBuilder.CreateIndex(
                name: "LOG_GF_IDX6",
                table: "LOG_GF",
                column: "DT_LOG");

            migrationBuilder.CreateIndex(
                name: "LOG_GF_IDX7",
                table: "LOG_GF",
                column: "DT_EVENT");

            migrationBuilder.CreateIndex(
                name: "LOG_GF_IDX8",
                table: "LOG_GF",
                column: "GF_SEND_LIST_ID");

            migrationBuilder.CreateIndex(
                name: "LOK_STAN_IDX1",
                table: "LOKALIZACJA_STAN",
                columns: new[] { "LOKALIZACJA", "DATA" });

            migrationBuilder.CreateIndex(
                name: "LOKALIZACJE_IDX1",
                table: "LOKALIZACJE",
                column: "LOKALIZACJA_NADRZ_ID");

            migrationBuilder.CreateIndex(
                name: "LOKALIZACJE_IDX2",
                table: "LOKALIZACJE",
                column: "KONTRAH_ID");

            migrationBuilder.CreateIndex(
                name: "LOKALIZACJE_IDX3",
                table: "LOKALIZACJE",
                column: "MIEJSCE_ID");

            migrationBuilder.CreateIndex(
                name: "LOKALIZACJE_IDX4",
                table: "LOKALIZACJE",
                column: "KOD");

            migrationBuilder.CreateIndex(
                name: "LOKALIZACJE_IDX5",
                table: "LOKALIZACJE",
                column: "AKTYWNA");

            migrationBuilder.CreateIndex(
                name: "LOKALIZACJE_SFMEXT_IDX1",
                table: "LOKALIZACJE",
                column: "KOD",
                filter: "([AKTYWNA]=(1))");

            migrationBuilder.CreateIndex(
                name: "LOKALIZACJE_DZI_IDX1",
                table: "LOKALIZACJE_DZIALY",
                column: "LOKALIZACJA_ID");

            migrationBuilder.CreateIndex(
                name: "LOKALIZACJE_DZI_IDX2",
                table: "LOKALIZACJE_DZIALY",
                column: "DZIAL_ID");

            migrationBuilder.CreateIndex(
                name: "LOKALIZACJE_PRA_IDX1",
                table: "LOKALIZACJE_PRAWA",
                column: "LOKALIZACJE_ID");

            migrationBuilder.CreateIndex(
                name: "LOKALIZACJE_PRA_IDX2",
                table: "LOKALIZACJE_PRAWA",
                column: "UZYTKOWNIK_ID");

            migrationBuilder.CreateIndex(
                name: "LOKALIZACJE_PRA_IDX3",
                table: "LOKALIZACJE_PRAWA",
                columns: new[] { "LOKALIZACJE", "UZYTKOWNIK_ID", "PODGLAD" });

            migrationBuilder.CreateIndex(
                name: "ix_ID_TABORU",
                schema: "opti",
                table: "MacierzZleceniaTabor",
                column: "ID_TABORU");

            migrationBuilder.CreateIndex(
                name: "ix_ID_ZLECENIA",
                schema: "opti",
                table: "MacierzZleceniaTabor",
                column: "ID_ZLECENIA");

            migrationBuilder.CreateIndex(
                name: "ix_SessionId",
                schema: "opti",
                table: "MacierzZleceniaTabor",
                column: "SessionId");

            migrationBuilder.CreateIndex(
                name: "ix_SolverTaskId",
                schema: "opti",
                table: "MacierzZleceniaTabor",
                column: "SolverTaskId");

            migrationBuilder.CreateIndex(
                name: "MAG_OPAK_ZD_POZ_IDX1",
                table: "MAG_OPAK_ZDARZ_POZ",
                column: "MAG_OPAK_ZDARZ_ID");

            migrationBuilder.CreateIndex(
                name: "MAG_OPAK_ZD_POZ_IDX2",
                table: "MAG_OPAK_ZDARZ_POZ",
                column: "ROZL");

            migrationBuilder.CreateIndex(
                name: "MAG_OPAK_ZD_POZ_IDX3",
                table: "MAG_OPAK_ZDARZ_POZ",
                column: "TABOR_ID");

            migrationBuilder.CreateIndex(
                name: "MAGAZYN_ZDARZ_IDX1",
                table: "MAGAZYN_ZDARZENIA",
                columns: new[] { "ZDARZENIE", "LOKALIZACJA" });

            migrationBuilder.CreateIndex(
                name: "MAGAZYN_ZDARZ_IDX2",
                table: "MAGAZYN_ZDARZENIA",
                column: "ZDARZENIE");

            migrationBuilder.CreateIndex(
                name: "MAGAZYN_ZDARZ_IDX3",
                table: "MAGAZYN_ZDARZENIA",
                column: "LOKALIZACJA");

            migrationBuilder.CreateIndex(
                name: "MAGAZYN_ZDARZ_IDX4",
                table: "MAGAZYN_ZDARZENIA",
                column: "NR_PWZ_ROK");

            migrationBuilder.CreateIndex(
                name: "MAGAZYN_ZDARZ_IDX5",
                table: "MAGAZYN_ZDARZENIA",
                column: "NR_PWZ_MIES");

            migrationBuilder.CreateIndex(
                name: "MAGAZYN_ZDARZ_IDX6",
                table: "MAGAZYN_ZDARZENIA",
                column: "DATA");

            migrationBuilder.CreateIndex(
                name: "MAGAZYN_ZDARZ_IDX7",
                table: "MAGAZYN_ZDARZENIA",
                column: "STAN");

            migrationBuilder.CreateIndex(
                name: "MAG_ZDARZ_POZ_IDX1",
                table: "MAGAZYN_ZDARZENIA_POZ",
                column: "MAGAZYN_ZDARZENIA_ID");

            migrationBuilder.CreateIndex(
                name: "MAG_ZDARZ_POZ_IDX2",
                table: "MAGAZYN_ZDARZENIA_POZ",
                column: "OBIEKT_ID");

            migrationBuilder.CreateIndex(
                name: "MAG_ZDARZ_POZ_IDX3",
                table: "MAGAZYN_ZDARZENIA_POZ",
                column: "OBIEKT_TYP");

            migrationBuilder.CreateIndex(
                name: "MAG_ZDARZ_POZ_IDX4",
                table: "MAGAZYN_ZDARZENIA_POZ",
                columns: new[] { "OBIEKT_TYP", "OBIEKT_ID" });

            migrationBuilder.CreateIndex(
                name: "MAG_ZDARZ_POZ_IDX5",
                table: "MAGAZYN_ZDARZENIA_POZ",
                columns: new[] { "OBIEKT_ID", "MAGAZYN_ZDARZENIA_ID" });

            migrationBuilder.CreateIndex(
                name: "MAG_ZD_POZ_P_IDX1",
                table: "MAGAZYN_ZDARZENIA_POZ_P",
                column: "LP");

            migrationBuilder.CreateIndex(
                name: "MAG_ZD_POZ_P_IDX2",
                table: "MAGAZYN_ZDARZENIA_POZ_P",
                column: "MAGAZYN_ZDARZENIA_POZ_ID");

            migrationBuilder.CreateIndex(
                name: "MAG_ZD_POZ_P_IDX3",
                table: "MAGAZYN_ZDARZENIA_POZ_P",
                column: "MAGAZYN_ZDARZENIA_ID");

            migrationBuilder.CreateIndex(
                name: "MAG_ZD_POZ_P_IDX4",
                table: "MAGAZYN_ZDARZENIA_POZ_P",
                column: "PRZESYLKI_ID");

            migrationBuilder.CreateIndex(
                name: "MAG_ZD_POZ_P_IDX5",
                table: "MAGAZYN_ZDARZENIA_POZ_P",
                column: "PACZKI_ID");

            migrationBuilder.CreateIndex(
                name: "MAIL_IN_ATTACH_IDX1",
                table: "MAIL_IN_ATTACH",
                column: "MAIL_IN_ID");

            migrationBuilder.CreateIndex(
                name: "MAIL_OUT_ATTACH_IDX1",
                table: "MAIL_OUT_ATTACH",
                column: "MAIL_OUT_ID");

            migrationBuilder.CreateIndex(
                name: "MAKRA_STATUSY_IDX1",
                table: "MAKRA_STATUSY",
                columns: new[] { "NR_MAKRA", "OBIEKT" });

            migrationBuilder.CreateIndex(
                name: "MAKRA_STATUSY_IDX2",
                table: "MAKRA_STATUSY",
                column: "TELEFON");

            migrationBuilder.CreateIndex(
                name: "MAKRA_STATUSY_IDX3",
                table: "MAKRA_STATUSY",
                column: "NR_MAKRA");

            migrationBuilder.CreateIndex(
                name: "MANDATY_WYKROCZ_IDX1",
                table: "MANDATY_WYKROCZ",
                column: "KIEROWCA_ID");

            migrationBuilder.CreateIndex(
                name: "MANDATY_WYKROCZ_IDX2",
                table: "MANDATY_WYKROCZ",
                column: "TABOR_ID");

            migrationBuilder.CreateIndex(
                name: "MAND_WYKR_ROZL_IDX1",
                table: "MANDATY_WYKROCZ_ROZL",
                column: "MANDATY_WYKROCZ_ID");

            migrationBuilder.CreateIndex(
                name: "MAPA_HISTORIA_P_IDX1",
                table: "MAPA_HISTORIA_POZ",
                column: "MAPA_HISTORIA_ID");

            migrationBuilder.CreateIndex(
                name: "MAPA_HISTORIA_P_IDX2",
                table: "MAPA_HISTORIA_POZ",
                column: "MIEJSCOWOSC");

            migrationBuilder.CreateIndex(
                name: "MAP_UTR_POZ_IDX_1",
                table: "MAPA_UTRUDNIENIA2_POZ",
                column: "MAPA_UTRUDNIENIA_ID");

            migrationBuilder.CreateIndex(
                name: "METRYKI_EXT_IDX1",
                table: "METRYKI_EXT",
                columns: new[] { "TABELA", "ID" });

            migrationBuilder.CreateIndex(
                name: "IX_MIEJSCA_ZA_ROZLADUNKU_RODZAJ_M",
                table: "MIEJSCA_ZA_ROZLADUNKU",
                column: "RODZAJ_M");

            migrationBuilder.CreateIndex(
                name: "MIEJSCA_ZA_ROZL_IDX1",
                table: "MIEJSCA_ZA_ROZLADUNKU",
                column: "KLIENT_ID");

            migrationBuilder.CreateIndex(
                name: "MIEJSCA_ZA_ROZL_IDX2",
                table: "MIEJSCA_ZA_ROZLADUNKU",
                column: "KONTRAHENCI_ID");

            migrationBuilder.CreateIndex(
                name: "MIEJSCA_ZA_ROZL_IDX3",
                table: "MIEJSCA_ZA_ROZLADUNKU",
                columns: new[] { "NAZWA", "ID_MIEJSCA_ZA_ROZLADUNKU" });

            migrationBuilder.CreateIndex(
                name: "MIEJSCA_ZA_ROZL_IDX4",
                table: "MIEJSCA_ZA_ROZLADUNKU",
                columns: new[] { "SYMBOL", "ID_MIEJSCA_ZA_ROZLADUNKU" });

            migrationBuilder.CreateIndex(
                name: "MIEJSCA_ZA_ROZLADUNKU_EXTIDX1",
                table: "MIEJSCA_ZA_ROZLADUNKU",
                columns: new[] { "RODZAJ_M", "KRAJ", "GEO_LONGI", "GEO_LAT" });

            migrationBuilder.CreateIndex(
                name: "MIEJSCA_ZA_WY_SFM1",
                table: "MIEJSCA_ZA_ROZLADUNKU",
                columns: new[] { "RODZAJ_M", "KRAJ" });

            migrationBuilder.CreateIndex(
                name: "MIEJSCA_ZA_WY_C_IDX1",
                table: "MIEJSCA_ZA_WY_CZAS",
                column: "MIEJSCA_ZA_ROZLADUNKU_ID");

            migrationBuilder.CreateIndex(
                name: "MIEJSCA_ZA_WY_C_IDX2",
                table: "MIEJSCA_ZA_WY_CZAS",
                column: "DZIEN_TYG");

            migrationBuilder.CreateIndex(
                name: "MIEJSCA_ZA_WY_K_IDX1",
                table: "MIEJSCA_ZA_WY_KONTRAH",
                column: "KLIENT_ID");

            migrationBuilder.CreateIndex(
                name: "MIEJSCA_ZA_WY_K_IDX2",
                table: "MIEJSCA_ZA_WY_KONTRAH",
                column: "MIEJSCA_ZA_ROZLADUNKU_ID");

            migrationBuilder.CreateIndex(
                name: "MIEJSCA_ZA_WY_K_IDX3",
                table: "MIEJSCA_ZA_WY_KONTRAH",
                columns: new[] { "KLIENT_ID", "MIEJSCA_ZA_ROZLADUNKU_ID" });

            migrationBuilder.CreateIndex(
                name: "MIEJSCA_ZA_WY_MYJNIE_GRUPY_SFMEXT_IDX1",
                table: "MIEJSCA_ZA_WY_MYJNIE_GRUPY",
                columns: new[] { "MIEJSCA_ZA_ROZLADUNKU_ID", "GRUPY_LADUNKOW_ID" });

            migrationBuilder.CreateIndex(
                name: "ZA_WY_MYJNIE_GRUPY_IDX1",
                table: "MIEJSCA_ZA_WY_MYJNIE_GRUPY",
                column: "MIEJSCA_ZA_ROZLADUNKU_ID");

            migrationBuilder.CreateIndex(
                name: "ZA_WY_MYJNIE_GRUPY_IDX2",
                table: "MIEJSCA_ZA_WY_MYJNIE_GRUPY",
                column: "GRUPY_LADUNKOW_ID");

            migrationBuilder.CreateIndex(
                name: "MIEJSCA_ZA_WY_MYJNIE_PROC_SFMEXT_IDX1",
                table: "MIEJSCA_ZA_WY_MYJNIE_PROC",
                columns: new[] { "MIEJSCA_ZA_ROZLADUNKU_ID", "POI_MYJNIE_PROCEDURY_ID" });

            migrationBuilder.CreateIndex(
                name: "ZA_WY_MYJNIE_PROC_IDX1",
                table: "MIEJSCA_ZA_WY_MYJNIE_PROC",
                column: "MIEJSCA_ZA_ROZLADUNKU_ID");

            migrationBuilder.CreateIndex(
                name: "ZA_WY_MYJNIE_PROC_IDX2",
                table: "MIEJSCA_ZA_WY_MYJNIE_PROC",
                column: "POI_MYJNIE_PROCEDURY_ID");

            migrationBuilder.CreateIndex(
                name: "POI_OGR_LAD_IDX1",
                table: "MIEJSCA_ZA_WY_OGR_LAD",
                column: "MIEJSCA_ZA_ROZLADUNKU_ID");

            migrationBuilder.CreateIndex(
                name: "POI_OGR_LAD_IDX2",
                table: "MIEJSCA_ZA_WY_OGR_LAD",
                column: "GRUPY_LADUNKOW_ID");

            migrationBuilder.CreateIndex(
                name: "POI_OGR_LAD_P_IDX1",
                table: "MIEJSCA_ZA_WY_OGR_LAD_POZ",
                column: "MIEJSCA_ZA_WY_OGR_LAD_ID");

            migrationBuilder.CreateIndex(
                name: "POI_OGR_LAD_P_IDX2",
                table: "MIEJSCA_ZA_WY_OGR_LAD_POZ",
                column: "GRUPY_LADUNKOW_ID");

            migrationBuilder.CreateIndex(
                name: "POI_OGR_LAD_P_IDX3",
                table: "MIEJSCA_ZA_WY_OGR_LAD_POZ",
                column: "MIEJSCA_ZA_ROZLADUNKU_ID");

            migrationBuilder.CreateIndex(
                name: "MIEJSCA_ZA_WY_W_IDX1",
                table: "MIEJSCA_ZA_WY_WYM_TABORU",
                column: "MIEJSCA_ZA_ROZLADUNKU_ID");

            migrationBuilder.CreateIndex(
                name: "MIEJSCA_ZA_WY_Z_IDX1",
                table: "MIEJSCA_ZA_WY_ZAKAZY",
                columns: new[] { "MIEJSCA_ZA_ROZLADUNKU_ID", "OBIEKT_TYP", "OBIEKT_ID" });

            migrationBuilder.CreateIndex(
                name: "SRV_MobileObjState_EXTIDX1",
                table: "MobileObjState",
                columns: new[] { "ObjType", "ObjId" });

            migrationBuilder.CreateIndex(
                name: "MODEL_IDX1",
                table: "MODEL",
                column: "MARKA_ID");

            migrationBuilder.CreateIndex(
                name: "lng_MultilingualText_TextId_ExtIdx1",
                schema: "lng",
                table: "MultilingualText",
                column: "TextId",
                filter: "([WindowId]=(0) AND [ControlId]=(0))");

            migrationBuilder.CreateIndex(
                name: "lng_MultilingualText_WindowId_ExtIdx1",
                schema: "lng",
                table: "MultilingualText",
                column: "WindowId");

            migrationBuilder.CreateIndex(
                name: "NADGABARYTY_IDX1",
                table: "NADGABARYTY",
                column: "ZEZWOLENIE_DATA_OBOW");

            migrationBuilder.CreateIndex(
                name: "NORMY_IDX1",
                table: "NORMY",
                columns: new[] { "TYP", "OBIEKT_ID" });

            migrationBuilder.CreateIndex(
                name: "NORMY_IDX2",
                table: "NORMY",
                columns: new[] { "ROK", "MIESIAC" });

            migrationBuilder.CreateIndex(
                name: "NOTY_IDX1",
                table: "NOTY",
                column: "KONTRAH_ID");

            migrationBuilder.CreateIndex(
                name: "NOTY_IDX2",
                table: "NOTY",
                column: "TECZKA_ID");

            migrationBuilder.CreateIndex(
                name: "NOTY_IDX3",
                table: "NOTY",
                columns: new[] { "ZLECENIE_TYP", "ZLECENIE_ID" });

            migrationBuilder.CreateIndex(
                name: "NOTY_IDX4",
                table: "NOTY",
                column: "NOTA_OTRZYMANA");

            migrationBuilder.CreateIndex(
                name: "NOTY_IDX5",
                table: "NOTY",
                column: "NOTA_OBCIAZENIOWA");

            migrationBuilder.CreateIndex(
                name: "NOTY_IDX6",
                table: "NOTY",
                column: "ZAPLACONO");

            migrationBuilder.CreateIndex(
                name: "NOTY_IDX7",
                table: "NOTY",
                column: "TYP");

            migrationBuilder.CreateIndex(
                name: "NOTY_IDX8",
                table: "NOTY",
                column: "STATUS_WINDYKACJI");

            migrationBuilder.CreateIndex(
                name: "NOTY_POZYCJE_IDX1",
                table: "NOTY_POZYCJE",
                column: "NOTY_ID");

            migrationBuilder.CreateIndex(
                name: "NOTY_POZYCJE_IDX2",
                table: "NOTY_POZYCJE",
                column: "KURSY_WALUT_ID");

            migrationBuilder.CreateIndex(
                name: "NOTY_SPLATY_IDX1",
                table: "NOTY_SPLATY",
                column: "NOTY_ID");

            migrationBuilder.CreateIndex(
                name: "NOTY_SPLATY_IDX2",
                table: "NOTY_SPLATY",
                column: "KOMPENSATY_ID");

            migrationBuilder.CreateIndex(
                name: "OBJ_DEF_IDX1",
                table: "OBJ_DEF",
                column: "ID_OBJ");

            migrationBuilder.CreateIndex(
                name: "OBJ_DEF_IDX2",
                table: "OBJ_DEF",
                column: "TABELA");

            migrationBuilder.CreateIndex(
                name: "OBJ_DEF_IDX3",
                table: "OBJ_DEF",
                column: "TYP");

            migrationBuilder.CreateIndex(
                name: "OBJ_KLUCZ_IDX1",
                table: "OBJ_KLUCZ",
                column: "ID_OBJ_DEF");

            migrationBuilder.CreateIndex(
                name: "OBJ_KLUCZ_IDX2",
                table: "OBJ_KLUCZ",
                column: "KLUCZ");

            migrationBuilder.CreateIndex(
                name: "OBJ_KLUCZ_IDX3",
                table: "OBJ_KLUCZ",
                column: "POLE");

            migrationBuilder.CreateIndex(
                name: "OBJ_KLUCZ_SQL_IDX1",
                table: "OBJ_KLUCZ_SQL",
                column: "ID_OBJ_WZORZEC");

            migrationBuilder.CreateIndex(
                name: "OBJ_KLUCZ_SQL_IDX2",
                table: "OBJ_KLUCZ_SQL",
                column: "KLUCZ");

            migrationBuilder.CreateIndex(
                name: "ix_OBJ_WZORZEC_user1",
                table: "OBJ_WZORZEC",
                columns: new[] { "FUNKCJA", "TABELA", "WYROZNIK" });

            migrationBuilder.CreateIndex(
                name: "OBJ_WZORZEC_EXTIDX1",
                table: "OBJ_WZORZEC",
                columns: new[] { "ID_OBJ", "FUNKCJA", "WYROZNIK" });

            migrationBuilder.CreateIndex(
                name: "OBJ_WZORZEC_EXTIDX2",
                table: "OBJ_WZORZEC",
                columns: new[] { "TABELA", "FUNKCJA", "WYROZNIK" });

            migrationBuilder.CreateIndex(
                name: "OBJ_WZORZEC_IDX1",
                table: "OBJ_WZORZEC",
                column: "FUNKCJA");

            migrationBuilder.CreateIndex(
                name: "OBJ_WZORZEC_IDX2",
                table: "OBJ_WZORZEC",
                column: "WYROZNIK");

            migrationBuilder.CreateIndex(
                name: "OBJ_WZORZEC_IDX3",
                table: "OBJ_WZORZEC",
                column: "ID_OBJ");

            migrationBuilder.CreateIndex(
                name: "OBJ_WZORZEC_IDX4",
                table: "OBJ_WZORZEC",
                column: "TABELA");

            migrationBuilder.CreateIndex(
                name: "FTL_Object_SFM_VER_EXT_IDX1",
                table: "Object_SFM_VER",
                column: "SFM_VER",
                filter: "([ID_OBJ]=(2))");

            migrationBuilder.CreateIndex(
                name: "LTL_Object_SFM_VER_EXT_IDX1",
                table: "Object_SFM_VER",
                column: "SFM_VER",
                filter: "([ID_OBJ]=(6))");

            migrationBuilder.CreateIndex(
                name: "ODLEGLOSCI_IDX1",
                table: "ODLEGLOSCI",
                columns: new[] { "MIEJSCE_A_ID", "MIEJSCE_B_ID" });

            migrationBuilder.CreateIndex(
                name: "ODLEGLOSCI_IDX3",
                table: "ODLEGLOSCI",
                columns: new[] { "MIASTO_A", "MIASTO_B" });

            migrationBuilder.CreateIndex(
                name: "ODLEGLOSCI_IDX4",
                table: "ODLEGLOSCI",
                columns: new[] { "KOD_A", "KOD_B" });

            migrationBuilder.CreateIndex(
                name: "ODSETKI_UST_IDX1",
                table: "ODSETKI_USTAWOWE",
                column: "DATA_OD",
                unique: true,
                filter: "[DATA_OD] IS NOT NULL");

            migrationBuilder.CreateIndex(
                name: "OFERTY_DROBN_PR_IDX1",
                table: "OFERTY_DROBN_PRZELICZNIKI",
                column: "OFERTY_DROBN_USLUGI_ID");

            migrationBuilder.CreateIndex(
                name: "OFERTY_DROBN_TO_IDX1",
                table: "OFERTY_DROBN_TOWARY",
                column: "OFERTY_DROBN_USLUGI_ID");

            migrationBuilder.CreateIndex(
                name: "OFERTY_DROBN_US_IDX1",
                table: "OFERTY_DROBN_USLUGI",
                column: "OFERTY_DROBN_ID");

            migrationBuilder.CreateIndex(
                name: "OFERTY_NEW_POZ_IDX1",
                table: "OFERTY_NEW_POZ",
                column: "OFERTY_NEW_ID");

            migrationBuilder.CreateIndex(
                name: "OFERTY_NEW_POZ_IDX2",
                table: "OFERTY_NEW_POZ",
                columns: new[] { "OBJ_ID", "REC_ID" });

            migrationBuilder.CreateIndex(
                name: "OKRESY_POZ_IDX1",
                table: "OKRESY_POZ",
                column: "OKRESY_ID");

            migrationBuilder.CreateIndex(
                name: "OKRESY_POZ_IDX2",
                table: "OKRESY_POZ",
                column: "PROCESY_OKR_ID");

            migrationBuilder.CreateIndex(
                name: "OKRESY_ROZL_IDX1",
                table: "OKRESY_ROZLICZENIOWE",
                column: "LICZNIKI_ID");

            migrationBuilder.CreateIndex(
                name: "OLAP_DEF_IDX1",
                table: "OLAP_DEFINICJE",
                column: "GRUPA");

            migrationBuilder.CreateIndex(
                name: "OLAP_DEF_PAR_IDX1",
                table: "OLAP_DEFINICJE_PARAMS",
                column: "OLAP_DEFINICJE_ID");

            migrationBuilder.CreateIndex(
                name: "OLAP_DEF_ULUB_IDX1",
                table: "OLAP_DEFINICJE_ULUBIONE",
                columns: new[] { "OLAP_DEFINICJE_ID", "USER_ID" },
                unique: true,
                filter: "[OLAP_DEFINICJE_ID] IS NOT NULL AND [USER_ID] IS NOT NULL");

            migrationBuilder.CreateIndex(
                name: "OLAP_PRAWA_IDX1",
                table: "OLAP_PRAWA",
                column: "OLAP_DEFINICJE_ID");

            migrationBuilder.CreateIndex(
                name: "OLAP_PRAWA_IDX2",
                table: "OLAP_PRAWA",
                column: "USER_ID");

            migrationBuilder.CreateIndex(
                name: "OLAP_PRAWA_IDX3",
                table: "OLAP_PRAWA",
                column: "GRUPA_ID");

            migrationBuilder.CreateIndex(
                name: "OLAP_WIDOKI_IDX1",
                table: "OLAP_WIDOKI",
                column: "OLAP_DEFINICJE_ID");

            migrationBuilder.CreateIndex(
                name: "OLAP_WIDOKI_USR_IDX1",
                table: "OLAP_WIDOKI_USR",
                column: "OLAP_DEFINICJE_ID");

            migrationBuilder.CreateIndex(
                name: "OLAP_WIDOKI_USR_IDX2",
                table: "OLAP_WIDOKI_USR",
                column: "USER_ID");

            migrationBuilder.CreateIndex(
                name: "OPAKOWANIA_POZ_IDX1",
                table: "OPAKOWANIA_POZ",
                column: "OPAKOWANIA_ID");

            migrationBuilder.CreateIndex(
                name: "OPAKOWANIA_POZ_IDX2",
                table: "OPAKOWANIA_POZ",
                column: "TABOR_ID");

            migrationBuilder.CreateIndex(
                name: "OPAKOWANIA_POZ_IDX3",
                table: "OPAKOWANIA_POZ",
                column: "KONTRAHENT_ID");

            migrationBuilder.CreateIndex(
                name: "OPAKOWANIA_POZ_IDX4",
                table: "OPAKOWANIA_POZ",
                column: "KIEROWCA_ID");

            migrationBuilder.CreateIndex(
                name: "OPCJE_PRZEWOZOW_IDX1",
                table: "OPCJE_PRZEWOZOW",
                column: "RODZAJ");

            migrationBuilder.CreateIndex(
                name: "OPISY_TOWAROW_SFMIDX1",
                table: "OPISY_TOWAROW",
                column: "NAZWA_UZYTK");

            migrationBuilder.CreateIndex(
                name: "OPISY_TOWAROW_W_IDX1",
                table: "OPISY_TOWAROW_WYM_TABORU",
                column: "OPISY_TOWAROW_ID");

            migrationBuilder.CreateIndex(
                name: "OptiPlanerFtlDistance_IDX1",
                table: "OptiPlanerFtlDistance",
                columns: new[] { "SessionId", "ObjId", "RecId" });

            migrationBuilder.CreateIndex(
                name: "IDXPACZKI_WHP1",
                table: "PACZKI",
                column: "ID_PACZKI_EX");

            migrationBuilder.CreateIndex(
                name: "PACZKI_IDX1",
                table: "PACZKI",
                column: "PRZESYLKA_ID");

            migrationBuilder.CreateIndex(
                name: "PACZKI_IDX10",
                table: "PACZKI",
                column: "KOREKTA_DO_AKCEPT");

            migrationBuilder.CreateIndex(
                name: "PACZKI_IDX11",
                table: "PACZKI",
                column: "OPAK_WYM_PRZES_ZWR_ID");

            migrationBuilder.CreateIndex(
                name: "PACZKI_IDX12",
                table: "PACZKI",
                column: "KONSOLIDACJA_PACZKI_ID");

            migrationBuilder.CreateIndex(
                name: "PACZKI_IDX13",
                table: "PACZKI",
                column: "TYP_PACZKI");

            migrationBuilder.CreateIndex(
                name: "PACZKI_IDX14",
                table: "PACZKI",
                column: "ZWROT_DO_ID");

            migrationBuilder.CreateIndex(
                name: "PACZKI_IDX15",
                table: "PACZKI",
                column: "AIR_PACZKI_ID");

            migrationBuilder.CreateIndex(
                name: "PACZKI_IDX2",
                table: "PACZKI",
                column: "LIST_LINIOWY_ID");

            migrationBuilder.CreateIndex(
                name: "PACZKI_IDX3",
                table: "PACZKI",
                column: "LIST_LINIOWY_DYST_ID");

            migrationBuilder.CreateIndex(
                name: "PACZKI_IDX4",
                table: "PACZKI",
                column: "MAGAZYN_P");

            migrationBuilder.CreateIndex(
                name: "PACZKI_IDX5",
                table: "PACZKI",
                column: "MAGAZYN_R");

            migrationBuilder.CreateIndex(
                name: "PACZKI_IDX6",
                table: "PACZKI",
                column: "ANOMALIA");

            migrationBuilder.CreateIndex(
                name: "PACZKI_IDX7",
                table: "PACZKI",
                column: "LOKALIZACJA_CURR");

            migrationBuilder.CreateIndex(
                name: "PACZKI_IDX8",
                table: "PACZKI",
                column: "LOKALIZACJA_NEXT");

            migrationBuilder.CreateIndex(
                name: "PACZKI_IDX9",
                table: "PACZKI",
                column: "KOREKTA");

            migrationBuilder.CreateIndex(
                name: "PACZKI_AIR_IDX1",
                table: "PACZKI_AIR",
                column: "PRZESYLKI_AIR_ID");

            migrationBuilder.CreateIndex(
                name: "PACZKI_DOKUM_IDX1",
                table: "PACZKI_DOKUM",
                column: "PRZESYLKI_DOKUMENTY_ID");

            migrationBuilder.CreateIndex(
                name: "PACZKI_DOKUM_IDX2",
                table: "PACZKI_DOKUM",
                column: "PACZKI_DOK_ID");

            migrationBuilder.CreateIndex(
                name: "PACZKI_DOKUM_IDX3",
                table: "PACZKI_DOKUM",
                columns: new[] { "OBJ_ID", "REC_ID" });

            migrationBuilder.CreateIndex(
                name: "PACZKI_HIST_IDX1",
                table: "PACZKI_HIST",
                column: "PRZESYLKA_ID");

            migrationBuilder.CreateIndex(
                name: "PACZKI_HIST_IDX10",
                table: "PACZKI_HIST",
                column: "KOREKTA_DO_AKCEPT");

            migrationBuilder.CreateIndex(
                name: "PACZKI_HIST_IDX11",
                table: "PACZKI_HIST",
                column: "OPAK_WYM_PRZES_ZWR_ID");

            migrationBuilder.CreateIndex(
                name: "PACZKI_HIST_IDX12",
                table: "PACZKI_HIST",
                column: "KONSOLIDACJA_PACZKI_ID");

            migrationBuilder.CreateIndex(
                name: "PACZKI_HIST_IDX13",
                table: "PACZKI_HIST",
                column: "TYP_PACZKI");

            migrationBuilder.CreateIndex(
                name: "PACZKI_HIST_IDX14",
                table: "PACZKI_HIST",
                column: "ZWROT_DO_ID");

            migrationBuilder.CreateIndex(
                name: "PACZKI_HIST_IDX15",
                table: "PACZKI_HIST",
                column: "AIR_PACZKI_ID");

            migrationBuilder.CreateIndex(
                name: "PACZKI_HIST_IDX2",
                table: "PACZKI_HIST",
                column: "LIST_LINIOWY_ID");

            migrationBuilder.CreateIndex(
                name: "PACZKI_HIST_IDX3",
                table: "PACZKI_HIST",
                column: "LIST_LINIOWY_DYST_ID");

            migrationBuilder.CreateIndex(
                name: "PACZKI_HIST_IDX4",
                table: "PACZKI_HIST",
                column: "MAGAZYN_P");

            migrationBuilder.CreateIndex(
                name: "PACZKI_HIST_IDX5",
                table: "PACZKI_HIST",
                column: "MAGAZYN_R");

            migrationBuilder.CreateIndex(
                name: "PACZKI_HIST_IDX6",
                table: "PACZKI_HIST",
                column: "ANOMALIA");

            migrationBuilder.CreateIndex(
                name: "PACZKI_HIST_IDX7",
                table: "PACZKI_HIST",
                column: "LOKALIZACJA_CURR");

            migrationBuilder.CreateIndex(
                name: "PACZKI_HIST_IDX8",
                table: "PACZKI_HIST",
                column: "LOKALIZACJA_NEXT");

            migrationBuilder.CreateIndex(
                name: "PACZKI_HIST_IDX9",
                table: "PACZKI_HIST",
                column: "KOREKTA");

            migrationBuilder.CreateIndex(
                name: "PACZKI_LOK_HIST_IDX1",
                table: "PACZKI_LOK_HIST",
                column: "PACZKI_ID");

            migrationBuilder.CreateIndex(
                name: "PACZKI_LOK_HIST_IDX2",
                table: "PACZKI_LOK_HIST",
                column: "WEJ_MAGAZYN_ZDARZENIA_ID");

            migrationBuilder.CreateIndex(
                name: "PACZKI_LOK_HIST_IDX3",
                table: "PACZKI_LOK_HIST",
                column: "WYJ_MAGAZYN_ZDARZENIA_ID");

            migrationBuilder.CreateIndex(
                name: "PACZKI_PALETOWE_IDX1",
                table: "PACZKI_PALETOWE",
                column: "PACZKI_ID");

            migrationBuilder.CreateIndex(
                name: "PACZKI_PALETOWE_IDX2",
                table: "PACZKI_PALETOWE",
                column: "PACZKI_PAL_ID");

            migrationBuilder.CreateIndex(
                name: "PACZKI_PALETOWE_IDX3",
                table: "PACZKI_PALETOWE",
                column: "BILANS_OPAK_LOK_ID");

            migrationBuilder.CreateIndex(
                name: "PACZKI_PALETOWE_IDX4",
                table: "PACZKI_PALETOWE",
                column: "BILANS_OPAK_LOK_POZ_ID");

            migrationBuilder.CreateIndex(
                name: "PACZKI_PROD_IDX1",
                table: "PACZKI_PROD",
                columns: new[] { "PRZESYLKI_ID", "PACZKI_ID" });

            migrationBuilder.CreateIndex(
                name: "PACZKI_PROD_IDX2",
                table: "PACZKI_PROD",
                column: "PACZKI_ID");

            migrationBuilder.CreateIndex(
                name: "PACZKI_PROD_IDX3",
                table: "PACZKI_PROD",
                column: "PRZESYLKI_ID");

            migrationBuilder.CreateIndex(
                name: "PACZKI_RAIL_IDX1",
                table: "PACZKI_RAIL",
                column: "PRZESYLKI_RAIL_ID");

            migrationBuilder.CreateIndex(
                name: "PACZKI_REL_IDX1",
                table: "PACZKI_REL",
                columns: new[] { "P_PRZESYLKI_ID", "P_PACZKI_ID" });

            migrationBuilder.CreateIndex(
                name: "PACZKI_REL_IDX2",
                table: "PACZKI_REL",
                columns: new[] { "ZB_PRZESYLKI_ID", "ZB_PACZKI_ID" });

            migrationBuilder.CreateIndex(
                name: "PACZKI_SEA_IDX1",
                table: "PACZKI_SEA",
                column: "PRZESYLKI_SEA_ID");

            migrationBuilder.CreateIndex(
                name: "PACZKI_SKAN_IDX1",
                table: "PACZKI_SKAN",
                column: "PACZKI_ID");

            migrationBuilder.CreateIndex(
                name: "PACZKI_SKAN_IDX2",
                table: "PACZKI_SKAN",
                column: "LISTY_LINIOWE_ID");

            migrationBuilder.CreateIndex(
                name: "PACZKI_SKAN_IDX3",
                table: "PACZKI_SKAN",
                column: "MAGAZYN_ZDARZENIA_ID");

            migrationBuilder.CreateIndex(
                name: "PACZKI_SKAN_IDX4",
                table: "PACZKI_SKAN",
                columns: new[] { "PACZKI_ID", "MAGAZYN_ZDARZENIA_ID" });

            migrationBuilder.CreateIndex(
                name: "PACZKI_STOSY_IDX1",
                table: "PACZKI_STOSY",
                column: "STOSY_ID");

            migrationBuilder.CreateIndex(
                name: "PACZKI_STOSY_IDX2",
                table: "PACZKI_STOSY",
                column: "PACZKI_ID");

            migrationBuilder.CreateIndex(
                name: "PALIWO_GESTOSC_IDX1",
                table: "PALIWO_GESTOSC",
                column: "RODZAJ");

            migrationBuilder.CreateIndex(
                name: "PLANY_DOSTAW_IDX1",
                table: "PLANY_DOSTAW",
                column: "HARMONOGRAMY_ID");

            migrationBuilder.CreateIndex(
                name: "PLANY_DOSTAW_IDX2",
                table: "PLANY_DOSTAW",
                column: "HARMONOGRAMY_POZ_ID");

            migrationBuilder.CreateIndex(
                name: "PODLICZNIKI_IDX1",
                table: "PODLICZNIKI",
                column: "LICZNIKI_ID");

            migrationBuilder.CreateIndex(
                name: "POI_MYJNIE_PROCEDURY_SFMEXT_IDX1",
                table: "POI_MYJNIE_PROCEDURY",
                column: "KOD");

            migrationBuilder.CreateIndex(
                name: "POLISY_IDX1",
                table: "POLISY",
                column: "TABOR_ID");

            migrationBuilder.CreateIndex(
                name: "POLISY_IDX2",
                table: "POLISY",
                column: "UBEZPIECZYCIEL_ID");

            migrationBuilder.CreateIndex(
                name: "POLISY_IDX3",
                table: "POLISY",
                column: "DATA_DO");

            migrationBuilder.CreateIndex(
                name: "POLISY_IDX4",
                table: "POLISY",
                column: "AKTYWNA");

            migrationBuilder.CreateIndex(
                name: "POLISY_POJAZDY_IDX1",
                table: "POLISY_POJAZDY",
                column: "POLISY_ID");

            migrationBuilder.CreateIndex(
                name: "POLISY_POJAZDY_IDX2",
                table: "POLISY_POJAZDY",
                column: "TABOR_ID");

            migrationBuilder.CreateIndex(
                name: "POLISY_SKLADKI_IDX1",
                table: "POLISY_SKLADKI",
                column: "POLISY_ID");

            migrationBuilder.CreateIndex(
                name: "POLISY_SKLADKI_IDX2",
                table: "POLISY_SKLADKI",
                column: "TERMIN");

            migrationBuilder.CreateIndex(
                name: "POLISY_SKLADKI_IDX3",
                table: "POLISY_SKLADKI",
                column: "ZAPLACONO");

            migrationBuilder.CreateIndex(
                name: "POLISY_TOWARY_IDX1",
                table: "POLISY_TOWARY",
                column: "POLISY_ID");

            migrationBuilder.CreateIndex(
                name: "PopupMenuConfig_IDX1",
                table: "PopupMenuConfig",
                columns: new[] { "WinName", "UserId" });

            migrationBuilder.CreateIndex(
                name: "POZ_FAKT_PROW_IDX1",
                table: "POZYCJE_FAKTUR_PROW",
                column: "POZYCJE_FAKTUR_ID");

            migrationBuilder.CreateIndex(
                name: "POZ_FAKT_TLUM_IDX1",
                table: "POZYCJE_FAKTUR_TLUMACZ",
                column: "POZYCJE_FAKTUR_ID");

            migrationBuilder.CreateIndex(
                name: "PREFAKTURY_POZ_IDX1",
                table: "PREFAKTURY_POZ",
                column: "PREFAKTURY_ID");

            migrationBuilder.CreateIndex(
                name: "PREFAKTURY_POZ_IDX2",
                table: "PREFAKTURY_POZ",
                column: "ZLECENIE_ID");

            migrationBuilder.CreateIndex(
                name: "PREFAKTURY_POZ_IDX3",
                table: "PREFAKTURY_POZ",
                column: "TABOR_ID");

            migrationBuilder.CreateIndex(
                name: "PREFAKTURY_POZ_IDX4",
                table: "PREFAKTURY_POZ",
                column: "KALKULACJE_ID");

            migrationBuilder.CreateIndex(
                name: "PREFAKTURY_POZ_IDX5",
                table: "PREFAKTURY_POZ",
                column: "LIST_LINIOWY_ID");

            migrationBuilder.CreateIndex(
                name: "PREFAKTURY_POZ_IDX6",
                table: "PREFAKTURY_POZ",
                column: "PROMY_ID");

            migrationBuilder.CreateIndex(
                name: "PREFAKTURY_POZ_IDX7",
                table: "PREFAKTURY_POZ",
                column: "KIEROWCA_ID");

            migrationBuilder.CreateIndex(
                name: "PREFAKTURY_POZ_IDX8",
                table: "PREFAKTURY_POZ",
                column: "ZLECENIE_M_ID");

            migrationBuilder.CreateIndex(
                name: "PREFAKTURY_POZ_IDX9",
                table: "PREFAKTURY_POZ",
                column: "ZLEC_POZ_FAKT_ID");

            migrationBuilder.CreateIndex(
                name: "PROCEDURE_CFG_IDX1",
                table: "PROCEDURE_CFG",
                column: "ACTIVITY");

            migrationBuilder.CreateIndex(
                name: "PROCEDURE_CFG_IDX2",
                table: "PROCEDURE_CFG",
                column: "ACTIVITY_GROUP");

            migrationBuilder.CreateIndex(
                name: "PROCEDURE_CFG_IDX11",
                table: "PROCEDURE_CFG_back",
                column: "ACTIVITY");

            migrationBuilder.CreateIndex(
                name: "PROCEDURE_CFG_IDX21",
                table: "PROCEDURE_CFG_back",
                column: "ACTIVITY_GROUP");

            migrationBuilder.CreateIndex(
                name: "PROCEDURYLOG_IDX1",
                table: "PROCEDURYLOG",
                column: "ID_PROC_GRP");

            migrationBuilder.CreateIndex(
                name: "PROCEDURYLOG_IDX2",
                table: "PROCEDURYLOG",
                column: "PROC_NAME");

            migrationBuilder.CreateIndex(
                name: "PROCESY_OKR_ALG_IDX2",
                table: "PROCESY_OKR_ALG",
                column: "PROCESY_OKR_ID");

            migrationBuilder.CreateIndex(
                name: "PROFILE_IDX1",
                table: "PROFILE",
                column: "PROGRAM");

            migrationBuilder.CreateIndex(
                name: "PROFILE_IDX2",
                table: "PROFILE",
                column: "BLOBVER");

            migrationBuilder.CreateIndex(
                name: "PROMY_IDX1",
                table: "PROMY",
                column: "ARMATOR_ID");

            migrationBuilder.CreateIndex(
                name: "PROMY_IDX10",
                table: "PROMY",
                column: "LOKALIZACJA");

            migrationBuilder.CreateIndex(
                name: "PROMY_IDX11",
                table: "PROMY",
                column: "LINIA_ID");

            migrationBuilder.CreateIndex(
                name: "PROMY_IDX12",
                table: "PROMY",
                column: "NIE_FAKTURUJ");

            migrationBuilder.CreateIndex(
                name: "PROMY_IDX2",
                table: "PROMY",
                column: "TABOR_ID");

            migrationBuilder.CreateIndex(
                name: "PROMY_IDX3",
                table: "PROMY",
                column: "PROMY_ALOTY_ID");

            migrationBuilder.CreateIndex(
                name: "PROMY_IDX4",
                table: "PROMY",
                column: "PROMY_ALOTY_POZ_ID");

            migrationBuilder.CreateIndex(
                name: "PROMY_IDX5",
                table: "PROMY",
                column: "ANULOWANY");

            migrationBuilder.CreateIndex(
                name: "PROMY_IDX6",
                table: "PROMY",
                column: "ODSPRZEDANE");

            migrationBuilder.CreateIndex(
                name: "PROMY_IDX7",
                table: "PROMY",
                column: "DATA");

            migrationBuilder.CreateIndex(
                name: "PROMY_IDX8",
                table: "PROMY",
                column: "NUMER_ROK");

            migrationBuilder.CreateIndex(
                name: "PROMY_IDX9",
                table: "PROMY",
                column: "NUMER_MIES");

            migrationBuilder.CreateIndex(
                name: "PROMY_ALOTY_IDX1",
                table: "PROMY_ALOTY",
                column: "ARMATOR_ID");

            migrationBuilder.CreateIndex(
                name: "PROMY_ALOTY_POZ_IDX1",
                table: "PROMY_ALOTY_POZ",
                column: "PROMY_ALOTY_ID");

            migrationBuilder.CreateIndex(
                name: "PROMY_CENNIKI_IDX1",
                table: "PROMY_CENNIKI",
                columns: new[] { "DATA_OD", "DATA_DO" });

            migrationBuilder.CreateIndex(
                name: "PROMY_CENNIKI_IDX2",
                table: "PROMY_CENNIKI",
                column: "ARMATOR_ID");

            migrationBuilder.CreateIndex(
                name: "PROMY_CENNIKI_IDX3",
                table: "PROMY_CENNIKI",
                column: "RELACJA_ID");

            migrationBuilder.CreateIndex(
                name: "PROMY_ZA_WY_IDX1A",
                table: "PROMY_ZA_WY",
                column: "PROMY_ID");

            migrationBuilder.CreateIndex(
                name: "PROMY_ZA_WY_IDX2",
                table: "PROMY_ZA_WY",
                column: "TYP");

            migrationBuilder.CreateIndex(
                name: "PROMY_ZA_WY_IDX3",
                table: "PROMY_ZA_WY",
                column: "MIEJSCE_ID");

            migrationBuilder.CreateIndex(
                name: "PROMY_ZA_WY_IDX4",
                table: "PROMY_ZA_WY",
                column: "LP");

            migrationBuilder.CreateIndex(
                name: "PROMY_ZA_WY_IDX5",
                table: "PROMY_ZA_WY",
                column: "LIST_LINIOWY_ID");

            migrationBuilder.CreateIndex(
                name: "PROT_NIEZ_IDX1",
                table: "PROT_NIEZG",
                column: "PRZESYLKI_ID");

            migrationBuilder.CreateIndex(
                name: "PROT_NIEZ_IDX2",
                table: "PROT_NIEZG",
                column: "LISTY_LINIOWE_ID");

            migrationBuilder.CreateIndex(
                name: "PROT_NIEZ_IDX3",
                table: "PROT_NIEZG",
                column: "LOKALIZACJA");

            migrationBuilder.CreateIndex(
                name: "PROT_NIEZ_IDX4",
                table: "PROT_NIEZG",
                column: "REKLAMACJE_ID");

            migrationBuilder.CreateIndex(
                name: "Province_IDX1",
                table: "Province",
                columns: new[] { "CountryCode", "ProvinceName" });

            migrationBuilder.CreateIndex(
                name: "PRZEK_FILTR_IDP_IDX1",
                table: "PRZEK_FILTR",
                column: "ID_PRZEKIEROWANIA");

            migrationBuilder.CreateIndex(
                name: "SRV_Przek_Filtr_EXTIDX1",
                table: "PRZEK_FILTR",
                column: "ID_PRZEKIEROWANIA");

            migrationBuilder.CreateIndex(
                name: "IDX_PRZEK_ID",
                table: "PRZEK_TABOR",
                column: "ID_PRZEKIEROWANIA");

            migrationBuilder.CreateIndex(
                name: "IDX_PRZEK_TABOR",
                table: "PRZEK_TABOR",
                column: "ID_TABOR");

            migrationBuilder.CreateIndex(
                name: "IDX_PRZEK_TELEFON",
                table: "PRZEK_TABOR",
                column: "TELEFON");

            migrationBuilder.CreateIndex(
                name: "PRZEK_TABOR_EXTIDX1",
                table: "PRZEK_TABOR",
                columns: new[] { "ID_PRZEKIEROWANIA", "ID_TABOR" });

            migrationBuilder.CreateIndex(
                name: "PRZEK_TABOR_EXTIDX2",
                table: "PRZEK_TABOR",
                columns: new[] { "ID_PRZEKIEROWANIA", "TELEFON" });

            migrationBuilder.CreateIndex(
                name: "SRV_Przek_Tabor_EXTIDX1",
                table: "PRZEK_TABOR",
                column: "ID_PRZEKIEROWANIA");

            migrationBuilder.CreateIndex(
                name: "IDX_PRZEK_AKTYWNE",
                table: "PRZEKIEROWANIA",
                column: "AKTYWNE");

            migrationBuilder.CreateIndex(
                name: "IDX_PRZEK_UZYTK",
                table: "PRZEKIEROWANIA",
                column: "ID_UZYTK");

            migrationBuilder.CreateIndex(
                name: "PRZEKIEROWANIA_EXTIDX1",
                table: "PRZEKIEROWANIA",
                columns: new[] { "AKTYWNE", "STATUS" });

            migrationBuilder.CreateIndex(
                name: "PRZEL_IDX1",
                table: "PRZELEWY",
                column: "TYP_PRZELEWU");

            migrationBuilder.CreateIndex(
                name: "PRZEL_IDX2",
                table: "PRZELEWY",
                column: "PRZELEWY_RACHUNKI_ID");

            migrationBuilder.CreateIndex(
                name: "PRZEL_IDX3",
                table: "PRZELEWY",
                column: "NADAWCA_ID");

            migrationBuilder.CreateIndex(
                name: "PRZEL_IDX4",
                table: "PRZELEWY",
                column: "ODBIORCA_ID");

            migrationBuilder.CreateIndex(
                name: "PRZEL_IDX5",
                table: "PRZELEWY",
                column: "GEN_SESJA_ID");

            migrationBuilder.CreateIndex(
                name: "PRZELEWY_IDX1",
                table: "PRZELEWY_DOK",
                column: "PRZELEWY_ID");

            migrationBuilder.CreateIndex(
                name: "PRZELEWY_IDX2",
                table: "PRZELEWY_DOK",
                columns: new[] { "DOKUMENT_TYP", "DOKUMENT_ID" });

            migrationBuilder.CreateIndex(
                name: "PRZELEWY_IDX3",
                table: "PRZELEWY_DOK",
                column: "SPLATA_ID");

            migrationBuilder.CreateIndex(
                name: "PRZEL_PL_POZ_IDX1",
                table: "PRZELEWY_PLIK_POZ",
                column: "PRZELEWY_PLIK_ID");

            migrationBuilder.CreateIndex(
                name: "PRZEL_PL_POZ_IDX2",
                table: "PRZELEWY_PLIK_POZ",
                column: "PRZELEWY_ID");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_IDX1",
                table: "PRZESYLKI",
                column: "LIST_LINIOWY_ID");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_IDX10",
                table: "PRZESYLKI",
                column: "CMR_ID");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_IDX11",
                table: "PRZESYLKI",
                column: "WYJAZD_ID");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_IDX12",
                table: "PRZESYLKI",
                column: "STATUS_ZMIANY");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_IDX13",
                table: "PRZESYLKI",
                column: "LOKALIZACJA");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_IDX14",
                table: "PRZESYLKI",
                column: "LOKALIZACJA_NADZ");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_IDX15",
                table: "PRZESYLKI",
                column: "TECZKA_ID");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_IDX16",
                table: "PRZESYLKI",
                columns: new[] { "LOKALIZACJA", "NR_PRZESYLKI_EX" });

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_IDX17",
                table: "PRZESYLKI",
                columns: new[] { "LOKALIZACJA", "NR_BORDERO" });

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_IDX19",
                table: "PRZESYLKI",
                column: "PRZESYLKA_NADRZ_ID");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_IDX2",
                table: "PRZESYLKI",
                column: "LIST_LINIOWY_DYST_ID");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_IDX20",
                table: "PRZESYLKI",
                column: "LOKALIZACJA_POSR");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_IDX21",
                table: "PRZESYLKI",
                column: "NR_PRZESYLKI");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_IDX22",
                table: "PRZESYLKI",
                column: "NR_BORDERO");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_IDX23",
                table: "PRZESYLKI",
                columns: new[] { "ID_PRZESYLKI", "WAGA_RZECZYWISTA", "KLIENT_ODB_KRAJ", "MIEJSCE_WY_KRAJ", "MIEJSCE_WY" });

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_IDX24",
                table: "PRZESYLKI",
                column: "PARTNER_ID");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_IDX25",
                table: "PRZESYLKI",
                column: "KLIENT_ID");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_IDX26",
                table: "PRZESYLKI",
                column: "MA_PODPRZESYLKI");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_IDX27",
                table: "PRZESYLKI",
                column: "MA_ZWROT");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_IDX28",
                table: "PRZESYLKI",
                columns: new[] { "PONOWNE_PLANOWANIE", "PONOWNE_PLANOWANIE_LOK" });

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_IDX29",
                table: "PRZESYLKI",
                column: "CMR");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_IDX3",
                table: "PRZESYLKI",
                column: "DATA_ZLECENIA");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_IDX30",
                table: "PRZESYLKI",
                column: "ANOMALIA");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_IDX31",
                table: "PRZESYLKI",
                column: "ZWROT_DO_ID");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_IDX4",
                table: "PRZESYLKI",
                column: "NR_PRZESYLKI_ROK");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_IDX5",
                table: "PRZESYLKI",
                column: "MAGAZYN_P");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_IDX6",
                table: "PRZESYLKI",
                column: "MAGAZYN_R");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_IDX7",
                table: "PRZESYLKI",
                column: "TECHNICZNE");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_IDX8",
                table: "PRZESYLKI",
                column: "NR_PRZESYLKI_KOLEJNY");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_IDX9",
                table: "PRZESYLKI",
                column: "NR_PRZESYLKI_EX");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_ADR_IDX1",
                table: "PRZESYLKI_ADR",
                column: "PRZESYLKI_ID");

            migrationBuilder.CreateIndex(
                name: "PRZES_CHKLIST_IDX1",
                table: "PRZESYLKI_CHECKLIST",
                column: "PRZESYLKI_ID");

            migrationBuilder.CreateIndex(
                name: "PRZES_CHKLIST_IDX2",
                table: "PRZESYLKI_CHECKLIST",
                column: "CHECKLISTDEFID");

            migrationBuilder.CreateIndex(
                name: "PRZES_CHKLIST_IDX3",
                table: "PRZESYLKI_CHECKLIST",
                column: "COMPLETED");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_DOKUM_IDX1",
                table: "PRZESYLKI_DOKUMENTY",
                column: "PRZESYLKI_ID");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_DOKUM_IDX2",
                table: "PRZESYLKI_DOKUMENTY",
                column: "KONSOLIDACJA_ID");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_DOKUM_IDX3",
                table: "PRZESYLKI_DOKUMENTY",
                column: "PRZESYLKI_ZWR_ID");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_DOKUM_IDX4",
                table: "PRZESYLKI_DOKUMENTY",
                column: "ROD");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_DOKUM_IDX6",
                table: "PRZESYLKI_DOKUMENTY",
                column: "KWIT_PAL_ID");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_DOKUM_IDX7",
                table: "PRZESYLKI_DOKUMENTY",
                column: "STICKER");

            migrationBuilder.CreateIndex(
                name: "PRZES_DOK_UWAGI_IDX1",
                table: "PRZESYLKI_DOKUMENTY_UWAGI",
                column: "PRZESYLKI_DOKUMENTY_ID");

            migrationBuilder.CreateIndex(
                name: "PRZES_DOK_UWAGI_IDX2",
                table: "PRZESYLKI_DOKUMENTY_UWAGI",
                column: "DOKUMENTY_UWAGI_ID");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_EXT_IDX1",
                table: "PRZESYLKI_EXT",
                column: "ROZL_W_SIECI");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_EXT_IDX10",
                table: "PRZESYLKI_EXT",
                column: "NIE_FAKTURUJ");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_EXT_IDX11",
                table: "PRZESYLKI_EXT",
                column: "BRAK_BB");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_EXT_IDX12",
                table: "PRZESYLKI_EXT",
                column: "PRZESYLKI_AIR_ID");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_EXT_IDX2",
                table: "PRZESYLKI_EXT",
                column: "ODEBRANO_PALETY");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_EXT_IDX3",
                table: "PRZESYLKI_EXT",
                column: "ROZL_Z_WLASC");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_EXT_IDX4A",
                table: "PRZESYLKI_EXT",
                column: "ANULOWANA");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_EXT_IDX5",
                table: "PRZESYLKI_EXT",
                column: "KONSOLIDACJA_ID");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_EXT_IDX6",
                table: "PRZESYLKI_EXT",
                column: "JEST_LP");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_EXT_IDX7",
                table: "PRZESYLKI_EXT",
                column: "PRZES_ZLEC_AKC");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_EXT_IDX8",
                table: "PRZESYLKI_EXT",
                column: "IS_EXPORTED");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_EXT_IDX9",
                table: "PRZESYLKI_EXT",
                column: "BRAK_BB");

            migrationBuilder.CreateIndex(
                name: "PRZES_INSTR_DOD_IDX1",
                table: "PRZESYLKI_INSTR_DOD",
                column: "PRZESYLKI_ID");

            migrationBuilder.CreateIndex(
                name: "PRZES_INSTR_DOD_IDX2",
                table: "PRZESYLKI_INSTR_DOD",
                column: "INSTRUKCJE_DOD_KONFIG_ID");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_LOKA_IDX10",
                table: "PRZESYLKI_LOKALIZACJE",
                column: "LOKALIZACJA");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_LOKA_IDX11",
                table: "PRZESYLKI_LOKALIZACJE",
                column: "LOKALIZACJA_NAST");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_LOKAL_IDX1",
                table: "PRZESYLKI_LOKALIZACJE",
                column: "PRZESYLKI_ID");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_LOKAL_IDX2",
                table: "PRZESYLKI_LOKALIZACJE",
                column: "LISTY_LINIOWE_ID");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_LOKAL_IDX3",
                table: "PRZESYLKI_LOKALIZACJE",
                column: "OST_STATUS");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_LOKAL_IDX4",
                table: "PRZESYLKI_LOKALIZACJE",
                column: "SLOT_1");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_LOKAL_IDX5",
                table: "PRZESYLKI_LOKALIZACJE",
                column: "SLOT_2");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_LOKAL_IDX6",
                table: "PRZESYLKI_LOKALIZACJE",
                column: "SLOT_3");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_LOKAL_IDX7",
                table: "PRZESYLKI_LOKALIZACJE",
                column: "SLOT_4");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_LOKAL_IDX8",
                table: "PRZESYLKI_LOKALIZACJE",
                column: "SLOT_5");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_LOKAL_IDX9",
                table: "PRZESYLKI_LOKALIZACJE",
                columns: new[] { "PRZESYLKI_ID", "LOKALIZACJA", "LP" });

            migrationBuilder.CreateIndex(
                name: "PRZES_MAG_STAT_IDX1",
                table: "PRZESYLKI_MAG_STAT",
                column: "PRZESYLKI_ID");

            migrationBuilder.CreateIndex(
                name: "PRZES_MAG_STAT_IDX2",
                table: "PRZESYLKI_MAG_STAT",
                column: "LOKALIZACJA");

            migrationBuilder.CreateIndex(
                name: "PRZES_MAG_STAT_IDX3",
                table: "PRZESYLKI_MAG_STAT",
                column: "DNI");

            migrationBuilder.CreateIndex(
                name: "PRZES_MAG_STAT_IDX4",
                table: "PRZESYLKI_MAG_STAT",
                column: "DOK_WEJ_ID");

            migrationBuilder.CreateIndex(
                name: "PRZES_MAG_STAT_IDX5",
                table: "PRZESYLKI_MAG_STAT",
                column: "DOK_WYJ_ID");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_NOSNI_IDX1",
                table: "PRZESYLKI_NOSNIKI",
                columns: new[] { "PRZESYLKI_ID", "ETAP" });

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_NOSNI_IDX2",
                table: "PRZESYLKI_NOSNIKI",
                column: "OPAKOWANIA_ID");

            migrationBuilder.CreateIndex(
                name: "PRZES_NOS_UWAGI_IDX1",
                table: "PRZESYLKI_NOSNIKI_UWAGI",
                column: "PRZESYLKI_ID");

            migrationBuilder.CreateIndex(
                name: "PRZES_NOS_UWAGI_IDX2",
                table: "PRZESYLKI_NOSNIKI_UWAGI",
                column: "OPAKOWANIA_ID");

            migrationBuilder.CreateIndex(
                name: "PRZES_NOS_UWAGI_IDX3",
                table: "PRZESYLKI_NOSNIKI_UWAGI",
                column: "NOSNIKI_UWAGI_ID");

            migrationBuilder.CreateIndex(
                name: "PRZES_NOS_UWAGI_IDX4",
                table: "PRZESYLKI_NOSNIKI_UWAGI",
                column: "KWIT_PAL_ID");

            migrationBuilder.CreateIndex(
                name: "PRZES_OTH_POZ_IDX1",
                table: "PRZESYLKI_OTH_POZ",
                column: "PRZESYLKI_ID");

            migrationBuilder.CreateIndex(
                name: "PRZES_OTH_POZ_IDX2",
                table: "PRZESYLKI_OTH_POZ",
                column: "OTH_POZ_ID");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_POI_HASH_IDX1",
                table: "PRZESYLKI_POI_HASH",
                column: "ID_PRZESYLKI");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_POWIA_IDX1",
                table: "PRZESYLKI_POWIADOMIENIA",
                column: "PRZESYLKI_ID");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_POWIA_SFM1",
                table: "PRZESYLKI_POWIADOMIENIA",
                columns: new[] { "CO_WYZWALA", "DATA", "ZROBIONE_N" });

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_POWIA_SFM2",
                table: "PRZESYLKI_POWIADOMIENIA",
                columns: new[] { "CO_WYZWALA", "DATA", "ZROBIONE_D" });

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_POWIA_SFM3",
                table: "PRZESYLKI_POWIADOMIENIA",
                columns: new[] { "CO_WYZWALA", "DATA", "ZROBIONE_K" });

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_POWIA_SFM4",
                table: "PRZESYLKI_POWIADOMIENIA",
                column: "CO_WYZWALA");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_POWIA_SFM5",
                table: "PRZESYLKI_POWIADOMIENIA",
                columns: new[] { "DATA", "ZROBIONE_N" });

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_POWIA_SFM6",
                table: "PRZESYLKI_POWIADOMIENIA",
                columns: new[] { "DATA", "ZROBIONE_D" });

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_POWIA_SFM7",
                table: "PRZESYLKI_POWIADOMIENIA",
                columns: new[] { "DATA", "ZROBIONE_K" });

            migrationBuilder.CreateIndex(
                name: "PRZES_PROT_NIEZ_IDX1",
                table: "PRZESYLKI_PROT_NIEZG",
                column: "PRZESYLKI_ID");

            migrationBuilder.CreateIndex(
                name: "PRZES_PROT_NIEZ_IDX2",
                table: "PRZESYLKI_PROT_NIEZG",
                column: "LISTY_LINIOWE_ID");

            migrationBuilder.CreateIndex(
                name: "PRZES_PROT_NIEZ_IDX3",
                table: "PRZESYLKI_PROT_NIEZG",
                column: "LOKALIZACJA");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_PRZEL_IDX1",
                table: "PRZESYLKI_PRZELICZNIKI",
                column: "PRZESYLKI_ID");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_WYM_T_IDX1",
                table: "PRZESYLKI_WYM_TABORU",
                column: "PRZESYLKI_ID");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_WYM_T_IDX2",
                table: "PRZESYLKI_WYM_TABORU",
                column: "TYP");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_ZA_WY_IDX1",
                table: "PRZESYLKI_ZA_WY",
                column: "PRZESYLKI_ID");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_ZA_WY_IDX2",
                table: "PRZESYLKI_ZA_WY",
                column: "TYP");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_ZA_WY_IDX3",
                table: "PRZESYLKI_ZA_WY",
                column: "MIEJSCE_ID");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_ZA_WY_IDX4",
                table: "PRZESYLKI_ZA_WY",
                column: "LP");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_ZA_WY_IDX5",
                table: "PRZESYLKI_ZA_WY",
                column: "LIST_LINIOWY_ID");

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_ZA_WY_IDX6",
                table: "PRZESYLKI_ZA_WY",
                columns: new[] { "LIST_LINIOWY_ID", "PRZESYLKI_ID", "TYP" });

            migrationBuilder.CreateIndex(
                name: "PRZESYLKI_ZA_WY_IDX7",
                table: "PRZESYLKI_ZA_WY",
                columns: new[] { "PRZESYLKI_ID", "TYP_ODCINKA", "TYP" });

            migrationBuilder.CreateIndex(
                name: "PW_KARTA_IDX0",
                table: "PW_KARTA",
                column: "STATUS");

            migrationBuilder.CreateIndex(
                name: "PW_KARTA_IDX1",
                table: "PW_KARTA",
                column: "EXT_ID");

            migrationBuilder.CreateIndex(
                name: "PW_KARTA_IDX2",
                table: "PW_KARTA",
                column: "EXT_DEVICE");

            migrationBuilder.CreateIndex(
                name: "PW_KARTA_IDX3",
                table: "PW_KARTA",
                column: "ID_SFM_SYSTEM");

            migrationBuilder.CreateIndex(
                name: "PW_KARTA_IDX4",
                table: "PW_KARTA",
                column: "ID_WYJAZDY");

            migrationBuilder.CreateIndex(
                name: "PW_KARTA_IDX5",
                table: "PW_KARTA",
                column: "ID_SFM_TERM");

            migrationBuilder.CreateIndex(
                name: "PW_KARTA_IDX6",
                table: "PW_KARTA",
                column: "ID_TABOR");

            migrationBuilder.CreateIndex(
                name: "PW_KARTA_IDX7",
                table: "PW_KARTA",
                column: "ID_KIEROWCY");

            migrationBuilder.CreateIndex(
                name: "PW_KARTA_P_IDX0",
                table: "PW_KARTA_POZ",
                column: "STATUS");

            migrationBuilder.CreateIndex(
                name: "PW_KARTA_P_IDX1",
                table: "PW_KARTA_POZ",
                column: "ID_PW_KARTA");

            migrationBuilder.CreateIndex(
                name: "PW_KARTA_P_IDX2",
                table: "PW_KARTA_POZ",
                column: "EXT_ID");

            migrationBuilder.CreateIndex(
                name: "PW_KARTA_P_IDX3",
                table: "PW_KARTA_POZ",
                column: "ID_WYJAZDY_ZDARZENIA");

            migrationBuilder.CreateIndex(
                name: "PW_KARTA_PA_IDX0",
                table: "PW_KARTA_POZ_ATR",
                column: "STATUS");

            migrationBuilder.CreateIndex(
                name: "PW_KARTA_PA_IDX1",
                table: "PW_KARTA_POZ_ATR",
                column: "ID_PW_KARTA_POZ");

            migrationBuilder.CreateIndex(
                name: "RAPORTY_KASOWE_IDX1",
                table: "RAPORTY_KASOWE",
                column: "KASA_ID");

            migrationBuilder.CreateIndex(
                name: "RAPORTY_KASOWE_IDX2",
                table: "RAPORTY_KASOWE",
                column: "EKSPORT_FK_ID");

            migrationBuilder.CreateIndex(
                name: "RAP_KAS_OPER_IDX1",
                table: "RAPORTY_KASOWE_OPER",
                column: "RAPORT_KASOWY_ID");

            migrationBuilder.CreateIndex(
                name: "RAP_KAS_OPER_IDX2",
                table: "RAPORTY_KASOWE_OPER",
                column: "KLIENT_ID");

            migrationBuilder.CreateIndex(
                name: "RAP_KAS_OPER_IDX3",
                table: "RAPORTY_KASOWE_OPER",
                column: "FAKTURA_ID");

            migrationBuilder.CreateIndex(
                name: "RAP_KAS_OP_SPEC_IDX1",
                table: "RAPORTY_KASOWE_OPER_SPEC",
                column: "RAPORTY_KASOWE_OPER_ID");

            migrationBuilder.CreateIndex(
                name: "RAP_KAS_SPEC_IDX1",
                table: "RAPORTY_KASOWE_SPEC",
                column: "RAPORT_KASOWY_ID");

            migrationBuilder.CreateIndex(
                name: "RCP_IDX1",
                table: "RCP",
                column: "ID_KIEROWCY");

            migrationBuilder.CreateIndex(
                name: "RCP_IDX2",
                table: "RCP",
                column: "DATA");

            migrationBuilder.CreateIndex(
                name: "RCP_IDX3",
                table: "RCP",
                column: "ID_RCP_NAG");

            migrationBuilder.CreateIndex(
                name: "RCP_ANALIZA_IDX1",
                table: "RCP_ANALIZA",
                column: "ID_RCP_NAG");

            migrationBuilder.CreateIndex(
                name: "RCP_DODATKI_IDX1",
                table: "RCP_DODATKI",
                column: "ID_RCP_NAG");

            migrationBuilder.CreateIndex(
                name: "RCP_NAG_IDX1",
                table: "RCP_NAG",
                column: "ID_OKRES_ROZLICZENIOWY");

            migrationBuilder.CreateIndex(
                name: "REJ_KOSZT_OG_PO_IDX1",
                table: "REJ_KOSZT_OG_POZ",
                column: "REJ_KOSZT_OG_ID");

            migrationBuilder.CreateIndex(
                name: "REJ_KOSZT_OG_PO_IDX2",
                table: "REJ_KOSZT_OG_POZ",
                column: "FAKTURA_ID");

            migrationBuilder.CreateIndex(
                name: "REKL_SCHE_POZ_IDX1",
                table: "REKL_SCHEMAT_POZ",
                column: "REKL_SCHEMAT_ID");

            migrationBuilder.CreateIndex(
                name: "REKLAMACJE_IDX1",
                table: "REKLAMACJE",
                columns: new[] { "OBIEKT_TYP", "OBIEKT_ID" });

            migrationBuilder.CreateIndex(
                name: "REKLAMACJE_IDX2",
                table: "REKLAMACJE",
                column: "PRACOWNIK_ID");

            migrationBuilder.CreateIndex(
                name: "REKLAMACJE_IDX3",
                table: "REKLAMACJE",
                column: "LOKALIZACJA");

            migrationBuilder.CreateIndex(
                name: "REKLAMACJE_IDX4",
                table: "REKLAMACJE",
                column: "KLIENT_ID");

            migrationBuilder.CreateIndex(
                name: "REKLAMACJE_IDX5",
                table: "REKLAMACJE",
                column: "PRZEWOZNIK_ID");

            migrationBuilder.CreateIndex(
                name: "REKL_FV_POZ_IDX1",
                table: "REKLAMACJE_FAKTURY_POZ",
                column: "REKLAMACJE_ID");

            migrationBuilder.CreateIndex(
                name: "REKL_FV_POZ_IDX2",
                table: "REKLAMACJE_FAKTURY_POZ",
                columns: new[] { "FAKTURY_ID", "FAKTURY_POZYCJE_ID" });

            migrationBuilder.CreateIndex(
                name: "REKL_USZK_IDX1",
                table: "REKLAMACJE_USZK",
                column: "REKLAMACJE_ID");

            migrationBuilder.CreateIndex(
                name: "REKL_USZK_IDX2",
                table: "REKLAMACJE_USZK",
                column: "REKL_RODZ_USZK_ID");

            migrationBuilder.CreateIndex(
                name: "REKL_USZK_IDX3",
                table: "REKLAMACJE_USZK",
                column: "WAZNOSC");

            migrationBuilder.CreateIndex(
                name: "REKL_ZAD_IDX1",
                table: "REKLAMACJE_ZAD",
                column: "REKLAMACJE_ID");

            migrationBuilder.CreateIndex(
                name: "REKL_ZAD_IDX2",
                table: "REKLAMACJE_ZAD",
                column: "REKL_SCHEMAT_ID");

            migrationBuilder.CreateIndex(
                name: "REKL_ZAD_IDX3",
                table: "REKLAMACJE_ZAD",
                column: "REKL_SCHEMAT_POZ_ID");

            migrationBuilder.CreateIndex(
                name: "Remarks_idx1",
                table: "Remarks",
                columns: new[] { "ObjId", "RecId" });

            migrationBuilder.CreateIndex(
                name: "REPORTLABEL_IDX1",
                schema: "cr",
                table: "ReportLabel",
                columns: new[] { "ReportSlot", "ReportInfo", "LabelName" },
                unique: true,
                filter: "[ReportSlot] IS NOT NULL AND [ReportInfo] IS NOT NULL AND [LabelName] IS NOT NULL");

            migrationBuilder.CreateIndex(
                name: "REPORTLANGUAGE_IDX1",
                schema: "cr",
                table: "ReportLanguage",
                columns: new[] { "PrintOut", "PrintOutInfo", "Language", "Reference" },
                unique: true,
                filter: "[PrintOut] IS NOT NULL AND [PrintOutInfo] IS NOT NULL AND [Language] IS NOT NULL AND [Reference] IS NOT NULL");

            migrationBuilder.CreateIndex(
                name: "ReportSlot_IDX1",
                schema: "cr",
                table: "ReportSlot",
                column: "ReportSlot",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "ReverseGeocoding_SFMEXT_IDX2",
                table: "REVERSEGEOCODING",
                columns: new[] { "LON", "LAT" });

            migrationBuilder.CreateIndex(
                name: "REVERSEGEOCODING_user1",
                table: "REVERSEGEOCODING",
                columns: new[] { "LON", "LAT", "COUNTRY" });

            migrationBuilder.CreateIndex(
                name: "RGC_IDX1",
                table: "REVERSEGEOCODING",
                column: "LON");

            migrationBuilder.CreateIndex(
                name: "RGC_IDX2",
                table: "REVERSEGEOCODING",
                column: "LAT");

            migrationBuilder.CreateIndex(
                name: "RGC_IDX3",
                table: "REVERSEGEOCODING",
                column: "LON_ORG");

            migrationBuilder.CreateIndex(
                name: "RGC_IDX4",
                table: "REVERSEGEOCODING",
                column: "LAT_ORG");

            migrationBuilder.CreateIndex(
                name: "REZERWY_IDX1",
                table: "REZERWY",
                column: "ROZWIAZANIE_REZERWY_ID");

            migrationBuilder.CreateIndex(
                name: "RHEN_R_T_IDX1",
                table: "RHENUS_ROZL_TRAS",
                column: "PRZEWOZNIK_ID");

            migrationBuilder.CreateIndex(
                name: "RHEN_R_T_IDX2",
                table: "RHENUS_ROZL_TRAS",
                column: "FAKTURA_ID");

            migrationBuilder.CreateIndex(
                name: "RHEN_R_T_POZ_IDX1",
                table: "RHENUS_ROZL_TRAS_POZ",
                column: "RHENUS_ROZL_TRAS_ID");

            migrationBuilder.CreateIndex(
                name: "RHEN_R_T_POZ_IDX2",
                table: "RHENUS_ROZL_TRAS_POZ",
                column: "LISTY_LINIOWE_ID");

            migrationBuilder.CreateIndex(
                name: "RHEN_R_T_POZ_IDX3",
                table: "RHENUS_ROZL_TRAS_POZ",
                column: "ROZLICZONA");

            migrationBuilder.CreateIndex(
                name: "RHEN_R_T_POZ_IDX4",
                table: "RHENUS_ROZL_TRAS_POZ",
                column: "FAKTURA_ID");

            migrationBuilder.CreateIndex(
                name: "RHEN_R_T_POZ_IDX5",
                table: "RHENUS_ROZL_TRAS_POZ",
                column: "ZLECENIA_ID");

            migrationBuilder.CreateIndex(
                name: "IX_RightsProfileItemHist_RightsProfileHistId",
                table: "RightsProfileItemHist",
                column: "RightsProfileHistId");

            migrationBuilder.CreateIndex(
                name: "RODZ_KOSZTOW_IDX1",
                table: "RODZ_KOSZTOW",
                column: "GRUPA");

            migrationBuilder.CreateIndex(
                name: "rodz_zdarz_user1",
                table: "RODZ_ZDARZEN",
                column: "KOD");

            migrationBuilder.CreateIndex(
                name: "RODZ_ZDARZEN_EXTIDX1",
                table: "RODZ_ZDARZEN",
                column: "KOD");

            migrationBuilder.CreateIndex(
                name: "RODZ_ZDARZEN_IDX1",
                table: "RODZ_ZDARZEN",
                column: "KOD");

            migrationBuilder.CreateIndex(
                name: "ROUTE_IHUB_POZ_IDX1",
                table: "ROUTE_INTERHUB_POZ",
                column: "ROUTE_INTERHUB_ID");

            migrationBuilder.CreateIndex(
                name: "ROUTE_TIMETAB_FIN_IDX1",
                table: "ROUTE_TIMETAB_FIN",
                column: "ROUTE_TIMETAB_ID");

            migrationBuilder.CreateIndex(
                name: "ROUTE_TIMETAB_IDX1",
                table: "ROUTE_TIMETAB_POZ",
                column: "ROUTE_TIMETAB_ID");

            migrationBuilder.CreateIndex(
                name: "ROZL_KIER_POZ_IDX1",
                table: "ROZL_KIER_POZ",
                column: "ROZL_KIER_ID");

            migrationBuilder.CreateIndex(
                name: "RKPD_IDX1",
                table: "ROZL_KIER_POZ_DOD",
                column: "ROZL_KIER_POZ_ID");

            migrationBuilder.CreateIndex(
                name: "RKPO_IDX1",
                table: "ROZL_KIER_POZ_ODL",
                column: "ROZL_KIER_POZ_ID");

            migrationBuilder.CreateIndex(
                name: "RKPZAL_IDX1",
                table: "ROZL_KIER_POZ_ZAL",
                column: "ROZL_KIER_POZ_ID");

            migrationBuilder.CreateIndex(
                name: "RKPZ_IDX1",
                table: "ROZL_KIER_POZ_ZLEC",
                column: "ZLECENIA_ID");

            migrationBuilder.CreateIndex(
                name: "RKPZ_IDX2",
                table: "ROZL_KIER_POZ_ZLEC",
                column: "WYJAZDY_ID");

            migrationBuilder.CreateIndex(
                name: "RKPZ_IDX3",
                table: "ROZL_KIER_POZ_ZLEC",
                column: "TYP");

            migrationBuilder.CreateIndex(
                name: "RKPZ_IDX4",
                table: "ROZL_KIER_POZ_ZLEC",
                column: "FAKTURY_ID");

            migrationBuilder.CreateIndex(
                name: "RKPZ_IDX5",
                table: "ROZL_KIER_POZ_ZLEC",
                column: "ROZL_KIER_POZ_ID");

            migrationBuilder.CreateIndex(
                name: "ROZL_M_OKRESOWE_IDX1",
                table: "ROZL_M_OKRESOWE_POZ",
                column: "ROZL_M_OKRESOWE_ID");

            migrationBuilder.CreateIndex(
                name: "ROZL_M_OKRESOWE_IDX2",
                table: "ROZL_M_OKRESOWE_POZ",
                column: "FAKTURY_ID");

            migrationBuilder.CreateIndex(
                name: "ROZL_WEWN_IDX1",
                table: "ROZL_WEWN",
                column: "ROZL_WEWN_SIECI_POZ_ID");

            migrationBuilder.CreateIndex(
                name: "ROZL_WE_S_POZ_IDX1",
                table: "ROZL_WEWN_SIECI_POZ",
                column: "ROZL_WEWN_SIECI_ID");

            migrationBuilder.CreateIndex(
                name: "ROZL_WE_S_STAT_IDX1",
                table: "ROZL_WEWN_SIECI_STAT",
                column: "ROZL_WEWN_SIECI_ID");

            migrationBuilder.CreateIndex(
                name: "SFM_ACTIVITY_IDX0",
                table: "SFM_ACTIVITY",
                column: "LID");

            migrationBuilder.CreateIndex(
                name: "SFM_ACTIVITY_IDX1",
                table: "SFM_ACTIVITY",
                column: "DT_START");

            migrationBuilder.CreateIndex(
                name: "SFM_ACTIVITY_IDX2",
                table: "SFM_ACTIVITY",
                column: "ACTIVITY");

            migrationBuilder.CreateIndex(
                name: "SFM_ACTIVITY_IDX3",
                table: "SFM_ACTIVITY",
                column: "ACTIVITY_ID");

            migrationBuilder.CreateIndex(
                name: "SFM_ACTIVITY_IDX4",
                table: "SFM_ACTIVITY",
                column: "ID_TABOR");

            migrationBuilder.CreateIndex(
                name: "SFM_ACTIVITY_IDX5",
                table: "SFM_ACTIVITY",
                column: "ID_SFM_POS");

            migrationBuilder.CreateIndex(
                name: "SFM_ACTIVITY_IDX6",
                table: "SFM_ACTIVITY",
                column: "ID_SFM_SYSTEM");

            migrationBuilder.CreateIndex(
                name: "SFM_ACTIVITY_IDX7",
                table: "SFM_ACTIVITY",
                column: "ID_SFM_TERM");

            migrationBuilder.CreateIndex(
                name: "SFM_ACTIVITY_IDX8",
                table: "SFM_ACTIVITY",
                column: "TYP_TERM");

            migrationBuilder.CreateIndex(
                name: "SFM_ACT_DRV_IDX0",
                table: "SFM_ACTIVITY_DRV",
                column: "ID_SFM_ACTIVITY");

            migrationBuilder.CreateIndex(
                name: "SFM_ACT_DRV_IDX1",
                table: "SFM_ACTIVITY_DRV",
                column: "ID_KIEROWCY");

            migrationBuilder.CreateIndex(
                name: "SFM_ACT_DRV_IDX2",
                table: "SFM_ACTIVITY_DRV",
                column: "DT_START");

            migrationBuilder.CreateIndex(
                name: "SFM_ACT_DRV_IDX3",
                table: "SFM_ACTIVITY_DRV",
                column: "DT_STOP");

            migrationBuilder.CreateIndex(
                name: "SFM_ALERT_IDX1",
                table: "SFM_ALERT",
                columns: new[] { "DT_EVENT", "ALARM_TYPE", "ID_SFM_TERM" });

            migrationBuilder.CreateIndex(
                name: "SFM_ALERT_IDX2",
                table: "SFM_ALERT",
                column: "ID_TABOR");

            migrationBuilder.CreateIndex(
                name: "SFM_ALERT_IDX3",
                table: "SFM_ALERT",
                column: "ID_NACZEPY");

            migrationBuilder.CreateIndex(
                name: "SFM_ALERT_IDX4",
                table: "SFM_ALERT",
                column: "ID_KIEROWCY");

            migrationBuilder.CreateIndex(
                name: "SFM_ALERT_IDX5",
                table: "SFM_ALERT",
                column: "ID_SFM_TERM");

            migrationBuilder.CreateIndex(
                name: "SFM_ALERT_IDX6",
                table: "SFM_ALERT",
                column: "DT_EVENT");

            migrationBuilder.CreateIndex(
                name: "SFM_COSTS_IDX1",
                table: "SFM_COSTS",
                column: "ID_SFM_SYSTEM");

            migrationBuilder.CreateIndex(
                name: "SFM_COSTS_IDX2",
                table: "SFM_COSTS",
                column: "ID_SFM_TERM");

            migrationBuilder.CreateIndex(
                name: "SFM_COSTS_IDX3",
                table: "SFM_COSTS",
                column: "REC_ID");

            migrationBuilder.CreateIndex(
                name: "SFM_COSTS_IDX4",
                table: "SFM_COSTS",
                column: "ID_TABOR");

            migrationBuilder.CreateIndex(
                name: "SFM_COSTS_IDX5",
                table: "SFM_COSTS",
                column: "STAN");

            migrationBuilder.CreateIndex(
                name: "SFM_COSTS_IDX6",
                table: "SFM_COSTS",
                column: "FAKTURA_ID");

            migrationBuilder.CreateIndex(
                name: "SFM_COSTS_IDX7",
                table: "SFM_COSTS",
                column: "DT_EVENT");

            migrationBuilder.CreateIndex(
                name: "SFM_COSTS_IDX8",
                table: "SFM_COSTS",
                column: "ID_SFM_POS");

            migrationBuilder.CreateIndex(
                name: "IX_SFM_DRV_SESSION_ID_SFM_TERM_LOGINMODE_DT_START_DT_STOP",
                table: "SFM_DRV_SESSION",
                columns: new[] { "ID_SFM_TERM", "LOGINMODE", "DT_START", "DT_STOP" });

            migrationBuilder.CreateIndex(
                name: "SFM_DRV_SESSION_IDX0",
                table: "SFM_DRV_SESSION",
                column: "DRIVERID");

            migrationBuilder.CreateIndex(
                name: "SFM_DRV_SESSION_IDX1",
                table: "SFM_DRV_SESSION",
                column: "ID_KIEROWCY");

            migrationBuilder.CreateIndex(
                name: "SFM_DRV_SESSION_IDX2",
                table: "SFM_DRV_SESSION",
                column: "ID_TABOR");

            migrationBuilder.CreateIndex(
                name: "SFM_DRV_SESSION_IDX3",
                table: "SFM_DRV_SESSION",
                column: "ID_SFM_TERM");

            migrationBuilder.CreateIndex(
                name: "SFM_DRV_SESSION_IDX4",
                table: "SFM_DRV_SESSION",
                column: "DT_LOGIN");

            migrationBuilder.CreateIndex(
                name: "SFM_DRV_SESSION_IDX5",
                table: "SFM_DRV_SESSION",
                column: "DT_START");

            migrationBuilder.CreateIndex(
                name: "SFM_DRV_SESSION_IDX6",
                table: "SFM_DRV_SESSION",
                column: "DT_STOP");

            migrationBuilder.CreateIndex(
                name: "SRV_SFM_DRV_SESSION_EXTIDX1",
                table: "SFM_DRV_SESSION",
                columns: new[] { "ID_SFM_TERM", "DT_START", "DT_STOP" });

            migrationBuilder.CreateIndex(
                name: "SFM_ETA_IDX0",
                table: "SFM_ETA",
                columns: new[] { "DT_EVENT", "DT_ETA", "ID_REC", "ID_OBJ" });

            migrationBuilder.CreateIndex(
                name: "SRV_SFM_ETA_EXTIDX1",
                table: "SFM_ETA",
                columns: new[] { "ID_TABOR", "ID_OBJ", "ID_REC" },
                filter: "([ID_SFM_Msg]>(0))");

            migrationBuilder.CreateIndex(
                name: "SRV_SFM_ETA_EXTIDX2",
                table: "SFM_ETA",
                columns: new[] { "DT_EVENT", "DT_ETA", "ID_OBJ", "ID_REC" });

            migrationBuilder.CreateIndex(
                name: "SRV_SFM_ETA_EXTIDX3",
                table: "SFM_ETA",
                columns: new[] { "ID_SFM_MSG", "TYP_TERM" },
                filter: "([ID_SFM_MSG]>(0))");

            migrationBuilder.CreateIndex(
                name: "SFM_EVENT_PARAM_IDX1",
                table: "SFM_EVENT_PARAM",
                column: "ID_TABOR");

            migrationBuilder.CreateIndex(
                name: "SFM_EVENT_PARAM_IDX2",
                table: "SFM_EVENT_PARAM",
                column: "ID_SFM_TERM");

            migrationBuilder.CreateIndex(
                name: "SFM_EVENT_PARAM_IDX3",
                table: "SFM_EVENT_PARAM",
                column: "DT_REJ");

            migrationBuilder.CreateIndex(
                name: "SFM_EVENT_PARAM_IDX4",
                table: "SFM_EVENT_PARAM",
                columns: new[] { "KOD", "TYP" });

            migrationBuilder.CreateIndex(
                name: "SFM_EVENTS_LOG_IDX1",
                table: "SFM_EVENTS_LOG",
                column: "ID_TABOR");

            migrationBuilder.CreateIndex(
                name: "SFM_EVENTS_LOG_IDX2",
                table: "SFM_EVENTS_LOG",
                column: "ID_ZLECENIA");

            migrationBuilder.CreateIndex(
                name: "SFM_EVENTS_LOG_IDX3",
                table: "SFM_EVENTS_LOG",
                column: "ID_WYJAZDY");

            migrationBuilder.CreateIndex(
                name: "SFM_EVENTS_LOG_IDX4",
                table: "SFM_EVENTS_LOG",
                column: "ID_WYJAZDY_ZDARZENIA");

            migrationBuilder.CreateIndex(
                name: "SFM_EVENTS_LOG_IDX5",
                table: "SFM_EVENTS_LOG",
                column: "MIEJSCE_ID");

            migrationBuilder.CreateIndex(
                name: "SFM_EVENTS_LOG_IDX6",
                table: "SFM_EVENTS_LOG",
                column: "CZAS_P");

            migrationBuilder.CreateIndex(
                name: "SFM_EVENTS_LOG_IDX7",
                table: "SFM_EVENTS_LOG",
                column: "CZAS_K");

            migrationBuilder.CreateIndex(
                name: "SFM_GF_IDX1",
                table: "SFM_GEOFENCE",
                columns: new[] { "DT_EVENT", "ID_OBJ", "ID_REC", "EXT_ID_TYP", "EXT_ID" });

            migrationBuilder.CreateIndex(
                name: "SFM_GF_IDX2",
                table: "SFM_GEOFENCE",
                column: "ID_TABOR");

            migrationBuilder.CreateIndex(
                name: "SFM_GF_IDX3",
                table: "SFM_GEOFENCE",
                column: "ID_NACZEPY");

            migrationBuilder.CreateIndex(
                name: "SFM_GF_IDX4",
                table: "SFM_GEOFENCE",
                column: "ID_KIEROWCY");

            migrationBuilder.CreateIndex(
                name: "SFM_GF_IDX5",
                table: "SFM_GEOFENCE",
                column: "ID_SFM_TERM");

            migrationBuilder.CreateIndex(
                name: "SFM_GF_IDX6",
                table: "SFM_GEOFENCE",
                column: "DT_EVENT");

            migrationBuilder.CreateIndex(
                name: "SFM_GF_IDX7",
                table: "SFM_GEOFENCE",
                column: "ID_REC");

            migrationBuilder.CreateIndex(
                name: "SFM_GF_IDX8",
                table: "SFM_GEOFENCE",
                column: "ID_OBJ");

            migrationBuilder.CreateIndex(
                name: "SFM_GF_user1",
                table: "SFM_GEOFENCE",
                columns: new[] { "DT_EVENT", "ID_OBJ", "ID_REC", "EXT_ID_TYP", "EXT_ID" });

            migrationBuilder.CreateIndex(
                name: "SFM_GRUPYODB_IDX1",
                table: "SFM_GRUPYODB",
                column: "ID_UZYTK");

            migrationBuilder.CreateIndex(
                name: "SICD_ACT_IDX1",
                table: "SFM_IC_ACTION",
                column: "FUNCTION_ID");

            migrationBuilder.CreateIndex(
                name: "SICD_ACT_IDX2",
                table: "SFM_IC_ACTION",
                column: "AID");

            migrationBuilder.CreateIndex(
                name: "SICD_HEAD_IDX1",
                table: "SFM_IC_DEF_HEADER",
                column: "ID");

            migrationBuilder.CreateIndex(
                name: "SICD_HEAD_IDX2",
                table: "SFM_IC_DEF_HEADER",
                column: "VERSION");

            migrationBuilder.CreateIndex(
                name: "SICD_HEAD_IDX3",
                table: "SFM_IC_DEF_HEADER",
                column: "TERMTYPE");

            migrationBuilder.CreateIndex(
                name: "SICD_HEAD_IDX4",
                table: "SFM_IC_DEF_HEADER",
                column: "ID_SFM_SYSTEM");

            migrationBuilder.CreateIndex(
                name: "SRV_SFM_IC_Def_Header_EXTIDX1",
                table: "SFM_IC_DEF_HEADER",
                columns: new[] { "ID_SFM_SYSTEM", "ID" });

            migrationBuilder.CreateIndex(
                name: "SICD_OPT_IDX1",
                table: "SFM_IC_DEF_OPTION",
                column: "HEADER_ID");

            migrationBuilder.CreateIndex(
                name: "SICD_OPT_IDX2",
                table: "SFM_IC_DEF_OPTION",
                column: "QUESTION_ID");

            migrationBuilder.CreateIndex(
                name: "SICD_OPT_IDX3",
                table: "SFM_IC_DEF_OPTION",
                column: "OID");

            migrationBuilder.CreateIndex(
                name: "SICD_OPT_IDX4",
                table: "SFM_IC_DEF_OPTION",
                column: "QID_NEXT");

            migrationBuilder.CreateIndex(
                name: "SICD_QUE_IDX1",
                table: "SFM_IC_DEF_QUESTION",
                column: "HEADER_ID");

            migrationBuilder.CreateIndex(
                name: "SICD_QUE_IDX2",
                table: "SFM_IC_DEF_QUESTION",
                column: "QID");

            migrationBuilder.CreateIndex(
                name: "SICD_QUE_IDX3",
                table: "SFM_IC_DEF_QUESTION",
                column: "QID_NEXT");

            migrationBuilder.CreateIndex(
                name: "SRV_SFM_IC_Def_Question_EXTIDX1",
                table: "SFM_IC_DEF_QUESTION",
                columns: new[] { "HEADER_ID", "QID" });

            migrationBuilder.CreateIndex(
                name: "SFM_IC_Files_Duplicates_IDX1",
                table: "SFM_IC_FILES",
                columns: new[] { "ID_EVENT", "ID", "VERSION", "ID_SFM_TERM" });

            migrationBuilder.CreateIndex(
                name: "SICD_FILES_IDX1",
                table: "SFM_IC_FILES",
                column: "ID");

            migrationBuilder.CreateIndex(
                name: "SICD_FILES_IDX10",
                table: "SFM_IC_FILES",
                column: "ID_SFM_POS");

            migrationBuilder.CreateIndex(
                name: "SICD_FILES_IDX11",
                table: "SFM_IC_FILES",
                column: "STATUS");

            migrationBuilder.CreateIndex(
                name: "SICD_FILES_IDX12",
                table: "SFM_IC_FILES",
                column: "DT_EVENT");

            migrationBuilder.CreateIndex(
                name: "SICD_FILES_IDX2",
                table: "SFM_IC_FILES",
                column: "VERSION");

            migrationBuilder.CreateIndex(
                name: "SICD_FILES_IDX3",
                table: "SFM_IC_FILES",
                column: "ID_SFM_TERM");

            migrationBuilder.CreateIndex(
                name: "SICD_FILES_IDX4",
                table: "SFM_IC_FILES",
                column: "ID_VEHICLE");

            migrationBuilder.CreateIndex(
                name: "SICD_FILES_IDX5",
                table: "SFM_IC_FILES",
                column: "ID_TRAILER");

            migrationBuilder.CreateIndex(
                name: "SICD_FILES_IDX6",
                table: "SFM_IC_FILES",
                column: "ID_DRIVER");

            migrationBuilder.CreateIndex(
                name: "SICD_FILES_IDX7",
                table: "SFM_IC_FILES",
                column: "ID_OBJ");

            migrationBuilder.CreateIndex(
                name: "SICD_FILES_IDX8",
                table: "SFM_IC_FILES",
                column: "ID_REC");

            migrationBuilder.CreateIndex(
                name: "SICD_FILES_IDX9",
                table: "SFM_IC_FILES",
                column: "ID_EVENT");

            migrationBuilder.CreateIndex(
                name: "SICD_FUN_IDX1",
                table: "SFM_IC_FUNCTION",
                column: "FID");

            migrationBuilder.CreateIndex(
                name: "SICD_INTF_IDX1",
                table: "SFM_IC_INTERFACE",
                column: "FUNCTION_ID");

            migrationBuilder.CreateIndex(
                name: "SICD_INTF_IDX2",
                table: "SFM_IC_INTERFACE",
                column: "HEADER_ID");

            migrationBuilder.CreateIndex(
                name: "SFM_KIEROWCY_IDX1",
                table: "SFM_KIEROWCY",
                columns: new[] { "ID_KIEROWCY", "ID_SFM_SYSTEM" });

            migrationBuilder.CreateIndex(
                name: "SFM_KIEROWCY_IDX2",
                table: "SFM_KIEROWCY",
                columns: new[] { "ID_EXT", "ID_SFM_SYSTEM" });

            migrationBuilder.CreateIndex(
                name: "SFMSRV_SFM_KIEROWCY_EXTIDX1",
                table: "SFM_KIEROWCY",
                columns: new[] { "ID_KIEROWCY", "ID_SFM_SYSTEM" });

            migrationBuilder.CreateIndex(
                name: "SFMSRV_SFM_KIEROWCY_EXTIDX2",
                table: "SFM_KIEROWCY",
                columns: new[] { "ID_EXT", "ID_SFM_SYSTEM" });

            migrationBuilder.CreateIndex(
                name: "SFM_LAST_MARKER_IDX1",
                table: "SFM_LAST_MARKER",
                column: "ID_SFM_SYSTEM");

            migrationBuilder.CreateIndex(
                name: "SFM_LAST_MARKER_IDX2",
                table: "SFM_LAST_MARKER",
                column: "ID_SFM_TERM");

            migrationBuilder.CreateIndex(
                name: "SFM_LAST_MARKER_IDX3",
                table: "SFM_LAST_MARKER",
                column: "ACTION");

            migrationBuilder.CreateIndex(
                name: "SFM_LAST_MARKER_IDX4",
                table: "SFM_LAST_MARKER",
                column: "DT");

            migrationBuilder.CreateIndex(
                name: "idx_SFM_MSG_TYP_TYP_TERM_DT_WYS_RODZAJ",
                table: "SFM_MSG",
                columns: new[] { "TYP", "TYP_TERM", "DT_WYSL", "RODZAJ" });

            migrationBuilder.CreateIndex(
                name: "IDX1_SFM_Msg_ExternalId",
                table: "SFM_MSG",
                column: "ExternalId");

            migrationBuilder.CreateIndex(
                name: "IX_SFM_MSG_ID_TABOR_TYP_PRIORYTET_DT_WYSL",
                table: "SFM_MSG",
                columns: new[] { "ID_TABOR", "TYP", "PRIORYTET", "DT_WYSL" });

            migrationBuilder.CreateIndex(
                name: "IX_SFM_MSG_TYP_ZROBIONE_TYP_TERM_MSGSTAT",
                table: "SFM_MSG",
                columns: new[] { "TYP", "ZROBIONE", "TYP_TERM", "MSGSTAT" });

            migrationBuilder.CreateIndex(
                name: "SFM_MSG_IDX1",
                table: "SFM_MSG",
                columns: new[] { "TYP", "MSGSTAT", "MSG_FOLDER" });

            migrationBuilder.CreateIndex(
                name: "SFM_MSG_IDX10",
                table: "SFM_MSG",
                column: "DT_ZAPIS");

            migrationBuilder.CreateIndex(
                name: "SFM_MSG_IDX11",
                table: "SFM_MSG",
                column: "DT_WYSL");

            migrationBuilder.CreateIndex(
                name: "SFM_MSG_IDX12",
                table: "SFM_MSG",
                column: "DT_ODB");

            migrationBuilder.CreateIndex(
                name: "SFM_MSG_IDX13",
                table: "SFM_MSG",
                column: "DT_PRZECZYT");

            migrationBuilder.CreateIndex(
                name: "SFM_MSG_IDX14",
                table: "SFM_MSG",
                column: "ID_ZLECENIA");

            migrationBuilder.CreateIndex(
                name: "SFM_MSG_IDX15",
                table: "SFM_MSG",
                column: "ID_KIEROWCY");

            migrationBuilder.CreateIndex(
                name: "SFM_MSG_IDX16",
                table: "SFM_MSG",
                columns: new[] { "ID_OBJ", "ID_REC" });

            migrationBuilder.CreateIndex(
                name: "SFM_MSG_IDX17",
                table: "SFM_MSG",
                columns: new[] { "MSGSTAT", "TYP", "TYP_TERM" });

            migrationBuilder.CreateIndex(
                name: "SFM_MSG_IDX18",
                table: "SFM_MSG",
                columns: new[] { "ZROBIONE", "MSGSTAT", "TYP" });

            migrationBuilder.CreateIndex(
                name: "SFM_MSG_IDX19",
                table: "SFM_MSG",
                columns: new[] { "DT_WYSL", "MSGSTAT", "TYP", "ZROBIONE", "TYP_TERM", "ID_ZLECENIA" });

            migrationBuilder.CreateIndex(
                name: "SFM_MSG_IDX2",
                table: "SFM_MSG",
                columns: new[] { "TYP", "MSGSTAT", "MSG_FOLDER" });

            migrationBuilder.CreateIndex(
                name: "SFM_MSG_IDX3",
                table: "SFM_MSG",
                column: "MSG_FOLDER");

            migrationBuilder.CreateIndex(
                name: "SFM_MSG_IDX4",
                table: "SFM_MSG",
                column: "ID_SFM_MSG_MASTER");

            migrationBuilder.CreateIndex(
                name: "SFM_MSG_IDX5",
                table: "SFM_MSG",
                columns: new[] { "TYP", "ZROBIONE", "TYP_TERM" });

            migrationBuilder.CreateIndex(
                name: "SFM_MSG_IDX6",
                table: "SFM_MSG",
                column: "ID_SFM_POS");

            migrationBuilder.CreateIndex(
                name: "SFM_MSG_IDX7",
                table: "SFM_MSG",
                column: "ID_TABOR");

            migrationBuilder.CreateIndex(
                name: "SFM_MSG_IDX8",
                table: "SFM_MSG",
                columns: new[] { "TYP", "MSGSTAT", "PRIORYTET" });

            migrationBuilder.CreateIndex(
                name: "SFM_MSG_IDX9",
                table: "SFM_MSG",
                columns: new[] { "TYP", "MSGSTAT" });

            migrationBuilder.CreateIndex(
                name: "SFM_MSG_SFMEXT_IDX1",
                table: "SFM_MSG",
                columns: new[] { "DT_ZAPIS", "ID_REC", "ID_OBJ", "TYP_TERM" });

            migrationBuilder.CreateIndex(
                name: "SFM_MSG_SFMEXT_IDX2",
                table: "SFM_MSG",
                column: "TYP_TERM");

            migrationBuilder.CreateIndex(
                name: "SFM_MSG_SFMEXT_IDX3",
                table: "SFM_MSG",
                columns: new[] { "DT_WYSL", "ID_TABOR", "PRIORYTET", "TYP" });

            migrationBuilder.CreateIndex(
                name: "SFM_MSG_SFMEXT_IDX4",
                table: "SFM_MSG",
                column: "ID_SFM_POS");

            migrationBuilder.CreateIndex(
                name: "SFM_MSG_SFMEXT_IDX5",
                table: "SFM_MSG",
                columns: new[] { "ID_SFM_MSG_KATEGORIA", "TYP", "TYP_TERM", "DT_WYSL" });

            migrationBuilder.CreateIndex(
                name: "SFM_MSG_SFMEXT_IDX6",
                table: "SFM_MSG",
                columns: new[] { "ID_SFM_MSG_KATEGORIA", "TYP_TERM", "TYP", "DT_ZAPIS" });

            migrationBuilder.CreateIndex(
                name: "SFM_MSG_SFMEXT_IDX7",
                table: "SFM_MSG",
                columns: new[] { "TYP", "MSGSTAT", "ZROBIONE", "ID_TABOR", "DT_WYSL" });

            migrationBuilder.CreateIndex(
                name: "SFM_MSG_SFMEXT_IDX8",
                table: "SFM_MSG",
                columns: new[] { "ID_TABOR", "TYP", "PRIORYTET", "DT_WYSL" });

            migrationBuilder.CreateIndex(
                name: "SFM_MSG_SFMEXT_IDX9",
                table: "SFM_MSG",
                columns: new[] { "DT_WYSL", "PRZEKIEROWANE", "TYP" },
                filter: "([Przekierowane]=(0) AND [Typ]=(0))");

            migrationBuilder.CreateIndex(
                name: "SFM_MSG_SFMEXT_StatusSMS_IDX1",
                table: "SFM_MSG",
                columns: new[] { "DT_WYSL", "MSGSTAT", "TYP", "TYP_TERM", "ID_SFM_SYSTEM" });

            migrationBuilder.CreateIndex(
                name: "SFM_MSG_user1",
                table: "SFM_MSG",
                columns: new[] { "DT_WYSL", "MSGSTAT", "TYP", "ZROBIONE", "TYP_TERM", "ID_ZLECENIA" });

            migrationBuilder.CreateIndex(
                name: "SFM_MSG_user3",
                table: "SFM_MSG",
                column: "TYP_TERM");

            migrationBuilder.CreateIndex(
                name: "SFMSRV_MSG_EXTIDX1",
                table: "SFM_MSG",
                columns: new[] { "MSGSTAT", "TYP_TERM" });

            migrationBuilder.CreateIndex(
                name: "SFMSRV_MSG_EXTIDX2",
                table: "SFM_MSG",
                columns: new[] { "MSGSTAT", "TYP_TERM", "SENDCOUNT" });

            migrationBuilder.CreateIndex(
                name: "SFMSRV_MSG_EXTIDX3",
                table: "SFM_MSG",
                columns: new[] { "MSGSTAT", "TYP", "TYP_TERM", "ZROBIONE" });

            migrationBuilder.CreateIndex(
                name: "SFMSRV_MSG_EXTIDX4",
                table: "SFM_MSG",
                columns: new[] { "DT_WYSL", "TYP", "ID_TABOR", "ID_SFM_POS" });

            migrationBuilder.CreateIndex(
                name: "SMSEagle_SFM_MSG_IDX1",
                table: "SFM_MSG",
                column: "DT_WYSL",
                filter: "([MsgStat]=(10) AND [TYP]=(1) AND [TYP_TERM]='SMS' AND [ExternalId]<>'')");

            migrationBuilder.CreateIndex(
                name: "SFM_MSG_ATR_IDX1",
                table: "SFM_MSG_ATR",
                column: "MSGID");

            migrationBuilder.CreateIndex(
                name: "SFM_MSG_ATR_IDX2",
                table: "SFM_MSG_ATR",
                column: "VEHID");

            migrationBuilder.CreateIndex(
                name: "IDX1_SFM_Msg_Attach",
                table: "SFM_Msg_Attach",
                column: "IdGroup");

            migrationBuilder.CreateIndex(
                name: "IDX2_SFM_Msg_Attach",
                table: "SFM_Msg_Attach",
                column: "ID_SFM_Msg");

            migrationBuilder.CreateIndex(
                name: "MSG_DSM_IDX1",
                table: "SFM_MSG_DSM",
                columns: new[] { "MD5", "WATEK", "TERMINAL_PORT", "TERMINAL_IP", "MACRO" });

            migrationBuilder.CreateIndex(
                name: "SFM_MSG_EXTVAL_IDX1",
                table: "SFM_MSG_EXTVAL",
                columns: new[] { "ID_OBJ", "ID_REC" });

            migrationBuilder.CreateIndex(
                name: "SFM_MSG_EXTVAL_IDX2",
                table: "SFM_MSG_EXTVAL",
                column: "ID_STATUSY");

            migrationBuilder.CreateIndex(
                name: "IDX1_SFM_Msg_GBX_ExtId",
                table: "SFM_MSG_GBX",
                column: "EXTID");

            migrationBuilder.CreateIndex(
                name: "SFM_MSG_PNC_IDX1",
                table: "SFM_MSG_PNC",
                column: "MSGID");

            migrationBuilder.CreateIndex(
                name: "SFM_MSG_PNC_IDX2",
                table: "SFM_MSG_PNC",
                column: "VEHID");

            migrationBuilder.CreateIndex(
                name: "SFM_MSG_PNC_IDX3",
                table: "SFM_MSG_PNC",
                column: "TASKSTATE");

            migrationBuilder.CreateIndex(
                name: "IX_SFM_Msg_Recipients_ID_SFM_Msg",
                table: "SFM_Msg_Recipients",
                column: "ID_SFM_Msg");

            migrationBuilder.CreateIndex(
                name: "IDX1_SFM_Msg_Ref",
                table: "SFM_Msg_Ref",
                columns: new[] { "ID_SFM_Msg", "ID_OBJ", "ID_REC" });

            migrationBuilder.CreateIndex(
                name: "IDX2_SFM_Msg_Ref",
                table: "SFM_Msg_Ref",
                columns: new[] { "ID_OBJ", "ID_REC", "ID_SFM_Msg" });

            migrationBuilder.CreateIndex(
                name: "SFM_MSG_SIE_IDX1",
                table: "SFM_MSG_SIE",
                columns: new[] { "DEV_ID", "MSGID", "MSGTYPE" });

            migrationBuilder.CreateIndex(
                name: "IDX_MD5",
                table: "SFM_MSG_SMS",
                column: "MD5");

            migrationBuilder.CreateIndex(
                name: "MSG_VDF_IDX1",
                table: "SFM_MSG_VDF",
                column: "ORDER_ID");

            migrationBuilder.CreateIndex(
                name: "IX_SFM_MsgDefMenuWindow_ID_SFM_MsgDefMenu",
                table: "SFM_MsgDefMenuWindow",
                column: "ID_SFM_MsgDefMenu");

            migrationBuilder.CreateIndex(
                name: "SFM_NOTIFY_IDX1",
                table: "SFM_NOTIFY",
                columns: new[] { "OBJ_TYP", "OBJ_ID" });

            migrationBuilder.CreateIndex(
                name: "SFM_NOTIFY_IDX2",
                table: "SFM_NOTIFY",
                column: "ID_SFM_MSG");

            migrationBuilder.CreateIndex(
                name: "SFM_NOTIFY_IDX3",
                table: "SFM_NOTIFY",
                column: "DT_CREATE");

            migrationBuilder.CreateIndex(
                name: "SFM_ObjRef_External_IDX1",
                table: "SFM_OBJREF",
                columns: new[] { "OBJEXTERNALID", "OBJTYPE", "ID_SFM_SYSTEM" });

            migrationBuilder.CreateIndex(
                name: "SFM_ObjRef_Internal_IDX1",
                table: "SFM_OBJREF",
                columns: new[] { "OBJINTERNALID", "OBJTYPE", "ID_SFM_SYSTEM" });

            migrationBuilder.CreateIndex(
                name: "SFM_ODBIORCY_IDX1",
                table: "SFM_ODBIORCY",
                column: "ID_SFM_GRUPYODB");

            migrationBuilder.CreateIndex(
                name: "IDX_RapCzasuPostoju_1",
                table: "SFM_POS",
                columns: new[] { "ID_TABOR", "CZAS", "PREDKOSC" });

            migrationBuilder.CreateIndex(
                name: "IX_SFM_POS_USER1",
                table: "SFM_POS",
                columns: new[] { "CZAS", "ID_KIEROWCY2" },
                filter: "([ID_KIEROWCY2]>(0))");

            migrationBuilder.CreateIndex(
                name: "IX_SFM_POS_USER2",
                table: "SFM_POS",
                columns: new[] { "CZAS", "ID_KIEROWCY" },
                filter: "([ID_KIEROWCY]>(0))");

            migrationBuilder.CreateIndex(
                name: "SFM_POS_IDX1",
                table: "SFM_POS",
                columns: new[] { "ID_SFM_TERM", "ZAPYTANIE" });

            migrationBuilder.CreateIndex(
                name: "SFM_POS_IDX2",
                table: "SFM_POS",
                columns: new[] { "CZAS", "ID_SFM_TERM", "ZAPYTANIE" });

            migrationBuilder.CreateIndex(
                name: "SFM_POS_IDX3",
                table: "SFM_POS",
                columns: new[] { "ID_SFM_TERM", "CZAS" });

            migrationBuilder.CreateIndex(
                name: "SFM_Pos_IDX3_DESC",
                table: "SFM_POS",
                columns: new[] { "ID_SFM_TERM", "CZAS" });

            migrationBuilder.CreateIndex(
                name: "SFM_POS_IDX4",
                table: "SFM_POS",
                column: "CZAS");

            migrationBuilder.CreateIndex(
                name: "SFM_POS_IDX5",
                table: "SFM_POS",
                column: "PREDKOSC");

            migrationBuilder.CreateIndex(
                name: "SFM_Pos_IDX6_A",
                table: "SFM_POS",
                columns: new[] { "CZAS", "ZROBIONE" },
                filter: "([ZROBIONE]=(0))");

            migrationBuilder.CreateIndex(
                name: "SFM_POS_SFMEXT_IDX1",
                table: "SFM_POS",
                columns: new[] { "ID_SFM_POS", "LON", "LAT" });

            migrationBuilder.CreateIndex(
                name: "SFM_POS_SFMEXT_IDX2",
                table: "SFM_POS",
                columns: new[] { "Obj_Id", "Rec_Id" });

            migrationBuilder.CreateIndex(
                name: "SFM_POS_SFMEXT_IDX3",
                table: "SFM_POS",
                columns: new[] { "ID_SFM_TERM", "CZAS" });

            migrationBuilder.CreateIndex(
                name: "SFM_POS_SFMEXT_IDX4",
                table: "SFM_POS",
                column: "CZAS",
                filter: "([ID_TABOR]>(0))");

            migrationBuilder.CreateIndex(
                name: "SFM_POS_SFMEXT_IDX5",
                table: "SFM_POS",
                columns: new[] { "CZAS", "ID_NACZEPY", "TYP_TERM" },
                filter: "([ID_SFM_TERM]=(0) AND [ID_NACZEPY]>(0))");

            migrationBuilder.CreateIndex(
                name: "SFM_POS_SFMEXT_IDX6",
                table: "SFM_POS",
                column: "CZAS");

            migrationBuilder.CreateIndex(
                name: "SFM_POS_ATR_IDX1",
                table: "SFM_POS_ATR",
                column: "POSID");

            migrationBuilder.CreateIndex(
                name: "SFM_POS_ATR_IDX2",
                table: "SFM_POS_ATR",
                column: "VEHID");

            migrationBuilder.CreateIndex(
                name: "SFM_POS_EXT_IDX1",
                table: "SFM_POS_EXT",
                column: "KRAJ");

            migrationBuilder.CreateIndex(
                name: "SFM_POS_EXT_IDX2",
                table: "SFM_POS_EXT",
                column: "ID_REVERSEGEOCODING");

            migrationBuilder.CreateIndex(
                name: "SFM_POS_EXT_UtcVehId_IDX1",
                table: "SFM_POS_EXT",
                columns: new[] { "VEHID", "DTUTC" });

            migrationBuilder.CreateIndex(
                name: "IDX1_SFM_Pos_GBX_ExtId",
                table: "SFM_POS_GBX",
                column: "EXTID");

            migrationBuilder.CreateIndex(
                name: "SFM_POS_MEC_IDX1",
                table: "SFM_POS_MEC",
                columns: new[] { "ID_SFM_SYSTEM", "RECID" });

            migrationBuilder.CreateIndex(
                name: "SFM_POS_PNC_IDX1",
                table: "SFM_POS_PNC",
                column: "VEHID");

            migrationBuilder.CreateIndex(
                name: "SFM_PTO_IDX1",
                table: "SFM_PTO",
                column: "DT_START");

            migrationBuilder.CreateIndex(
                name: "SFM_PTO_IDX2",
                table: "SFM_PTO",
                column: "DT_STOP");

            migrationBuilder.CreateIndex(
                name: "SFM_PTO_IDX3",
                table: "SFM_PTO",
                column: "ID_TABOR");

            migrationBuilder.CreateIndex(
                name: "SFM_PTO_IDX4",
                table: "SFM_PTO",
                column: "ID_SFM_TERM");

            migrationBuilder.CreateIndex(
                name: "SFM_ROUTE_IDX1",
                table: "SFM_ROUTE",
                column: "ID_TABOR");

            migrationBuilder.CreateIndex(
                name: "SFM_ROUTE_IDX2",
                table: "SFM_ROUTE",
                column: "ROUTE_ID");

            migrationBuilder.CreateIndex(
                name: "SFM_ROUTE_IDX3",
                table: "SFM_ROUTE",
                column: "DT_START");

            migrationBuilder.CreateIndex(
                name: "SFM_ROUTE_IDX4",
                table: "SFM_ROUTE",
                column: "DT_STOP");

            migrationBuilder.CreateIndex(
                name: "SFM_ROUTE_IDX5",
                table: "SFM_ROUTE",
                columns: new[] { "ID_TABOR", "CORRIDOR", "DT_START", "DT_STOP" });

            migrationBuilder.CreateIndex(
                name: "sfm_route_user1",
                table: "SFM_ROUTE",
                column: "CORRIDOR");

            migrationBuilder.CreateIndex(
                name: "SFM_Route_Event_EXTIDX1",
                table: "SFM_ROUTE_EVENT",
                columns: new[] { "ID_OBJ", "ID_SFM_ROUTE" });

            migrationBuilder.CreateIndex(
                name: "SFM_ROUTE_EVENT_IDX1",
                table: "SFM_ROUTE_EVENT",
                column: "ID_SFM_ROUTE");

            migrationBuilder.CreateIndex(
                name: "SFM_ROUTE_EVENT_IDX2",
                table: "SFM_ROUTE_EVENT",
                column: "ID_SFM_ROUTE_POI");

            migrationBuilder.CreateIndex(
                name: "SFM_ROUTE_EVENT_IDX3",
                table: "SFM_ROUTE_EVENT",
                columns: new[] { "ID_OBJ", "ID_REC" });

            migrationBuilder.CreateIndex(
                name: "SFM_Route_Obj_Item_EXTIDX1",
                table: "SFM_Route_Obj_Item",
                column: "id_SFM_Route_Obj");

            migrationBuilder.CreateIndex(
                name: "SFM_ROUTE_POI_IDX1",
                table: "SFM_ROUTE_POI",
                column: "LON");

            migrationBuilder.CreateIndex(
                name: "SFM_ROUTE_POI_IDX2",
                table: "SFM_ROUTE_POI",
                column: "LAT");

            migrationBuilder.CreateIndex(
                name: "SFM_ROUTE_POI_IDX3",
                table: "SFM_ROUTE_POI",
                column: "ID_SFM_ROUTE");

            migrationBuilder.CreateIndex(
                name: "SFM_ROUTE_POI_IDX4",
                table: "SFM_ROUTE_POI",
                columns: new[] { "ID_SFM_ROUTE", "ID_SFM_ROUTE_POI" });

            migrationBuilder.CreateIndex(
                name: "SFM_ROUTE_POI_IDX5",
                table: "SFM_ROUTE_POI",
                columns: new[] { "ID_SFM_ROUTE", "KIND" });

            migrationBuilder.CreateIndex(
                name: "IX_SFM_Route_ViaPoint_id_SFM_Route",
                table: "SFM_Route_ViaPoint",
                column: "id_SFM_Route");

            migrationBuilder.CreateIndex(
                name: "SFM_RUNSTATUS_IDX1",
                table: "SFM_RUNSTATUS",
                column: "DT");

            migrationBuilder.CreateIndex(
                name: "SFM_RUNSTATUS_IDX2",
                table: "SFM_RUNSTATUS",
                column: "TYP_TERM");

            migrationBuilder.CreateIndex(
                name: "SFM_RUNSTATUS_IDX3",
                table: "SFM_RUNSTATUS",
                column: "ID_SFM_SYSTEM");

            migrationBuilder.CreateIndex(
                name: "SFM_SetObjStat_IDX1",
                table: "SFM_SetObjStat",
                columns: new[] { "ID_SFM_System", "ExternalId" });

            migrationBuilder.CreateIndex(
                name: "SFM_SLO_IDX1",
                table: "SFM_SLO",
                column: "SLOWNIK");

            migrationBuilder.CreateIndex(
                name: "SFM_SLO_IDX2",
                table: "SFM_SLO",
                column: "WYROZNIK");

            migrationBuilder.CreateIndex(
                name: "SFM_SLO_IDX3",
                table: "SFM_SLO",
                column: "KOD");

            migrationBuilder.CreateIndex(
                name: "SFM_SLO_DEF_IDX1",
                table: "SFM_SLO_DEF",
                column: "KOD");

            migrationBuilder.CreateIndex(
                name: "SFM_STATUS_IDX1",
                table: "SFM_STATUS",
                column: "NR_STAT");

            migrationBuilder.CreateIndex(
                name: "SFM_STATUS_IDX2",
                table: "SFM_STATUS",
                column: "GRUPA");

            migrationBuilder.CreateIndex(
                name: "SFM_STATAKCJA_IDX1",
                table: "SFM_STATUSAKCJE",
                column: "NR_STAT");

            migrationBuilder.CreateIndex(
                name: "SFM_STATAKCJA_IDX2",
                table: "SFM_STATUSAKCJE",
                column: "GRUPA");

            migrationBuilder.CreateIndex(
                name: "Ix_SFM_STATUSHIST_StatusLISTY_LINIOWE",
                table: "SFM_STATUSHIST",
                columns: new[] { "ID_OBJ", "DT_STAT", "TYP_OBJ" },
                filter: "([TYP_OBJ]='6')");

            migrationBuilder.CreateIndex(
                name: "Ix_SFM_STATUSHIST_StatusZlecenia",
                table: "SFM_STATUSHIST",
                columns: new[] { "ID_ZLECENIA", "DT_STAT" },
                filter: "([ID_ZLECENIA]>(0))");

            migrationBuilder.CreateIndex(
                name: "SFM_STATHIST_IDX1",
                table: "SFM_STATUSHIST",
                column: "DT_STAT");

            migrationBuilder.CreateIndex(
                name: "SFM_STATHIST_IDX10",
                table: "SFM_STATUSHIST",
                column: "ID_SFM_MSG");

            migrationBuilder.CreateIndex(
                name: "SFM_STATHIST_IDX11",
                table: "SFM_STATUSHIST",
                columns: new[] { "TYP_OBJ", "ID_OBJ" });

            migrationBuilder.CreateIndex(
                name: "SFM_STATHIST_IDX2",
                table: "SFM_STATUSHIST",
                column: "DT_ZAPIS");

            migrationBuilder.CreateIndex(
                name: "SFM_STATHIST_IDX3",
                table: "SFM_STATUSHIST",
                column: "ID_WYJAZDY");

            migrationBuilder.CreateIndex(
                name: "SFM_STATHIST_IDX4",
                table: "SFM_STATUSHIST",
                column: "ID_ZLECENIA");

            migrationBuilder.CreateIndex(
                name: "SFM_STATHIST_IDX5",
                table: "SFM_STATUSHIST",
                column: "ID_ZLECENIA_ZA_WY");

            migrationBuilder.CreateIndex(
                name: "SFM_STATHIST_IDX6",
                table: "SFM_STATUSHIST",
                column: "ID_TABOR");

            migrationBuilder.CreateIndex(
                name: "SFM_STATHIST_IDX7",
                table: "SFM_STATUSHIST",
                column: "ID_KIEROWCY1");

            migrationBuilder.CreateIndex(
                name: "SFM_STATHIST_IDX8",
                table: "SFM_STATUSHIST",
                column: "ID_KIEROWCY2");

            migrationBuilder.CreateIndex(
                name: "SFM_STATHIST_IDX9",
                table: "SFM_STATUSHIST",
                column: "ID_SFM_POS");

            migrationBuilder.CreateIndex(
                name: "SFM_StatusHist_EXTIDX1",
                table: "SFM_STATUSHIST",
                columns: new[] { "NR_STAT", "ID_OBJ" });

            migrationBuilder.CreateIndex(
                name: "SFM_StatusHist_EXTIDX2",
                table: "SFM_STATUSHIST",
                columns: new[] { "DT_STAT", "ID_TABOR", "ID_SFM_POS" });

            migrationBuilder.CreateIndex(
                name: "SFMSRV_SFM_StatusHist_EXTIDX1",
                table: "SFM_STATUSHIST",
                columns: new[] { "DT_STAT", "NR_STAT" });

            migrationBuilder.CreateIndex(
                name: "SFM_SYSTEM_SFMEXT_IDX1",
                table: "SFM_SYSTEM",
                columns: new[] { "ID_SFM_SYSTEM", "WYLACZ" });

            migrationBuilder.CreateIndex(
                name: "SFM_TABOR_EXTIDX1",
                table: "SFM_TABOR",
                column: "ID_TABOR");

            migrationBuilder.CreateIndex(
                name: "SFM_TABOR_IDX1",
                table: "SFM_TABOR",
                column: "ID_TABOR");

            migrationBuilder.CreateIndex(
                name: "SFM_TABOR_IDX2",
                table: "SFM_TABOR",
                column: "ID_SFM_POS");

            migrationBuilder.CreateIndex(
                name: "SFM_TABOR_IDX3",
                table: "SFM_TABOR",
                column: "AKTYWNOSC_DT");

            migrationBuilder.CreateIndex(
                name: "SFM_TABOR_IDX4",
                table: "SFM_TABOR",
                column: "DATA_POZ");

            migrationBuilder.CreateIndex(
                name: "SFM_TABOR_IDX5",
                table: "SFM_TABOR",
                columns: new[] { "ETA_DATA", "ID_TABOR" });

            migrationBuilder.CreateIndex(
                name: "SFM_TaborParams_EXTIDX1",
                table: "SFM_TaborParams",
                columns: new[] { "ID_Tabor", "ID_SFM_System", "ParamName" });

            migrationBuilder.CreateIndex(
                name: "SFM_TemperatureControl_EXTIDX1",
                table: "SFM_TemperatureControl",
                columns: new[] { "DT_Event", "IdTrailerSpeed", "Id_SFM_System" });

            migrationBuilder.CreateIndex(
                name: "SFM_TERM_IDX1",
                table: "SFM_TERM",
                column: "ID_TABOR");

            migrationBuilder.CreateIndex(
                name: "SFM_TERM_SFMEXT_IDX1",
                table: "SFM_TERM",
                columns: new[] { "ID_TABOR", "ID_SFM_SYSTEM" });

            migrationBuilder.CreateIndex(
                name: "SFMSRV_TERM_EXTIDX1",
                table: "SFM_TERM",
                columns: new[] { "ID_TABOR", "ID_SFM_SYSTEM", "WYLACZ" });

            migrationBuilder.CreateIndex(
                name: "SFMSRV_TERM_EXTIDX2",
                table: "SFM_TERM",
                columns: new[] { "NUMER", "ID_SFM_SYSTEM", "WYLACZ" });

            migrationBuilder.CreateIndex(
                name: "SFM_USER_TABOR_EXTIDX1",
                table: "SFM_USER_TABOR",
                columns: new[] { "ID_UZYTK", "ID_TABOR" });

            migrationBuilder.CreateIndex(
                name: "SFM_USER_TABOR_IDX1",
                table: "SFM_USER_TABOR",
                column: "ID_TABOR");

            migrationBuilder.CreateIndex(
                name: "SFM_USER_TABOR_IDX2",
                table: "SFM_USER_TABOR",
                column: "ID_SFM_TABOR");

            migrationBuilder.CreateIndex(
                name: "SFM_USER_TABOR_IDX3",
                table: "SFM_USER_TABOR",
                column: "ID_UZYTK");

            migrationBuilder.CreateIndex(
                name: "SFM_VDF_ZAWY_IDX1",
                table: "SFM_VDF_ZAWY_STAT",
                column: "ID_SFM_TERM");

            migrationBuilder.CreateIndex(
                name: "SFM_VDF_ZAWY_IDX2",
                table: "SFM_VDF_ZAWY_STAT",
                column: "NR_STAT");

            migrationBuilder.CreateIndex(
                name: "SFM_VDF_ZAWY_IDX3",
                table: "SFM_VDF_ZAWY_STAT",
                column: "DT_STAT");

            migrationBuilder.CreateIndex(
                name: "SFM_VEH_EVENTS_EXTIDX1",
                table: "SFM_VEH_EVENTS",
                columns: new[] { "TYP_TERM", "STATUS" });

            migrationBuilder.CreateIndex(
                name: "SFM_ZLEC_ZA_WY_IDX1",
                table: "SFM_ZLECENIA_ZA_WY",
                column: "ID_TABOR");

            migrationBuilder.CreateIndex(
                name: "SFM_ZLEC_ZA_WY_IDX2",
                table: "SFM_ZLECENIA_ZA_WY",
                column: "ID_KIEROWCY");

            migrationBuilder.CreateIndex(
                name: "SFM_ZLEC_ZA_WY_IDX3",
                table: "SFM_ZLECENIA_ZA_WY",
                column: "ID_SFM_TERM");

            migrationBuilder.CreateIndex(
                name: "SFM_ZLEC_ZA_WY_IDX4",
                table: "SFM_ZLECENIA_ZA_WY",
                column: "EXT_ID");

            migrationBuilder.CreateIndex(
                name: "SFM_ZLEC_ZA_WY_IDX5",
                table: "SFM_ZLECENIA_ZA_WY",
                column: "STATUS");

            migrationBuilder.CreateIndex(
                name: "IDX_SID_1",
                table: "SID",
                column: "ID_KLIENTA");

            migrationBuilder.CreateIndex(
                name: "IDX_SID_PRAWA_1",
                table: "SID_PRAWA",
                column: "SID_ID");

            migrationBuilder.CreateIndex(
                name: "IDX_SID_PRAWA_2",
                table: "SID_PRAWA",
                column: "UZYTKOWNIK_ID");

            migrationBuilder.CreateIndex(
                name: "SFMSRV_SIM_DRV_EXTIDX1",
                table: "SIM",
                columns: new[] { "KIEROWCA_ID", "AKTYWNY", "PRYWATNY" });

            migrationBuilder.CreateIndex(
                name: "SFMSRV_SIM_EXTIDX1",
                table: "SIM",
                columns: new[] { "TABOR_ID", "AKTYWNY", "PRYWATNY" });

            migrationBuilder.CreateIndex(
                name: "SFMSRV_SIM_EXTIDX2",
                table: "SIM",
                columns: new[] { "KIEROWCA_ID", "AKTYWNY", "PRYWATNY" });

            migrationBuilder.CreateIndex(
                name: "SIM_IDX1",
                table: "SIM",
                column: "KIEROWCA_ID");

            migrationBuilder.CreateIndex(
                name: "SIM_IDX2",
                table: "SIM",
                column: "TABOR_ID");

            migrationBuilder.CreateIndex(
                name: "SIM_IDX3",
                table: "SIM",
                column: "PRYWATNY");

            migrationBuilder.CreateIndex(
                name: "SIM_IDX4",
                table: "SIM",
                column: "AKTYWNY");

            migrationBuilder.CreateIndex(
                name: "SIM_SFMEXT_IDX1",
                table: "SIM",
                columns: new[] { "TABOR_ID", "TABOR_OD", "NUMER", "AKTYWNY" });

            migrationBuilder.CreateIndex(
                name: "SIM_APARAT_HIST_IDX1",
                table: "SIM_APARAT_HIST",
                column: "SIM_ID");

            migrationBuilder.CreateIndex(
                name: "SIM_HIST_IDX1",
                table: "SIM_HIST",
                column: "KIEROWCA_ID");

            migrationBuilder.CreateIndex(
                name: "SIM_HIST_IDX2",
                table: "SIM_HIST",
                column: "TABOR_ID");

            migrationBuilder.CreateIndex(
                name: "SIM_HIST_IDX3",
                table: "SIM_HIST",
                column: "SIM_ID");

            migrationBuilder.CreateIndex(
                name: "SLO_KOD_IDX",
                table: "SLOWNIK",
                column: "KOD");

            migrationBuilder.CreateIndex(
                name: "SLO_SYMBOL_IDX",
                table: "SLOWNIK",
                column: "SYMBOL");

            migrationBuilder.CreateIndex(
                name: "UN_SolverCountries_CountryCode3",
                schema: "opti",
                table: "SolverCountries",
                columns: new[] { "SolverTaskId", "CountryCode3" },
                unique: true);

            migrationBuilder.CreateIndex(
                name: "UN_SolverCountries_Name",
                schema: "opti",
                table: "SolverCountries",
                columns: new[] { "SolverTaskId", "Name" },
                unique: true);

            migrationBuilder.CreateIndex(
                name: "UN_SolverCountries_VehicleCode",
                schema: "opti",
                table: "SolverCountries",
                columns: new[] { "SolverTaskId", "VehicleCode" },
                unique: true);

            migrationBuilder.CreateIndex(
                name: "UN_SolverEventCostTypes_Name",
                schema: "opti",
                table: "SolverEventCostTypes",
                column: "Name",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "UN_SolverEventTypes_Name",
                schema: "opti",
                table: "SolverEventTypes",
                column: "Name",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_SolverFleet_SolverTaskId_AssignedPoiId",
                schema: "opti",
                table: "SolverFleet",
                columns: new[] { "SolverTaskId", "AssignedPoiId" });

            migrationBuilder.CreateIndex(
                name: "IX_SolverFleet_SolverTaskId_SolverCarrierId",
                schema: "opti",
                table: "SolverFleet",
                columns: new[] { "SolverTaskId", "SolverCarrierId" });

            migrationBuilder.CreateIndex(
                name: "UN_SolverFleet",
                schema: "opti",
                table: "SolverFleet",
                columns: new[] { "SolverTaskId", "SolverTruckProfileId", "SolverCarrierId", "AssignedPoiId", "VehicleId" },
                unique: true,
                filter: "[SolverCarrierId] IS NOT NULL AND [AssignedPoiId] IS NOT NULL AND [VehicleId] IS NOT NULL");

            migrationBuilder.CreateIndex(
                name: "IX_SolverFleet2OrdersMatrixValues_SolverTaskId_FleetId",
                schema: "opti",
                table: "SolverFleet2OrdersMatrixValues",
                columns: new[] { "SolverTaskId", "FleetId" });

            migrationBuilder.CreateIndex(
                name: "IX_SolverFleet2OrdersMatrixValues_SolverTaskId_SolverOrderId",
                schema: "opti",
                table: "SolverFleet2OrdersMatrixValues",
                columns: new[] { "SolverTaskId", "SolverOrderId" });

            migrationBuilder.CreateIndex(
                name: "IX_SolverFleetFeatures_FleetFeatureTypeId",
                schema: "opti",
                table: "SolverFleetFeatures",
                column: "FleetFeatureTypeId");

            migrationBuilder.CreateIndex(
                name: "UN_SolverFleetFeatureTypes_Name",
                schema: "opti",
                table: "SolverFleetFeatureTypes",
                column: "FleetFeatureName",
                unique: true,
                filter: "[FleetFeatureName] IS NOT NULL");

            migrationBuilder.CreateIndex(
                name: "IX_SolverFleetPositions_SolverTaskId_SolverPoiId",
                schema: "opti",
                table: "SolverFleetPositions",
                columns: new[] { "SolverTaskId", "SolverPoiId" });

            migrationBuilder.CreateIndex(
                name: "IX_SolverMessages_MessageTypeId",
                schema: "opti",
                table: "SolverMessages",
                column: "MessageTypeId");

            migrationBuilder.CreateIndex(
                name: "IX_SolverMessages_SolverSolutionId",
                schema: "opti",
                table: "SolverMessages",
                column: "SolverSolutionId");

            migrationBuilder.CreateIndex(
                name: "IX_SolverMessages_SolverTaskId",
                schema: "opti",
                table: "SolverMessages",
                column: "SolverTaskId");

            migrationBuilder.CreateIndex(
                name: "IX_SolverOrders_SolverTaskId_DstPoiId",
                schema: "opti",
                table: "SolverOrders",
                columns: new[] { "SolverTaskId", "DstPoiId" });

            migrationBuilder.CreateIndex(
                name: "IX_SolverOrders_SolverTaskId_SrcPoiId",
                schema: "opti",
                table: "SolverOrders",
                columns: new[] { "SolverTaskId", "SrcPoiId" });

            migrationBuilder.CreateIndex(
                name: "IX_SolverOrders_TypeId",
                schema: "opti",
                table: "SolverOrders",
                column: "TypeId");

            migrationBuilder.CreateIndex(
                name: "IX_SolverOrdersFeatures_FeatureTypeId",
                schema: "opti",
                table: "SolverOrdersFeatures",
                column: "FeatureTypeId");

            migrationBuilder.CreateIndex(
                name: "UK_SolverOrdersFeatureTypes_Name",
                schema: "opti",
                table: "SolverOrdersFeatureTypes",
                column: "FeatureTypeName",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "UN_SolverOrdersItemsBundleTypes_Name",
                schema: "opti",
                table: "SolverOrdersItemsBundleTypes",
                column: "BundleTypeName",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_SolverOrdersItemsFeatures_FeatureTypeId",
                schema: "opti",
                table: "SolverOrdersItemsFeatures",
                column: "FeatureTypeId");

            migrationBuilder.CreateIndex(
                name: "IX_SolverOrdersRelationRestrictions_RestrictionTypeId",
                schema: "opti",
                table: "SolverOrdersRelationRestrictions",
                column: "RestrictionTypeId");

            migrationBuilder.CreateIndex(
                name: "IX_SolverOrdersRelationRestrictions_SolverTaskId_SolverOrder2Id",
                schema: "opti",
                table: "SolverOrdersRelationRestrictions",
                columns: new[] { "SolverTaskId", "SolverOrder2Id" });

            migrationBuilder.CreateIndex(
                name: "UN_SolverOrdersRelationRestrictionTypes_RestrictionName",
                schema: "opti",
                table: "SolverOrdersRelationRestrictionTypes",
                column: "RestrictionName",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_SolverOrderTimeWindows_SolverTaskId_SolverOrderId",
                schema: "opti",
                table: "SolverOrderTimeWindows",
                columns: new[] { "SolverTaskId", "SolverOrderId" });

            migrationBuilder.CreateIndex(
                name: "IX_SolverOrderTimeWindows_TypeId",
                schema: "opti",
                table: "SolverOrderTimeWindows",
                column: "TypeId");

            migrationBuilder.CreateIndex(
                name: "UN_SolverOrderTypes_RestrictionName",
                schema: "opti",
                table: "SolverOrderTypes",
                column: "OrderTypeName",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_SolverPerPoiBorderCrossings_SolverTaskId_SolverBorderCrossingPoiId",
                schema: "opti",
                table: "SolverPerPoiBorderCrossings",
                columns: new[] { "SolverTaskId", "SolverBorderCrossingPoiId" });

            migrationBuilder.CreateIndex(
                name: "IX_SolverPerPoiFlatRate_SolverTaskId_SolverPoiId",
                schema: "opti",
                table: "SolverPerPoiFlatRate",
                columns: new[] { "SolverTaskId", "SolverPoiId" });

            migrationBuilder.CreateIndex(
                name: "IX_SolverPoi2PoiMatrixes_MatrixTypeId",
                schema: "opti",
                table: "SolverPoi2PoiMatrixes",
                column: "MatrixTypeId");

            migrationBuilder.CreateIndex(
                name: "UN_SolverPoi2PoiMatrixTypes_Name",
                schema: "opti",
                table: "SolverPoi2PoiMatrixTypes",
                column: "Name",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_SolverPoi2PoiMatrixValues_SolverTaskId_DstPoiId",
                schema: "opti",
                table: "SolverPoi2PoiMatrixValues",
                columns: new[] { "SolverTaskId", "DstPoiId" });

            migrationBuilder.CreateIndex(
                name: "IX_SolverPoi2PoiMatrixValues_SolverTaskId_SrcPoiId",
                schema: "opti",
                table: "SolverPoi2PoiMatrixValues",
                columns: new[] { "SolverTaskId", "SrcPoiId" });

            migrationBuilder.CreateIndex(
                name: "IX_SolverPoiGates_SolverTaskId_SolverPoiId",
                schema: "opti",
                table: "SolverPoiGates",
                columns: new[] { "SolverTaskId", "SolverPoiId" });

            migrationBuilder.CreateIndex(
                name: "UN_SolverPoiGateTimeWindows",
                schema: "opti",
                table: "SolverPoiGateTimeWindows",
                columns: new[] { "SolverTaskId", "SolverPoiGateId", "IsVirtual", "WindowStart", "WindowEnd" },
                unique: true,
                filter: "[WindowStart] IS NOT NULL AND [WindowEnd] IS NOT NULL");

            migrationBuilder.CreateIndex(
                name: "IX_SolverPoiPairFlatRatePricelist_SolverTaskId_DstPoiId",
                schema: "opti",
                table: "SolverPoiPairFlatRatePricelist",
                columns: new[] { "SolverTaskId", "DstPoiId" });

            migrationBuilder.CreateIndex(
                name: "IX_SolverPoiPairFlatRatePricelist_SolverTaskId_SrcPoiId",
                schema: "opti",
                table: "SolverPoiPairFlatRatePricelist",
                columns: new[] { "SolverTaskId", "SrcPoiId" });

            migrationBuilder.CreateIndex(
                name: "IX_SolverPoiRelations_PoiRelationTypeId",
                schema: "opti",
                table: "SolverPoiRelations",
                column: "PoiRelationTypeId");

            migrationBuilder.CreateIndex(
                name: "IX_SolverPoiRelations_SolverTaskId_ObjectPoiId",
                schema: "opti",
                table: "SolverPoiRelations",
                columns: new[] { "SolverTaskId", "ObjectPoiId" });

            migrationBuilder.CreateIndex(
                name: "UN_SolverPoiRelationTypes_Name",
                schema: "opti",
                table: "SolverPoiRelationTypes",
                column: "PoiRelationName",
                unique: true,
                filter: "[PoiRelationName] IS NOT NULL");

            migrationBuilder.CreateIndex(
                name: "IX_SolverPois_SolverTaskId_CountryCode2",
                schema: "opti",
                table: "SolverPois",
                columns: new[] { "SolverTaskId", "CountryCode2" });

            migrationBuilder.CreateIndex(
                name: "IX_SolverPois_SolverTaskId_PricelistId",
                schema: "opti",
                table: "SolverPois",
                columns: new[] { "SolverTaskId", "PricelistId" });

            migrationBuilder.CreateIndex(
                name: "IX_SolverPricelist_PricelistTypeId",
                schema: "opti",
                table: "SolverPricelist",
                column: "PricelistTypeId");

            migrationBuilder.CreateIndex(
                name: "IX_SolverPricelist_SolverTaskId_SolverCarrierId",
                schema: "opti",
                table: "SolverPricelist",
                columns: new[] { "SolverTaskId", "SolverCarrierId" });

            migrationBuilder.CreateIndex(
                name: "IX_SolverPricelist_SolverTaskId_SolverTruckProfileId",
                schema: "opti",
                table: "SolverPricelist",
                columns: new[] { "SolverTaskId", "SolverTruckProfileId" });

            migrationBuilder.CreateIndex(
                name: "IX_SolverPricelistFeatures_PricelistFeatureTypeId",
                schema: "opti",
                table: "SolverPricelistFeatures",
                column: "PricelistFeatureTypeId");

            migrationBuilder.CreateIndex(
                name: "UN_SolverPricelistFeatureTypes_Name",
                schema: "opti",
                table: "SolverPricelistFeatureTypes",
                column: "PricelistFeatureName",
                unique: true,
                filter: "[PricelistFeatureName] IS NOT NULL");

            migrationBuilder.CreateIndex(
                name: "UN_SolverPricelistTypes_Name",
                schema: "opti",
                table: "SolverPricelistTypes",
                column: "PricelistTypeName",
                unique: true,
                filter: "[PricelistTypeName] IS NOT NULL");

            migrationBuilder.CreateIndex(
                name: "IX_SolverRouteBundleItems_SolverTaskId_SolverOrderId_OrderItemId",
                schema: "opti",
                table: "SolverRouteBundleItems",
                columns: new[] { "SolverTaskId", "SolverOrderId", "OrderItemId" });

            migrationBuilder.CreateIndex(
                name: "IX_SolverRouteBundles_BundleTypeId",
                schema: "opti",
                table: "SolverRouteBundles",
                column: "BundleTypeId");

            migrationBuilder.CreateIndex(
                name: "IX_SolverRouteEventBundles_SolverRouteId_BundleId",
                schema: "opti",
                table: "SolverRouteEventBundles",
                columns: new[] { "SolverRouteId", "BundleId" });

            migrationBuilder.CreateIndex(
                name: "IX_SolverRouteEventCosts_CostTypeId",
                schema: "opti",
                table: "SolverRouteEventCosts",
                column: "CostTypeId");

            migrationBuilder.CreateIndex(
                name: "IX_SolverRouteEventGates_SolverTaskId_SolverPoiGateId_IsVirtual",
                schema: "opti",
                table: "SolverRouteEventGates",
                columns: new[] { "SolverTaskId", "SolverPoiGateId", "IsVirtual" });

            migrationBuilder.CreateIndex(
                name: "IX_SolverRouteEventOrders_SolverTaskId_SolverOrderId",
                schema: "opti",
                table: "SolverRouteEventOrders",
                columns: new[] { "SolverTaskId", "SolverOrderId" });

            migrationBuilder.CreateIndex(
                name: "IX_SolverRouteEvents_EventTypeId_EventTypeScope",
                schema: "opti",
                table: "SolverRouteEvents",
                columns: new[] { "EventTypeId", "EventTypeScope" });

            migrationBuilder.CreateIndex(
                name: "IX_SolverRouteRelations_RouteRelationTypeId",
                schema: "opti",
                table: "SolverRouteRelations",
                column: "RouteRelationTypeId");

            migrationBuilder.CreateIndex(
                name: "IX_SolverRouteRelations_SolverSolutionId_ObjectRouteId",
                schema: "opti",
                table: "SolverRouteRelations",
                columns: new[] { "SolverSolutionId", "ObjectRouteId" });

            migrationBuilder.CreateIndex(
                name: "UN_SolverRouteRelationTypes_Name",
                schema: "opti",
                table: "SolverRouteRelationTypes",
                column: "RouteRelationName",
                unique: true,
                filter: "[RouteRelationName] IS NOT NULL");

            migrationBuilder.CreateIndex(
                name: "IX_SolverRoutes_SolverTaskId_FleetId",
                schema: "opti",
                table: "SolverRoutes",
                columns: new[] { "SolverTaskId", "FleetId" });

            migrationBuilder.CreateIndex(
                name: "IX_SolverRoutes_SolverTaskId_SolverCarrierId",
                schema: "opti",
                table: "SolverRoutes",
                columns: new[] { "SolverTaskId", "SolverCarrierId" });

            migrationBuilder.CreateIndex(
                name: "IX_SolverRoutes_SolverTaskId_SolverTruckProfileId",
                schema: "opti",
                table: "SolverRoutes",
                columns: new[] { "SolverTaskId", "SolverTruckProfileId" });

            migrationBuilder.CreateIndex(
                name: "UN_SolverRoutes_SolutionIdRouteId",
                schema: "opti",
                table: "SolverRoutes",
                columns: new[] { "SolverSolutionId", "SolverRouteId" },
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_SolverSolutions_SolverTaskId",
                schema: "opti",
                table: "SolverSolutions",
                column: "SolverTaskId");

            migrationBuilder.CreateIndex(
                name: "IX_SolverTasks_SolverTaskTypeId",
                schema: "opti",
                table: "SolverTasks",
                column: "SolverTaskTypeId");

            migrationBuilder.CreateIndex(
                name: "IX_SolverTasks_StatusId",
                schema: "opti",
                table: "SolverTasks",
                column: "StatusId");

            migrationBuilder.CreateIndex(
                name: "UN_SolverTasks_BestSolutionId",
                schema: "opti",
                table: "SolverTasks",
                columns: new[] { "SolverTaskId", "BestSolutionId" },
                unique: true,
                filter: "[BestSolutionId] IS NOT NULL");

            migrationBuilder.CreateIndex(
                name: "UN_SolverTaskStatuses_Name",
                schema: "opti",
                table: "SolverTaskStatuses",
                column: "Name",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "UN_SolverTaskTypes_Name",
                schema: "opti",
                table: "SolverTaskTypes",
                column: "Name",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "UN_SolverTimeWindowTypes_Name",
                schema: "opti",
                table: "SolverTimeWindowTypes",
                column: "Name",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "STATISTICS_LOG_IDX1",
                table: "STATISTICS_LOG",
                column: "APPNAME");

            migrationBuilder.CreateIndex(
                name: "STATISTICS_LOG_IDX2",
                table: "STATISTICS_LOG",
                column: "USER_ID");

            migrationBuilder.CreateIndex(
                name: "STATISTICS_LOG_IDX3",
                table: "STATISTICS_LOG",
                column: "STATION_IP");

            migrationBuilder.CreateIndex(
                name: "STATISTICS_LOG_IDX4",
                table: "STATISTICS_LOG",
                column: "USE_DT_LAST");

            migrationBuilder.CreateIndex(
                name: "STATISTICS_LOG_IDX5",
                table: "STATISTICS_LOG",
                column: "STAT_GROUP");

            migrationBuilder.CreateIndex(
                name: "STATISTICS_LOG_IDX6",
                table: "STATISTICS_LOG",
                column: "STAT_INFO");

            migrationBuilder.CreateIndex(
                name: "STATUS_IDX1",
                table: "STATUS",
                column: "TYP");

            migrationBuilder.CreateIndex(
                name: "STATUS_IDX2",
                table: "STATUS",
                column: "LP");

            migrationBuilder.CreateIndex(
                name: "STATUS_IDX3",
                table: "STATUS",
                column: "KOD");

            migrationBuilder.CreateIndex(
                name: "STATUS_IDX4",
                table: "STATUS",
                columns: new[] { "OBJ_ID", "KOD" });

            migrationBuilder.CreateIndex(
                name: "STATUS_SFM1",
                table: "STATUS",
                columns: new[] { "KOD", "OBJ_ID" });

            migrationBuilder.CreateIndex(
                name: "STATUS_UPRAWN_IDX1",
                table: "STATUS_UPRAWNIENIA",
                column: "STATUS_ID");

            migrationBuilder.CreateIndex(
                name: "STATUS_UPRAWN_IDX2",
                table: "STATUS_UPRAWNIENIA",
                columns: new[] { "TYP", "OBIEKT_ID" });

            migrationBuilder.CreateIndex(
                name: "STATUS_WIND_IDX1",
                table: "STATUS_WIND",
                column: "AKTYWNY");

            migrationBuilder.CreateIndex(
                name: "STATUS_WIND_IDX2",
                table: "STATUS_WIND",
                column: "SYSTEMOWY");

            migrationBuilder.CreateIndex(
                name: "STATUS_WIND_IDX3",
                table: "STATUS_WIND",
                column: "KOD");

            migrationBuilder.CreateIndex(
                name: "StatusOfStopOutsideMin_OBJ_REC_IDX1",
                schema: "geo",
                table: "StatusOfStopOutsideMin",
                columns: new[] { "ObjectTypeId", "ObjectId" });

            migrationBuilder.CreateIndex(
                name: "STATUSY_IDX1",
                table: "STATUSY",
                column: "ID_UZYTKOW");

            migrationBuilder.CreateIndex(
                name: "STATUSY_IDX2",
                table: "STATUSY",
                column: "ID_OBJ");

            migrationBuilder.CreateIndex(
                name: "STATUSY_IDX3",
                table: "STATUSY",
                column: "ID_REC");

            migrationBuilder.CreateIndex(
                name: "STATUSY_IDX4",
                table: "STATUSY",
                columns: new[] { "ID_OBJ", "ID_REC" });

            migrationBuilder.CreateIndex(
                name: "STATUSY_IDX5",
                table: "STATUSY",
                column: "SFM_SRV_STATE");

            migrationBuilder.CreateIndex(
                name: "STATUSY_IDX6",
                table: "STATUSY",
                column: "STATUS");

            migrationBuilder.CreateIndex(
                name: "STATUSY_IDX7",
                table: "STATUSY",
                column: "NIEZGODNY");

            migrationBuilder.CreateIndex(
                name: "STATUSY_IDX8",
                table: "STATUSY",
                column: "DATA");

            migrationBuilder.CreateIndex(
                name: "STATUSY_IDX9",
                table: "STATUSY",
                column: "IS_EXPORTED");

            migrationBuilder.CreateIndex(
                name: "STATUSY_SFM1",
                table: "STATUSY",
                columns: new[] { "DATA", "CZAS" });

            migrationBuilder.CreateIndex(
                name: "STATUSY_ZDARZ_IDX1",
                table: "STATUSY_ZDARZ",
                columns: new[] { "OBIEKT", "KOD_ZDARZ" });

            migrationBuilder.CreateIndex(
                name: "SYMB_ANOM_STAT_IDX1",
                table: "SYMBOLE_ANOMALII_STAT",
                column: "SYMBOLE_ANOMALII_ID");

            migrationBuilder.CreateIndex(
                name: "SYMB_ANOM_STAT_IDX2",
                table: "SYMBOLE_ANOMALII_STAT",
                column: "STATUS_ID");

            migrationBuilder.CreateIndex(
                name: "SRV_SYST_WYM_DANYCH_EXTIDX1",
                table: "SYST_WYM_DANYCH",
                column: "KOD");

            migrationBuilder.CreateIndex(
                name: "SWD_LOG_IDX1",
                table: "SYST_WYM_DANYCH_LOG",
                column: "SYST_WYM_DANYCH_ID");

            migrationBuilder.CreateIndex(
                name: "SWD_LOG_IDX2",
                table: "SYST_WYM_DANYCH_LOG",
                columns: new[] { "SYST_WYM_DANYCH_ID", "DT" });

            migrationBuilder.CreateIndex(
                name: "SWD_LOG_IDX3",
                table: "SYST_WYM_DANYCH_LOG",
                columns: new[] { "SYST_WYM_DANYCH_ID", "OBIEKT" });

            migrationBuilder.CreateIndex(
                name: "SWD_PARAMS_IDX1",
                table: "SYST_WYM_DANYCH_PARAMS",
                column: "SYST_WYM_DANYCH_ID");

            migrationBuilder.CreateIndex(
                name: "I_SYSTEM_USE_1",
                table: "SYSTEM_USE",
                column: "IDENTYFIKATOR");

            migrationBuilder.CreateIndex(
                name: "I_SYSTEM_USE_2",
                table: "SYSTEM_USE",
                column: "PROGRAM");

            migrationBuilder.CreateIndex(
                name: "SZ_ZL_INSTR_DOD_IDX1",
                table: "SZ_ZLEC_INSTR_DOD",
                column: "SZABLONY_ZLECEN_ID");

            migrationBuilder.CreateIndex(
                name: "SZABLONY_ZLECEN_IDX1",
                table: "SZABLONY_ZLECEN",
                column: "KLIENT_ID");

            migrationBuilder.CreateIndex(
                name: "SZABLONY_ZLECEN_IDX2",
                table: "SZABLONY_ZLECEN",
                column: "PLATNIK_ID");

            migrationBuilder.CreateIndex(
                name: "SZABLONY_ZLECEN_IDX3",
                table: "SZABLONY_ZLECEN",
                column: "PRZEWOZNIK_ID");

            migrationBuilder.CreateIndex(
                name: "SZABL_ZLEC_DOK_IDX1",
                table: "SZABLONY_ZLECEN_DOKUMENTY",
                column: "SZABLONY_ZLECEN_ID");

            migrationBuilder.CreateIndex(
                name: "SZ_ZL_POWIAD_IDX1",
                table: "SZABLONY_ZLECEN_POWIADOMIENIA",
                column: "SZABLONY_ZLECEN_ID");

            migrationBuilder.CreateIndex(
                name: "SZ_ZL_POZ_FA_IDX1",
                table: "SZABLONY_ZLECEN_POZ_FAKT",
                column: "SZABLONY_ZLECEN_ID");

            migrationBuilder.CreateIndex(
                name: "SZABLONY_ZLECEN_IDX11",
                table: "SZABLONY_ZLECEN_SAM",
                column: "SZABLONY_ZLECEN_ID");

            migrationBuilder.CreateIndex(
                name: "SZABL_ZLEC_WT_IDX1",
                table: "SZABLONY_ZLECEN_WYM_TABORU",
                column: "SZABLONY_ZLECEN_ID");

            migrationBuilder.CreateIndex(
                name: "SZABLONY_Z_ZW_IDX1",
                table: "SZABLONY_ZLECEN_ZA_WY",
                column: "SZABLONY_ZLECEN_ID");

            migrationBuilder.CreateIndex(
                name: "SZABLONY_Z_ZW_IDX2",
                table: "SZABLONY_ZLECEN_ZA_WY",
                column: "MIEJSCE_ID");

            migrationBuilder.CreateIndex(
                name: "SZABLONY_Z_ZW_IDX3",
                table: "SZABLONY_ZLECEN_ZA_WY",
                column: "TYP");

            migrationBuilder.CreateIndex(
                name: "SZABL_ZLEC_ZW_C_IDX1",
                table: "SZABLONY_ZLECEN_ZA_WY_CYST",
                column: "SZABLONY_ZLECEN_ID");

            migrationBuilder.CreateIndex(
                name: "SZKODY_IDX1",
                table: "SZKODY",
                column: "POLISA_ID");

            migrationBuilder.CreateIndex(
                name: "SZKODY_IDX2",
                table: "SZKODY",
                column: "TABOR_ID");

            migrationBuilder.CreateIndex(
                name: "SZKODY_IDX3",
                table: "SZKODY",
                column: "DATA_ZDARZENIA");

            migrationBuilder.CreateIndex(
                name: "SZKODY_IDX4",
                table: "SZKODY",
                column: "KIEROWCA_ID");

            migrationBuilder.CreateIndex(
                name: "SZKODY_IDX5",
                table: "SZKODY",
                column: "MAX_DATA_ZGLOSZ");

            migrationBuilder.CreateIndex(
                name: "SZKODY_IDX6",
                table: "SZKODY",
                column: "ZGLOSZONA");

            migrationBuilder.CreateIndex(
                name: "SZKODY_DOKUMENT_IDX1",
                table: "SZKODY_DOKUMENTY",
                column: "SZKODY_ID");

            migrationBuilder.CreateIndex(
                name: "SZKODY_DZIA_IDX1",
                table: "SZKODY_DZIALANIA",
                column: "SZKODY_ID");

            migrationBuilder.CreateIndex(
                name: "SZKODY_PRZY_IDX1",
                table: "SZKODY_PRZYCZYNY",
                column: "SZKODY_ID");

            migrationBuilder.CreateIndex(
                name: "SZKODY_REF_IDX1",
                table: "SZKODY_REFERENCJE",
                column: "SZKODY_ID");

            migrationBuilder.CreateIndex(
                name: "SZKODY_ROZ_IDX1",
                table: "SZKODY_ROZLICZENIA",
                column: "SZKODY_ID");

            migrationBuilder.CreateIndex(
                name: "SZKODY_STATUSY_IDX1",
                table: "SZKODY_STATUSY",
                column: "SZKODY_ID");

            migrationBuilder.CreateIndex(
                name: "SZKODY_ZD_IDX1",
                table: "SZKODY_ZDARZENIA",
                column: "SZKODY_ID");

            migrationBuilder.CreateIndex(
                name: "SZKODY_ZD_IDX2",
                table: "SZKODY_ZDARZENIA",
                column: "TYP_ID");

            migrationBuilder.CreateIndex(
                name: "SZKODY_ZD_IDX3",
                table: "SZKODY_ZDARZENIA",
                column: "DATA");

            migrationBuilder.CreateIndex(
                name: "DPS_Tacho_Zdarzenia_EXTIDX1",
                table: "T_TACHO_ZDARZENIA",
                columns: new[] { "ZESPOLOWA", "ZROBIONE", "ID_KIEROWCY", "ID_TABORU", "DATACZAS_OD", "DATACZAS_DO" },
                filter: "([Id_Taboru]>(0) AND [Id_Kierowcy]>(0) AND [Zespolowa] IS NULL)");

            migrationBuilder.CreateIndex(
                name: "DPS_Tacho_Zdarzenia_EXTIDX2",
                table: "T_TACHO_ZDARZENIA",
                columns: new[] { "ID_TABORU", "DATACZAS_OD", "DATACZAS_DO" },
                filter: "([Id_Taboru]>(0) AND [Id_Kierowcy]>(0))");

            migrationBuilder.CreateIndex(
                name: "IX_T_TACHO_Z_USER2",
                table: "T_TACHO_ZDARZENIA",
                columns: new[] { "DATACZAS_OD", "DATACZAS_DO", "ID_KIEROWCY" });

            migrationBuilder.CreateIndex(
                name: "IX_USER_T_TACHO",
                table: "T_TACHO_ZDARZENIA",
                columns: new[] { "ID_KIEROWCY", "ID_TABORU", "ID_TACHO_ZDARZENIA", "DATACZAS_OD" });

            migrationBuilder.CreateIndex(
                name: "SFM_TACHO_EXTIDX_BEGIN",
                table: "T_TACHO_ZDARZENIA",
                columns: new[] { "ID_SFM_TERM", "ID_SFM_System", "DATACZAS_OD", "TRYB", "ID_KIEROWCY", "ZROBIONE" });

            migrationBuilder.CreateIndex(
                name: "SFM_TACHO_EXTIDX_EXTID",
                table: "T_TACHO_ZDARZENIA",
                columns: new[] { "ID_SFM_TERM", "EXTID" });

            migrationBuilder.CreateIndex(
                name: "SFM_TACHO_EXTIDX3",
                table: "T_TACHO_ZDARZENIA",
                columns: new[] { "ID_KIEROWCY", "DT_FILTER" });

            migrationBuilder.CreateIndex(
                name: "SRV_TACHO_EXTIDX1",
                table: "T_TACHO_ZDARZENIA",
                columns: new[] { "ID_TABORU", "TYP_TERM", "CRC" });

            migrationBuilder.CreateIndex(
                name: "SRV_TACHO_EXTIDX2",
                table: "T_TACHO_ZDARZENIA",
                columns: new[] { "ID_TABORU", "ID_KIEROWCY", "TYP_TERM", "TRYB", "DATACZAS_OD" });

            migrationBuilder.CreateIndex(
                name: "SRV_TACHO_EXTIDX3",
                table: "T_TACHO_ZDARZENIA",
                columns: new[] { "ID_SFM_TERM", "DATACZAS_OD" });

            migrationBuilder.CreateIndex(
                name: "SRV_TACHO_EXTIDX4",
                table: "T_TACHO_ZDARZENIA",
                columns: new[] { "ID_TABORU", "DATACZAS_OD" });

            migrationBuilder.CreateIndex(
                name: "SRV_TACHO_EXTIDX5",
                table: "T_TACHO_ZDARZENIA",
                columns: new[] { "ZROBIONE", "ID_KIEROWCY", "ID_TABORU", "DATACZAS_OD", "TRYB" });

            migrationBuilder.CreateIndex(
                name: "T_TACHO_Z_IDX1",
                table: "T_TACHO_ZDARZENIA",
                columns: new[] { "CRC", "ID_KIEROWCY", "TYP_TERM", "TRYB" });

            migrationBuilder.CreateIndex(
                name: "T_TACHO_Z_IDX2",
                table: "T_TACHO_ZDARZENIA",
                columns: new[] { "ID_KIEROWCY", "TYP_TERM" });

            migrationBuilder.CreateIndex(
                name: "T_TACHO_Z_IDX3",
                table: "T_TACHO_ZDARZENIA",
                column: "ID_KIEROWCY");

            migrationBuilder.CreateIndex(
                name: "T_TACHO_Z_IDX4",
                table: "T_TACHO_ZDARZENIA",
                column: "ID_TABORU");

            migrationBuilder.CreateIndex(
                name: "T_TACHO_Z_IDX5",
                table: "T_TACHO_ZDARZENIA",
                column: "DATACZAS_OD");

            migrationBuilder.CreateIndex(
                name: "T_TACHO_Z_IDX6",
                table: "T_TACHO_ZDARZENIA",
                column: "DATACZAS_DO");

            migrationBuilder.CreateIndex(
                name: "T_TACHO_Z_IDX7",
                table: "T_TACHO_ZDARZENIA",
                columns: new[] { "ID_KIEROWCY", "DATACZAS_OD", "DATACZAS_DO" });

            migrationBuilder.CreateIndex(
                name: "T_TACHO_Z_IDX8",
                table: "T_TACHO_ZDARZENIA",
                columns: new[] { "ID_KIEROWCY", "DATACZAS_OD", "DATACZAS_DO", "TRYB" });

            migrationBuilder.CreateIndex(
                name: "T_TACHO_Z_SFM_IDX2",
                table: "T_TACHO_ZDARZENIA",
                column: "ID_KIEROWCY");

            migrationBuilder.CreateIndex(
                name: "T_TACHO_Z_user3",
                table: "T_TACHO_ZDARZENIA",
                columns: new[] { "ID_KIEROWCY", "DATACZAS_OD", "DATACZAS_DO" });

            migrationBuilder.CreateIndex(
                name: "T_TACHO_Z_user4",
                table: "T_TACHO_ZDARZENIA",
                columns: new[] { "DATACZAS_DO", "ID_KIEROWCY", "DATACZAS_OD" });

            migrationBuilder.CreateIndex(
                name: "TABELA_KONW_K_IDX1A",
                table: "TAB_KONW_KONTRAH",
                column: "SYST_WYM_DANYCH_ID");

            migrationBuilder.CreateIndex(
                name: "TABELA_KONW_K_IDX2A",
                table: "TAB_KONW_KONTRAH",
                columns: new[] { "SYST_WYM_DANYCH_ID", "SLOWNIK", "EXT_SYMBOL" });

            migrationBuilder.CreateIndex(
                name: "TABELA_KURSY_IDX1",
                table: "TABELA_KURSY",
                column: "DATA");

            migrationBuilder.CreateIndex(
                name: "TABELA_KURSY_IDX2",
                table: "TABELA_KURSY",
                column: "NAZWA");

            migrationBuilder.CreateIndex(
                name: "TABELA_KURSY_IDX3",
                table: "TABELA_KURSY",
                column: "DATA_OGLOSZENIA");

            migrationBuilder.CreateIndex(
                name: "IX_TABELA_KURSY_D_TYP",
                table: "TABELA_KURSY_D",
                column: "TYP");

            migrationBuilder.CreateIndex(
                name: "TABELA_KURSY_D_IDX1",
                table: "TABELA_KURSY_D",
                column: "DATA");

            migrationBuilder.CreateIndex(
                name: "TABELA_KURSY_D_IDX2",
                table: "TABELA_KURSY_D",
                column: "NAZWA");

            migrationBuilder.CreateIndex(
                name: "TABELA_KURSY_D_IDX3",
                table: "TABELA_KURSY_D",
                column: "DATA_OGLOSZENIA");

            migrationBuilder.CreateIndex(
                name: "DPS_TABELE_KONWERSJI_EXTIDX1",
                table: "TABELE_KONWERSJI",
                columns: new[] { "SYST_WYM_DANYCH_ID", "SLOWNIK", "KOD_EXT2" });

            migrationBuilder.CreateIndex(
                name: "SRV_TABELE_KONWERSJI_EXTIDX1",
                table: "TABELE_KONWERSJI",
                columns: new[] { "KOD_EXT", "SYST_WYM_DANYCH_ID", "SLOWNIK", "KOD_EXT2" });

            migrationBuilder.CreateIndex(
                name: "SRV_TABELE_KONWERSJI_EXTIDX2",
                table: "TABELE_KONWERSJI",
                columns: new[] { "KOD_SPEED", "SYST_WYM_DANYCH_ID", "SLOWNIK", "KOD_EXT2" });

            migrationBuilder.CreateIndex(
                name: "TABELE_KONW_IDX1",
                table: "TABELE_KONWERSJI",
                column: "SYST_WYM_DANYCH_ID");

            migrationBuilder.CreateIndex(
                name: "TABELE_KONWER_IDX1",
                table: "TABELE_KONWERSJI",
                column: "SYST_WYM_DANYCH_ID");

            migrationBuilder.CreateIndex(
                name: "SRV_TABKURSOW_DEF_EXTIDX1",
                table: "TABKURSOW_DEF",
                columns: new[] { "WALUTA", "SYMBOL" });

            migrationBuilder.CreateIndex(
                name: "SRV_TABKURSOW_WALUTY_EXTIDX1",
                table: "TABKURSOW_WALUTY",
                column: "TYP");

            migrationBuilder.CreateIndex(
                name: "IX_TABOR_AKTYWNY_ID_TABORU",
                table: "TABOR",
                columns: new[] { "AKTYWNY", "ID_TABORU" });

            migrationBuilder.CreateIndex(
                name: "IX_TABOR_AKTYWNY_MARKA_ROK_PRODUKCJI_ID_TABORU",
                table: "TABOR",
                columns: new[] { "AKTYWNY", "MARKA", "ROK_PRODUKCJI", "ID_TABORU" });

            migrationBuilder.CreateIndex(
                name: "IX_TABOR_AKTYWNY_OBCY_ID_TABORU",
                table: "TABOR",
                columns: new[] { "AKTYWNY", "OBCY", "ID_TABORU" });

            migrationBuilder.CreateIndex(
                name: "IX_TABOR_NR_REJ",
                table: "TABOR",
                column: "NR_REJ");

            migrationBuilder.CreateIndex(
                name: "IX_TABOR_TYP_POJAZDU_EXT",
                table: "TABOR",
                column: "TYP_POJAZDU_EXT");

            migrationBuilder.CreateIndex(
                name: "TABOR_IDX1",
                table: "TABOR",
                column: "UZYTKOWNIK_ID");

            migrationBuilder.CreateIndex(
                name: "TABOR_IDX10",
                table: "TABOR",
                column: "KIEROWCA2_ID");

            migrationBuilder.CreateIndex(
                name: "TABOR_IDX11",
                table: "TABOR",
                column: "IS_LEASING");

            migrationBuilder.CreateIndex(
                name: "TABOR_IDX2",
                table: "TABOR",
                column: "WLASCICIEL_ID");

            migrationBuilder.CreateIndex(
                name: "TABOR_IDX3",
                table: "TABOR",
                column: "AKTYWNY");

            migrationBuilder.CreateIndex(
                name: "TABOR_IDX4",
                table: "TABOR",
                column: "SFM_TERM_ID");

            migrationBuilder.CreateIndex(
                name: "TABOR_IDX5",
                table: "TABOR",
                column: "OBCY");

            migrationBuilder.CreateIndex(
                name: "TABOR_IDX6",
                table: "TABOR",
                column: "LOKALIZACJA");

            migrationBuilder.CreateIndex(
                name: "TABOR_IDX7",
                table: "TABOR",
                column: "HIST");

            migrationBuilder.CreateIndex(
                name: "TABOR_IDX8",
                table: "TABOR",
                column: "ID_NACZEPY");

            migrationBuilder.CreateIndex(
                name: "TABOR_IDX9",
                table: "TABOR",
                column: "KIEROWCA1_ID");

            migrationBuilder.CreateIndex(
                name: "TABOR_SFM1",
                table: "TABOR",
                column: "PROFIL");

            migrationBuilder.CreateIndex(
                name: "TABOR_SFMEXT_IDX1",
                table: "TABOR",
                columns: new[] { "ID_TABORU", "TYP_POJAZDU_EXT", "AKTYWNY" });

            migrationBuilder.CreateIndex(
                name: "TABOR_SFMEXT_IDX2",
                table: "TABOR",
                column: "AKTYWNY");

            migrationBuilder.CreateIndex(
                name: "TABOR_SFMEXT_IDX3",
                table: "TABOR",
                columns: new[] { "OBCY", "AKTYWNY" });

            migrationBuilder.CreateIndex(
                name: "tabor_user3",
                table: "TABOR",
                column: "ID_TABORU");

            migrationBuilder.CreateIndex(
                name: "TABOR_ADR_SPRZE_IDX1",
                table: "TABOR_ADR_SPRZET",
                column: "TABOR_ID");

            migrationBuilder.CreateIndex(
                name: "TABOR_AKUM_OB_IDX1",
                table: "TABOR_AKUM_OBSL",
                column: "TABOR_AKUM_ID");

            migrationBuilder.CreateIndex(
                name: "TABOR_AKUM_OB_IDX2",
                table: "TABOR_AKUM_OBSL",
                column: "TABOR_ID");

            migrationBuilder.CreateIndex(
                name: "TABOR_CERTYFIKA_IDX1",
                table: "TABOR_CERTYFIKATY",
                column: "TABOR_ID");

            migrationBuilder.CreateIndex(
                name: "TABOR_CERTYFIKA_IDX2",
                table: "TABOR_CERTYFIKATY",
                column: "CERTYFIKAT_ID");

            migrationBuilder.CreateIndex(
                name: "TABOR_CERTYFIKA_IDX3",
                table: "TABOR_CERTYFIKATY",
                column: "DATA_DO");

            migrationBuilder.CreateIndex(
                name: "TABOR_CERTYFIKA_IDX4",
                table: "TABOR_CERTYFIKATY",
                column: "DATA_OD");

            migrationBuilder.CreateIndex(
                name: "TABOR_FILTRY_IDX1",
                table: "TABOR_FILTRY",
                column: "TABOR_ID");

            migrationBuilder.CreateIndex(
                name: "TABOR_GRUPY_HIS_IDX1",
                table: "TABOR_GRUPY_HIST",
                column: "TABOR_ID");

            migrationBuilder.CreateIndex(
                name: "TABOR_GRUPY_HIS_IDX2",
                table: "TABOR_GRUPY_HIST",
                columns: new[] { "DATA_OD", "GODZ_OD" });

            migrationBuilder.CreateIndex(
                name: "TABOR_GRUPY_HIS_IDX3",
                table: "TABOR_GRUPY_HIST",
                column: "TABOR_GRUPY_ID");

            migrationBuilder.CreateIndex(
                name: "TABOR_HAMULCE_IDX1",
                table: "TABOR_HAMULCE",
                column: "TABOR_ID");

            migrationBuilder.CreateIndex(
                name: "TABOR_HL_IDX1",
                table: "TABOR_HISTLOG",
                column: "ID_TABOR");

            migrationBuilder.CreateIndex(
                name: "TABOR_HL_IDX2",
                table: "TABOR_HISTLOG",
                column: "ID_ZLECENIA");

            migrationBuilder.CreateIndex(
                name: "TABOR_HL_IDX3",
                table: "TABOR_HISTLOG",
                column: "ID_KIEROWCA");

            migrationBuilder.CreateIndex(
                name: "TABOR_HL_IDX4",
                table: "TABOR_HISTLOG",
                column: "DT_INFO");

            migrationBuilder.CreateIndex(
                name: "TABOR_HL_IDX5",
                table: "TABOR_HISTLOG",
                column: "TYP");

            migrationBuilder.CreateIndex(
                name: "TABOR_HL_IDX6",
                table: "TABOR_HISTLOG",
                columns: new[] { "AUTOMAT", "ZROBIONE" });

            migrationBuilder.CreateIndex(
                name: "TABOR_HL_IDX7",
                table: "TABOR_HISTLOG",
                column: "ID_SFM_MSG");

            migrationBuilder.CreateIndex(
                name: "TABOR_KAT_IDX1",
                table: "TABOR_KAT",
                column: "TABOR_ID");

            migrationBuilder.CreateIndex(
                name: "TABOR_KAT_IDX2",
                table: "TABOR_KAT",
                column: "KAT_ID");

            migrationBuilder.CreateIndex(
                name: "TABOR_KIEROWCY_IDX1",
                table: "TABOR_KIEROWCY",
                column: "TABOR_ID");

            migrationBuilder.CreateIndex(
                name: "TABOR_KIEROWCY_SFM1",
                table: "TABOR_KIEROWCY",
                column: "KIEROWCA_ID");

            migrationBuilder.CreateIndex(
                name: "TABOR_KIEROWCY_SFM2",
                table: "TABOR_KIEROWCY",
                column: "DATA_OD");

            migrationBuilder.CreateIndex(
                name: "TABOR_KIEROWCY_SFM3",
                table: "TABOR_KIEROWCY",
                column: "DATA_DO");

            migrationBuilder.CreateIndex(
                name: "TABOR_KIER_TEC_IDX1",
                table: "TABOR_KIEROWCY_TECZKA",
                column: "TABOR_KIEROWCY_ID");

            migrationBuilder.CreateIndex(
                name: "TABOR_KIER_WYP_IDX1",
                table: "TABOR_KIEROWCY_WYP",
                column: "TABOR_KIEROWCY_ID");

            migrationBuilder.CreateIndex(
                name: "TABOR_KM_MIES_IDX1",
                table: "TABOR_KM_MIES",
                column: "TABOR_ID");

            migrationBuilder.CreateIndex(
                name: "TABOR_KONTRAKT_IDX1",
                table: "TABOR_KONTRAKT",
                column: "TABOR_ID");

            migrationBuilder.CreateIndex(
                name: "TABOR_KONTRAKT_IDX2",
                table: "TABOR_KONTRAKT",
                column: "DT_OD");

            migrationBuilder.CreateIndex(
                name: "TABOR_KONTRAKT_IDX3",
                table: "TABOR_KONTRAKT",
                column: "TABOR_ZASTEPUJACY_ID");

            migrationBuilder.CreateIndex(
                name: "TABOR_KONTRAKT_IDX4",
                table: "TABOR_KONTRAKT",
                column: "TABOR_ZASTEPOWANY_ID");

            migrationBuilder.CreateIndex(
                name: "TABOR_LOK_HIST_IDX1",
                table: "TABOR_LOK_HIST",
                column: "TABOR_ID");

            migrationBuilder.CreateIndex(
                name: "TABOR_LOK_HIST_IDX2",
                table: "TABOR_LOK_HIST",
                columns: new[] { "DATA_OD", "GODZ_OD" });

            migrationBuilder.CreateIndex(
                name: "TABOR_LOK_HIST_IDX3",
                table: "TABOR_LOK_HIST",
                column: "LOKALIZACJA");

            migrationBuilder.CreateIndex(
                name: "TABOR_O_ADR_SPR_IDX1",
                table: "TABOR_O_ADR_SPRZET",
                column: "TABOR_O_ID");

            migrationBuilder.CreateIndex(
                name: "TABOR_O_CENNIK__IDX1",
                table: "TABOR_O_CENNIK_KGKM",
                column: "TABOR_O_ID");

            migrationBuilder.CreateIndex(
                name: "TABOR_O_CT_IDX1",
                table: "TABOR_O_CENNIK_TRASA",
                column: "TABOR_O_ID");

            migrationBuilder.CreateIndex(
                name: "TABOR_O_CT_IDX2",
                table: "TABOR_O_CENNIK_TRASA",
                column: "TRASA_ID");

            migrationBuilder.CreateIndex(
                name: "TABOR_O_CERTYFI_IDX1",
                table: "TABOR_O_CERTYFIKATY",
                column: "TABOR_O_ID");

            migrationBuilder.CreateIndex(
                name: "TABOR_O_CERTYFI_IDX2",
                table: "TABOR_O_CERTYFIKATY",
                column: "CERTYFIKAT_ID");

            migrationBuilder.CreateIndex(
                name: "TABOR_O_KIEROWC_IDX1",
                table: "TABOR_O_KIEROWCY",
                column: "TABOR_O_ID");

            migrationBuilder.CreateIndex(
                name: "TABOR_O_TERMIN_IDX1",
                table: "TABOR_O_TERMIN",
                column: "TABOR_O_ID");

            migrationBuilder.CreateIndex(
                name: "TABOR_O_TERMIN_IDX2",
                table: "TABOR_O_TERMIN",
                column: "CZYNNOSC_ID");

            migrationBuilder.CreateIndex(
                name: "TABOR_OPONY_IDX2",
                table: "TABOR_OPONY",
                column: "TABOR_OPONY_ID");

            migrationBuilder.CreateIndex(
                name: "TABOR_OP_KAT_IDX1",
                table: "TABOR_OPONY_KAT",
                column: "TABOR_OPONY_ID");

            migrationBuilder.CreateIndex(
                name: "TABOR_OP_KAT_IDX2",
                table: "TABOR_OPONY_KAT",
                column: "KAT_ID");

            migrationBuilder.CreateIndex(
                name: "TABOR_OP_KM_PW_IDX1",
                table: "TABOR_OPONY_KM_PW",
                column: "TABOR_OPONY_ID");

            migrationBuilder.CreateIndex(
                name: "TABOR_OP_KM_PW_IDX2",
                table: "TABOR_OPONY_KM_PW",
                column: "WYJAZDY_ID");

            migrationBuilder.CreateIndex(
                name: "TABOR_OPONY_OB_IDX1",
                table: "TABOR_OPONY_OBSL",
                column: "TABOR_OPONY_ID");

            migrationBuilder.CreateIndex(
                name: "TABOR_OPONY_OB_IDX2",
                table: "TABOR_OPONY_OBSL",
                column: "TABOR_ID");

            migrationBuilder.CreateIndex(
                name: "TABOR_OSIE_IDX1",
                table: "TABOR_OSIE",
                column: "TABOR_ID");

            migrationBuilder.CreateIndex(
                name: "TABOR_OST_LADUN_IDX1",
                table: "TABOR_OST_LADUNKI",
                column: "TABOR_ID");

            migrationBuilder.CreateIndex(
                name: "TABOR_OST_LADUNKI_SFMIDX1",
                table: "TABOR_OST_LADUNKI",
                columns: new[] { "TABOR_ID", "KOMORA" });

            migrationBuilder.CreateIndex(
                name: "TABOR_REZERW_IDX1",
                table: "TABOR_REZERWACJE",
                column: "TABOR_ID");

            migrationBuilder.CreateIndex(
                name: "TABOR_REZERW_IDX2",
                table: "TABOR_REZERWACJE",
                column: "KLIENT_ID");

            migrationBuilder.CreateIndex(
                name: "TABOR_REZERWACJE_SFMEXT_IDX1",
                table: "TABOR_REZERWACJE",
                columns: new[] { "TABOR_ID", "DATA_OD" });

            migrationBuilder.CreateIndex(
                name: "TABOR_REZ_POI_IDX1",
                table: "TABOR_REZERWACJE_POI",
                column: "TABOR_REZERWACJE_ID");

            migrationBuilder.CreateIndex(
                name: "TABOR_TECZKA_KI_IDX1",
                table: "TABOR_TECZKA_KIEROWCY",
                column: "TABOR_ID");

            migrationBuilder.CreateIndex(
                name: "TABOR_TECZKA_SZ_IDX1",
                table: "TABOR_TECZKA_SZABLON_POZ",
                column: "TABOR_TECZKA_SZABLON_ID");

            migrationBuilder.CreateIndex(
                name: "TABOR_TERMIN_IDX1",
                table: "TABOR_TERMIN",
                column: "TABOR_ID");

            migrationBuilder.CreateIndex(
                name: "TABOR_TERMIN_IDX2",
                table: "TABOR_TERMIN",
                column: "CZYNNOSC_ID");

            migrationBuilder.CreateIndex(
                name: "TABOR_TERMIN_IDX3",
                table: "TABOR_TERMIN",
                column: "DATA");

            migrationBuilder.CreateIndex(
                name: "TABOR_TERMIN_IDX4",
                table: "TABOR_TERMIN",
                column: "WSKAZNIK");

            migrationBuilder.CreateIndex(
                name: "TABOR_TERMIN_HI_IDX1",
                table: "TABOR_TERMIN_HIST",
                column: "TABOR_ID");

            migrationBuilder.CreateIndex(
                name: "TABOR_TERMIN_SZ_IDX1",
                table: "TABOR_TERMIN_SZABLON_POZ",
                column: "TABOR_TERMIN_SZABLON_ID");

            migrationBuilder.CreateIndex(
                name: "TABOR_UBEZP_IDX1",
                table: "TABOR_UBEZP",
                column: "TABOR_ID");

            migrationBuilder.CreateIndex(
                name: "TABOR_UBEZP_IDX2",
                table: "TABOR_UBEZP",
                column: "DATA_PLATNOSCI");

            migrationBuilder.CreateIndex(
                name: "TABOR_UBEZP_IDX3",
                table: "TABOR_UBEZP",
                column: "DATA_ZAPLATY");

            migrationBuilder.CreateIndex(
                name: "TABOR_WYPOS_SZA_IDX1",
                table: "TABOR_WYPOS_SZABLON_POZ",
                column: "TABOR_WYPOS_SZABLON_ID");

            migrationBuilder.CreateIndex(
                name: "TABOR_WYPOS_SZA_IDX2",
                table: "TABOR_WYPOS_SZABLON_POZ",
                column: "TYP");

            migrationBuilder.CreateIndex(
                name: "TABOR_WYPOSAZEN_IDX1",
                table: "TABOR_WYPOSAZENIE",
                column: "TABOR_ID");

            migrationBuilder.CreateIndex(
                name: "TABOR_WYPOSAZEN_IDX2",
                table: "TABOR_WYPOSAZENIE",
                column: "W_MAG_WYDANIA_POZ_ID");

            migrationBuilder.CreateIndex(
                name: "TABOR_WYPOSAZEN_IDX3",
                table: "TABOR_WYPOSAZENIE",
                column: "TYP");

            migrationBuilder.CreateIndex(
                name: "TABOR_ZAWORY_IDX1",
                table: "TABOR_ZAWORY",
                column: "TABOR_ID");

            migrationBuilder.CreateIndex(
                name: "ix_ID_TABORU",
                schema: "opti",
                table: "TaborWyposazenie",
                column: "ID_TABORU");

            migrationBuilder.CreateIndex(
                name: "ix_SessionId",
                schema: "opti",
                table: "TaborWyposazenie",
                column: "SessionId");

            migrationBuilder.CreateIndex(
                name: "ix_SolverTaskId",
                schema: "opti",
                table: "TaborWyposazenie",
                column: "SolverTaskId");

            migrationBuilder.CreateIndex(
                name: "TACHO_IDX1",
                table: "TACHO",
                column: "DATA");

            migrationBuilder.CreateIndex(
                name: "TACHO_PUNKTY_IDX1",
                table: "TACHO_PUNKTY",
                column: "ID_TACHO");

            migrationBuilder.CreateIndex(
                name: "TACHO_ZDARZ_IDX1",
                table: "TACHO_ZDARZENIA",
                column: "ID_TACHO");

            migrationBuilder.CreateIndex(
                name: "TACHO_ZDARZ_IDX2",
                table: "TACHO_ZDARZENIA",
                column: "DATACZAS_OD");

            migrationBuilder.CreateIndex(
                name: "TACHO_ZDARZ_IDX3",
                table: "TACHO_ZDARZENIA",
                column: "DATACZAS_DO");

            migrationBuilder.CreateIndex(
                name: "TEKSTY_CRM_IDX1",
                table: "TEKSTY_CRM",
                column: "KONT_CEL");

            migrationBuilder.CreateIndex(
                name: "TERMINARZ_IDX1",
                table: "TERMINARZ",
                column: "DATA");

            migrationBuilder.CreateIndex(
                name: "TERMINARZ_IDX2",
                table: "TERMINARZ",
                column: "DATA_WYKONANIA");

            migrationBuilder.CreateIndex(
                name: "TERMINARZ_IDX3",
                table: "TERMINARZ",
                column: "KLIENT_ID");

            migrationBuilder.CreateIndex(
                name: "TERMINARZ_IDX4",
                table: "TERMINARZ",
                column: "KONTRAHENCI_CRM_ID");

            migrationBuilder.CreateIndex(
                name: "TERMINARZ_IDX5",
                table: "TERMINARZ",
                column: "TABOR_ID");

            migrationBuilder.CreateIndex(
                name: "TERMINARZ_IDX6",
                table: "TERMINARZ",
                column: "KIEROWCA_ID");

            migrationBuilder.CreateIndex(
                name: "TERMINARZ_IDX7",
                table: "TERMINARZ",
                column: "LOKALIZACJA");

            migrationBuilder.CreateIndex(
                name: "TERMINARZ_IDX8",
                table: "TERMINARZ",
                columns: new[] { "OBJ_TYP", "OBJ_ID" });

            migrationBuilder.CreateIndex(
                name: "TerminateAppRequest_ExtIdx3",
                table: "TerminateAppRequest",
                columns: new[] { "ForceTerminateDate", "ExpireDate", "AppName" },
                filter: "([Disabled]=(0))");

            migrationBuilder.CreateIndex(
                name: "TerminateAppRequestSessions_ExtIdx1",
                table: "TerminateAppRequestSessions",
                column: "TerminateAppRequestId");

            migrationBuilder.CreateIndex(
                name: "lng_Text_Hash_ExtIdx1",
                schema: "lng",
                table: "Text",
                column: "Hash");

            migrationBuilder.CreateIndex(
                name: "TMP_BankTransferPrepare_IDX1",
                table: "TMP_BankTransferPrepare",
                column: "SessionId");

            migrationBuilder.CreateIndex(
                name: "TMP_CalcCarwash_IDX1",
                table: "TMP_CalcCarwash",
                column: "sessionId");

            migrationBuilder.CreateIndex(
                name: "TMP_CheckPointInfo_IDX1",
                table: "TMP_CheckPointInfo",
                column: "guid");

            migrationBuilder.CreateIndex(
                name: "TMP_CheckPointInfo_IDX2",
                table: "TMP_CheckPointInfo",
                column: "inSessionId");

            migrationBuilder.CreateIndex(
                name: "TMP_OrderPlanning_IDX1",
                table: "TMP_OrderPlanning",
                column: "sessionId");

            migrationBuilder.CreateIndex(
                name: "POLISY_IDX11",
                table: "TMP_POLISY",
                column: "TABOR_ID");

            migrationBuilder.CreateIndex(
                name: "POLISY_IDX21",
                table: "TMP_POLISY",
                column: "UBEZPIECZYCIEL_ID");

            migrationBuilder.CreateIndex(
                name: "POLISY_IDX31",
                table: "TMP_POLISY",
                column: "DATA_DO");

            migrationBuilder.CreateIndex(
                name: "POLISY_IDX41",
                table: "TMP_POLISY",
                column: "AKTYWNA");

            migrationBuilder.CreateIndex(
                name: "POLISY_POJAZDY_IDX11",
                table: "TMP_POLISY_POJAZDY",
                column: "POLISY_ID");

            migrationBuilder.CreateIndex(
                name: "POLISY_POJAZDY_IDX21",
                table: "TMP_POLISY_POJAZDY",
                column: "TABOR_ID");

            migrationBuilder.CreateIndex(
                name: "POLISY_SKLADKI_IDX11",
                table: "TMP_POLISY_SKLADKI",
                column: "POLISY_ID");

            migrationBuilder.CreateIndex(
                name: "POLISY_SKLADKI_IDX21",
                table: "TMP_POLISY_SKLADKI",
                column: "TERMIN");

            migrationBuilder.CreateIndex(
                name: "POLISY_SKLADKI_IDX31",
                table: "TMP_POLISY_SKLADKI",
                column: "ZAPLACONO");

            migrationBuilder.CreateIndex(
                name: "TMP_RPT_ID_LIST_IDX1",
                table: "TMP_RPT_ID_LIST",
                column: "SESJA");

            migrationBuilder.CreateIndex(
                name: "TMP_WYDRUKI_MAILE_IDX1",
                table: "TMP_WYDRUKI_MAILE",
                columns: new[] { "ID_SESJI_KALK", "WYROZNIK" });

            migrationBuilder.CreateIndex(
                name: "WYM_OPAK_ROZL_IDX1",
                table: "TMP_WYM_OPAK_ROZL",
                column: "PRZESYLKI_ID");

            migrationBuilder.CreateIndex(
                name: "WYM_OPAK_ROZL_IDX2",
                table: "TMP_WYM_OPAK_ROZL",
                column: "LISTY_LINIOWE_ID");

            migrationBuilder.CreateIndex(
                name: "TMP_ZLECENIA_C_IDX1",
                table: "TMP_ZLECENIA_C",
                column: "UPOWAZNIENIE_ID");

            migrationBuilder.CreateIndex(
                name: "TMP_ZLECENIA_C_IDX2",
                table: "TMP_ZLECENIA_C",
                column: "ZABEZPIECZENIE_ID");

            migrationBuilder.CreateIndex(
                name: "TMP_ZLECENIA_C_IDX3",
                table: "TMP_ZLECENIA_C",
                column: "MRN");

            migrationBuilder.CreateIndex(
                name: "TMP_ZLEC_OST_LAD_IDX1",
                table: "TMP_ZLECENIA_OST_LADUNKI",
                column: "ID_SESJI_KALK");

            migrationBuilder.CreateIndex(
                name: "IX_ToolGroupDefinition_ToolId",
                schema: "app",
                table: "ToolGroupDefinition",
                column: "ToolId");

            migrationBuilder.CreateIndex(
                name: "TRANS_IDX1",
                table: "TRANS",
                column: "USER_ID");

            migrationBuilder.CreateIndex(
                name: "TRANS_MQTT_DONE",
                table: "TRANS_MQTT",
                column: "done");

            migrationBuilder.CreateIndex(
                name: "TRANS_OFFER_DETAILS_IDX1",
                table: "TRANS_OFFER_DETAILS",
                column: "offer_id");

            migrationBuilder.CreateIndex(
                name: "TRANS_OFFERS_IDX1",
                table: "TRANS_OFFERS",
                columns: new[] { "obj_id", "rec_id" });

            migrationBuilder.CreateIndex(
                name: "TRASH_ORDER_IDX1",
                table: "TRASH_ORDER",
                column: "TRASH_ORDER_DATE");

            migrationBuilder.CreateIndex(
                name: "TRASY_IDX1",
                table: "TRASY",
                column: "KLIENT_ID");

            migrationBuilder.CreateIndex(
                name: "TRASY_WYZNACZNI_IDX1",
                table: "TRASY_WYZNACZNIKI",
                column: "TRASY_ID");

            migrationBuilder.CreateIndex(
                name: "SRV_TYPY_POJAZDOW_EXTIDX1",
                table: "TYPY_POJAZDOW",
                column: "KOD");

            migrationBuilder.CreateIndex(
                name: "TYPY_WAGONOW_IDX1",
                table: "TYPY_WAGONOW",
                column: "RODZAJ_WAGONU_ID");

            migrationBuilder.CreateIndex(
                name: "UPOWAZNIENIA_IDX1",
                table: "UPOWAZNIENIA",
                column: "WAZNE");

            migrationBuilder.CreateIndex(
                name: "IX_URLOPY_KIEROWCY_ID",
                table: "URLOPY",
                column: "KIEROWCY_ID");

            migrationBuilder.CreateIndex(
                name: "URLOPY_IDX1",
                table: "URLOPY",
                column: "KIEROWCY_ID");

            migrationBuilder.CreateIndex(
                name: "URLOPY_KIEROWCY_IDX1",
                table: "URLOPY_KIEROWCY",
                column: "URLOPY_ID");

            migrationBuilder.CreateIndex(
                name: "URLOPY_KONTRAHENCI_IDX1",
                table: "URLOPY_KONTRAHENCI",
                column: "URLOPY_ID");

            migrationBuilder.CreateIndex(
                name: "URLOPY_ZASTEPUJACY_IDX1",
                table: "URLOPY_ZASTEPUJACY",
                column: "URLOPY_ID");

            migrationBuilder.CreateIndex(
                name: "USER_LOGINHIST_IDX1",
                table: "USER_LOGINHIST",
                column: "DT");

            migrationBuilder.CreateIndex(
                name: "USER_LOGINHIST_IDX2",
                table: "USER_LOGINHIST",
                column: "ID_USER");

            migrationBuilder.CreateIndex(
                name: "USER_LOGINHIST_IDX3",
                table: "USER_LOGINHIST",
                column: "USERLOGIN");

            migrationBuilder.CreateIndex(
                name: "USER_LOGINHIST_IDX4",
                table: "USER_LOGINHIST",
                column: "ADMINLOGIN");

            migrationBuilder.CreateIndex(
                name: "USERAPPDEFPROF_IDX1",
                table: "USERAPPDEFPROFILE",
                columns: new[] { "APPNAME", "ID_USER" });

            migrationBuilder.CreateIndex(
                name: "USERAPPDEFPROF_IDX2",
                table: "USERAPPDEFPROFILE",
                columns: new[] { "ID_USER", "DZIAL" });

            migrationBuilder.CreateIndex(
                name: "USR_OPT_IDX1",
                table: "USEROPTIONS",
                column: "ID_USER");

            migrationBuilder.CreateIndex(
                name: "USR_OPT_IDX2",
                table: "USEROPTIONS",
                columns: new[] { "ID_USER", "APPNAME" });

            migrationBuilder.CreateIndex(
                name: "USR_OPT_DB_IDX1",
                table: "USEROPTIONS_DB",
                column: "ID_USER");

            migrationBuilder.CreateIndex(
                name: "USR_OPT_DB_IDX2",
                table: "USEROPTIONS_DB",
                columns: new[] { "ID_USER", "APPNAME" });

            migrationBuilder.CreateIndex(
                name: "USR_OPT_DB_IDX3",
                table: "USEROPTIONS_DB",
                columns: new[] { "ID_USER", "APPNAME", "SECTION", "OPT_NAME" });

            migrationBuilder.CreateIndex(
                name: "USERPROFILE_IDX1",
                table: "USERPROFILE",
                column: "ID_USER");

            migrationBuilder.CreateIndex(
                name: "USERPROFILE_IDX2",
                table: "USERPROFILE",
                column: "ID_PROFILE");

            migrationBuilder.CreateIndex(
                name: "USERPROFILE_IDX3",
                table: "USERPROFILE",
                column: "PROGRAM");

            migrationBuilder.CreateIndex(
                name: "Note_IDX1",
                table: "UwagiDoTerminow",
                columns: new[] { "Typ", "RecordId" });

            migrationBuilder.CreateIndex(
                name: "VehicleETA_IDX0",
                table: "VehicleETA",
                columns: new[] { "vehicleId", "idVehicleETA" },
                filter: "([vehicleId]>(0) AND [mode]=(0))");

            migrationBuilder.CreateIndex(
                name: "VehicleETA_IDX1",
                table: "VehicleETA",
                columns: new[] { "vehicleId", "idVehicleETA" },
                filter: "([vehicleId]>(0) AND [mode]=(1))");

            migrationBuilder.CreateIndex(
                name: "VehicleETA_IDX2",
                table: "VehicleETA",
                columns: new[] { "vehicleId", "dtNextRun" });

            migrationBuilder.CreateIndex(
                name: "VehicleETA_IDX3",
                table: "VehicleETA",
                columns: new[] { "idVehicleETA", "dtNextRun" });

            migrationBuilder.CreateIndex(
                name: "W_DANE_Z_WZ_P_IDX1",
                table: "W_DANE_ZEWN_WZ_POZ",
                column: "W_DANE_ZEWN_WZ_ID");

            migrationBuilder.CreateIndex(
                name: "W_DANE_Z_WZ_P_IDX2",
                table: "W_DANE_ZEWN_WZ_POZ",
                column: "W_MAG_TOWARY_ID");

            migrationBuilder.CreateIndex(
                name: "W_DANE_Z_WZ_P_IDX3",
                table: "W_DANE_ZEWN_WZ_POZ",
                column: "W_MAG_WYDANIA_POZ_ID");

            migrationBuilder.CreateIndex(
                name: "W_DANE_Z_WZ_P_IDX4",
                table: "W_DANE_ZEWN_WZ_POZ",
                column: "W_ZLECENIA_POZ_ID");

            migrationBuilder.CreateIndex(
                name: "W_GRUPY_PRZEGLA_IDX1",
                table: "W_GRUPY_PRZEGLAD_POZ",
                column: "W_GRUPY_PRZEGLAD_ID");

            migrationBuilder.CreateIndex(
                name: "W_GRUPY_PRZEGLA_IDX2",
                table: "W_GRUPY_PRZEGLAD_POZ",
                column: "W_PRZEGLAD_POZ_ID");

            migrationBuilder.CreateIndex(
                name: "W_GR_PRZ_POZ_ZL_IDX1",
                table: "W_GRUPY_PRZEGLAD_POZ_ZLEC",
                column: "W_GRUPY_PRZEGLAD_POZ_ID");

            migrationBuilder.CreateIndex(
                name: "W_GRUPY_RAB_K_IDX1",
                table: "W_GRUPY_RABATOWE_KONTRAH",
                column: "W_GRUPY_RABATOWE_ID");

            migrationBuilder.CreateIndex(
                name: "W_GRUPY_RAB_K_IDX2",
                table: "W_GRUPY_RABATOWE_KONTRAH",
                column: "KONTRAH_ID");

            migrationBuilder.CreateIndex(
                name: "W_MAG_INWENT_IDX1",
                table: "W_MAG_INWENT",
                column: "W_MAG_WYDANIA_ID");

            migrationBuilder.CreateIndex(
                name: "W_MAG_INWENT_IDX2",
                table: "W_MAG_INWENT",
                column: "W_MAG_PRZYJECIA_ID");

            migrationBuilder.CreateIndex(
                name: "W_MAG_INW_POZ_IDX1",
                table: "W_MAG_INWENT_POZ",
                column: "W_MAG_TOWARY_ID");

            migrationBuilder.CreateIndex(
                name: "W_MAG_INW_POZ_IDX2",
                table: "W_MAG_INWENT_POZ",
                column: "W_MAG_WYDANIA_POZ_ID");

            migrationBuilder.CreateIndex(
                name: "W_MAG_INW_POZ_IDX3",
                table: "W_MAG_INWENT_POZ",
                column: "W_MAG_PRZYJECIA_POZ_ID");

            migrationBuilder.CreateIndex(
                name: "W_MAG_INW_POZ_IDX4",
                table: "W_MAG_INWENT_POZ",
                column: "W_MAG_INWENT_ID");

            migrationBuilder.CreateIndex(
                name: "W_MAG_PRZYJECIA_IDX1",
                table: "W_MAG_PRZYJECIA",
                column: "KONTRAH_ID");

            migrationBuilder.CreateIndex(
                name: "W_MAG_PRZYJECIA_IDX2",
                table: "W_MAG_PRZYJECIA",
                column: "KOREKTA_DO_PZ_ID");

            migrationBuilder.CreateIndex(
                name: "W_MAG_PPOZ_IDX1",
                table: "W_MAG_PRZYJECIA_POZ",
                column: "W_MAG_PRZYJECIA_ID");

            migrationBuilder.CreateIndex(
                name: "W_MAG_PPOZ_IDX2",
                table: "W_MAG_PRZYJECIA_POZ",
                column: "W_MAG_TOWARY_ID");

            migrationBuilder.CreateIndex(
                name: "W_MAG_PPOZ_IDX3",
                table: "W_MAG_PRZYJECIA_POZ",
                column: "W_FAKTURA_K_ID");

            migrationBuilder.CreateIndex(
                name: "W_MAG_TOWARY_IDX1",
                table: "W_MAG_TOWARY",
                column: "SYMBOL_TOWARU");

            migrationBuilder.CreateIndex(
                name: "W_MAG_TOWARY_KO_IDX1",
                table: "W_MAG_TOWARY_KONTRAH",
                column: "W_MAG_TOWARY_ID");

            migrationBuilder.CreateIndex(
                name: "W_MAG_TOWARY_KO_IDX2",
                table: "W_MAG_TOWARY_KONTRAH",
                column: "KONTRAH_ID");

            migrationBuilder.CreateIndex(
                name: "W_MAG_TOWARY_KO_IDX3",
                table: "W_MAG_TOWARY_KONTRAH",
                column: "SYMBOL_TOWARU");

            migrationBuilder.CreateIndex(
                name: "W_MAG_TOWARY_ZA_IDX1",
                table: "W_MAG_TOWARY_ZAMIENNIKI",
                column: "W_MAG_TOWARY_NADRZ_ID");

            migrationBuilder.CreateIndex(
                name: "W_MAG_TOWARY_ZA_IDX2",
                table: "W_MAG_TOWARY_ZAMIENNIKI",
                column: "W_MAG_TOWARY_PODRZ_ID");

            migrationBuilder.CreateIndex(
                name: "W_MAG_WYDANIA_IDX1",
                table: "W_MAG_WYDANIA",
                column: "KONTRAH_ID");

            migrationBuilder.CreateIndex(
                name: "W_MAG_WPOZ_IDX1",
                table: "W_MAG_WYDANIA_POZ",
                column: "W_MAG_WYDANIA_ID");

            migrationBuilder.CreateIndex(
                name: "W_MAG_WPOZ_IDX2",
                table: "W_MAG_WYDANIA_POZ",
                column: "W_MAG_TOWARY_ID");

            migrationBuilder.CreateIndex(
                name: "W_MAG_WPOZ_IDX3",
                table: "W_MAG_WYDANIA_POZ",
                column: "MAG_OBCY_FAKT_ID");

            migrationBuilder.CreateIndex(
                name: "W_MAG_WPOZ_IDX4",
                table: "W_MAG_WYDANIA_POZ",
                column: "MAG_OBCY_FAKT_POZ_ID");

            migrationBuilder.CreateIndex(
                name: "W_MAG_ZAM_POZ_IDX1",
                table: "W_MAG_ZAMOWIENIA_POZ",
                column: "W_MAG_ZAMOWIENIA_ID");

            migrationBuilder.CreateIndex(
                name: "W_MAG_ZAM_POZ_IDX2",
                table: "W_MAG_ZAMOWIENIA_POZ",
                column: "W_MAG_TOWARY_ID");

            migrationBuilder.CreateIndex(
                name: "W_MAG_ZAM_POZ_IDX3",
                table: "W_MAG_ZAMOWIENIA_POZ",
                column: "PZ_POZ_ID");

            migrationBuilder.CreateIndex(
                name: "W_MAG_ZAM_POZ_IDX4",
                table: "W_MAG_ZAMOWIENIA_POZ",
                column: "FAKTURA_POZ_ID");

            migrationBuilder.CreateIndex(
                name: "W_MYCIE_POZ_ZL_IDX1",
                table: "W_MYCIE_POZ_ZLEC",
                column: "W_MYCIE_POZ_ID");

            migrationBuilder.CreateIndex(
                name: "W_PRACOWNICY_WY_IDX1",
                table: "W_PRACOWNICY_WYPOSAZENIE",
                column: "W_PRACOWNICY_ID");

            migrationBuilder.CreateIndex(
                name: "W_PRACOWNICY_WY_IDX2",
                table: "W_PRACOWNICY_WYPOSAZENIE",
                column: "KIEROWCY_ID");

            migrationBuilder.CreateIndex(
                name: "W_PRACOWNICY_WY_IDX3",
                table: "W_PRACOWNICY_WYPOSAZENIE",
                column: "W_MAG_WYDANIA_POZ_ID");

            migrationBuilder.CreateIndex(
                name: "W_PRACOWNICY_WY_IDX4",
                table: "W_PRACOWNICY_WYPOSAZENIE",
                column: "TYP");

            migrationBuilder.CreateIndex(
                name: "W_PZ_WZ_IDX1",
                table: "W_PZ_WZ",
                column: "W_MAG_WYDANIA_POZ_ID");

            migrationBuilder.CreateIndex(
                name: "W_PZ_WZ_IDX2",
                table: "W_PZ_WZ",
                column: "W_MAG_PRZYJECIA_POZ_ID");

            migrationBuilder.CreateIndex(
                name: "W_PZ_WZ_IDX3",
                table: "W_PZ_WZ",
                column: "W_MAG_TOWARY_ID");

            migrationBuilder.CreateIndex(
                name: "W_RODZ_DOK_IDX1",
                table: "W_RODZ_DOK",
                column: "NAZWA");

            migrationBuilder.CreateIndex(
                name: "W_RODZ_DOK_IDX2",
                table: "W_RODZ_DOK",
                column: "KIERUNEK");

            migrationBuilder.CreateIndex(
                name: "W_RODZ_DOK_IDX3",
                table: "W_RODZ_DOK",
                column: "AKTYWNY");

            migrationBuilder.CreateIndex(
                name: "W_TERMINARZ_IDX1",
                table: "W_TERMINARZ",
                column: "W_ZLECENIE_ID");

            migrationBuilder.CreateIndex(
                name: "W_TERMINARZ_IDX2",
                table: "W_TERMINARZ",
                column: "W_STANOWISKA_ID");

            migrationBuilder.CreateIndex(
                name: "W_TERMINARZ_IDX3",
                table: "W_TERMINARZ",
                column: "W_ZLECENIE_OFERTY_ID");

            migrationBuilder.CreateIndex(
                name: "W_TERM_PRAC_IDX1",
                table: "W_TERMINARZ_PRAC",
                column: "W_TERMINARZ_ID");

            migrationBuilder.CreateIndex(
                name: "W_TERM_PRAC_IDX2",
                table: "W_TERMINARZ_PRAC",
                column: "W_ZLECENIE_POZ_ID");

            migrationBuilder.CreateIndex(
                name: "W_TERM_PRAC_IDX3",
                table: "W_TERMINARZ_PRAC",
                column: "W_ZLECENIE_ID");

            migrationBuilder.CreateIndex(
                name: "W_TERM_PRAC_IDX4",
                table: "W_TERMINARZ_PRAC",
                column: "W_PRACOWNICY_ID");

            migrationBuilder.CreateIndex(
                name: "W_ZLEC_IDX1",
                table: "W_ZLECENIA",
                column: "DATA_WYSTAWIENIA");

            migrationBuilder.CreateIndex(
                name: "W_ZLEC_IDX2",
                table: "W_ZLECENIA",
                column: "STATUS");

            migrationBuilder.CreateIndex(
                name: "W_ZLEC_IDX3",
                table: "W_ZLECENIA",
                column: "NR_DOK_ROK");

            migrationBuilder.CreateIndex(
                name: "W_ZLEC_MP_IDX1",
                table: "W_ZLECENIA_MYCIE_POZ",
                column: "W_ZLECENIE_ID");

            migrationBuilder.CreateIndex(
                name: "W_ZLEC_MP_IDX2",
                table: "W_ZLECENIA_MYCIE_POZ",
                column: "W_MYCIE_POZ_ID");

            migrationBuilder.CreateIndex(
                name: "W_ZLEC_MP_OFER_IDX1",
                table: "W_ZLECENIA_MYCIE_POZ",
                column: "W_ZLECENIA_OFERTY_ID");

            migrationBuilder.CreateIndex(
                name: "W_ZLEC_POZ_IDX1",
                table: "W_ZLECENIA_POZ",
                column: "W_ZLECENIE_ID");

            migrationBuilder.CreateIndex(
                name: "W_ZLEC_POZ_IDX2",
                table: "W_ZLECENIA_POZ",
                column: "W_MAG_WYDANIA_ID");

            migrationBuilder.CreateIndex(
                name: "W_ZLEC_POZ_IDX3",
                table: "W_ZLECENIA_POZ",
                column: "W_MAG_WYDANIA_POZ_ID");

            migrationBuilder.CreateIndex(
                name: "W_ZLEC_POZ_IDX4",
                table: "W_ZLECENIA_POZ",
                column: "LP");

            migrationBuilder.CreateIndex(
                name: "W_ZLEC_POZ_IDX5",
                table: "W_ZLECENIA_POZ",
                column: "OBJ_ID");

            migrationBuilder.CreateIndex(
                name: "W_ZLEC_POZ_IDX6",
                table: "W_ZLECENIA_POZ",
                column: "W_FAKTURA_ID");

            migrationBuilder.CreateIndex(
                name: "W_ZLEC_POZ_IDX7",
                table: "W_ZLECENIA_POZ",
                columns: new[] { "ZLECENIA_TYP", "ZLECENIA_ID" });

            migrationBuilder.CreateIndex(
                name: "W_ZLEC_POZ_IDX8",
                table: "W_ZLECENIA_POZ",
                column: "SZKODY_ID");

            migrationBuilder.CreateIndex(
                name: "W_ZLEC_PRAC_IDX1",
                table: "W_ZLECENIA_PRACOWNICY",
                column: "W_ZLECENIE_POZ_ID");

            migrationBuilder.CreateIndex(
                name: "W_ZLEC_PRAC_IDX2",
                table: "W_ZLECENIA_PRACOWNICY",
                column: "W_ZLECENIE_ID");

            migrationBuilder.CreateIndex(
                name: "W_ZLEC_PRAC_IDX3",
                table: "W_ZLECENIA_PRACOWNICY",
                column: "W_PRACOWNICY_ID");

            migrationBuilder.CreateIndex(
                name: "W_ZLEC_PRAC_OFER_IDX1",
                table: "W_ZLECENIA_PRACOWNICY",
                column: "W_ZLECENIE_OFERTY_POZ_ID");

            migrationBuilder.CreateIndex(
                name: "W_ZLEC_PRAC_OFER_IDX2",
                table: "W_ZLECENIA_PRACOWNICY",
                column: "W_ZLECENIE_OFERTY_ID");

            migrationBuilder.CreateIndex(
                name: "W_ZLEC_PP_IDX1",
                table: "W_ZLECENIA_PRZEG_POZ",
                column: "W_ZLECENIE_ID");

            migrationBuilder.CreateIndex(
                name: "W_ZLEC_PP_IDX2",
                table: "W_ZLECENIA_PRZEG_POZ",
                column: "W_GRUPY_PRZEGLAD_POZ_ID");

            migrationBuilder.CreateIndex(
                name: "W_ZLEC_PP_IDX3",
                table: "W_ZLECENIA_PRZEG_POZ",
                column: "PRZEGLAD_POZ_ID");

            migrationBuilder.CreateIndex(
                name: "W_ZLEC_PP_OFER_IDX1",
                table: "W_ZLECENIA_PRZEG_POZ",
                column: "W_ZLECENIA_OFERTY_ID");

            migrationBuilder.CreateIndex(
                name: "W_ZLEC_TT_IDX1",
                table: "W_ZLECENIA_TABOR_TERM",
                column: "W_ZLECENIE_ID");

            migrationBuilder.CreateIndex(
                name: "W_ZLEC_TT_IDX2",
                table: "W_ZLECENIA_TABOR_TERM",
                column: "TABOR_TERMIN_ID");

            migrationBuilder.CreateIndex(
                name: "W_ZLEC_TT_OFER_IDX1",
                table: "W_ZLECENIA_TABOR_TERM",
                column: "W_ZLECENIA_OFERTY_ID");

            migrationBuilder.CreateIndex(
                name: "WARDOST_IDX1",
                table: "WARDOST",
                column: "KOD");

            migrationBuilder.CreateIndex(
                name: "WeightConversion_IDX1",
                table: "WeightConversion",
                columns: new[] { "Group", "Loc", "Dep", "Enabled" });

            migrationBuilder.CreateIndex(
                name: "WeightConversionValues_IDX1",
                table: "WeightConversionValues",
                column: "WeightConversionId");

            migrationBuilder.CreateIndex(
                name: "WERSJA_IDX1",
                table: "WERSJA",
                column: "MARKA_ID");

            migrationBuilder.CreateIndex(
                name: "WERSJA_IDX2",
                table: "WERSJA",
                column: "MODEL_ID");

            migrationBuilder.CreateIndex(
                name: "WE_DO_ZAP_IDX1",
                table: "WEZWANIA_DO_ZAPL",
                column: "KONTRAH_ID");

            migrationBuilder.CreateIndex(
                name: "WE_DO_ZAP_IDX2",
                table: "WEZWANIA_DO_ZAPL",
                column: "AKTYWNE");

            migrationBuilder.CreateIndex(
                name: "WE_DO_ZAP_POZ_IDX1",
                table: "WEZWANIA_DO_ZAPL_POZ",
                column: "WEZWANIA_DO_ZAPL_ID");

            migrationBuilder.CreateIndex(
                name: "WE_DO_ZAP_POZ_IDX2",
                table: "WEZWANIA_DO_ZAPL_POZ",
                column: "FAKTURY_ID");

            migrationBuilder.CreateIndex(
                name: "WE_DO_ZAP_POZ_IDX3",
                table: "WEZWANIA_DO_ZAPL_POZ",
                columns: new[] { "TYP", "FAKTURY_ID" });

            migrationBuilder.CreateIndex(
                name: "WIN_FRM_C_FLD_IDX1",
                table: "WIN_FRM_CALC_FLD",
                column: "WIN_FRM_CALC_SP_ID");

            migrationBuilder.CreateIndex(
                name: "WIN_FRM_C_SP_IDX1",
                table: "WIN_FRM_CALC_SP",
                columns: new[] { "WIN_FRM_NAME", "EXEC_EVENT" });

            migrationBuilder.CreateIndex(
                name: "WIND_SCHE_POZ_IDX1",
                table: "WIND_SCHEMAT_POZ",
                column: "WIND_SCHEMAT_ID");

            migrationBuilder.CreateIndex(
                name: "lng_Window_ClassName_ExtIdx1",
                schema: "lng",
                table: "Window",
                column: "ClassName");

            migrationBuilder.CreateIndex(
                name: "WINDYKACJE_IDX1",
                table: "WINDYKACJE",
                column: "WIND_SCHEMAT_ID");

            migrationBuilder.CreateIndex(
                name: "WINDYKACJE_IDX2",
                table: "WINDYKACJE",
                column: "DLUZNIK_ID");

            migrationBuilder.CreateIndex(
                name: "WINDYKACJE_IDX3",
                table: "WINDYKACJE",
                column: "WINDYKATOR_ID");

            migrationBuilder.CreateIndex(
                name: "WINDYKACJE_IDX4",
                table: "WINDYKACJE",
                column: "PRAC_ODPOW_ID");

            migrationBuilder.CreateIndex(
                name: "WIND_HARM_IDX1",
                table: "WINDYKACJE_HARM",
                column: "WINDYKACJE_ID");

            migrationBuilder.CreateIndex(
                name: "WIND_KOSZT_IDX1",
                table: "WINDYKACJE_KOSZT",
                column: "WINDYKACJE_ID");

            migrationBuilder.CreateIndex(
                name: "WIND_WPL_IDX1",
                table: "WINDYKACJE_WPL",
                column: "WINDYKACJE_ID");

            migrationBuilder.CreateIndex(
                name: "WIND_WPL_IDX2",
                table: "WINDYKACJE_WPL",
                column: "FAKTURY_SPLATY_ID");

            migrationBuilder.CreateIndex(
                name: "WIND_ZAD_IDX1",
                table: "WINDYKACJE_ZAD",
                column: "WINDYKACJE_ID");

            migrationBuilder.CreateIndex(
                name: "WIND_ZAD_IDX2",
                table: "WINDYKACJE_ZAD",
                column: "WIND_SCHEMAT_ID");

            migrationBuilder.CreateIndex(
                name: "WIND_ZAD_IDX3",
                table: "WINDYKACJE_ZAD",
                column: "WIND_SCHEMAT_POZ_ID");

            migrationBuilder.CreateIndex(
                name: "WIND_ZOB_IDX1",
                table: "WINDYKACJE_ZOB",
                column: "WINDYKACJE_ID");

            migrationBuilder.CreateIndex(
                name: "WYC_BANK_IDX1",
                table: "WYC_BANK",
                column: "BANKI_ID");

            migrationBuilder.CreateIndex(
                name: "WYC_BANK_IDX2",
                table: "WYC_BANK",
                column: "EKSPORT_FK_ID");

            migrationBuilder.CreateIndex(
                name: "WYC_BANK_OP_IDX1",
                table: "WYC_BANK_OPER",
                column: "WYC_BANK_ID");

            migrationBuilder.CreateIndex(
                name: "WYC_BA_OP_POZ_IDX1",
                table: "WYC_BANK_OPER_POZ",
                column: "WYC_BANK_OPER_ID");

            migrationBuilder.CreateIndex(
                name: "WYC_BA_OP_POZ_IDX2",
                table: "WYC_BANK_OPER_POZ",
                column: "FAKTURA_ID");

            migrationBuilder.CreateIndex(
                name: "WYDRUKI_AUTOMAT_IDX1",
                table: "WYDRUKI_AUTOMAT",
                columns: new[] { "ID_SESJI_KALK", "STATUS" });

            migrationBuilder.CreateIndex(
                name: "WYDRUKI_STATUS_IDX1",
                table: "WYDRUKI_STATUS",
                column: "OBIEKT_ID");

            migrationBuilder.CreateIndex(
                name: "IDXWYJAZDY_IS_EXP",
                table: "WYJAZDY",
                column: "IS_EXPORTED");

            migrationBuilder.CreateIndex(
                name: "IX_WYJAZDY_NR_WYJAZDU_ROK_STATUS_ID_WYJAZDY_DATA_WYJAZDU",
                table: "WYJAZDY",
                columns: new[] { "NR_WYJAZDU_ROK", "STATUS", "ID_WYJAZDY", "DATA_WYJAZDU" });

            migrationBuilder.CreateIndex(
                name: "IX_WYJAZDY_SAMOCHOD_ID_ID_WYJAZDY",
                table: "WYJAZDY",
                columns: new[] { "SAMOCHOD_ID", "ID_WYJAZDY" });

            migrationBuilder.CreateIndex(
                name: "WYJAZDY_IDX1",
                table: "WYJAZDY",
                column: "NR_WYJAZDU_MIES");

            migrationBuilder.CreateIndex(
                name: "WYJAZDY_IDX2",
                table: "WYJAZDY",
                column: "NR_WYJAZDU_ROK");

            migrationBuilder.CreateIndex(
                name: "WYJAZDY_IDX3",
                table: "WYJAZDY",
                column: "LOKALIZACJA");

            migrationBuilder.CreateIndex(
                name: "WYJAZDY_IDX4",
                table: "WYJAZDY",
                column: "DATA_WYJAZDU");

            migrationBuilder.CreateIndex(
                name: "WYJAZDY_IDX5",
                table: "WYJAZDY",
                column: "NR_WYJAZDU_KOLEJNY");

            migrationBuilder.CreateIndex(
                name: "WYJAZDY_IDX6",
                table: "WYJAZDY",
                column: "KRAJ_DOCELOWY");

            migrationBuilder.CreateIndex(
                name: "WYJAZDY_SLEDZEN_IDX1",
                table: "WYJAZDY_SLEDZENIE",
                column: "WYJAZD_ID");

            migrationBuilder.CreateIndex(
                name: "WYJAZDY_SLEDZEN_IDX2",
                table: "WYJAZDY_SLEDZENIE",
                column: "PRACOWNIK_ID");

            migrationBuilder.CreateIndex(
                name: "WYJAZDY_SLEDZEN_IDX3",
                table: "WYJAZDY_SLEDZENIE",
                columns: new[] { "DATA", "GODZ" });

            migrationBuilder.CreateIndex(
                name: "WYJAZDY_SLEDZEN_IDX4",
                table: "WYJAZDY_SLEDZENIE",
                column: "SAMOCHOD_ID");

            migrationBuilder.CreateIndex(
                name: "IX_WYJAZDY_ZDARZENIA_TYP_TABOR_ID",
                table: "WYJAZDY_ZDARZENIA",
                columns: new[] { "TYP", "TABOR_ID" });

            migrationBuilder.CreateIndex(
                name: "PW_ZDARZENIA_SFM1",
                table: "WYJAZDY_ZDARZENIA",
                columns: new[] { "TABOR_ID", "DATA_RZ_P", "GODZ_RZ_P", "DATA_RZ_K", "GODZ_RZ_K" });

            migrationBuilder.CreateIndex(
                name: "PW_ZDARZENIA_SFM2",
                table: "WYJAZDY_ZDARZENIA",
                columns: new[] { "TABOR_ID", "DATA", "GODZ", "TYP" });

            migrationBuilder.CreateIndex(
                name: "PW_ZDARZENIA_SFM3",
                table: "WYJAZDY_ZDARZENIA",
                columns: new[] { "SFM_EXT_ID", "TYP_TERM" });

            migrationBuilder.CreateIndex(
                name: "WYJAZDY_ZDARZEN_IDX1",
                table: "WYJAZDY_ZDARZENIA",
                column: "WYJAZD_ID");

            migrationBuilder.CreateIndex(
                name: "WYJAZDY_ZDARZEN_IDX2",
                table: "WYJAZDY_ZDARZENIA",
                column: "MIEJSCE_ID");

            migrationBuilder.CreateIndex(
                name: "WYJAZDY_ZLECENI_IDX1",
                table: "WYJAZDY_ZLECENIA",
                column: "WYJAZD_ID");

            migrationBuilder.CreateIndex(
                name: "WYJAZDY_ZLECENI_IDX2",
                table: "WYJAZDY_ZLECENIA",
                column: "ZLECENIE_ID");

            migrationBuilder.CreateIndex(
                name: "WYJAZDY_ZLECENI_IDX3",
                table: "WYJAZDY_ZLECENIA",
                column: "SAMOCHOD_ID");

            migrationBuilder.CreateIndex(
                name: "WYJAZDY_ZLECENI_IDX4",
                table: "WYJAZDY_ZLECENIA",
                column: "NACZEPA_ID");

            migrationBuilder.CreateIndex(
                name: "WYJAZDY_ZLECENI_IDX6",
                table: "WYJAZDY_ZLECENIA",
                column: "KIEROWCA1_ID");

            migrationBuilder.CreateIndex(
                name: "WYM_PALET_IDX1",
                table: "WYM_PALET",
                column: "ZLECENIE_ID");

            migrationBuilder.CreateIndex(
                name: "WYM_PALET_IDX2",
                table: "WYM_PALET",
                column: "OPAKOWANIE_ID");

            migrationBuilder.CreateIndex(
                name: "WYM_PALET_2_IDX1",
                table: "WYM_PALET_2",
                column: "ZLECENIE_ID");

            migrationBuilder.CreateIndex(
                name: "WYM_PALET_2_IDX2",
                table: "WYM_PALET_2",
                column: "SYST_TYP");

            migrationBuilder.CreateIndex(
                name: "WYM_PALET_2_IDX3",
                table: "WYM_PALET_2",
                column: "TYP");

            migrationBuilder.CreateIndex(
                name: "WYM_PALET_2_IDX4",
                table: "WYM_PALET_2",
                columns: new[] { "ZLECENIE_ID", "TYP_ZLEC" });

            migrationBuilder.CreateIndex(
                name: "WYM_PALET_2_IDX5",
                table: "WYM_PALET_2",
                columns: new[] { "ZLECENIE_ID", "ZA_WY_ID" });

            migrationBuilder.CreateIndex(
                name: "WYM_PALET_DR_IDX1",
                table: "WYM_PALET_DR",
                column: "PRZESYLKI_ID");

            migrationBuilder.CreateIndex(
                name: "WYM_PALET_DR_IDX2",
                table: "WYM_PALET_DR",
                column: "LISTY_LINIOWE_ID");

            migrationBuilder.CreateIndex(
                name: "WYM_PALET_DR_IDX3",
                table: "WYM_PALET_DR",
                column: "OPAKOWANIE_KOD");

            migrationBuilder.CreateIndex(
                name: "WYM_PALET_DR_IDX4",
                table: "WYM_PALET_DR",
                column: "PACZKI_ID");

            migrationBuilder.CreateIndex(
                name: "WYNAGR_DANE_POZ_IDX1",
                table: "WYNAGR_DANE_POZ",
                column: "WYNAGR_DANE_ID");

            migrationBuilder.CreateIndex(
                name: "WYNAGR_DANE_POZ_IDX2",
                table: "WYNAGR_DANE_POZ",
                columns: new[] { "TYP_POZ", "POZ_ID" });

            migrationBuilder.CreateIndex(
                name: "WYNAGR_DOD_OSZ_IDX1",
                table: "WYNAGR_DOD_OSZCZ",
                columns: new[] { "PROG_OD", "PROG_DO" });

            migrationBuilder.CreateIndex(
                name: "WYNAGR_LP_POZ_IDX1",
                table: "WYNAGR_LP_POZ",
                column: "WYNAGR_LP_ID");

            migrationBuilder.CreateIndex(
                name: "WYNAGR_SCHE_POZ_IDX1",
                table: "WYNAGR_SCHEMAT_POZ",
                column: "WYNAGR_SCHEMAT_ID");

            migrationBuilder.CreateIndex(
                name: "WYNAGR_STAZE_IDX1",
                table: "WYNAGR_STAZE",
                columns: new[] { "STAZ_OD", "STAZ_DO" });

            migrationBuilder.CreateIndex(
                name: "WYP_TABORU_IDX1",
                table: "WYP_TABORU",
                column: "TYP");

            migrationBuilder.CreateIndex(
                name: "WYP_TAB_ZAM_IDX1",
                table: "WYP_TABORU_ZAMIENNIKI",
                column: "WYP_TABORU_ID");

            migrationBuilder.CreateIndex(
                name: "WYP_TAB_ZAM_IDX2",
                table: "WYP_TABORU_ZAMIENNIKI",
                column: "ZAMIENNIK_ID");

            migrationBuilder.CreateIndex(
                name: "ZABEZPIECZENIA_IDX1",
                table: "ZABEZPIECZENIA",
                column: "AKTYWNE");

            migrationBuilder.CreateIndex(
                name: "ZABEZPIECZENIA_IDX2",
                table: "ZABEZPIECZENIA",
                column: "LOKALIZACJA");

            migrationBuilder.CreateIndex(
                name: "ZABEZPIECZENIA__IDX1",
                table: "ZABEZPIECZENIA_POZ",
                column: "ZABEZPIECZENIE_ID");

            migrationBuilder.CreateIndex(
                name: "ZABEZPIECZENIA__IDX2",
                table: "ZABEZPIECZENIA_POZ",
                column: "ZLECENIE_ID");

            migrationBuilder.CreateIndex(
                name: "ZABEZPIECZENIA__IDX3",
                table: "ZABEZPIECZENIA_POZ",
                column: "ZAPLACONE");

            migrationBuilder.CreateIndex(
                name: "ZABEZPIECZENIA__IDX4",
                table: "ZABEZPIECZENIA_POZ",
                column: "ANULOWANE");

            migrationBuilder.CreateIndex(
                name: "ZADANIA_IDX1",
                table: "ZADANIA",
                column: "DATA");

            migrationBuilder.CreateIndex(
                name: "ZADANIA_IDX2",
                table: "ZADANIA",
                column: "LOKALIZACJA");

            migrationBuilder.CreateIndex(
                name: "ZADANIA_IDX3",
                table: "ZADANIA",
                column: "STATUS");

            migrationBuilder.CreateIndex(
                name: "ZADANIA_ZA_WY_IDX1",
                table: "ZADANIA_ZA_WY",
                column: "ZADANIA_ID");

            migrationBuilder.CreateIndex(
                name: "ZADANIA_ZA_WY_IDX2",
                table: "ZADANIA_ZA_WY",
                column: "ZLECENIE_ID");

            migrationBuilder.CreateIndex(
                name: "ZADANIA_ZA_WY_IDX3",
                table: "ZADANIA_ZA_WY",
                column: "ZLECENIE_ZA_ID");

            migrationBuilder.CreateIndex(
                name: "ZADANIA_ZA_WY_IDX4",
                table: "ZADANIA_ZA_WY",
                column: "ZLECENIE_WY_ID");

            migrationBuilder.CreateIndex(
                name: "ZALACZNIKI_IDX1",
                table: "ZALACZNIKI",
                column: "OBIEKT_ID");

            migrationBuilder.CreateIndex(
                name: "ZALACZNIKI_IDX2",
                table: "ZALACZNIKI",
                columns: new[] { "OBIEKT", "OBIEKT_ID" });

            migrationBuilder.CreateIndex(
                name: "ZALACZNIKI_IDX3",
                table: "ZALACZNIKI",
                column: "IS_EXPORTED");

            migrationBuilder.CreateIndex(
                name: "ZALACZNIKI_SFM1",
                table: "ZALACZNIKI",
                columns: new[] { "DATA", "OBIEKT_ID" });

            migrationBuilder.CreateIndex(
                name: "ZALACZN_UPRAWN_IDX1",
                table: "ZALACZNIKI_UPRAWN",
                column: "ZALACZNIKI_ID");

            migrationBuilder.CreateIndex(
                name: "ZALACZN_UPRAWN_IDX2",
                table: "ZALACZNIKI_UPRAWN",
                columns: new[] { "OBJ_TYP", "OBJ_ID" });

            migrationBuilder.CreateIndex(
                name: "ZALICZKI_IDX1",
                table: "ZALICZKI",
                column: "DELEGACJA_ID");

            migrationBuilder.CreateIndex(
                name: "ZALICZKI_IDX2",
                table: "ZALICZKI",
                column: "PRACOWNIK_ID");

            migrationBuilder.CreateIndex(
                name: "ZALICZKI_IDX3",
                table: "ZALICZKI",
                column: "RAP_KASOWE_OPER_WY_ID");

            migrationBuilder.CreateIndex(
                name: "ZALICZKI_IDX4",
                table: "ZALICZKI",
                column: "RAP_KASOWE_OPER_ROZ_ID");

            migrationBuilder.CreateIndex(
                name: "ZALICZKI_FAKTUR_IDX1",
                table: "ZALICZKI_FAKTURY",
                column: "ZALICZKI_ID");

            migrationBuilder.CreateIndex(
                name: "ZALICZKI_FAKTUR_IDX2",
                table: "ZALICZKI_FAKTURY",
                column: "FAKTURY_ID");

            migrationBuilder.CreateIndex(
                name: "ZALICZKI_SFM_Co_IDX1",
                table: "ZALICZKI_SFM_Costs",
                column: "ZALICZKI_ID");

            migrationBuilder.CreateIndex(
                name: "ZALICZKI_SFM_Co_IDX2",
                table: "ZALICZKI_SFM_Costs",
                column: "SFM_Costs_ID");

            migrationBuilder.CreateIndex(
                name: "ZDARZENIA_IDX1",
                table: "ZDARZENIA",
                column: "DT_START");

            migrationBuilder.CreateIndex(
                name: "ZDARZENIA_IDX2",
                table: "ZDARZENIA",
                column: "TABOR_ID");

            migrationBuilder.CreateIndex(
                name: "ZDARZENIA_IDX3",
                table: "ZDARZENIA",
                column: "ZLECENIE_ID");

            migrationBuilder.CreateIndex(
                name: "ZDARZENIA_IDX4",
                table: "ZDARZENIA",
                column: "WYJAZD_ID");

            migrationBuilder.CreateIndex(
                name: "ZDARZENIA_IDX5",
                table: "ZDARZENIA",
                column: "LIST_LINIOWY_ID");

            migrationBuilder.CreateIndex(
                name: "ZDARZENIA_IDX6",
                table: "ZDARZENIA",
                column: "LP");

            migrationBuilder.CreateIndex(
                name: "ZEZWOLENIA_IDX1",
                table: "ZEZWOLENIA",
                column: "FAKTURA_ID");

            migrationBuilder.CreateIndex(
                name: "ZEZWOLENIA_IDX2",
                table: "ZEZWOLENIA",
                column: "WYJAZD_ID");

            migrationBuilder.CreateIndex(
                name: "ZEZWOLENIA_IDX3",
                table: "ZEZWOLENIA",
                column: "TABOR_ID");

            migrationBuilder.CreateIndex(
                name: "ZEZWOLENIA_IDX4",
                table: "ZEZWOLENIA",
                column: "ZLECENIE_ID");

            migrationBuilder.CreateIndex(
                name: "ZEZWOLENIA_IDX5",
                table: "ZEZWOLENIA",
                column: "KIEROWCA_ID");

            migrationBuilder.CreateIndex(
                name: "ZEZWOLENIA_IDX6",
                table: "ZEZWOLENIA",
                column: "ZWROT");

            migrationBuilder.CreateIndex(
                name: "ZEZWOLENIA_IDX7",
                table: "ZEZWOLENIA",
                column: "ROZLICZONO");

            migrationBuilder.CreateIndex(
                name: "ZEZWOLENIA_IDX8",
                table: "ZEZWOLENIA",
                column: "DATA_WAZNOSCI");

            migrationBuilder.CreateIndex(
                name: "ZEZWOLENIA_IDX9",
                table: "ZEZWOLENIA",
                column: "PRZEWOZNIK_ID");

            migrationBuilder.CreateIndex(
                name: "ZEZWOLENIA_PRZYDZIAL_IDX1",
                table: "ZEZWOLENIA_PRZYDZIAL",
                column: "ZEZWOLENIA_ID");

            migrationBuilder.CreateIndex(
                name: "ZEZWOLENIA_PRZYDZIAL_IDX11",
                table: "ZEZWOLENIA_STRONY",
                column: "ZEZWOLENIA_ID");

            migrationBuilder.CreateIndex(
                name: "ZIPCODE_IDX1",
                table: "ZIPCODE",
                column: "ZIP_CODE");

            migrationBuilder.CreateIndex(
                name: "ZIPCODE_IDX2",
                table: "ZIPCODE",
                column: "COUNTRY");

            migrationBuilder.CreateIndex(
                name: "ZIPCODE_IDX3",
                table: "ZIPCODE",
                columns: new[] { "COUNTRY", "ZIP_CODE" });

            migrationBuilder.CreateIndex(
                name: "ZIPCODE_IDX4",
                table: "ZIPCODE",
                columns: new[] { "ZIP", "TOWN", "COUNTRY", "ZIP_STREET" });

            migrationBuilder.CreateIndex(
                name: "IX_ZLECENIA_NR_ZLEC_ROK_TYP_DATA_ZLECENIA",
                table: "ZLECENIA",
                columns: new[] { "NR_ZLEC_ROK", "TYP", "DATA_ZLECENIA" });

            migrationBuilder.CreateIndex(
                name: "IX_ZLECENIA_NR_ZLECENIA_K_KLIENT_ID_ID_ZLECENIA",
                table: "ZLECENIA",
                columns: new[] { "NR_ZLECENIA_K", "KLIENT_ID", "ID_ZLECENIA" });

            migrationBuilder.CreateIndex(
                name: "IX_ZLECENIA_SAMOCHOD_ID_ID_ZLECENIA",
                table: "ZLECENIA",
                columns: new[] { "SAMOCHOD_ID", "ID_ZLECENIA" });

            migrationBuilder.CreateIndex(
                name: "IX_ZLECENIA_SAMOCHOD_ID_SFM_STATUS",
                table: "ZLECENIA",
                columns: new[] { "SAMOCHOD_ID", "SFM_STATUS" });

            migrationBuilder.CreateIndex(
                name: "IX_ZLECENIA_USER1",
                table: "ZLECENIA",
                column: "KIEROWCA1_ID");

            migrationBuilder.CreateIndex(
                name: "IX_ZLECENIA_USER2",
                table: "ZLECENIA",
                column: "KIEROWCA2_ID");

            migrationBuilder.CreateIndex(
                name: "SFMSRV_ZLECENIA_EXTIDX1",
                table: "ZLECENIA",
                columns: new[] { "SFM_STATUS", "SAMOCHOD_ID" });

            migrationBuilder.CreateIndex(
                name: "SFMSRV_ZLECENIA_EXTIDX2",
                table: "ZLECENIA",
                columns: new[] { "KIEROWCA1_ID", "ID_ZLECENIA", "TYP", "SAMOCHOD_ID" });

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_IDX1",
                table: "ZLECENIA",
                column: "KLIENT_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_IDX10",
                table: "ZLECENIA",
                column: "SAMOCHOD_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_IDX11",
                table: "ZLECENIA",
                column: "FAKTURA_ZB_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_IDX12",
                table: "ZLECENIA",
                column: "ZA_DATA");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_IDX13",
                table: "ZLECENIA",
                column: "WY_DATA");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_IDX14",
                table: "ZLECENIA",
                column: "KIEROWCA1_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_IDX15",
                table: "ZLECENIA",
                column: "CMR_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_IDX16",
                table: "ZLECENIA",
                column: "ZA_KRAJ");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_IDX17",
                table: "ZLECENIA",
                column: "WY_KRAJ");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_IDX18",
                table: "ZLECENIA",
                column: "WYJAZD_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_IDX19",
                table: "ZLECENIA",
                column: "SFM_VER");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_IDX2",
                table: "ZLECENIA",
                column: "PLATNIK_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_IDX20",
                table: "ZLECENIA",
                column: "ZLECENIE_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_IDX21",
                table: "ZLECENIA",
                column: "SPEDYTOR_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_IDX22",
                table: "ZLECENIA",
                columns: new[] { "KLIENT_ID", "WALUTA_K", "STATUS" });

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_IDX23",
                table: "ZLECENIA",
                column: "LOKALIZACJA");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_IDX24",
                table: "ZLECENIA",
                column: "LOKALIZACJA_POSR");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_IDX25",
                table: "ZLECENIA",
                column: "NACZEPA_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_IDX26",
                table: "ZLECENIA",
                column: "NR_ZLECENIA");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_IDX27",
                table: "ZLECENIA",
                column: "PODZLECENIE");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_IDX3",
                table: "ZLECENIA",
                column: "PRZEWOZNIK_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_IDX4",
                table: "ZLECENIA",
                column: "TYP");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_IDX5",
                table: "ZLECENIA",
                column: "NR_ZLEC_KOLEJNY");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_IDX6",
                table: "ZLECENIA",
                column: "NR_ZLEC_ROK");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_IDX7",
                table: "ZLECENIA",
                column: "DATA_ZLECENIA");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_IDX8",
                table: "ZLECENIA",
                column: "KLIENT_SYMBOL");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_IDX9",
                table: "ZLECENIA",
                column: "STATUS");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_MSGEXT_IDX1",
                table: "ZLECENIA",
                column: "NR_ZLECENIA");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_SFM_IDX1",
                table: "ZLECENIA",
                column: "DYSPOZYTOR_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_SFM_IDX2",
                table: "ZLECENIA",
                column: "SFM_VER");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_SFMEXT_IDX1",
                table: "ZLECENIA",
                columns: new[] { "TYP", "ZA_DATA" });

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_SFMEXT_IDX2",
                table: "ZLECENIA",
                columns: new[] { "TYP", "SFM_VER" });

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_SFMEXT_IDX3",
                table: "ZLECENIA",
                column: "WY_DATA");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_SFMEXT_IDX4",
                table: "ZLECENIA",
                columns: new[] { "SAMOCHOD_ID", "TYP" });

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_C_IDX1",
                table: "ZLECENIA_C",
                column: "UPOWAZNIENIE_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_C_IDX2",
                table: "ZLECENIA_C",
                column: "ZABEZPIECZENIE_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_C_IDX3",
                table: "ZLECENIA_C",
                column: "MRN");

            migrationBuilder.CreateIndex(
                name: "ZLEC_C_CHKLIST_IDX1",
                table: "ZLECENIA_C_CHECKLIST",
                column: "ZLECENIA_C_ID");

            migrationBuilder.CreateIndex(
                name: "ZLEC_C_CHKLIST_IDX2",
                table: "ZLECENIA_C_CHECKLIST",
                column: "CHECKLISTDEFID");

            migrationBuilder.CreateIndex(
                name: "ZLEC_C_CHKLIST_IDX3",
                table: "ZLECENIA_C_CHECKLIST",
                column: "COMPLETED");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_C_POZ_IDX1",
                table: "ZLECENIA_C_POZ",
                column: "ZLECENIE_C_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_C_POZ_IDX2",
                table: "ZLECENIA_C_POZ",
                column: "ZLECENIE_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_DO_WYS_IDX1",
                table: "ZLECENIA_DO_WYSL",
                column: "ZLECENIE_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_DOKUME_IDX1",
                table: "ZLECENIA_DOKUMENTY",
                column: "ZLECENIE_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_DOKUME_IDX2",
                table: "ZLECENIA_DOKUMENTY",
                column: "WPLYNAL");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_DOKUME_IDX3",
                table: "ZLECENIA_DOKUMENTY",
                column: "WYMAGANY");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_dokumenty_user1",
                table: "ZLECENIA_DOKUMENTY",
                column: "ZLECENIE_ID");

            migrationBuilder.CreateIndex(
                name: "ZLEC_DOKUM_M_IDX1",
                table: "ZLECENIA_DOKUMENTY_M",
                column: "ZLECENIE_ID");

            migrationBuilder.CreateIndex(
                name: "ZLEC_DOKUM_M_IDX2",
                table: "ZLECENIA_DOKUMENTY_M",
                column: "WPLYNAL");

            migrationBuilder.CreateIndex(
                name: "ZLEC_DOKUM_M_IDX3",
                table: "ZLECENIA_DOKUMENTY_M",
                column: "WYMAGANY");

            migrationBuilder.CreateIndex(
                name: "ZLEC_DOKUM_R_IDX1",
                table: "ZLECENIA_DOKUMENTY_RAIL",
                column: "ZLECENIE_ID");

            migrationBuilder.CreateIndex(
                name: "ZLEC_DOKUM_R_IDX2",
                table: "ZLECENIA_DOKUMENTY_RAIL",
                column: "WPLYNAL");

            migrationBuilder.CreateIndex(
                name: "ZLEC_DOKUM_R_IDX3",
                table: "ZLECENIA_DOKUMENTY_RAIL",
                column: "WYMAGANY");

            migrationBuilder.CreateIndex(
                name: "ZLEC_DOK_UWAGI_IDX1",
                table: "ZLECENIA_DOKUMENTY_UWAGI",
                column: "ZLECENIA_DOKUMENTY_ID");

            migrationBuilder.CreateIndex(
                name: "ZLEC_DOK_UWAGI_IDX2",
                table: "ZLECENIA_DOKUMENTY_UWAGI",
                column: "DOKUMENTY_UWAGI_ID");

            migrationBuilder.CreateIndex(
                name: "IDXZLEC_IS_EXP",
                table: "ZLECENIA_EXT",
                column: "IS_EXPORTED");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_EXT_IDX1",
                table: "ZLECENIA_EXT",
                column: "SFM_VER");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_EXT_IDX1_MASZONSKI_MASTER_ZLEC_ID",
                table: "ZLECENIA_EXT",
                column: "MASZONSKI_MASTER_ZLEC_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_EXT_IDX2",
                table: "ZLECENIA_EXT",
                column: "IS_TRANS_NUMBER");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_EXT_IDX3",
                table: "ZLECENIA_EXT",
                column: "IS_TRANS_TO_SEND");

            migrationBuilder.CreateIndex(
                name: "ZLECEXT_SFM_IDX1",
                table: "ZLECENIA_EXT",
                column: "SFM_VER");

            migrationBuilder.CreateIndex(
                name: "ZLEC_INSTR_DOD_IDX1",
                table: "ZLECENIA_INSTR_DOD",
                column: "ZLECENIA_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_M_IDX1",
                table: "ZLECENIA_M",
                column: "KLIENT_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_M_IDX2",
                table: "ZLECENIA_M",
                column: "NADAWCA_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_M_IDX3",
                table: "ZLECENIA_M",
                column: "ODBIORCA_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_M_IDX4",
                table: "ZLECENIA_M",
                column: "DATA");

            migrationBuilder.CreateIndex(
                name: "ZLEC_M_CHKLIST_IDX1",
                table: "ZLECENIA_M_CHECKLIST",
                column: "ZLECENIA_M_ID");

            migrationBuilder.CreateIndex(
                name: "ZLEC_M_CHKLIST_IDX2",
                table: "ZLECENIA_M_CHECKLIST",
                column: "CHECKLISTDEFID");

            migrationBuilder.CreateIndex(
                name: "ZLEC_M_CHKLIST_IDX3",
                table: "ZLECENIA_M_CHECKLIST",
                column: "COMPLETED");

            migrationBuilder.CreateIndex(
                name: "ZLEC_RAIL_ChkList_IDX1",
                table: "ZLECENIA_M_CHECKLIST",
                column: "ZLECENIA_RAIL_ID");

            migrationBuilder.CreateIndex(
                name: "ZLEC_RAIL_ChkList_IDX2",
                table: "ZLECENIA_M_CHECKLIST",
                column: "CHECKLISTDEFID");

            migrationBuilder.CreateIndex(
                name: "ZLEC_RAIL_ChkList_IDX3",
                table: "ZLECENIA_M_CHECKLIST",
                column: "COMPLETED");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_M_LAD_IDX1",
                table: "ZLECENIA_M_LAD",
                column: "ZLECENIA_M_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_M_POWI_IDX1",
                table: "ZLECENIA_M_POWIADOMIENIA",
                column: "ZLECENIA_M_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_M_PRZE_IDX1",
                table: "ZLECENIA_M_PRZELICZNIKI",
                column: "ZLECENIA_M_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_M_ZA_W_IDX1",
                table: "ZLECENIA_M_ZA_WY",
                column: "ZLECENIE_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_M_ZA_W_IDX2",
                table: "ZLECENIA_M_ZA_WY",
                column: "TYP");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_M_ZA_W_IDX3",
                table: "ZLECENIA_M_ZA_WY",
                column: "MIEJSCE_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_M_ZA_W_IDX4",
                table: "ZLECENIA_M_ZA_WY",
                column: "LP");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_M_ZA_W_IDX5",
                table: "ZLECENIA_M_ZA_WY",
                column: "LP_PW");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_M_ZA_W_IDX6",
                table: "ZLECENIA_M_ZA_WY",
                column: "ETA_EVENTS_ID");

            migrationBuilder.CreateIndex(
                name: "ZLEC_OST_LAD_IDX1",
                table: "ZLECENIA_OST_LADUNKI",
                column: "ZLECENIE_ID");

            migrationBuilder.CreateIndex(
                name: "ZLEC_OST_LAD_IDX2",
                table: "ZLECENIA_OST_LADUNKI",
                column: "TABOR_ID");

            migrationBuilder.CreateIndex(
                name: "ZLEC_OST_LAD_IDX3",
                table: "ZLECENIA_OST_LADUNKI",
                column: "LADUNEK_ID");

            migrationBuilder.CreateIndex(
                name: "ZLEC_OTH_POZ_IDX1",
                table: "ZLECENIA_OTH_POZ",
                column: "ZLECENIE_ID");

            migrationBuilder.CreateIndex(
                name: "ZLEC_OTH_POZ_IDX2",
                table: "ZLECENIA_OTH_POZ",
                column: "OTH_POZ_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_POWIAD_IDX1",
                table: "ZLECENIA_POWIADOMIENIA",
                column: "ZLECENIA_ID");

            migrationBuilder.CreateIndex(
                name: "Ix_ZLECENIA_POZ_FAKT_USER10",
                table: "ZLECENIA_POZ_FAKT",
                columns: new[] { "ZLECENIE_ID", "JAK_ROZL", "FAKTURY_ID" });

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_POZ_FA_IDX1",
                table: "ZLECENIA_POZ_FAKT",
                column: "ZLECENIE_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_POZ_FA_IDX2",
                table: "ZLECENIA_POZ_FAKT",
                column: "FAKTURY_POZYCJE_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_POZ_FA_IDX3",
                table: "ZLECENIA_POZ_FAKT",
                column: "FAKTURY_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_PROMY_IDX1",
                table: "ZLECENIA_PROMY",
                column: "ZLECENIA_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_PROMY_IDX2",
                table: "ZLECENIA_PROMY",
                column: "PROMY_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_PRZEWO_IDX1",
                table: "ZLECENIA_PRZEWOZNICY",
                columns: new[] { "ZLECENIA_ID", "KONTRAH_ID" },
                unique: true);

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_RAIL_IDX1",
                table: "ZLECENIA_RAIL",
                column: "KLIENT_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_RAIL_IDX2",
                table: "ZLECENIA_RAIL",
                column: "NADAWCA_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_RAIL_IDX3",
                table: "ZLECENIA_RAIL",
                column: "ODBIORCA_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_RAIL_IDX4",
                table: "ZLECENIA_RAIL",
                column: "DATA");

            migrationBuilder.CreateIndex(
                name: "ZLEC_RAIL_ChkList_IDX11",
                table: "ZLECENIA_RAIL_CheckList",
                column: "ZLECENIA_RAIL_ID");

            migrationBuilder.CreateIndex(
                name: "ZLEC_RAIL_ChkList_IDX21",
                table: "ZLECENIA_RAIL_CheckList",
                column: "CheckListDefId");

            migrationBuilder.CreateIndex(
                name: "ZLEC_RAIL_ChkList_IDX31",
                table: "ZLECENIA_RAIL_CheckList",
                column: "Completed");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_RAIL_L_IDX1",
                table: "ZLECENIA_RAIL_LAD",
                column: "ZLECENIA_RAIL_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_RAIL_P_IDX1",
                table: "ZLECENIA_RAIL_POWIADOMIENIA",
                column: "ZLECENIA_RAIL_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_RAIL_P_IDX11",
                table: "ZLECENIA_RAIL_PRZELICZNIKI",
                column: "ZLECENIA_RAIL_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_RAIL_Z_IDX1",
                table: "ZLECENIA_RAIL_ZA_WY",
                column: "ZLECENIE_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_RAIL_Z_IDX2",
                table: "ZLECENIA_RAIL_ZA_WY",
                column: "TYP");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_RAIL_Z_IDX3",
                table: "ZLECENIA_RAIL_ZA_WY",
                column: "MIEJSCE_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_RAIL_Z_IDX4",
                table: "ZLECENIA_RAIL_ZA_WY",
                column: "LP");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_RAIL_Z_IDX5",
                table: "ZLECENIA_RAIL_ZA_WY",
                column: "LP_PW");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_RAIL_Z_IDX6",
                table: "ZLECENIA_RAIL_ZA_WY",
                column: "ETA_EVENTS_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_SAM_IDX1",
                table: "ZLECENIA_SAM",
                column: "ZLECENIE_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_WYM_TA_IDX1",
                table: "ZLECENIA_WYM_TABORU",
                column: "ZLECENIE_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_WYM_TA_IDX2",
                table: "ZLECENIA_WYM_TABORU",
                column: "TYP");

            migrationBuilder.CreateIndex(
                name: "ix_user_dt_01",
                table: "ZLECENIA_ZA_WY",
                columns: new[] { "ZLECENIE_ID", "Data_Godz", "Data_Godz_Od", "Data_Godz_Do" });

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_ZA_WY_IDX1",
                table: "ZLECENIA_ZA_WY",
                column: "ZLECENIE_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_ZA_WY_IDX2",
                table: "ZLECENIA_ZA_WY",
                column: "TYP");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_ZA_WY_IDX3",
                table: "ZLECENIA_ZA_WY",
                column: "MIEJSCE_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_ZA_WY_IDX4",
                table: "ZLECENIA_ZA_WY",
                column: "LP");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_ZA_WY_IDX5",
                table: "ZLECENIA_ZA_WY",
                column: "ANUL_PW");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_ZA_WY_IDX6",
                table: "ZLECENIA_ZA_WY",
                column: "LP_PW");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_ZA_WY_IDX7",
                table: "ZLECENIA_ZA_WY",
                column: "ETA_EVENTS_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_ZA_WY_SFM1",
                table: "ZLECENIA_ZA_WY",
                column: "DATA");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_ZA_WY_SFM2",
                table: "ZLECENIA_ZA_WY",
                column: "ZA_WY_NADRZ_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_ZA_WY_SFM3",
                table: "ZLECENIA_ZA_WY",
                column: "ZA_WY_GLOWNE_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_ZA_WY_SFM4",
                table: "ZLECENIA_ZA_WY",
                column: "GF_DEF_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_ZA_WY_SFMEXT_IDX1",
                table: "ZLECENIA_ZA_WY",
                columns: new[] { "ZLECENIE_ID", "TYP" });

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_ZA_WY_SFMEXT_IDX2",
                table: "ZLECENIA_ZA_WY",
                columns: new[] { "ZLECENIE_ID", "TYP", "DATA", "GODZ" });

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_ZA_WY_SFMEXT_IDX3",
                table: "ZLECENIA_ZA_WY",
                columns: new[] { "ZLECENIE_ID", "TYP" });

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_ZA_WY_user1",
                table: "ZLECENIA_ZA_WY",
                column: "ZLECENIE_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_ZA_WY__IDX1",
                table: "ZLECENIA_ZA_WY_CYST",
                column: "ZLECENIE_ID");

            migrationBuilder.CreateIndex(
                name: "ZLEC_ZA_WY_PROD_IDX1",
                table: "ZLECENIA_ZA_WY_PROD",
                column: "ZLECENIA_ID");

            migrationBuilder.CreateIndex(
                name: "ZLEC_ZA_WY_PROD_IDX2",
                table: "ZLECENIA_ZA_WY_PROD",
                column: "ZLECENIA_ZA_ID");

            migrationBuilder.CreateIndex(
                name: "ZLEC_ZA_WY_PROD_IDX3",
                table: "ZLECENIA_ZA_WY_PROD",
                column: "ZLECENIA_WY_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_ZB_SFMEXT_IDX1",
                table: "ZLECENIA_ZB",
                columns: new[] { "ZA_DATA", "SAMOCHOD_ID" });

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_ZB_POZ_IDX1",
                table: "ZLECENIA_ZB_POZ",
                column: "ZLECENIA_ZB_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_ZB_POZ_IDX2",
                table: "ZLECENIA_ZB_POZ",
                column: "ZLECENIE_ID");

            migrationBuilder.CreateIndex(
                name: "ZLEC_ZB_PROMY_IDX1",
                table: "ZLECENIA_ZB_PROMY",
                column: "ZLECENIA_ZB_ID");

            migrationBuilder.CreateIndex(
                name: "ZLEC_ZB_PROMY_IDX2",
                table: "ZLECENIA_ZB_PROMY",
                column: "PROMY_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_ZB_WYM_IDX1",
                table: "ZLECENIA_ZB_WYM_TABORU",
                column: "ZLECENIA_ZB_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_ZB_WYM_IDX2",
                table: "ZLECENIA_ZB_WYM_TABORU",
                column: "TYP");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_ZB_ZDA_IDX1",
                table: "ZLECENIA_ZB_ZDARZENIA",
                column: "ZLECENIA_ZB_ID");

            migrationBuilder.CreateIndex(
                name: "ZLECENIA_ZB_ZDA_IDX2",
                table: "ZLECENIA_ZB_ZDARZENIA",
                column: "MIEJSCE_ID");

            migrationBuilder.CreateIndex(
                name: "ix_ID_TABORU",
                schema: "opti",
                table: "ZleceniaZaplanowane",
                column: "ID_TABORU");

            migrationBuilder.CreateIndex(
                name: "ix_ID_ZLECENIA",
                schema: "opti",
                table: "ZleceniaZaplanowane",
                column: "ID_ZLECENIA");

            migrationBuilder.CreateIndex(
                name: "ix_SessionId",
                schema: "opti",
                table: "ZleceniaZaplanowane",
                column: "SessionId");

            migrationBuilder.CreateIndex(
                name: "ix_SolverTaskId",
                schema: "opti",
                table: "ZleceniaZaplanowane",
                column: "SolverTaskId");

            migrationBuilder.CreateIndex(
                name: "ix_ID_ZLECENIA1",
                schema: "opti",
                table: "ZleceniaZaznaczone",
                column: "ID_ZLECENIA");

            migrationBuilder.CreateIndex(
                name: "ix_SessionId1",
                schema: "opti",
                table: "ZleceniaZaznaczone",
                column: "SessionId");

            migrationBuilder.CreateIndex(
                name: "ix_SolverTaskId1",
                schema: "opti",
                table: "ZleceniaZaznaczone",
                column: "SolverTaskId");

            migrationBuilder.CreateIndex(
                name: "ix_ID_ZLECENIA",
                schema: "opti",
                table: "ZleceniaZaznaczoneWymagania",
                column: "ID_ZLECENIA");

            migrationBuilder.CreateIndex(
                name: "ix_SessionId",
                schema: "opti",
                table: "ZleceniaZaznaczoneWymagania",
                column: "SessionId");

            migrationBuilder.CreateIndex(
                name: "ix_SolverTaskId",
                schema: "opti",
                table: "ZleceniaZaznaczoneWymagania",
                column: "SolverTaskId");

            migrationBuilder.CreateIndex(
                name: "ZLP_IDX1",
                table: "ZLP",
                column: "LISTY_LINIOWE_ID");

            migrationBuilder.CreateIndex(
                name: "ZLP_IDX2",
                table: "ZLP",
                column: "NR_ZLP_ROK");

            migrationBuilder.CreateIndex(
                name: "ZLP_IDX3",
                table: "ZLP",
                column: "NR_ZLP_MIES");

            migrationBuilder.CreateIndex(
                name: "ZLP_IDX4",
                table: "ZLP",
                column: "LOKALIZACJA");

            migrationBuilder.CreateIndex(
                name: "ZLP_IDX5",
                table: "ZLP",
                column: "LISTY_LINIOWE_ZA_WY_ID");

            migrationBuilder.CreateIndex(
                name: "ZLP_IDX6",
                table: "ZLP",
                column: "LISTY_LINIOWE_WY_ID");

            migrationBuilder.CreateIndex(
                name: "ZLP_IDX7",
                table: "ZLP",
                column: "UZUP_DANE_MAX_ID");

            migrationBuilder.CreateIndex(
                name: "idx2_PW_OTWARCIE",
                table: "zs_PW_OTWARCIE",
                column: "sid_id");

            migrationBuilder.CreateIndex(
                name: "idx2_PW_ZAMKNIECIE",
                table: "zs_PW_ZAMKNIECIE",
                column: "sid_id");
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "_JU_TMP");

            migrationBuilder.DropTable(
                name: "Access",
                schema: "olap");

            migrationBuilder.DropTable(
                name: "AccessLevel",
                schema: "app");

            migrationBuilder.DropTable(
                name: "ActionType",
                schema: "geo");

            migrationBuilder.DropTable(
                name: "ADR_KODY_POJAZDOW");

            migrationBuilder.DropTable(
                name: "ADR_SPRZET");

            migrationBuilder.DropTable(
                name: "ADR_UN");

            migrationBuilder.DropTable(
                name: "ADR_UN_LIST");

            migrationBuilder.DropTable(
                name: "ADR_ZESTAW_SPRZET");

            migrationBuilder.DropTable(
                name: "ADR_ZESTAWY_WYP");

            migrationBuilder.DropTable(
                name: "ADRESY");

            migrationBuilder.DropTable(
                name: "AKT_FAKTUROWANE");

            migrationBuilder.DropTable(
                name: "AKT_PRZELEWY");

            migrationBuilder.DropTable(
                name: "ANKIETY_ODP");

            migrationBuilder.DropTable(
                name: "ANKIETY_PYT");

            migrationBuilder.DropTable(
                name: "APP_DEBUG");

            migrationBuilder.DropTable(
                name: "APP_LOG");

            migrationBuilder.DropTable(
                name: "APP_MSG");

            migrationBuilder.DropTable(
                name: "AppDebugInfo");

            migrationBuilder.DropTable(
                name: "AppDebugInfoItem");

            migrationBuilder.DropTable(
                name: "AppDebugInfoObject");

            migrationBuilder.DropTable(
                name: "Application",
                schema: "app");

            migrationBuilder.DropTable(
                name: "ApplicationContext",
                schema: "app");

            migrationBuilder.DropTable(
                name: "ApplicationModule",
                schema: "app");

            migrationBuilder.DropTable(
                name: "ApplicationProfile",
                schema: "app");

            migrationBuilder.DropTable(
                name: "ApplicationSettings",
                schema: "app");

            migrationBuilder.DropTable(
                name: "ApplicationStatistic",
                schema: "app");

            migrationBuilder.DropTable(
                name: "AppLocation",
                schema: "app");

            migrationBuilder.DropTable(
                name: "AppLoginContext");

            migrationBuilder.DropTable(
                name: "AppNewActionsUse");

            migrationBuilder.DropTable(
                name: "AppSchema");

            migrationBuilder.DropTable(
                name: "AppSchema",
                schema: "app");

            migrationBuilder.DropTable(
                name: "AppSchemaDetails");

            migrationBuilder.DropTable(
                name: "AppSchemaDetails",
                schema: "app");

            migrationBuilder.DropTable(
                name: "AppSchemaGroup");

            migrationBuilder.DropTable(
                name: "AppSchemaGroup",
                schema: "app");

            migrationBuilder.DropTable(
                name: "AppSkipCreateIndex");

            migrationBuilder.DropTable(
                name: "ArchiveDatabase");

            migrationBuilder.DropTable(
                name: "Area",
                schema: "geo");

            migrationBuilder.DropTable(
                name: "AttachmentToJoin",
                schema: "yMASZ");

            migrationBuilder.DropTable(
                name: "Auction");

            migrationBuilder.DropTable(
                name: "AuctionHistory");

            migrationBuilder.DropTable(
                name: "AUTO_POZ_FAKTUR");

            migrationBuilder.DropTable(
                name: "AUTO_POZ_FAKTUR_2");

            migrationBuilder.DropTable(
                name: "AUTORYZACJE_PRAWA");

            migrationBuilder.DropTable(
                name: "AWIZACJE");

            migrationBuilder.DropTable(
                name: "AWIZACJE_POJAZDOW");

            migrationBuilder.DropTable(
                name: "AWIZACJE_POJAZDOW_ODL");

            migrationBuilder.DropTable(
                name: "AWIZACJE_POZ");

            migrationBuilder.DropTable(
                name: "BANKI");

            migrationBuilder.DropTable(
                name: "bcp_zal");

            migrationBuilder.DropTable(
                name: "BD_UPGRADE");

            migrationBuilder.DropTable(
                name: "BILANS_OPAK_LOK");

            migrationBuilder.DropTable(
                name: "BILANS_OPAK_LOK_POZ");

            migrationBuilder.DropTable(
                name: "BILINGI_OPER");

            migrationBuilder.DropTable(
                name: "BILINGI_PLIK");

            migrationBuilder.DropTable(
                name: "BILINGI_PLIK_POZ");

            migrationBuilder.DropTable(
                name: "BILINGI_TYPY_OPER");

            migrationBuilder.DropTable(
                name: "BLEDY_OBIEKTOW");

            migrationBuilder.DropTable(
                name: "BLOKADY");

            migrationBuilder.DropTable(
                name: "BLOKADY_LOG");

            migrationBuilder.DropTable(
                name: "BLOKADY_PK");

            migrationBuilder.DropTable(
                name: "BLOKADY_TYPY");

            migrationBuilder.DropTable(
                name: "BLOKADY_TYPY_PRAWA");

            migrationBuilder.DropTable(
                name: "BoxObject");

            migrationBuilder.DropTable(
                name: "BOXSETTINGS");

            migrationBuilder.DropTable(
                name: "BoxSettingsHist");

            migrationBuilder.DropTable(
                name: "BOXSETTINGSUSER");

            migrationBuilder.DropTable(
                name: "BoxSettingsUserHist");

            migrationBuilder.DropTable(
                name: "CarrierData",
                schema: "espeed");

            migrationBuilder.DropTable(
                name: "CarrierDataAttachment",
                schema: "espeed");

            migrationBuilder.DropTable(
                name: "cc_debug_back2");

            migrationBuilder.DropTable(
                name: "CC_debug_pos");

            migrationBuilder.DropTable(
                name: "CC_mSpeed");

            migrationBuilder.DropTable(
                name: "CENNIKI");

            migrationBuilder.DropTable(
                name: "CENNIKI_PRZELICZNIKI");

            migrationBuilder.DropTable(
                name: "CENNIKI_SQL");

            migrationBuilder.DropTable(
                name: "CENNIKI_SQL_ERR");

            migrationBuilder.DropTable(
                name: "CENNIKI_SQL_POZ");

            migrationBuilder.DropTable(
                name: "CENNIKI_SQL_PRAWA");

            migrationBuilder.DropTable(
                name: "CENNIKI_SQL_UPRAWNIENIA");

            migrationBuilder.DropTable(
                name: "ChangeLog");

            migrationBuilder.DropTable(
                name: "ChangeTrack",
                schema: "app");

            migrationBuilder.DropTable(
                name: "ChangeTrackData");

            migrationBuilder.DropTable(
                name: "ChangeTrackData",
                schema: "app");

            migrationBuilder.DropTable(
                name: "ChangeTrackDatabase",
                schema: "app");

            migrationBuilder.DropTable(
                name: "CHECKLIST_HIST");

            migrationBuilder.DropTable(
                name: "CHECKLIST_HISTPOZ");

            migrationBuilder.DropTable(
                name: "CHECKLIST_PYT");

            migrationBuilder.DropTable(
                name: "CHECKLIST_TABOR");

            migrationBuilder.DropTable(
                name: "CHECKLIST_WYSLIJ");

            migrationBuilder.DropTable(
                name: "CHECKLISTDEF");

            migrationBuilder.DropTable(
                name: "CMR");

            migrationBuilder.DropTable(
                name: "Config",
                schema: "app");

            migrationBuilder.DropTable(
                name: "CONTAINER_LIST");

            migrationBuilder.DropTable(
                name: "CONTAINER_TYPE");

            migrationBuilder.DropTable(
                name: "Contract",
                schema: "contr");

            migrationBuilder.DropTable(
                name: "ContractConfiguration",
                schema: "contr");

            migrationBuilder.DropTable(
                name: "ContractOrder",
                schema: "contr");

            migrationBuilder.DropTable(
                name: "ContractOrderSchedule",
                schema: "contr");

            migrationBuilder.DropTable(
                name: "ContractStatus",
                schema: "contr");

            migrationBuilder.DropTable(
                name: "ContractType",
                schema: "contr");

            migrationBuilder.DropTable(
                name: "Control",
                schema: "lng");

            migrationBuilder.DropTable(
                name: "CR_ReportLog");

            migrationBuilder.DropTable(
                name: "CR_TextTranslate");

            migrationBuilder.DropTable(
                name: "CRM_CEL");

            migrationBuilder.DropTable(
                name: "CRM_CEL_UPRAWNIENIA");

            migrationBuilder.DropTable(
                name: "CrmData",
                schema: "crm");

            migrationBuilder.DropTable(
                name: "CutsETALogs",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "CutsOrdersLogs",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "CZYNNOSCI");

            migrationBuilder.DropTable(
                name: "CZYNNOSCI_PRZEG_POZ");

            migrationBuilder.DropTable(
                name: "DANE_AWB");

            migrationBuilder.DropTable(
                name: "DANE_AWB_KOSZTY");

            migrationBuilder.DropTable(
                name: "DANE_AWB_OPL_DOD");

            migrationBuilder.DropTable(
                name: "DANE_EXT");

            migrationBuilder.DropTable(
                name: "DANE_EXT_DEF");

            migrationBuilder.DropTable(
                name: "DANE_MBL");

            migrationBuilder.DropTable(
                name: "DANE_MBL_KOSZTY");

            migrationBuilder.DropTable(
                name: "DANE_MBL_OPL_DOD");

            migrationBuilder.DropTable(
                name: "Dashboard",
                schema: "dashboard");

            migrationBuilder.DropTable(
                name: "DashboardObject",
                schema: "dashboard");

            migrationBuilder.DropTable(
                name: "DATABASECHANGELOG",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "DATABASECHANGELOGLOCK",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "DataExchange",
                schema: "rest");

            migrationBuilder.DropTable(
                name: "DataProcessor");

            migrationBuilder.DropTable(
                name: "DataProcessorModule");

            migrationBuilder.DropTable(
                name: "DataRecord");

            migrationBuilder.DropTable(
                name: "DataRecordKind");

            migrationBuilder.DropTable(
                name: "DataRecordPunchTraceData");

            migrationBuilder.DropTable(
                name: "DataRecordType");

            migrationBuilder.DropTable(
                name: "dboRequestBaseType",
                schema: "arch");

            migrationBuilder.DropTable(
                name: "dboRequestConfiguration",
                schema: "arch");

            migrationBuilder.DropTable(
                name: "dboRequestconfigurationQuery",
                schema: "arch");

            migrationBuilder.DropTable(
                name: "dboRequestConfigurationQueryBinding",
                schema: "arch");

            migrationBuilder.DropTable(
                name: "dboRequestForm",
                schema: "arch");

            migrationBuilder.DropTable(
                name: "dboRequestFormItem",
                schema: "arch");

            migrationBuilder.DropTable(
                name: "dboRequestFormSection",
                schema: "arch");

            migrationBuilder.DropTable(
                name: "dboRequestProfilePermission",
                schema: "arch");

            migrationBuilder.DropTable(
                name: "DefaultColors",
                schema: "map");

            migrationBuilder.DropTable(
                name: "Definition",
                schema: "olap");

            migrationBuilder.DropTable(
                name: "DefinitionContext",
                schema: "olap");

            migrationBuilder.DropTable(
                name: "DefinitionParam",
                schema: "olap");

            migrationBuilder.DropTable(
                name: "DELEGACJE");

            migrationBuilder.DropTable(
                name: "DELEGACJE_DIETY");

            migrationBuilder.DropTable(
                name: "DELEGACJE_LOGOWANIA");

            migrationBuilder.DropTable(
                name: "DELEGACJE_POM");

            migrationBuilder.DropTable(
                name: "DeletedAttachments");

            migrationBuilder.DropTable(
                name: "Desktop",
                schema: "app");

            migrationBuilder.DropTable(
                name: "DICTIONARIES");

            migrationBuilder.DropTable(
                name: "Dictionary",
                schema: "app");

            migrationBuilder.DropTable(
                name: "DICTIONARY_VALUES");

            migrationBuilder.DropTable(
                name: "DictionaryText",
                schema: "app");

            migrationBuilder.DropTable(
                name: "DictionaryText",
                schema: "ling");

            migrationBuilder.DropTable(
                name: "DictionaryText",
                schema: "lng");

            migrationBuilder.DropTable(
                name: "DOD_PALIWOWE");

            migrationBuilder.DropTable(
                name: "DOKUMENTY");

            migrationBuilder.DropTable(
                name: "DOKUMENTY_KIEROWCY");

            migrationBuilder.DropTable(
                name: "DOKUMENTY_STATUS");

            migrationBuilder.DropTable(
                name: "DOKUMENTY_SZUFLADY");

            migrationBuilder.DropTable(
                name: "DOKUMENTY_UWAGI");

            migrationBuilder.DropTable(
                name: "DostepnyTabor",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "DostepnyTaborKierowcy",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "DPS_HepTable",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "DPS_StateInfo",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "DPS-Opti_Routes_GetTaskGroups_Task",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "DPS-Opti_Routes_GetTaskGroups_VehTask",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "DriversOnMap",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "DZIALY");

            migrationBuilder.DropTable(
                name: "DZIALY_PRAWA");

            migrationBuilder.DropTable(
                name: "E_ADRES");

            migrationBuilder.DropTable(
                name: "E_DOK_HIST");

            migrationBuilder.DropTable(
                name: "E_KRAJ");

            migrationBuilder.DropTable(
                name: "E_MIASTO");

            migrationBuilder.DropTable(
                name: "EDI_REQUEST");

            migrationBuilder.DropTable(
                name: "EDI_STATUSY2INSERT");

            migrationBuilder.DropTable(
                name: "EMAIL_ATTACH");

            migrationBuilder.DropTable(
                name: "EMAIL_CROSS");

            migrationBuilder.DropTable(
                name: "EMAIL_MSG");

            migrationBuilder.DropTable(
                name: "EMAIL_SRV");

            migrationBuilder.DropTable(
                name: "EMI_XML");

            migrationBuilder.DropTable(
                name: "ESPEED_DS");

            migrationBuilder.DropTable(
                name: "ESPEED_TABS");

            migrationBuilder.DropTable(
                name: "ESPEED_TABS_LABELS");

            migrationBuilder.DropTable(
                name: "ESPEED_THEMES");

            migrationBuilder.DropTable(
                name: "ETA_EVENTS");

            migrationBuilder.DropTable(
                name: "ETA_EVENTS_FMT");

            migrationBuilder.DropTable(
                name: "EventLog",
                schema: "geo");

            migrationBuilder.DropTable(
                name: "EventType",
                schema: "geo");

            migrationBuilder.DropTable(
                name: "FAKTURY");

            migrationBuilder.DropTable(
                name: "FAKTURY_DEKRET");

            migrationBuilder.DropTable(
                name: "FAKTURY_POZYCJE");

            migrationBuilder.DropTable(
                name: "FAKTURY_POZYCJE_ZB");

            migrationBuilder.DropTable(
                name: "FAKTURY_PROW_PRAC");

            migrationBuilder.DropTable(
                name: "FAKTURY_PRZYCZYNY_KOR");

            migrationBuilder.DropTable(
                name: "FAKTURY_SPLATY");

            migrationBuilder.DropTable(
                name: "FAKTURY_VAT");

            migrationBuilder.DropTable(
                name: "FAKTURY_VAT_JPK_OZN");

            migrationBuilder.DropTable(
                name: "FAKTURY_VAT_JPK_OZN_DOD");

            migrationBuilder.DropTable(
                name: "FAKTURY_WZORCE");

            migrationBuilder.DropTable(
                name: "FAKTURY_WZORCE_POZYCJE");

            migrationBuilder.DropTable(
                name: "FAKTURY_ZLEC");

            migrationBuilder.DropTable(
                name: "FileTransferProtocol",
                schema: "app");

            migrationBuilder.DropTable(
                name: "FILTRY");

            migrationBuilder.DropTable(
                name: "FIRMA");

            migrationBuilder.DropTable(
                name: "FORMTEXT");

            migrationBuilder.DropTable(
                name: "FORMY_PLATNOSCI");

            migrationBuilder.DropTable(
                name: "FORMY_PLATNOSCI_TLUMACZ");

            migrationBuilder.DropTable(
                name: "FRACHT_PROC");

            migrationBuilder.DropTable(
                name: "FtlCalc");

            migrationBuilder.DropTable(
                name: "FtlCalcCostItems");

            migrationBuilder.DropTable(
                name: "FtlCalcEvents");

            migrationBuilder.DropTable(
                name: "FtlCalcIncomeItems");

            migrationBuilder.DropTable(
                name: "GDPR_CATEGORY_PROCESSING_REGISTER");

            migrationBuilder.DropTable(
                name: "GDPR_KIEROWCY");

            migrationBuilder.DropTable(
                name: "GDPR_KONTRAHENCI");

            migrationBuilder.DropTable(
                name: "GDPR_KONTRAHENCI_REPREZ");

            migrationBuilder.DropTable(
                name: "GDPR_OBLIVION");

            migrationBuilder.DropTable(
                name: "GDPR_OBLIVION_POS");

            migrationBuilder.DropTable(
                name: "GDPR_PERSONS");

            migrationBuilder.DropTable(
                name: "GDPR_PROCESSING_REGISTER");

            migrationBuilder.DropTable(
                name: "GDPR_SOURCE");

            migrationBuilder.DropTable(
                name: "GDPR_UZYTKOWNIK");

            migrationBuilder.DropTable(
                name: "GENER");

            migrationBuilder.DropTable(
                name: "GeofenceEvent",
                schema: "mob");

            migrationBuilder.DropTable(
                name: "GeofenceEventData",
                schema: "mob");

            migrationBuilder.DropTable(
                name: "Geofencing",
                schema: "geo");

            migrationBuilder.DropTable(
                name: "GEOFENCING");

            migrationBuilder.DropTable(
                name: "GEOFENCING_STAT");

            migrationBuilder.DropTable(
                name: "GEOFENCING_TABOR");

            migrationBuilder.DropTable(
                name: "GeofencingEvent",
                schema: "geo");

            migrationBuilder.DropTable(
                name: "GF_ACTION");

            migrationBuilder.DropTable(
                name: "GF_DEF");

            migrationBuilder.DropTable(
                name: "GF_DEF_POI_OBJ");

            migrationBuilder.DropTable(
                name: "GF_EVENT_DEF");

            migrationBuilder.DropTable(
                name: "GF_SEND_LIST");

            migrationBuilder.DropTable(
                name: "GIELDA_POJAZDOW");

            migrationBuilder.DropTable(
                name: "GridLayout");

            migrationBuilder.DropTable(
                name: "GridLayoutBackup");

            migrationBuilder.DropTable(
                name: "GridSettings");

            migrationBuilder.DropTable(
                name: "GridType",
                schema: "app");

            migrationBuilder.DropTable(
                name: "GRUPY_ANALITYCZNE");

            migrationBuilder.DropTable(
                name: "GRUPY_LADUNKOW");

            migrationBuilder.DropTable(
                name: "GRUPY_LADUNKOW_PARAMETRY");

            migrationBuilder.DropTable(
                name: "GRUPY_NIEOBECNOSCI");

            migrationBuilder.DropTable(
                name: "HARMONOGRAMY");

            migrationBuilder.DropTable(
                name: "HARMONOGRAMY_POZ");

            migrationBuilder.DropTable(
                name: "HELP_TABLE",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "HISTORIA_KONTROLI_WYKAZ_WL");

            migrationBuilder.DropTable(
                name: "History_Tables");

            migrationBuilder.DropTable(
                name: "HubConfiguration",
                schema: "hub");

            migrationBuilder.DropTable(
                name: "HubGate",
                schema: "hub");

            migrationBuilder.DropTable(
                name: "HubGateEventType",
                schema: "hub");

            migrationBuilder.DropTable(
                name: "HubGateLayout",
                schema: "hub");

            migrationBuilder.DropTable(
                name: "HubGateRoute",
                schema: "hub");

            migrationBuilder.DropTable(
                name: "HubGateTimeWindow",
                schema: "hub");

            migrationBuilder.DropTable(
                name: "HubGateType",
                schema: "hub");

            migrationBuilder.DropTable(
                name: "HubTeamLeaderAccept",
                schema: "hub");

            migrationBuilder.DropTable(
                name: "Icon",
                schema: "app");

            migrationBuilder.DropTable(
                name: "IDOC");

            migrationBuilder.DropTable(
                name: "ImportFileType",
                schema: "app");

            migrationBuilder.DropTable(
                name: "ImportObject",
                schema: "app");

            migrationBuilder.DropTable(
                name: "ImportObjectDefinition",
                schema: "app");

            migrationBuilder.DropTable(
                name: "ImportSchemaDefinition",
                schema: "app");

            migrationBuilder.DropTable(
                name: "ImportSchemaMapping",
                schema: "app");

            migrationBuilder.DropTable(
                name: "INCOTERMS");

            migrationBuilder.DropTable(
                name: "INCOTERMS_POZ");

            migrationBuilder.DropTable(
                name: "INI_HIST");

            migrationBuilder.DropTable(
                name: "INSTRUKCJE_DOD");

            migrationBuilder.DropTable(
                name: "INSTRUKCJE_DOD_KONFIG");

            migrationBuilder.DropTable(
                name: "Interval",
                schema: "app");

            migrationBuilder.DropTable(
                name: "InventorySheet",
                schema: "scan");

            migrationBuilder.DropTable(
                name: "InventorySheetPosition",
                schema: "scan");

            migrationBuilder.DropTable(
                name: "InventoryStatus",
                schema: "scan");

            migrationBuilder.DropTable(
                name: "Kabotaze",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "KALENDARZ");

            migrationBuilder.DropTable(
                name: "KALK_STAWKI_AIR");

            migrationBuilder.DropTable(
                name: "KALK_STAWKI_LTL");

            migrationBuilder.DropTable(
                name: "KALKULACJE");

            migrationBuilder.DropTable(
                name: "KARNETY_TIR");

            migrationBuilder.DropTable(
                name: "KARTA_ODPADU");

            migrationBuilder.DropTable(
                name: "KARTA_ODPADU_POZ");

            migrationBuilder.DropTable(
                name: "KARTY");

            migrationBuilder.DropTable(
                name: "KARTY_CENY");

            migrationBuilder.DropTable(
                name: "KARTY_PLIKI");

            migrationBuilder.DropTable(
                name: "KARTY_PRZYDZIAL");

            migrationBuilder.DropTable(
                name: "KARTY_ROZL_FZ");

            migrationBuilder.DropTable(
                name: "KARTY_ROZL_FZ_POZ");

            migrationBuilder.DropTable(
                name: "KARTY_TRANSAKCJE");

            migrationBuilder.DropTable(
                name: "KARTY_TYPY_OPER");

            migrationBuilder.DropTable(
                name: "KARTY_WYDAWCY");

            migrationBuilder.DropTable(
                name: "KASA_BANK_DO_FK");

            migrationBuilder.DropTable(
                name: "KASY");

            migrationBuilder.DropTable(
                name: "KAT_LISTOW_LINIOWYCH");

            migrationBuilder.DropTable(
                name: "KAT_PRZESYLEK");

            migrationBuilder.DropTable(
                name: "KATEGORIE");

            migrationBuilder.DropTable(
                name: "KIEROWCY");

            migrationBuilder.DropTable(
                name: "KIEROWCY_EXT");

            migrationBuilder.DropTable(
                name: "KIEROWCY_GRUPY");

            migrationBuilder.DropTable(
                name: "KIEROWCY_GRUPY_HIST");

            migrationBuilder.DropTable(
                name: "KIEROWCY_HIST_ZATR");

            migrationBuilder.DropTable(
                name: "KIEROWCY_MIES");

            migrationBuilder.DropTable(
                name: "KIEROWCY_MIES_ROZL");

            migrationBuilder.DropTable(
                name: "KIEROWCY_MIES_ROZL_ODL");

            migrationBuilder.DropTable(
                name: "KIEROWCY_UWAGI");

            migrationBuilder.DropTable(
                name: "KIEROWCY_UWAGI_RODZ");

            migrationBuilder.DropTable(
                name: "KIEROWCY_WYNAGR");

            migrationBuilder.DropTable(
                name: "KIEROWCY_WYNAGR_SZABLON");

            migrationBuilder.DropTable(
                name: "KIEROWCY_WYPOS_SZABLON");

            migrationBuilder.DropTable(
                name: "KIEROWCY_WYPOS_SZABLON_POZ");

            migrationBuilder.DropTable(
                name: "KIEROWCY_WYPOSAZENIE");

            migrationBuilder.DropTable(
                name: "KIEROWCY_ZAKAZY");

            migrationBuilder.DropTable(
                name: "KIERUNKI");

            migrationBuilder.DropTable(
                name: "KIR");

            migrationBuilder.DropTable(
                name: "KOD_STREFA");

            migrationBuilder.DropTable(
                name: "KOD_STREFA_POZ");

            migrationBuilder.DropTable(
                name: "KODY_KRESKOWE_DOK");

            migrationBuilder.DropTable(
                name: "KODY_NIEOBECNOSCI");

            migrationBuilder.DropTable(
                name: "KODY_US");

            migrationBuilder.DropTable(
                name: "KOLEJE");

            migrationBuilder.DropTable(
                name: "KOLEJKA_WYDRUKOW");

            migrationBuilder.DropTable(
                name: "KOMPENSATY");

            migrationBuilder.DropTable(
                name: "KOMPENSATY_POZ");

            migrationBuilder.DropTable(
                name: "KOMUNIKACJA_FK");

            migrationBuilder.DropTable(
                name: "KONTENERY");

            migrationBuilder.DropTable(
                name: "KONTENERY_LAD");

            migrationBuilder.DropTable(
                name: "KONTENERY_RAIL_LAD");

            migrationBuilder.DropTable(
                name: "KONTENERY_WYM_TABORU");

            migrationBuilder.DropTable(
                name: "KONTENERY_ZLECENIA");

            migrationBuilder.DropTable(
                name: "KONTRAH_AIR_AWB");

            migrationBuilder.DropTable(
                name: "KONTRAH_KRAJE_DO");

            migrationBuilder.DropTable(
                name: "KONTRAH_KRAJE_Z");

            migrationBuilder.DropTable(
                name: "KONTRAH_LADUNKI");

            migrationBuilder.DropTable(
                name: "KONTRAH_OGR_LAD");

            migrationBuilder.DropTable(
                name: "KONTRAH_OGR_LAD_POZ");

            migrationBuilder.DropTable(
                name: "KONTRAH_POWIADOMIENIA");

            migrationBuilder.DropTable(
                name: "KONTRAH_SEGMENT");

            migrationBuilder.DropTable(
                name: "KONTRAH_TOWARY");

            migrationBuilder.DropTable(
                name: "KONTRAH_TYP_REPREZ");

            migrationBuilder.DropTable(
                name: "KONTRAH_WOLUMENY_OKR");

            migrationBuilder.DropTable(
                name: "KONTRAH_WOLUMENY_OKR_POZ");

            migrationBuilder.DropTable(
                name: "KONTRAH_WYM_TABORU");

            migrationBuilder.DropTable(
                name: "KONTRAHENCI");

            migrationBuilder.DropTable(
                name: "KONTRAHENCI_BLOKADY");

            migrationBuilder.DropTable(
                name: "KONTRAHENCI_CENNIKI");

            migrationBuilder.DropTable(
                name: "KONTRAHENCI_CENNIKI_DEF");

            migrationBuilder.DropTable(
                name: "KONTRAHENCI_CRM");

            migrationBuilder.DropTable(
                name: "KONTRAHENCI_CYKLE_FV");

            migrationBuilder.DropTable(
                name: "KONTRAHENCI_DOKUMENTY");

            migrationBuilder.DropTable(
                name: "KONTRAHENCI_FINANSE");

            migrationBuilder.DropTable(
                name: "KONTRAHENCI_FORMATKI_CR");

            migrationBuilder.DropTable(
                name: "KONTRAHENCI_FTP");

            migrationBuilder.DropTable(
                name: "KONTRAHENCI_GIELDY");

            migrationBuilder.DropTable(
                name: "KONTRAHENCI_GRUPY");

            migrationBuilder.DropTable(
                name: "KONTRAHENCI_KAT");

            migrationBuilder.DropTable(
                name: "KONTRAHENCI_KONTA");

            migrationBuilder.DropTable(
                name: "KONTRAHENCI_KRYTERIUM_FV");

            migrationBuilder.DropTable(
                name: "KONTRAHENCI_LICZNIKI");

            migrationBuilder.DropTable(
                name: "KONTRAHENCI_MAX_DLUG");

            migrationBuilder.DropTable(
                name: "KONTRAHENCI_MIEJSCA");

            migrationBuilder.DropTable(
                name: "KONTRAHENCI_ODDZIALY");

            migrationBuilder.DropTable(
                name: "KONTRAHENCI_OPAK");

            migrationBuilder.DropTable(
                name: "KONTRAHENCI_OPIEK");

            migrationBuilder.DropTable(
                name: "KONTRAHENCI_POD");

            migrationBuilder.DropTable(
                name: "KONTRAHENCI_POLISY_OC");

            migrationBuilder.DropTable(
                name: "KONTRAHENCI_POWIAZANI");

            migrationBuilder.DropTable(
                name: "KONTRAHENCI_PRZELICZNIKI");

            migrationBuilder.DropTable(
                name: "KONTRAHENCI_REPREZ");

            migrationBuilder.DropTable(
                name: "KONTRAHENCI_REPREZ_ZGODY");

            migrationBuilder.DropTable(
                name: "KONTRAHENCI_SKONTO");

            migrationBuilder.DropTable(
                name: "KONTRAHENCI_TABOR");

            migrationBuilder.DropTable(
                name: "KONTRAHENCI_UDZIALY");

            migrationBuilder.DropTable(
                name: "KONTRAHENCI_WALUTY");

            migrationBuilder.DropTable(
                name: "KONTRAHENCI_WWW");

            migrationBuilder.DropTable(
                name: "KONTRAHENCI_ZALACZNIKI");

            migrationBuilder.DropTable(
                name: "KONTRAHENCI_ZASADY_FV");

            migrationBuilder.DropTable(
                name: "KOR_MAG");

            migrationBuilder.DropTable(
                name: "KOR_MAG_F");

            migrationBuilder.DropTable(
                name: "KOR_MAG_F_PZ");

            migrationBuilder.DropTable(
                name: "KOR_MAG_PZ");

            migrationBuilder.DropTable(
                name: "KOR_MAG_WZ_PZ");

            migrationBuilder.DropTable(
                name: "KRAJE");

            migrationBuilder.DropTable(
                name: "KS_POCZT_DOKUM");

            migrationBuilder.DropTable(
                name: "KSIAZKA_ADRESOWA_EMAIL");

            migrationBuilder.DropTable(
                name: "KSIAZKA_POCZTOWA_OTRZ");

            migrationBuilder.DropTable(
                name: "KSIAZKA_POCZTOWA_OTRZ_POZ");

            migrationBuilder.DropTable(
                name: "KSIAZKA_POCZTOWA_OTRZ_ROZDZ");

            migrationBuilder.DropTable(
                name: "KSIAZKA_POCZTOWA_POZ");

            migrationBuilder.DropTable(
                name: "KSIAZKA_POCZTOWA_POZ_DOK");

            migrationBuilder.DropTable(
                name: "KURSY");

            migrationBuilder.DropTable(
                name: "KURSY_D");

            migrationBuilder.DropTable(
                name: "KWIT_PAL");

            migrationBuilder.DropTable(
                name: "KWIT_PAL_POZ");

            migrationBuilder.DropTable(
                name: "KWIT_PAL_ROZL");

            migrationBuilder.DropTable(
                name: "KWIT_PAL_ROZL_LOK");

            migrationBuilder.DropTable(
                name: "KWIT_PAL_ROZL_LOK_POZ");

            migrationBuilder.DropTable(
                name: "KWIT_PAL_ROZL_POZ");

            migrationBuilder.DropTable(
                name: "Language",
                schema: "app");

            migrationBuilder.DropTable(
                name: "Language",
                schema: "ling");

            migrationBuilder.DropTable(
                name: "Language",
                schema: "lng");

            migrationBuilder.DropTable(
                name: "LAYOUT_TEMPLATE");

            migrationBuilder.DropTable(
                name: "LayoutType",
                schema: "app");

            migrationBuilder.DropTable(
                name: "LICENCJA");

            migrationBuilder.DropTable(
                name: "LICENCJA_MODUL");

            migrationBuilder.DropTable(
                name: "LICENCJA_PLIK");

            migrationBuilder.DropTable(
                name: "LICENCJA_PROFIL");

            migrationBuilder.DropTable(
                name: "LICENCJA_UZYTKOWNIK");

            migrationBuilder.DropTable(
                name: "LICZNIKI");

            migrationBuilder.DropTable(
                name: "ListFilter",
                schema: "app");

            migrationBuilder.DropTable(
                name: "ListLayout",
                schema: "app");

            migrationBuilder.DropTable(
                name: "LISTY_LINIOWE");

            migrationBuilder.DropTable(
                name: "LISTY_LINIOWE_AIR");

            migrationBuilder.DropTable(
                name: "LISTY_LINIOWE_KIERUNKI");

            migrationBuilder.DropTable(
                name: "LISTY_LINIOWE_KOMUNIK");

            migrationBuilder.DropTable(
                name: "LISTY_LINIOWE_LOK");

            migrationBuilder.DropTable(
                name: "LISTY_LINIOWE_POZ");

            migrationBuilder.DropTable(
                name: "LISTY_LINIOWE_POZ_P");

            migrationBuilder.DropTable(
                name: "LISTY_LINIOWE_PROMY");

            migrationBuilder.DropTable(
                name: "LISTY_LINIOWE_RAIL");

            migrationBuilder.DropTable(
                name: "LISTY_LINIOWE_SEA");

            migrationBuilder.DropTable(
                name: "LISTY_LINIOWE_ZA_WY");

            migrationBuilder.DropTable(
                name: "LOCAL_USERS");

            migrationBuilder.DropTable(
                name: "Locker",
                schema: "app");

            migrationBuilder.DropTable(
                name: "LOCKER");

            migrationBuilder.DropTable(
                name: "LOG_GF");

            migrationBuilder.DropTable(
                name: "LOG_SERVICE");

            migrationBuilder.DropTable(
                name: "logETA");

            migrationBuilder.DropTable(
                name: "LOGI");

            migrationBuilder.DropTable(
                name: "LoginMethod",
                schema: "rest");

            migrationBuilder.DropTable(
                name: "LOKALIZACJA_STAN");

            migrationBuilder.DropTable(
                name: "LOKALIZACJE");

            migrationBuilder.DropTable(
                name: "LOKALIZACJE_DZIALY");

            migrationBuilder.DropTable(
                name: "LOKALIZACJE_PRAWA");

            migrationBuilder.DropTable(
                name: "MacierzZleceniaTabor",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "MacierzZleceniaZdarzenia",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "Macro",
                schema: "app");

            migrationBuilder.DropTable(
                name: "MacroItem",
                schema: "app");

            migrationBuilder.DropTable(
                name: "MAG_OPAK");

            migrationBuilder.DropTable(
                name: "MAG_OPAK_ZDARZ");

            migrationBuilder.DropTable(
                name: "MAG_OPAK_ZDARZ_POZ");

            migrationBuilder.DropTable(
                name: "MAGAZYN_ZDARZENIA");

            migrationBuilder.DropTable(
                name: "MAGAZYN_ZDARZENIA_POZ");

            migrationBuilder.DropTable(
                name: "MAGAZYN_ZDARZENIA_POZ_P");

            migrationBuilder.DropTable(
                name: "Mail",
                schema: "app");

            migrationBuilder.DropTable(
                name: "MAIL_IN");

            migrationBuilder.DropTable(
                name: "MAIL_IN_ATTACH");

            migrationBuilder.DropTable(
                name: "MAIL_OUT");

            migrationBuilder.DropTable(
                name: "MAIL_OUT_ATTACH");

            migrationBuilder.DropTable(
                name: "MailLayoutDef");

            migrationBuilder.DropTable(
                name: "MailType",
                schema: "app");

            migrationBuilder.DropTable(
                name: "MAKRA_STATUSY");

            migrationBuilder.DropTable(
                name: "MANDATY_WYKROCZ");

            migrationBuilder.DropTable(
                name: "MANDATY_WYKROCZ_ROZL");

            migrationBuilder.DropTable(
                name: "Map_OptiRoute_Group",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "Map_OptiRoute_Save",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "Map_OptiRoute_Task",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "Map_OptiRoute_TaskItem",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "Map_OptiRoute_Toll",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "MAPA_HISTORIA");

            migrationBuilder.DropTable(
                name: "MAPA_HISTORIA_POZ");

            migrationBuilder.DropTable(
                name: "MAPA_UTRUDNIENIA2");

            migrationBuilder.DropTable(
                name: "MAPA_UTRUDNIENIA2_POZ");

            migrationBuilder.DropTable(
                name: "MapCatalog");

            migrationBuilder.DropTable(
                name: "MapCatalogDetail");

            migrationBuilder.DropTable(
                name: "MapDetails",
                schema: "map");

            migrationBuilder.DropTable(
                name: "MapRoutingLog",
                schema: "edi");

            migrationBuilder.DropTable(
                name: "MARKA");

            migrationBuilder.DropTable(
                name: "MemoryStatusLog");

            migrationBuilder.DropTable(
                name: "METRYKI_EXT");

            migrationBuilder.DropTable(
                name: "MIEJSCA_ZA_ROZLADUNKU");

            migrationBuilder.DropTable(
                name: "MIEJSCA_ZA_WY_CZAS");

            migrationBuilder.DropTable(
                name: "MIEJSCA_ZA_WY_KONTRAH");

            migrationBuilder.DropTable(
                name: "MIEJSCA_ZA_WY_MYJNIE");

            migrationBuilder.DropTable(
                name: "MIEJSCA_ZA_WY_MYJNIE_GRUPY");

            migrationBuilder.DropTable(
                name: "MIEJSCA_ZA_WY_MYJNIE_PROC");

            migrationBuilder.DropTable(
                name: "MIEJSCA_ZA_WY_OGR_LAD");

            migrationBuilder.DropTable(
                name: "MIEJSCA_ZA_WY_OGR_LAD_POZ");

            migrationBuilder.DropTable(
                name: "MIEJSCA_ZA_WY_WYLACZ");

            migrationBuilder.DropTable(
                name: "MIEJSCA_ZA_WY_WYM_TABORU");

            migrationBuilder.DropTable(
                name: "MIEJSCA_ZA_WY_ZAKAZY");

            migrationBuilder.DropTable(
                name: "MIEJSCE");

            migrationBuilder.DropTable(
                name: "MobileApplication",
                schema: "rest");

            migrationBuilder.DropTable(
                name: "MobileApplicationList",
                schema: "rest");

            migrationBuilder.DropTable(
                name: "MobileAppList");

            migrationBuilder.DropTable(
                name: "MobileAppVersion");

            migrationBuilder.DropTable(
                name: "MobileDriverPermission");

            migrationBuilder.DropTable(
                name: "MobileDriverProfile");

            migrationBuilder.DropTable(
                name: "MobileDriverProfileType");

            migrationBuilder.DropTable(
                name: "MobileObjState");

            migrationBuilder.DropTable(
                name: "MobileSystem",
                schema: "rest");

            migrationBuilder.DropTable(
                name: "MobileTask",
                schema: "rest");

            migrationBuilder.DropTable(
                name: "MobileTaskState",
                schema: "rest");

            migrationBuilder.DropTable(
                name: "MobileTaskType",
                schema: "rest");

            migrationBuilder.DropTable(
                name: "MobileUpdate",
                schema: "rest");

            migrationBuilder.DropTable(
                name: "MobileVersionScript");

            migrationBuilder.DropTable(
                name: "MODEL");

            migrationBuilder.DropTable(
                name: "Module",
                schema: "app");

            migrationBuilder.DropTable(
                name: "mpal_test");

            migrationBuilder.DropTable(
                name: "MultilingualText",
                schema: "lng");

            migrationBuilder.DropTable(
                name: "NADGABARYTY");

            migrationBuilder.DropTable(
                name: "NavBar",
                schema: "app");

            migrationBuilder.DropTable(
                name: "NORMY");

            migrationBuilder.DropTable(
                name: "NOSNIKI_UWAGI");

            migrationBuilder.DropTable(
                name: "NOTY");

            migrationBuilder.DropTable(
                name: "NOTY_BAK");

            migrationBuilder.DropTable(
                name: "NOTY_KORYGUJACE");

            migrationBuilder.DropTable(
                name: "NOTY_KORYGUJACE_POZ");

            migrationBuilder.DropTable(
                name: "NOTY_POZYCJE");

            migrationBuilder.DropTable(
                name: "NOTY_SPLATY");

            migrationBuilder.DropTable(
                name: "OBIEKTYRPT");

            migrationBuilder.DropTable(
                name: "OBJ_DEF");

            migrationBuilder.DropTable(
                name: "OBJ_KLUCZ");

            migrationBuilder.DropTable(
                name: "OBJ_KLUCZ_SQL");

            migrationBuilder.DropTable(
                name: "OBJ_WZORZEC");

            migrationBuilder.DropTable(
                name: "OBJECT");

            migrationBuilder.DropTable(
                name: "OBJECT_ANALIZE_DEF");

            migrationBuilder.DropTable(
                name: "OBJECT_CENNIKI_SQL");

            migrationBuilder.DropTable(
                name: "OBJECT_REC_CENNIKI_SQL");

            migrationBuilder.DropTable(
                name: "OBJECT_ReportSet");

            migrationBuilder.DropTable(
                name: "Object_SFM_VER");

            migrationBuilder.DropTable(
                name: "OBJECT_SID");

            migrationBuilder.DropTable(
                name: "OBJPICTURES");

            migrationBuilder.DropTable(
                name: "ODLEGLOSCI");

            migrationBuilder.DropTable(
                name: "ODSETKI_USTAWOWE");

            migrationBuilder.DropTable(
                name: "OFERTA_TRASY");

            migrationBuilder.DropTable(
                name: "OFERTY");

            migrationBuilder.DropTable(
                name: "OFERTY_DROBN");

            migrationBuilder.DropTable(
                name: "OFERTY_DROBN_PRZELICZNIKI");

            migrationBuilder.DropTable(
                name: "OFERTY_DROBN_TOWARY");

            migrationBuilder.DropTable(
                name: "OFERTY_DROBN_USLUGI");

            migrationBuilder.DropTable(
                name: "OFERTY_NEW");

            migrationBuilder.DropTable(
                name: "OFERTY_NEW_POZ");

            migrationBuilder.DropTable(
                name: "OFERTY_POZYCJE");

            migrationBuilder.DropTable(
                name: "OFERTY_ZALACZNIKI");

            migrationBuilder.DropTable(
                name: "OKRES_ROZLICZENIOWY");

            migrationBuilder.DropTable(
                name: "OKRESY");

            migrationBuilder.DropTable(
                name: "OKRESY_POZ");

            migrationBuilder.DropTable(
                name: "OKRESY_ROZLICZENIOWE");

            migrationBuilder.DropTable(
                name: "OLAP_DEFINICJE");

            migrationBuilder.DropTable(
                name: "OLAP_DEFINICJE_PARAMS");

            migrationBuilder.DropTable(
                name: "OLAP_DEFINICJE_ULUBIONE");

            migrationBuilder.DropTable(
                name: "OLAP_EXECUTE");

            migrationBuilder.DropTable(
                name: "OLAP_GRUPY");

            migrationBuilder.DropTable(
                name: "OLAP_PRAWA");

            migrationBuilder.DropTable(
                name: "OLAP_PRNT_SETTINGS");

            migrationBuilder.DropTable(
                name: "OLAP_USER_SETTINGS");

            migrationBuilder.DropTable(
                name: "OLAP_WIDOKI");

            migrationBuilder.DropTable(
                name: "OLAP_WIDOKI_USR");

            migrationBuilder.DropTable(
                name: "OlapGroup",
                schema: "olap");

            migrationBuilder.DropTable(
                name: "OPAKOWANIA");

            migrationBuilder.DropTable(
                name: "OPAKOWANIA_LOK");

            migrationBuilder.DropTable(
                name: "OPAKOWANIA_POZ");

            migrationBuilder.DropTable(
                name: "OPCJE_PRZEWOZOW");

            migrationBuilder.DropTable(
                name: "OPISY_TOWAROW");

            migrationBuilder.DropTable(
                name: "OPISY_TOWAROW_WYM_TABORU");

            migrationBuilder.DropTable(
                name: "Opti_ETA_Drivers",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "Opti_ETA_Simulations",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "OptimalizationThreads",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "OptimizationFtlLog",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "OptimizationLog",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "OPTIPLAN_LOG",
                schema: "iLAN");

            migrationBuilder.DropTable(
                name: "OptiPlanerFtlDistance");

            migrationBuilder.DropTable(
                name: "OptiPlanMapLineColors");

            migrationBuilder.DropTable(
                name: "OstOPTYMALIZACJA",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "OTH_POZ");

            migrationBuilder.DropTable(
                name: "OutputType",
                schema: "app");

            migrationBuilder.DropTable(
                name: "PACZKI");

            migrationBuilder.DropTable(
                name: "PACZKI_AIR");

            migrationBuilder.DropTable(
                name: "PACZKI_DOKUM");

            migrationBuilder.DropTable(
                name: "PACZKI_HIST");

            migrationBuilder.DropTable(
                name: "PACZKI_LOK_HIST");

            migrationBuilder.DropTable(
                name: "PACZKI_PALETOWE");

            migrationBuilder.DropTable(
                name: "PACZKI_PROD");

            migrationBuilder.DropTable(
                name: "PACZKI_RAIL");

            migrationBuilder.DropTable(
                name: "PACZKI_REL");

            migrationBuilder.DropTable(
                name: "PACZKI_SEA");

            migrationBuilder.DropTable(
                name: "PACZKI_SKAN");

            migrationBuilder.DropTable(
                name: "PACZKI_STOSY");

            migrationBuilder.DropTable(
                name: "PACZKIANOMALIE");

            migrationBuilder.DropTable(
                name: "PALIWO_GESTOSC");

            migrationBuilder.DropTable(
                name: "ParameterType",
                schema: "olap");

            migrationBuilder.DropTable(
                name: "Permission",
                schema: "app");

            migrationBuilder.DropTable(
                name: "PermissionGroup",
                schema: "app");

            migrationBuilder.DropTable(
                name: "PK");

            migrationBuilder.DropTable(
                name: "PLANY_DOSTAW");

            migrationBuilder.DropTable(
                name: "PLIKIRPT");

            migrationBuilder.DropTable(
                name: "PODLICZNIKI");

            migrationBuilder.DropTable(
                name: "POI_MYJNIE_PROCEDURY");

            migrationBuilder.DropTable(
                name: "POLISY");

            migrationBuilder.DropTable(
                name: "POLISY_POJAZDY");

            migrationBuilder.DropTable(
                name: "POLISY_SKLADKI");

            migrationBuilder.DropTable(
                name: "POLISY_TOWARY");

            migrationBuilder.DropTable(
                name: "PopupMenuConfig");

            migrationBuilder.DropTable(
                name: "POWIADOMIENIA_EM_ANOMALIE",
                schema: "rep");

            migrationBuilder.DropTable(
                name: "POWIADOMIENIA_EM_PUSTE",
                schema: "rep");

            migrationBuilder.DropTable(
                name: "POWIADOMIENIA_EM_ZLECENIA",
                schema: "rep");

            migrationBuilder.DropTable(
                name: "POZYCJE_FAKTUR");

            migrationBuilder.DropTable(
                name: "POZYCJE_FAKTUR_PROW");

            migrationBuilder.DropTable(
                name: "POZYCJE_FAKTUR_TLUMACZ");

            migrationBuilder.DropTable(
                name: "PREFAKTURY");

            migrationBuilder.DropTable(
                name: "PREFAKTURY_POZ");

            migrationBuilder.DropTable(
                name: "PROCEDURE_CFG");

            migrationBuilder.DropTable(
                name: "PROCEDURE_CFG_back");

            migrationBuilder.DropTable(
                name: "PROCEDURE_CFG_EXT");

            migrationBuilder.DropTable(
                name: "PROCEDURY");

            migrationBuilder.DropTable(
                name: "PROCEDURYLOG");

            migrationBuilder.DropTable(
                name: "ProcessLogger",
                schema: "app");

            migrationBuilder.DropTable(
                name: "PROCESY");

            migrationBuilder.DropTable(
                name: "PROCESY_OKR");

            migrationBuilder.DropTable(
                name: "PROCESY_OKR_ALG");

            migrationBuilder.DropTable(
                name: "Profile",
                schema: "app");

            migrationBuilder.DropTable(
                name: "PROFILEDOMAINGROUP");

            migrationBuilder.DropTable(
                name: "ProfilePermission",
                schema: "app");

            migrationBuilder.DropTable(
                name: "PROM");

            migrationBuilder.DropTable(
                name: "PROMY");

            migrationBuilder.DropTable(
                name: "PROMY_ALOTY");

            migrationBuilder.DropTable(
                name: "PROMY_ALOTY_POZ");

            migrationBuilder.DropTable(
                name: "PROMY_CENNIKI");

            migrationBuilder.DropTable(
                name: "PROMY_HARMONOGRAM");

            migrationBuilder.DropTable(
                name: "PROMY_HARMONOGRAM_CENNIK");

            migrationBuilder.DropTable(
                name: "PROMY_RELACJE");

            migrationBuilder.DropTable(
                name: "PROMY_RELACJE_ARMATOR");

            migrationBuilder.DropTable(
                name: "PROMY_ZA_WY");

            migrationBuilder.DropTable(
                name: "PROT_NIEZG");

            migrationBuilder.DropTable(
                name: "PROT_NIEZG_DOD_KOMENT");

            migrationBuilder.DropTable(
                name: "PROT_NIEZG_DODATKOWE_KOMENTARZE");

            migrationBuilder.DropTable(
                name: "PROT_NIEZG_MOC_TOW");

            migrationBuilder.DropTable(
                name: "PROT_NIEZG_MOCOWANIE_TOWARU");

            migrationBuilder.DropTable(
                name: "PROT_NIEZG_PACZKI");

            migrationBuilder.DropTable(
                name: "PROT_NIEZG_POST");

            migrationBuilder.DropTable(
                name: "PROT_NIEZG_POSTANOWIENIA");

            migrationBuilder.DropTable(
                name: "PROT_NIEZG_RODZAJ");

            migrationBuilder.DropTable(
                name: "PROT_NIEZG_RODZAJE");

            migrationBuilder.DropTable(
                name: "PROT_NIEZG_SPOSOB_OPAK");

            migrationBuilder.DropTable(
                name: "PROT_NIEZG_SPOSOB_OPAKOWANIA");

            migrationBuilder.DropTable(
                name: "PROT_NIEZG_ZDARZENIA");

            migrationBuilder.DropTable(
                name: "Province");

            migrationBuilder.DropTable(
                name: "PRZEK_FILTR");

            migrationBuilder.DropTable(
                name: "PRZEK_TABOR");

            migrationBuilder.DropTable(
                name: "PRZEKIEROWANIA");

            migrationBuilder.DropTable(
                name: "PRZELEWY");

            migrationBuilder.DropTable(
                name: "PRZELEWY_BANKI");

            migrationBuilder.DropTable(
                name: "PRZELEWY_BANKI_TYPY_PLIKOW");

            migrationBuilder.DropTable(
                name: "PRZELEWY_CELNE");

            migrationBuilder.DropTable(
                name: "PRZELEWY_DOK");

            migrationBuilder.DropTable(
                name: "PRZELEWY_PLIK");

            migrationBuilder.DropTable(
                name: "PRZELEWY_PLIK_POZ");

            migrationBuilder.DropTable(
                name: "PRZELEWY_RACHUNKI");

            migrationBuilder.DropTable(
                name: "PRZELEWY_TYPY_PLIKOW");

            migrationBuilder.DropTable(
                name: "PRZELICZNIKI");

            migrationBuilder.DropTable(
                name: "PRZELICZNIKI_SIEC");

            migrationBuilder.DropTable(
                name: "PRZESYLKI");

            migrationBuilder.DropTable(
                name: "PRZESYLKI_ADR");

            migrationBuilder.DropTable(
                name: "PRZESYLKI_AIR");

            migrationBuilder.DropTable(
                name: "PRZESYLKI_CHECKLIST");

            migrationBuilder.DropTable(
                name: "PRZESYLKI_DOK_TYP_GEN");

            migrationBuilder.DropTable(
                name: "PRZESYLKI_DOKUMENTY");

            migrationBuilder.DropTable(
                name: "PRZESYLKI_DOKUMENTY_UWAGI");

            migrationBuilder.DropTable(
                name: "PRZESYLKI_EXT");

            migrationBuilder.DropTable(
                name: "PRZESYLKI_INSTR_DOD");

            migrationBuilder.DropTable(
                name: "PRZESYLKI_LOKALIZACJE");

            migrationBuilder.DropTable(
                name: "PRZESYLKI_MAG_STAT");

            migrationBuilder.DropTable(
                name: "PRZESYLKI_NOSNIKI");

            migrationBuilder.DropTable(
                name: "PRZESYLKI_NOSNIKI_UWAGI");

            migrationBuilder.DropTable(
                name: "PRZESYLKI_OTH_POZ");

            migrationBuilder.DropTable(
                name: "PRZESYLKI_POI_HASH");

            migrationBuilder.DropTable(
                name: "PRZESYLKI_POWIADOMIENIA");

            migrationBuilder.DropTable(
                name: "PRZESYLKI_PROT_NIEZG");

            migrationBuilder.DropTable(
                name: "PRZESYLKI_PRZELICZNIKI");

            migrationBuilder.DropTable(
                name: "PRZESYLKI_RAIL");

            migrationBuilder.DropTable(
                name: "PRZESYLKI_SEA");

            migrationBuilder.DropTable(
                name: "PRZESYLKI_WYM_TABORU");

            migrationBuilder.DropTable(
                name: "PRZESYLKI_ZA_WY");

            migrationBuilder.DropTable(
                name: "PW_KARTA");

            migrationBuilder.DropTable(
                name: "PW_KARTA_POZ");

            migrationBuilder.DropTable(
                name: "PW_KARTA_POZ_ATR");

            migrationBuilder.DropTable(
                name: "RAMKI");

            migrationBuilder.DropTable(
                name: "RAPORTY_KASOWE");

            migrationBuilder.DropTable(
                name: "RAPORTY_KASOWE_OPER");

            migrationBuilder.DropTable(
                name: "RAPORTY_KASOWE_OPER_SPEC");

            migrationBuilder.DropTable(
                name: "RAPORTY_KASOWE_SPEC");

            migrationBuilder.DropTable(
                name: "RCP");

            migrationBuilder.DropTable(
                name: "RCP_ANALIZA");

            migrationBuilder.DropTable(
                name: "RCP_BLEDY");

            migrationBuilder.DropTable(
                name: "RCP_DODATKI");

            migrationBuilder.DropTable(
                name: "RCP_HISTORIA");

            migrationBuilder.DropTable(
                name: "RCP_NAG");

            migrationBuilder.DropTable(
                name: "REJ_KOSZT_OG");

            migrationBuilder.DropTable(
                name: "REJ_KOSZT_OG_POZ");

            migrationBuilder.DropTable(
                name: "REKL_KOSZTY_ODSZKOD");

            migrationBuilder.DropTable(
                name: "REKL_KOSZTY_ODSZKOD_TYP");

            migrationBuilder.DropTable(
                name: "REKL_KTO_WINNY");

            migrationBuilder.DropTable(
                name: "REKL_RODZ_USZK");

            migrationBuilder.DropTable(
                name: "REKL_RODZ_USZK_GR");

            migrationBuilder.DropTable(
                name: "REKL_SCHEMAT");

            migrationBuilder.DropTable(
                name: "REKL_SCHEMAT_POZ");

            migrationBuilder.DropTable(
                name: "REKLAMACJE");

            migrationBuilder.DropTable(
                name: "REKLAMACJE_FAKTURY_POZ");

            migrationBuilder.DropTable(
                name: "REKLAMACJE_USZK");

            migrationBuilder.DropTable(
                name: "REKLAMACJE_ZAD");

            migrationBuilder.DropTable(
                name: "Remarks");

            migrationBuilder.DropTable(
                name: "ReportConfig",
                schema: "cr");

            migrationBuilder.DropTable(
                name: "ReportLabel",
                schema: "cr");

            migrationBuilder.DropTable(
                name: "ReportLanguage",
                schema: "cr");

            migrationBuilder.DropTable(
                name: "ReportSet");

            migrationBuilder.DropTable(
                name: "ReportSetPos");

            migrationBuilder.DropTable(
                name: "ReportSlot",
                schema: "cr");

            migrationBuilder.DropTable(
                name: "RequestBaseType");

            migrationBuilder.DropTable(
                name: "RequestBaseType",
                schema: "rest");

            migrationBuilder.DropTable(
                name: "RequestConfiguration");

            migrationBuilder.DropTable(
                name: "RequestConfiguration",
                schema: "rest");

            migrationBuilder.DropTable(
                name: "RequestConfigurationAccess");

            migrationBuilder.DropTable(
                name: "RequestConfigurationQuery");

            migrationBuilder.DropTable(
                name: "RequestConfigurationQuery",
                schema: "rest");

            migrationBuilder.DropTable(
                name: "RequestConfigurationQueryBinding");

            migrationBuilder.DropTable(
                name: "RequestConfigurationQueryConfiguration");

            migrationBuilder.DropTable(
                name: "RequestConfigurationQueryLayout");

            migrationBuilder.DropTable(
                name: "RequestData");

            migrationBuilder.DropTable(
                name: "RequestDataType");

            migrationBuilder.DropTable(
                name: "RequestEmptyTable");

            migrationBuilder.DropTable(
                name: "RequestFilesToDownload");

            migrationBuilder.DropTable(
                name: "RequestFingerprint",
                schema: "rest");

            migrationBuilder.DropTable(
                name: "RequestForm");

            migrationBuilder.DropTable(
                name: "RequestFormBaseType");

            migrationBuilder.DropTable(
                name: "RequestFormItem");

            migrationBuilder.DropTable(
                name: "RequestFormItemType");

            migrationBuilder.DropTable(
                name: "RequestFormPermission");

            migrationBuilder.DropTable(
                name: "RequestFormSection");

            migrationBuilder.DropTable(
                name: "RequestGroup");

            migrationBuilder.DropTable(
                name: "RequestGuestTokenDetail");

            migrationBuilder.DropTable(
                name: "RequestInvoicePeriod",
                schema: "espeed");

            migrationBuilder.DropTable(
                name: "RequestItem");

            migrationBuilder.DropTable(
                name: "RequestItemType");

            migrationBuilder.DropTable(
                name: "RequestPermission");

            migrationBuilder.DropTable(
                name: "RequestPermissionDependency");

            migrationBuilder.DropTable(
                name: "RequestPermissionGroup");

            migrationBuilder.DropTable(
                name: "RequestProfile");

            migrationBuilder.DropTable(
                name: "RequestProfilePermission");

            migrationBuilder.DropTable(
                name: "RequestSalt",
                schema: "rest");

            migrationBuilder.DropTable(
                name: "RequestSettlementPrintStatus");

            migrationBuilder.DropTable(
                name: "RequestToken");

            migrationBuilder.DropTable(
                name: "RequestType",
                schema: "rest");

            migrationBuilder.DropTable(
                name: "RESULT_101",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "REVERSEGEOCODING");

            migrationBuilder.DropTable(
                name: "REZERWY");

            migrationBuilder.DropTable(
                name: "RHENUS_ROZL_TRAS");

            migrationBuilder.DropTable(
                name: "RHENUS_ROZL_TRAS_POZ");

            migrationBuilder.DropTable(
                name: "RightsProfileItemHist");

            migrationBuilder.DropTable(
                name: "RODZ_KOSZTOW");

            migrationBuilder.DropTable(
                name: "RODZ_KOSZTOW_ROZL_MO");

            migrationBuilder.DropTable(
                name: "RODZ_OPER_KAS");

            migrationBuilder.DropTable(
                name: "RODZ_PRZEW");

            migrationBuilder.DropTable(
                name: "RODZ_PRZYCHODOW");

            migrationBuilder.DropTable(
                name: "RODZ_ZDARZEN");

            migrationBuilder.DropTable(
                name: "RODZAJE_WAGONOW");

            migrationBuilder.DropTable(
                name: "ROUTE_INTERHUB");

            migrationBuilder.DropTable(
                name: "ROUTE_INTERHUB_POZ");

            migrationBuilder.DropTable(
                name: "ROUTE_TIMETAB");

            migrationBuilder.DropTable(
                name: "ROUTE_TIMETAB_FIN");

            migrationBuilder.DropTable(
                name: "ROUTE_TIMETAB_POZ");

            migrationBuilder.DropTable(
                name: "RouteCalculation");

            migrationBuilder.DropTable(
                name: "ROZL_KIER");

            migrationBuilder.DropTable(
                name: "ROZL_KIER_DOD_ODL");

            migrationBuilder.DropTable(
                name: "ROZL_KIER_POZ");

            migrationBuilder.DropTable(
                name: "ROZL_KIER_POZ_DOD");

            migrationBuilder.DropTable(
                name: "ROZL_KIER_POZ_ODL");

            migrationBuilder.DropTable(
                name: "ROZL_KIER_POZ_ZAL");

            migrationBuilder.DropTable(
                name: "ROZL_KIER_POZ_ZLEC");

            migrationBuilder.DropTable(
                name: "ROZL_M_OKRESOWE");

            migrationBuilder.DropTable(
                name: "ROZL_M_OKRESOWE_POZ");

            migrationBuilder.DropTable(
                name: "ROZL_WEWN");

            migrationBuilder.DropTable(
                name: "ROZL_WEWN_SIECI");

            migrationBuilder.DropTable(
                name: "ROZL_WEWN_SIECI_POZ");

            migrationBuilder.DropTable(
                name: "ROZL_WEWN_SIECI_STAT");

            migrationBuilder.DropTable(
                name: "SaveSimulationToReport",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "ScaleConfiguration",
                schema: "scan");

            migrationBuilder.DropTable(
                name: "ScannerConfiguration",
                schema: "scan");

            migrationBuilder.DropTable(
                name: "SchemaAccess",
                schema: "olap");

            migrationBuilder.DropTable(
                name: "Sensor",
                schema: "rest");

            migrationBuilder.DropTable(
                name: "Sent1306",
                schema: "sent");

            migrationBuilder.DropTable(
                name: "SentMain",
                schema: "sent");

            migrationBuilder.DropTable(
                name: "SentMsg",
                schema: "sent");

            migrationBuilder.DropTable(
                name: "SentMsgExt",
                schema: "sent");

            migrationBuilder.DropTable(
                name: "SentMsgGasPumps",
                schema: "sent");

            migrationBuilder.DropTable(
                name: "SentTrader",
                schema: "sent");

            migrationBuilder.DropTable(
                name: "SERVICE_CHECK");

            migrationBuilder.DropTable(
                name: "SEZONY");

            migrationBuilder.DropTable(
                name: "SFM_ACTIVITY");

            migrationBuilder.DropTable(
                name: "SFM_ACTIVITY_DRV");

            migrationBuilder.DropTable(
                name: "SFM_ALARM");

            migrationBuilder.DropTable(
                name: "SFM_ALARM_POPUP");

            migrationBuilder.DropTable(
                name: "SFM_ALERT");

            migrationBuilder.DropTable(
                name: "SFM_COSTS");

            migrationBuilder.DropTable(
                name: "SFM_DRV_SESSION");

            migrationBuilder.DropTable(
                name: "SFM_ETA");

            migrationBuilder.DropTable(
                name: "SFM_EVENT_PARAM");

            migrationBuilder.DropTable(
                name: "SFM_EVENT_PARAM_EXT");

            migrationBuilder.DropTable(
                name: "SFM_EVENT_SIE");

            migrationBuilder.DropTable(
                name: "SFM_EVENTS_LOG");

            migrationBuilder.DropTable(
                name: "SFM_GEOFENCE");

            migrationBuilder.DropTable(
                name: "SFM_GRUPYODB");

            migrationBuilder.DropTable(
                name: "SFM_IC_ACTION");

            migrationBuilder.DropTable(
                name: "SFM_IC_DEF_HEADER");

            migrationBuilder.DropTable(
                name: "SFM_IC_DEF_OPTION");

            migrationBuilder.DropTable(
                name: "SFM_IC_DEF_QUESTION");

            migrationBuilder.DropTable(
                name: "SFM_IC_FILES");

            migrationBuilder.DropTable(
                name: "SFM_IC_FUNCTION");

            migrationBuilder.DropTable(
                name: "SFM_IC_INTERFACE");

            migrationBuilder.DropTable(
                name: "SFM_KIEROWCY");

            migrationBuilder.DropTable(
                name: "SFM_LAST_MARKER");

            migrationBuilder.DropTable(
                name: "SFM_MSG_ATR");

            migrationBuilder.DropTable(
                name: "SFM_Msg_Attach");

            migrationBuilder.DropTable(
                name: "SFM_MSG_CMA");

            migrationBuilder.DropTable(
                name: "SFM_MSG_DSM");

            migrationBuilder.DropTable(
                name: "SFM_MSG_ELC");

            migrationBuilder.DropTable(
                name: "SFM_MSG_EML");

            migrationBuilder.DropTable(
                name: "SFM_MSG_EXTVAL");

            migrationBuilder.DropTable(
                name: "SFM_MSG_FLC");

            migrationBuilder.DropTable(
                name: "SFM_MSG_GBX");

            migrationBuilder.DropTable(
                name: "SFM_MSG_KATEGORIA");

            migrationBuilder.DropTable(
                name: "SFM_MSG_KER");

            migrationBuilder.DropTable(
                name: "SFM_MSG_LOG");

            migrationBuilder.DropTable(
                name: "SFM_MSG_OUT");

            migrationBuilder.DropTable(
                name: "SFM_MSG_PDA");

            migrationBuilder.DropTable(
                name: "SFM_MSG_PNC");

            migrationBuilder.DropTable(
                name: "SFM_MSG_QFV");

            migrationBuilder.DropTable(
                name: "SFM_MSG_QUA");

            migrationBuilder.DropTable(
                name: "SFM_MSG_READLOG");

            migrationBuilder.DropTable(
                name: "SFM_Msg_Recipients");

            migrationBuilder.DropTable(
                name: "SFM_Msg_Ref");

            migrationBuilder.DropTable(
                name: "SFM_MSG_SET");

            migrationBuilder.DropTable(
                name: "SFM_MSG_SIE");

            migrationBuilder.DropTable(
                name: "SFM_MSG_SMS");

            migrationBuilder.DropTable(
                name: "SFM_MSG_TR2");

            migrationBuilder.DropTable(
                name: "SFM_MSG_TRA");

            migrationBuilder.DropTable(
                name: "SFM_MSG_TRO");

            migrationBuilder.DropTable(
                name: "SFM_MSG_TTM");

            migrationBuilder.DropTable(
                name: "SFM_MSG_VDF");

            migrationBuilder.DropTable(
                name: "SFM_MsgDefMenuWindow");

            migrationBuilder.DropTable(
                name: "SFM_NOTIFY");

            migrationBuilder.DropTable(
                name: "SFM_OBJREF");

            migrationBuilder.DropTable(
                name: "SFM_ODBIORCY");

            migrationBuilder.DropTable(
                name: "SFM_POS");

            migrationBuilder.DropTable(
                name: "SFM_POS_ATR");

            migrationBuilder.DropTable(
                name: "SFM_POS_CMA");

            migrationBuilder.DropTable(
                name: "SFM_POS_DSM");

            migrationBuilder.DropTable(
                name: "SFM_POS_ELC");

            migrationBuilder.DropTable(
                name: "SFM_POS_EXT");

            migrationBuilder.DropTable(
                name: "SFM_POS_FLC");

            migrationBuilder.DropTable(
                name: "SFM_POS_GBX");

            migrationBuilder.DropTable(
                name: "SFM_POS_KER");

            migrationBuilder.DropTable(
                name: "SFM_POS_MEC");

            migrationBuilder.DropTable(
                name: "SFM_POS_NOV");

            migrationBuilder.DropTable(
                name: "SFM_POS_PNC");

            migrationBuilder.DropTable(
                name: "SFM_POS_QFV");

            migrationBuilder.DropTable(
                name: "SFM_POS_QUA");

            migrationBuilder.DropTable(
                name: "SFM_POS_SET");

            migrationBuilder.DropTable(
                name: "SFM_POS_SIE");

            migrationBuilder.DropTable(
                name: "SFM_POS_TR2");

            migrationBuilder.DropTable(
                name: "SFM_POS_TRA");

            migrationBuilder.DropTable(
                name: "SFM_POS_TRO");

            migrationBuilder.DropTable(
                name: "SFM_POS_TTM");

            migrationBuilder.DropTable(
                name: "SFM_POS_VDF");

            migrationBuilder.DropTable(
                name: "SFM_POSPOOL");

            migrationBuilder.DropTable(
                name: "SFM_PTO");

            migrationBuilder.DropTable(
                name: "SFM_ROUTE_EVENT");

            migrationBuilder.DropTable(
                name: "SFM_Route_Obj_back2");

            migrationBuilder.DropTable(
                name: "SFM_Route_Obj_Item");

            migrationBuilder.DropTable(
                name: "SFM_ROUTE_POI");

            migrationBuilder.DropTable(
                name: "SFM_Route_ViaPoint");

            migrationBuilder.DropTable(
                name: "SFM_RUNSTATUS");

            migrationBuilder.DropTable(
                name: "SFM_SetObjStat");

            migrationBuilder.DropTable(
                name: "SFM_SLO");

            migrationBuilder.DropTable(
                name: "SFM_SLO_DEF");

            migrationBuilder.DropTable(
                name: "SFM_STAT");

            migrationBuilder.DropTable(
                name: "SFM_STATUS");

            migrationBuilder.DropTable(
                name: "SFM_STATUSAKCJE");

            migrationBuilder.DropTable(
                name: "SFM_STATUSHIST");

            migrationBuilder.DropTable(
                name: "SFM_SysParam");

            migrationBuilder.DropTable(
                name: "SFM_SYSTEM");

            migrationBuilder.DropTable(
                name: "SFM_SYSTEM_History");

            migrationBuilder.DropTable(
                name: "SFM_TABOR");

            migrationBuilder.DropTable(
                name: "SFM_TaborParams");

            migrationBuilder.DropTable(
                name: "SFM_TemperatureControl");

            migrationBuilder.DropTable(
                name: "SFM_TERM");

            migrationBuilder.DropTable(
                name: "SFM_TRASA");

            migrationBuilder.DropTable(
                name: "SFM_TRASA_P");

            migrationBuilder.DropTable(
                name: "SFM_USER");

            migrationBuilder.DropTable(
                name: "SFM_USER_TABOR");

            migrationBuilder.DropTable(
                name: "SFM_VDF_ZAWY_STAT");

            migrationBuilder.DropTable(
                name: "SFM_VEH_EVENTS");

            migrationBuilder.DropTable(
                name: "SFM_ZLECENIA_ZA_WY");

            migrationBuilder.DropTable(
                name: "SFMCheck",
                schema: "iLAN");

            migrationBuilder.DropTable(
                name: "SfmStatusForActivity");

            migrationBuilder.DropTable(
                name: "ShapeType",
                schema: "geo");

            migrationBuilder.DropTable(
                name: "SID");

            migrationBuilder.DropTable(
                name: "SID_PRAWA");

            migrationBuilder.DropTable(
                name: "SIM");

            migrationBuilder.DropTable(
                name: "SIM_APARAT_HIST");

            migrationBuilder.DropTable(
                name: "SIM_HIST");

            migrationBuilder.DropTable(
                name: "SKORCN08");

            migrationBuilder.DropTable(
                name: "SKORCN10");

            migrationBuilder.DropTable(
                name: "SLOWNIK");

            migrationBuilder.DropTable(
                name: "SLOWNIKADRMIARA");

            migrationBuilder.DropTable(
                name: "SLOWNIKADROPISOPAK");

            migrationBuilder.DropTable(
                name: "SLOWNIKI_SENT");

            migrationBuilder.DropTable(
                name: "SolverFlatPricelist",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverFleet2OrdersMatrixValues",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverFleetFeatures",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverFleetPositions",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverFleetTimeWindows",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverMessages",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverOrderEquipmentRequirements",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverOrderServiceTimes",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverOrdersFeatures",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverOrdersItemsFeatures",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverOrdersRelationRestrictions",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverOrderTimeWindows",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverPerPoiBorderCrossings",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverPerPoiFlatRate",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverPerWeightPricelist",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverPoi2PoiMatrixValues",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverPoiEquipmentRequirements",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverPoiGateTimeWindows",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverPoiPairFlatRatePricelist",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverPoiRelations",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverPricelistFeatures",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverPricelistRangedPrices",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverRouteBundleItems",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverRouteEventBundles",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverRouteEventCosts",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverRouteEventGates",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverRouteEventOrders",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverRouteRelations",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SPEED_LOG");

            migrationBuilder.DropTable(
                name: "SPEED_LOG_HIST");

            migrationBuilder.DropTable(
                name: "SPEED_LOG_POZ");

            migrationBuilder.DropTable(
                name: "SPEED_Metadata");

            migrationBuilder.DropTable(
                name: "SPEED_PARAMS");

            migrationBuilder.DropTable(
                name: "STATISTICS_LOG");

            migrationBuilder.DropTable(
                name: "STATUS");

            migrationBuilder.DropTable(
                name: "STATUS_UPRAWNIENIA");

            migrationBuilder.DropTable(
                name: "STATUS_WIND");

            migrationBuilder.DropTable(
                name: "StatusOfStopOutsideMin",
                schema: "geo");

            migrationBuilder.DropTable(
                name: "STATUSY");

            migrationBuilder.DropTable(
                name: "STATUSY_JPK");

            migrationBuilder.DropTable(
                name: "STATUSY_ZDARZ");

            migrationBuilder.DropTable(
                name: "Statystyki",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "STAWKI_VAT");

            migrationBuilder.DropTable(
                name: "SUBKONTO_MNEMONIC");

            migrationBuilder.DropTable(
                name: "SYMBOLE_ANOMALII");

            migrationBuilder.DropTable(
                name: "SYMBOLE_ANOMALII_STAT");

            migrationBuilder.DropTable(
                name: "SYMBOLE_TRAFIKOW");

            migrationBuilder.DropTable(
                name: "SYST_WYM_DANYCH");

            migrationBuilder.DropTable(
                name: "SYST_WYM_DANYCH_LOG");

            migrationBuilder.DropTable(
                name: "SYST_WYM_DANYCH_PARAMS");

            migrationBuilder.DropTable(
                name: "SYSTEM_USE");

            migrationBuilder.DropTable(
                name: "SystemVersion",
                schema: "app");

            migrationBuilder.DropTable(
                name: "SZ_ZLEC_INSTR_DOD");

            migrationBuilder.DropTable(
                name: "SZABLONY_ZLECEN");

            migrationBuilder.DropTable(
                name: "SZABLONY_ZLECEN_CYST");

            migrationBuilder.DropTable(
                name: "SZABLONY_ZLECEN_DOKUMENTY");

            migrationBuilder.DropTable(
                name: "SZABLONY_ZLECEN_EXT");

            migrationBuilder.DropTable(
                name: "SZABLONY_ZLECEN_POWIADOMIENIA");

            migrationBuilder.DropTable(
                name: "SZABLONY_ZLECEN_POZ_FAKT");

            migrationBuilder.DropTable(
                name: "SZABLONY_ZLECEN_SAM");

            migrationBuilder.DropTable(
                name: "SZABLONY_ZLECEN_WYM_TABORU");

            migrationBuilder.DropTable(
                name: "SZABLONY_ZLECEN_ZA_WY");

            migrationBuilder.DropTable(
                name: "SZABLONY_ZLECEN_ZA_WY_CYST");

            migrationBuilder.DropTable(
                name: "SZKODY");

            migrationBuilder.DropTable(
                name: "SZKODY_DOKUMENTY");

            migrationBuilder.DropTable(
                name: "SZKODY_DZIALANIA");

            migrationBuilder.DropTable(
                name: "SZKODY_PRZYCZYNY");

            migrationBuilder.DropTable(
                name: "SZKODY_REFERENCJE");

            migrationBuilder.DropTable(
                name: "SZKODY_ROZLICZENIA");

            migrationBuilder.DropTable(
                name: "SZKODY_STATUSY");

            migrationBuilder.DropTable(
                name: "SZKODY_ZDARZENIA");

            migrationBuilder.DropTable(
                name: "T_TACHO");

            migrationBuilder.DropTable(
                name: "T_TACHO_ZDARZENIA");

            migrationBuilder.DropTable(
                name: "TAB_KONW_KONTRAH");

            migrationBuilder.DropTable(
                name: "TABELA_KONWERSJI");

            migrationBuilder.DropTable(
                name: "TABELA_KURSY");

            migrationBuilder.DropTable(
                name: "TABELA_KURSY_D");

            migrationBuilder.DropTable(
                name: "TABELE_KONWERSJI");

            migrationBuilder.DropTable(
                name: "TABKURSOW_DEF");

            migrationBuilder.DropTable(
                name: "TABKURSOW_WALUTY");

            migrationBuilder.DropTable(
                name: "TABOR");

            migrationBuilder.DropTable(
                name: "TABOR_ADR_SPRZET");

            migrationBuilder.DropTable(
                name: "TABOR_AKUM");

            migrationBuilder.DropTable(
                name: "TABOR_AKUM_OBSL");

            migrationBuilder.DropTable(
                name: "TABOR_CERTYFIKATY");

            migrationBuilder.DropTable(
                name: "TABOR_EXT");

            migrationBuilder.DropTable(
                name: "TABOR_FILTRY");

            migrationBuilder.DropTable(
                name: "TABOR_GRUPY");

            migrationBuilder.DropTable(
                name: "TABOR_GRUPY_HIST");

            migrationBuilder.DropTable(
                name: "TABOR_GRUPY_SPEDYTORZY");

            migrationBuilder.DropTable(
                name: "TABOR_HAMULCE");

            migrationBuilder.DropTable(
                name: "TABOR_HISTLOG");

            migrationBuilder.DropTable(
                name: "TABOR_KAT");

            migrationBuilder.DropTable(
                name: "TABOR_KIEROWCY");

            migrationBuilder.DropTable(
                name: "TABOR_KIEROWCY_TECZKA");

            migrationBuilder.DropTable(
                name: "TABOR_KIEROWCY_UPR");

            migrationBuilder.DropTable(
                name: "TABOR_KIEROWCY_WYP");

            migrationBuilder.DropTable(
                name: "TABOR_KM_MIES");

            migrationBuilder.DropTable(
                name: "TABOR_KONTRAKT");

            migrationBuilder.DropTable(
                name: "TABOR_LOK_HIST");

            migrationBuilder.DropTable(
                name: "TABOR_NADGABARYTY");

            migrationBuilder.DropTable(
                name: "TABOR_O");

            migrationBuilder.DropTable(
                name: "TABOR_O_ADR_SPRZET");

            migrationBuilder.DropTable(
                name: "TABOR_O_CENNIK_KGKM");

            migrationBuilder.DropTable(
                name: "TABOR_O_CENNIK_TRASA");

            migrationBuilder.DropTable(
                name: "TABOR_O_CERTYFIKATY");

            migrationBuilder.DropTable(
                name: "TABOR_O_KIEROWCY");

            migrationBuilder.DropTable(
                name: "TABOR_O_TERMIN");

            migrationBuilder.DropTable(
                name: "TABOR_OPONY");

            migrationBuilder.DropTable(
                name: "TABOR_OPONY_KAT");

            migrationBuilder.DropTable(
                name: "TABOR_OPONY_KM_PW");

            migrationBuilder.DropTable(
                name: "TABOR_OPONY_OBSL");

            migrationBuilder.DropTable(
                name: "TABOR_OSIE");

            migrationBuilder.DropTable(
                name: "TABOR_OST_LADUNKI");

            migrationBuilder.DropTable(
                name: "TABOR_PARAM_TECHN");

            migrationBuilder.DropTable(
                name: "TABOR_PROFIL");

            migrationBuilder.DropTable(
                name: "TABOR_REZERWACJE");

            migrationBuilder.DropTable(
                name: "TABOR_REZERWACJE_POI");

            migrationBuilder.DropTable(
                name: "TABOR_TECZKA_KIEROWCY");

            migrationBuilder.DropTable(
                name: "TABOR_TECZKA_SZABLON");

            migrationBuilder.DropTable(
                name: "TABOR_TECZKA_SZABLON_POZ");

            migrationBuilder.DropTable(
                name: "TABOR_TERMIN");

            migrationBuilder.DropTable(
                name: "TABOR_TERMIN_HIST");

            migrationBuilder.DropTable(
                name: "TABOR_TERMIN_SZABLON");

            migrationBuilder.DropTable(
                name: "TABOR_TERMIN_SZABLON_POZ");

            migrationBuilder.DropTable(
                name: "TABOR_UBEZP");

            migrationBuilder.DropTable(
                name: "TABOR_WYPOS_SZABLON");

            migrationBuilder.DropTable(
                name: "TABOR_WYPOS_SZABLON_POZ");

            migrationBuilder.DropTable(
                name: "TABOR_WYPOSAZENIE");

            migrationBuilder.DropTable(
                name: "TABOR_ZAWORY");

            migrationBuilder.DropTable(
                name: "TaborWyposazenie",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "TACHO");

            migrationBuilder.DropTable(
                name: "TACHO_PUNKTY");

            migrationBuilder.DropTable(
                name: "TACHO_TRASY");

            migrationBuilder.DropTable(
                name: "TACHO_ZDARZENIA");

            migrationBuilder.DropTable(
                name: "Task",
                schema: "app");

            migrationBuilder.DropTable(
                name: "Task",
                schema: "task");

            migrationBuilder.DropTable(
                name: "TaskRecurence",
                schema: "app");

            migrationBuilder.DropTable(
                name: "TaskRecurence",
                schema: "task");

            migrationBuilder.DropTable(
                name: "TaskScheduler",
                schema: "app");

            migrationBuilder.DropTable(
                name: "TaskScheduler",
                schema: "task");

            migrationBuilder.DropTable(
                name: "TaskSchedulerLog",
                schema: "app");

            migrationBuilder.DropTable(
                name: "TaskSchedulerOutput",
                schema: "app");

            migrationBuilder.DropTable(
                name: "TaskSchedulerOutput",
                schema: "task");

            migrationBuilder.DropTable(
                name: "TaskServiceType",
                schema: "task");

            migrationBuilder.DropTable(
                name: "TaskType",
                schema: "task");

            migrationBuilder.DropTable(
                name: "TECZKI");

            migrationBuilder.DropTable(
                name: "TECZKI_RAP");

            migrationBuilder.DropTable(
                name: "TECZKI_RAP_POZ");

            migrationBuilder.DropTable(
                name: "TEKSTY_CRM");

            migrationBuilder.DropTable(
                name: "TEKSTY_DO_WYDRUKOW");

            migrationBuilder.DropTable(
                name: "TERM_PLATN_KOSZT");

            migrationBuilder.DropTable(
                name: "TERMINARZ");

            migrationBuilder.DropTable(
                name: "TerminateAppRequestSessions");

            migrationBuilder.DropTable(
                name: "Text",
                schema: "lng");

            migrationBuilder.DropTable(
                name: "TextType",
                schema: "app");

            migrationBuilder.DropTable(
                name: "TIMELINE");

            migrationBuilder.DropTable(
                name: "TimeSheet",
                schema: "workshop");

            migrationBuilder.DropTable(
                name: "TimeSheetCode",
                schema: "workshop");

            migrationBuilder.DropTable(
                name: "TMP_AWIZACJE");

            migrationBuilder.DropTable(
                name: "TMP_AWIZACJE_POZ");

            migrationBuilder.DropTable(
                name: "TMP_BankTransferPrepare");

            migrationBuilder.DropTable(
                name: "TMP_BLOKADY_ZBIORCZE");

            migrationBuilder.DropTable(
                name: "TMP_CalcCarwash");

            migrationBuilder.DropTable(
                name: "TMP_CheckPointInfo");

            migrationBuilder.DropTable(
                name: "TMP_DANE_EXT");

            migrationBuilder.DropTable(
                name: "TMP_DELEGACJE");

            migrationBuilder.DropTable(
                name: "TMP_DELEGACJE_DIETY");

            migrationBuilder.DropTable(
                name: "TMP_FAKTURY");

            migrationBuilder.DropTable(
                name: "TMP_FAKTURY_POZYCJE");

            migrationBuilder.DropTable(
                name: "TMP_FAKTURY_POZYCJE_ZB");

            migrationBuilder.DropTable(
                name: "TMP_FAKTURY_POZYCJE2");

            migrationBuilder.DropTable(
                name: "TMP_FAKTURY2");

            migrationBuilder.DropTable(
                name: "TMP_GIELDA_POJAZDOW");

            migrationBuilder.DropTable(
                name: "TMP_KALK_STAWKI_AIR");

            migrationBuilder.DropTable(
                name: "TMP_KALK_STAWKI_LTL");

            migrationBuilder.DropTable(
                name: "TMP_KALKULACJE");

            migrationBuilder.DropTable(
                name: "TMP_KIEROWCY");

            migrationBuilder.DropTable(
                name: "TMP_KONTENERY");

            migrationBuilder.DropTable(
                name: "TMP_KONTENERY_ZLECENIA");

            migrationBuilder.DropTable(
                name: "TMP_KONTRAHENCI");

            migrationBuilder.DropTable(
                name: "TMP_KONTRAHENCI_DOKUMENTY");

            migrationBuilder.DropTable(
                name: "TMP_KONTRAHENCI_FINANSE");

            migrationBuilder.DropTable(
                name: "TMP_KONTRAHENCI_KONTA");

            migrationBuilder.DropTable(
                name: "TMP_KONTRAHENCI_ODDZIALY");

            migrationBuilder.DropTable(
                name: "TMP_KONTRAHENCI_OPAK");

            migrationBuilder.DropTable(
                name: "TMP_KONTRAHENCI_OPIEK");

            migrationBuilder.DropTable(
                name: "TMP_KONTRAHENCI_POLISY_OC");

            migrationBuilder.DropTable(
                name: "TMP_KONTRAHENCI_REPREZ");

            migrationBuilder.DropTable(
                name: "TMP_KSIAZKA_POCZTOWA_POZ");

            migrationBuilder.DropTable(
                name: "TMP_KSIAZKA_POCZTOWA_POZ_DOK");

            migrationBuilder.DropTable(
                name: "TMP_KWIT_PAL");

            migrationBuilder.DropTable(
                name: "TMP_KWIT_PAL_POZ");

            migrationBuilder.DropTable(
                name: "TMP_LISTY_LINIOWE");

            migrationBuilder.DropTable(
                name: "TMP_LISTY_LINIOWE_LOK");

            migrationBuilder.DropTable(
                name: "TMP_LISTY_LINIOWE_PROMY");

            migrationBuilder.DropTable(
                name: "TMP_LISTY_LINIOWE_SEA");

            migrationBuilder.DropTable(
                name: "TMP_LISTY_LINIOWE_ZA_WY");

            migrationBuilder.DropTable(
                name: "TMP_MIEJSCA_ZA_ROZLADUNKU");

            migrationBuilder.DropTable(
                name: "TMP_MIEJSCA_ZA_WY_KONTRAH");

            migrationBuilder.DropTable(
                name: "TMP_OrderPlanning");

            migrationBuilder.DropTable(
                name: "TMP_PACZKI");

            migrationBuilder.DropTable(
                name: "TMP_PACZKI_AIR");

            migrationBuilder.DropTable(
                name: "TMP_PACZKI_RAIL");

            migrationBuilder.DropTable(
                name: "TMP_PACZKI_SEA");

            migrationBuilder.DropTable(
                name: "TMP_POLISY");

            migrationBuilder.DropTable(
                name: "TMP_POLISY_POJAZDY");

            migrationBuilder.DropTable(
                name: "TMP_POLISY_SKLADKI");

            migrationBuilder.DropTable(
                name: "TMP_PROMY");

            migrationBuilder.DropTable(
                name: "TMP_PRZESYLKI");

            migrationBuilder.DropTable(
                name: "TMP_PRZESYLKI_ADR");

            migrationBuilder.DropTable(
                name: "TMP_PRZESYLKI_AIR");

            migrationBuilder.DropTable(
                name: "TMP_PRZESYLKI_CHECKLIST");

            migrationBuilder.DropTable(
                name: "TMP_PRZESYLKI_DOKUMENTY");

            migrationBuilder.DropTable(
                name: "TMP_PRZESYLKI_EXT");

            migrationBuilder.DropTable(
                name: "TMP_PRZESYLKI_INSTR_DOD");

            migrationBuilder.DropTable(
                name: "TMP_PRZESYLKI_LOKALIZACJE");

            migrationBuilder.DropTable(
                name: "TMP_PRZESYLKI_NOSNIKI");

            migrationBuilder.DropTable(
                name: "TMP_PRZESYLKI_POWIADOMIENIA");

            migrationBuilder.DropTable(
                name: "TMP_PRZESYLKI_PRZELICZNIKI");

            migrationBuilder.DropTable(
                name: "TMP_PRZESYLKI_RAIL");

            migrationBuilder.DropTable(
                name: "TMP_PRZESYLKI_SEA");

            migrationBuilder.DropTable(
                name: "TMP_PRZESYLKI_WYM_TABORU");

            migrationBuilder.DropTable(
                name: "TMP_PRZESYLKI_ZA_WY");

            migrationBuilder.DropTable(
                name: "TMP_REKL_KOSZTY_ODSZKOD");

            migrationBuilder.DropTable(
                name: "TMP_REKLAMACJE");

            migrationBuilder.DropTable(
                name: "Tmp_RouteCalculation");

            migrationBuilder.DropTable(
                name: "TMP_ROZL_WEWN");

            migrationBuilder.DropTable(
                name: "TMP_RPT_ID_LIST");

            migrationBuilder.DropTable(
                name: "TMP_SEL_REC");

            migrationBuilder.DropTable(
                name: "TMP_SentMain",
                schema: "sent");

            migrationBuilder.DropTable(
                name: "TMP_SentMsg",
                schema: "sent");

            migrationBuilder.DropTable(
                name: "TMP_SentTrader",
                schema: "sent");

            migrationBuilder.DropTable(
                name: "TMP_SETTINGS");

            migrationBuilder.DropTable(
                name: "TMP_STATUSY");

            migrationBuilder.DropTable(
                name: "TMP_TABOR");

            migrationBuilder.DropTable(
                name: "TMP_TABOR_KIEROWCY");

            migrationBuilder.DropTable(
                name: "TMP_TABOR_KIEROWCY_TECZKA");

            migrationBuilder.DropTable(
                name: "TMP_TABOR_KIEROWCY_WYP");

            migrationBuilder.DropTable(
                name: "TMP_TABOR_REZERWACJE");

            migrationBuilder.DropTable(
                name: "TMP_TABOR_TERMIN");

            migrationBuilder.DropTable(
                name: "TMP_UserOptions_DB");

            migrationBuilder.DropTable(
                name: "TMP_WYDRUKI_AUTOMAT");

            migrationBuilder.DropTable(
                name: "TMP_WYDRUKI_MAILE");

            migrationBuilder.DropTable(
                name: "TMP_WYJAZDY");

            migrationBuilder.DropTable(
                name: "TMP_WYJAZDY_ZDARZENIA");

            migrationBuilder.DropTable(
                name: "TMP_WYJAZDY_ZLECENIA");

            migrationBuilder.DropTable(
                name: "TMP_WYM_OPAK_ROZL");

            migrationBuilder.DropTable(
                name: "TMP_WYM_PALET_2");

            migrationBuilder.DropTable(
                name: "TMP_ZALICZKI");

            migrationBuilder.DropTable(
                name: "TMP_ZIPCODE");

            migrationBuilder.DropTable(
                name: "TMP_ZLECENIA");

            migrationBuilder.DropTable(
                name: "TMP_ZLECENIA_C");

            migrationBuilder.DropTable(
                name: "TMP_ZLECENIA_C_POZ");

            migrationBuilder.DropTable(
                name: "TMP_ZLECENIA_CYST");

            migrationBuilder.DropTable(
                name: "TMP_ZLECENIA_DOKUMENTY");

            migrationBuilder.DropTable(
                name: "TMP_ZLECENIA_EXT");

            migrationBuilder.DropTable(
                name: "TMP_ZLECENIA_INSTR_DOD");

            migrationBuilder.DropTable(
                name: "TMP_ZLECENIA_M");

            migrationBuilder.DropTable(
                name: "TMP_ZLECENIA_M_LAD");

            migrationBuilder.DropTable(
                name: "TMP_ZLECENIA_M_ZA_WY");

            migrationBuilder.DropTable(
                name: "TMP_ZLECENIA_OST_LADUNKI");

            migrationBuilder.DropTable(
                name: "TMP_ZLECENIA_POZ_FAKT");

            migrationBuilder.DropTable(
                name: "TMP_ZLECENIA_PROMY");

            migrationBuilder.DropTable(
                name: "TMP_ZLECENIA_RAIL");

            migrationBuilder.DropTable(
                name: "TMP_ZLECENIA_RAIL_LAD");

            migrationBuilder.DropTable(
                name: "TMP_ZLECENIA_RAIL_ZA_WY");

            migrationBuilder.DropTable(
                name: "TMP_ZLECENIA_WYM_TABORU");

            migrationBuilder.DropTable(
                name: "TMP_ZLECENIA_ZA_WY");

            migrationBuilder.DropTable(
                name: "TMP_ZLECENIA_ZB");

            migrationBuilder.DropTable(
                name: "TMP_ZLECENIA_ZB_POZ");

            migrationBuilder.DropTable(
                name: "TMP_ZLECENIA_ZB_ZDARZENIA");

            migrationBuilder.DropTable(
                name: "ToolGroup",
                schema: "app");

            migrationBuilder.DropTable(
                name: "ToolGroupDefinition",
                schema: "app");

            migrationBuilder.DropTable(
                name: "ToolParameter",
                schema: "app");

            migrationBuilder.DropTable(
                name: "ToolPermission",
                schema: "app");

            migrationBuilder.DropTable(
                name: "ToolType",
                schema: "app");

            migrationBuilder.DropTable(
                name: "trace_1");

            migrationBuilder.DropTable(
                name: "trace_2");

            migrationBuilder.DropTable(
                name: "TRAFIK");

            migrationBuilder.DropTable(
                name: "TRANS");

            migrationBuilder.DropTable(
                name: "TRANS_MQTT");

            migrationBuilder.DropTable(
                name: "TRANS_OFFER_DETAILS");

            migrationBuilder.DropTable(
                name: "TRANS_OFFERS");

            migrationBuilder.DropTable(
                name: "TRASH_ORDER");

            migrationBuilder.DropTable(
                name: "TRASH_ORDER_CONTAINER");

            migrationBuilder.DropTable(
                name: "TRASH_ORDER_JOB");

            migrationBuilder.DropTable(
                name: "TRASY");

            migrationBuilder.DropTable(
                name: "TRASY_WYZNACZNIKI");

            migrationBuilder.DropTable(
                name: "TYP_SZKODY_ZDARZENIA");

            migrationBuilder.DropTable(
                name: "TypRozl");

            migrationBuilder.DropTable(
                name: "TYPY_KONTENEROW");

            migrationBuilder.DropTable(
                name: "TYPY_POJAZDOW");

            migrationBuilder.DropTable(
                name: "TYPY_PROT_NIEZG");

            migrationBuilder.DropTable(
                name: "TYPY_WAGONOW");

            migrationBuilder.DropTable(
                name: "TYPY_ZLECEN_DROBN");

            migrationBuilder.DropTable(
                name: "Unit",
                schema: "app");

            migrationBuilder.DropTable(
                name: "UPOWAZNIENIA");

            migrationBuilder.DropTable(
                name: "URLOPY");

            migrationBuilder.DropTable(
                name: "URLOPY_KIEROWCY");

            migrationBuilder.DropTable(
                name: "URLOPY_KONTRAHENCI");

            migrationBuilder.DropTable(
                name: "URLOPY_ZASTEPUJACY");

            migrationBuilder.DropTable(
                name: "USER_LAYOUT");

            migrationBuilder.DropTable(
                name: "USER_LOGINHIST");

            migrationBuilder.DropTable(
                name: "USERAPPDEFPROFILE");

            migrationBuilder.DropTable(
                name: "UserLayout",
                schema: "app");

            migrationBuilder.DropTable(
                name: "USEROPTIONS");

            migrationBuilder.DropTable(
                name: "USEROPTIONS_DB");

            migrationBuilder.DropTable(
                name: "UserPasswordHistory");

            migrationBuilder.DropTable(
                name: "UserPermission",
                schema: "app");

            migrationBuilder.DropTable(
                name: "USERPROFILE");

            migrationBuilder.DropTable(
                name: "UserRequestPermission");

            migrationBuilder.DropTable(
                name: "Users",
                schema: "gie");

            migrationBuilder.DropTable(
                name: "USTALENIA");

            migrationBuilder.DropTable(
                name: "UwagiDoTerminow");

            migrationBuilder.DropTable(
                name: "UZYTKOWNIK");

            migrationBuilder.DropTable(
                name: "UZYTKOWNIK_WWW");

            migrationBuilder.DropTable(
                name: "VAT_JPK_OZN");

            migrationBuilder.DropTable(
                name: "VAT_JPK_OZN_DOD");

            migrationBuilder.DropTable(
                name: "VehicleETA");

            migrationBuilder.DropTable(
                name: "W_DANE_ZEWN_WZ");

            migrationBuilder.DropTable(
                name: "W_DANE_ZEWN_WZ_POZ");

            migrationBuilder.DropTable(
                name: "W_DO_FK");

            migrationBuilder.DropTable(
                name: "W_GRUPY_PRZEGLAD");

            migrationBuilder.DropTable(
                name: "W_GRUPY_PRZEGLAD_POZ");

            migrationBuilder.DropTable(
                name: "W_GRUPY_PRZEGLAD_POZ_ZLEC");

            migrationBuilder.DropTable(
                name: "W_GRUPY_RABATOWE");

            migrationBuilder.DropTable(
                name: "W_GRUPY_RABATOWE_KONTRAH");

            migrationBuilder.DropTable(
                name: "W_MAG_INWENT");

            migrationBuilder.DropTable(
                name: "W_MAG_INWENT_POZ");

            migrationBuilder.DropTable(
                name: "W_MAG_PRZYJECIA");

            migrationBuilder.DropTable(
                name: "W_MAG_PRZYJECIA_POZ");

            migrationBuilder.DropTable(
                name: "W_MAG_TOWARY");

            migrationBuilder.DropTable(
                name: "W_MAG_TOWARY_KONTRAH");

            migrationBuilder.DropTable(
                name: "W_MAG_TOWARY_ZAMIENNIKI");

            migrationBuilder.DropTable(
                name: "W_MAG_WYDANIA");

            migrationBuilder.DropTable(
                name: "W_MAG_WYDANIA_POZ");

            migrationBuilder.DropTable(
                name: "W_MAG_WYDANIA_test");

            migrationBuilder.DropTable(
                name: "W_MAG_ZAMOWIENIA");

            migrationBuilder.DropTable(
                name: "W_MAG_ZAMOWIENIA_POZ");

            migrationBuilder.DropTable(
                name: "W_MAGAZYNY");

            migrationBuilder.DropTable(
                name: "W_MYCIE_POZ");

            migrationBuilder.DropTable(
                name: "W_MYCIE_POZ_ZLEC");

            migrationBuilder.DropTable(
                name: "W_PRACOWNICY");

            migrationBuilder.DropTable(
                name: "W_PRACOWNICY_WYPOSAZENIE");

            migrationBuilder.DropTable(
                name: "W_PRZEGLAD_POZ");

            migrationBuilder.DropTable(
                name: "W_PZ_WZ");

            migrationBuilder.DropTable(
                name: "W_RODZ_DOK");

            migrationBuilder.DropTable(
                name: "W_STANOWISKA");

            migrationBuilder.DropTable(
                name: "W_TERMINARZ");

            migrationBuilder.DropTable(
                name: "W_TERMINARZ_PRAC");

            migrationBuilder.DropTable(
                name: "W_USLUGI");

            migrationBuilder.DropTable(
                name: "W_USLUGI_STAWKI");

            migrationBuilder.DropTable(
                name: "W_USLUGI_STAWKI_P");

            migrationBuilder.DropTable(
                name: "W_ZLECENIA");

            migrationBuilder.DropTable(
                name: "W_ZLECENIA_MYCIE_POZ");

            migrationBuilder.DropTable(
                name: "W_ZLECENIA_OFERTY");

            migrationBuilder.DropTable(
                name: "W_ZLECENIA_OFERTY_POZ");

            migrationBuilder.DropTable(
                name: "W_ZLECENIA_POZ");

            migrationBuilder.DropTable(
                name: "W_ZLECENIA_PRACOWNICY");

            migrationBuilder.DropTable(
                name: "W_ZLECENIA_PRZEG_POZ");

            migrationBuilder.DropTable(
                name: "W_ZLECENIA_TABOR_TERM");

            migrationBuilder.DropTable(
                name: "WALUTY");

            migrationBuilder.DropTable(
                name: "WARDOST");

            migrationBuilder.DropTable(
                name: "WARIANTY_GEN_ZAWY_TRAS");

            migrationBuilder.DropTable(
                name: "WeightConversion");

            migrationBuilder.DropTable(
                name: "WeightConversionValues");

            migrationBuilder.DropTable(
                name: "WERSJA");

            migrationBuilder.DropTable(
                name: "WEZWANIA_DO_ZAPL");

            migrationBuilder.DropTable(
                name: "WEZWANIA_DO_ZAPL_POZ");

            migrationBuilder.DropTable(
                name: "WIN_FRM_CALC_FLD");

            migrationBuilder.DropTable(
                name: "WIN_FRM_CALC_SP");

            migrationBuilder.DropTable(
                name: "WIND_SCHEMAT");

            migrationBuilder.DropTable(
                name: "WIND_SCHEMAT_POZ");

            migrationBuilder.DropTable(
                name: "Window",
                schema: "lng");

            migrationBuilder.DropTable(
                name: "WINDYKACJE");

            migrationBuilder.DropTable(
                name: "WINDYKACJE_HARM");

            migrationBuilder.DropTable(
                name: "WINDYKACJE_KOSZT");

            migrationBuilder.DropTable(
                name: "WINDYKACJE_WPL");

            migrationBuilder.DropTable(
                name: "WINDYKACJE_ZAD");

            migrationBuilder.DropTable(
                name: "WINDYKACJE_ZOB");

            migrationBuilder.DropTable(
                name: "WINSETTINGS");

            migrationBuilder.DropTable(
                name: "WINSIZESTORE");

            migrationBuilder.DropTable(
                name: "WOLNE_ZA_NADGODZ");

            migrationBuilder.DropTable(
                name: "WOLNE_ZA_NADGODZ_POZ");

            migrationBuilder.DropTable(
                name: "WorkshopConfiguration",
                schema: "workshop");

            migrationBuilder.DropTable(
                name: "WWW_PRZESYLKA_EXT");

            migrationBuilder.DropTable(
                name: "WYC_BANK");

            migrationBuilder.DropTable(
                name: "WYC_BANK_OPER");

            migrationBuilder.DropTable(
                name: "WYC_BANK_OPER_POZ");

            migrationBuilder.DropTable(
                name: "WYDRUKI_AUTOMAT");

            migrationBuilder.DropTable(
                name: "WYDRUKI_STATUS");

            migrationBuilder.DropTable(
                name: "WYJAZDY");

            migrationBuilder.DropTable(
                name: "WYJAZDY_SLEDZENIE");

            migrationBuilder.DropTable(
                name: "WYJAZDY_ZDARZENIA");

            migrationBuilder.DropTable(
                name: "WYJAZDY_ZLECENIA");

            migrationBuilder.DropTable(
                name: "WYM_OPAK_ROZL");

            migrationBuilder.DropTable(
                name: "WYM_PALET");

            migrationBuilder.DropTable(
                name: "WYM_PALET_2");

            migrationBuilder.DropTable(
                name: "WYM_PALET_DR");

            migrationBuilder.DropTable(
                name: "WYNAGR_DANE");

            migrationBuilder.DropTable(
                name: "WYNAGR_DANE_POZ");

            migrationBuilder.DropTable(
                name: "WYNAGR_DOD_OSZCZ");

            migrationBuilder.DropTable(
                name: "WYNAGR_LP");

            migrationBuilder.DropTable(
                name: "WYNAGR_LP_POZ");

            migrationBuilder.DropTable(
                name: "WYNAGR_SCHEMAT");

            migrationBuilder.DropTable(
                name: "WYNAGR_SCHEMAT_POZ");

            migrationBuilder.DropTable(
                name: "WYNAGR_STAZE");

            migrationBuilder.DropTable(
                name: "WYNAGRODZENIA");

            migrationBuilder.DropTable(
                name: "WYNAGRODZENIA_POZ");

            migrationBuilder.DropTable(
                name: "WYNAGRODZENIE_MIN");

            migrationBuilder.DropTable(
                name: "WYP_TABORU");

            migrationBuilder.DropTable(
                name: "WYP_TABORU_ZAMIENNIKI");

            migrationBuilder.DropTable(
                name: "WYP_TECZKI_TABORU");

            migrationBuilder.DropTable(
                name: "WYR_RODZ_KOSZTOW");

            migrationBuilder.DropTable(
                name: "WYSYLKA_JPK");

            migrationBuilder.DropTable(
                name: "WZORCE_CMR");

            migrationBuilder.DropTable(
                name: "xmldata",
                schema: "rest");

            migrationBuilder.DropTable(
                name: "ZABEZPIECZENIA");

            migrationBuilder.DropTable(
                name: "ZABEZPIECZENIA_POZ");

            migrationBuilder.DropTable(
                name: "ZADANIA");

            migrationBuilder.DropTable(
                name: "ZADANIA_ZA_WY");

            migrationBuilder.DropTable(
                name: "ZALACZNIKI");

            migrationBuilder.DropTable(
                name: "ZALACZNIKI_RODZAJ");

            migrationBuilder.DropTable(
                name: "ZALACZNIKI_UPRAWN");

            migrationBuilder.DropTable(
                name: "ZALICZKI");

            migrationBuilder.DropTable(
                name: "ZALICZKI_FAKTURY");

            migrationBuilder.DropTable(
                name: "ZALICZKI_SFM_Costs");

            migrationBuilder.DropTable(
                name: "Zdarzenia",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "ZDARZENIA");

            migrationBuilder.DropTable(
                name: "ZdarzeniaIStatystyki",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "ZEZWOLENIA");

            migrationBuilder.DropTable(
                name: "ZEZWOLENIA_PRZYDZIAL");

            migrationBuilder.DropTable(
                name: "ZEZWOLENIA_STRONY");

            migrationBuilder.DropTable(
                name: "ZGODA_TYP");

            migrationBuilder.DropTable(
                name: "ZIPCODE");

            migrationBuilder.DropTable(
                name: "ZLECENIA");

            migrationBuilder.DropTable(
                name: "ZLECENIA_C");

            migrationBuilder.DropTable(
                name: "ZLECENIA_C_CHECKLIST");

            migrationBuilder.DropTable(
                name: "ZLECENIA_C_POZ");

            migrationBuilder.DropTable(
                name: "ZLECENIA_CYST");

            migrationBuilder.DropTable(
                name: "ZLECENIA_DO_WYSL");

            migrationBuilder.DropTable(
                name: "ZLECENIA_DOKUMENTY");

            migrationBuilder.DropTable(
                name: "ZLECENIA_DOKUMENTY_M");

            migrationBuilder.DropTable(
                name: "ZLECENIA_DOKUMENTY_RAIL");

            migrationBuilder.DropTable(
                name: "ZLECENIA_DOKUMENTY_UWAGI");

            migrationBuilder.DropTable(
                name: "ZLECENIA_EXT");

            migrationBuilder.DropTable(
                name: "ZLECENIA_INSTR_DOD");

            migrationBuilder.DropTable(
                name: "ZLECENIA_M");

            migrationBuilder.DropTable(
                name: "ZLECENIA_M_CHECKLIST");

            migrationBuilder.DropTable(
                name: "ZLECENIA_M_LAD");

            migrationBuilder.DropTable(
                name: "ZLECENIA_M_POWIADOMIENIA");

            migrationBuilder.DropTable(
                name: "ZLECENIA_M_PRZELICZNIKI");

            migrationBuilder.DropTable(
                name: "ZLECENIA_M_ZA_WY");

            migrationBuilder.DropTable(
                name: "ZLECENIA_OST_LADUNKI");

            migrationBuilder.DropTable(
                name: "ZLECENIA_OTH_POZ");

            migrationBuilder.DropTable(
                name: "ZLECENIA_POWIADOMIENIA");

            migrationBuilder.DropTable(
                name: "ZLECENIA_POZ_FAKT");

            migrationBuilder.DropTable(
                name: "ZLECENIA_PROMY");

            migrationBuilder.DropTable(
                name: "ZLECENIA_PRZEWOZNICY");

            migrationBuilder.DropTable(
                name: "ZLECENIA_RAIL");

            migrationBuilder.DropTable(
                name: "ZLECENIA_RAIL_CheckList");

            migrationBuilder.DropTable(
                name: "ZLECENIA_RAIL_LAD");

            migrationBuilder.DropTable(
                name: "ZLECENIA_RAIL_POWIADOMIENIA");

            migrationBuilder.DropTable(
                name: "ZLECENIA_RAIL_PRZELICZNIKI");

            migrationBuilder.DropTable(
                name: "ZLECENIA_RAIL_ZA_WY");

            migrationBuilder.DropTable(
                name: "ZLECENIA_SAM");

            migrationBuilder.DropTable(
                name: "ZLECENIA_WYM_TABORU");

            migrationBuilder.DropTable(
                name: "ZLECENIA_ZA_WY");

            migrationBuilder.DropTable(
                name: "ZLECENIA_ZA_WY_CYST");

            migrationBuilder.DropTable(
                name: "ZLECENIA_ZA_WY_PROD");

            migrationBuilder.DropTable(
                name: "ZLECENIA_ZB");

            migrationBuilder.DropTable(
                name: "ZLECENIA_ZB_POZ");

            migrationBuilder.DropTable(
                name: "ZLECENIA_ZB_PROMY");

            migrationBuilder.DropTable(
                name: "ZLECENIA_ZB_WYM_TABORU");

            migrationBuilder.DropTable(
                name: "ZLECENIA_ZB_ZDARZENIA");

            migrationBuilder.DropTable(
                name: "ZleceniaZaplanowane",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "ZleceniaZaznaczone",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "ZleceniaZaznaczoneWymagania",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "ZLP");

            migrationBuilder.DropTable(
                name: "zs_OPONY_PRZEGLAD");

            migrationBuilder.DropTable(
                name: "zs_PW_OTWARCIE");

            migrationBuilder.DropTable(
                name: "zs_PW_ZAMKNIECIE");

            migrationBuilder.DropTable(
                name: "zz_ESPEED_DOKUMENTY");

            migrationBuilder.DropTable(
                name: "zz_ESPEED_P_DOKUMENTY_KIEROWCY");

            migrationBuilder.DropTable(
                name: "zz_ESPEED_P_DOKUMENTY_OGOLNE");

            migrationBuilder.DropTable(
                name: "zz_ESPEED_P_DOKUMENTY_TABOR");

            migrationBuilder.DropTable(
                name: "zz_ESPEED_P_DOKUMENTY_ZLECENIA");

            migrationBuilder.DropTable(
                name: "zz_ESPEED_PORADY");

            migrationBuilder.DropTable(
                name: "zz_FTL_KOSZT_FRACHT_stawki");

            migrationBuilder.DropTable(
                name: "zz_KOSZT_DZIENNY_STAWKI");

            migrationBuilder.DropTable(
                name: "zz_OPTYMALIZACJA_DomyslnyCasObslPunktu");

            migrationBuilder.DropTable(
                name: "zz_OPTYMALIZACJA_LiczbaKakotazyDlaAutLPG");

            migrationBuilder.DropTable(
                name: "zz_OPTYMALIZACJA_WspolczynnikKmDlaAutDE");

            migrationBuilder.DropTable(
                name: "zz_OPTYMALIZACJA_WylKrajWozki");

            migrationBuilder.DropTable(
                name: "zz_OPTYMALIZACJA_ZakazyPrzejazduPrzezKraje");

            migrationBuilder.DropTable(
                name: "zz_TRANSP_KONTRAH");

            migrationBuilder.DropTable(
                name: "zz_TRANSP_Min_Fracht");

            migrationBuilder.DropTable(
                name: "zzEvents4joinAttachment",
                schema: "edi");

            migrationBuilder.DropTable(
                name: "zzEvents4joinAttachmentDetail",
                schema: "edi");

            migrationBuilder.DropTable(
                name: "zzEvents4Lufthansa",
                schema: "edi");

            migrationBuilder.DropTable(
                name: "ZZZ_EMAPA_OBLICZ");

            migrationBuilder.DropTable(
                name: "zzz_PRZEKAZANIE_POJAZDU");

            migrationBuilder.DropTable(
                name: "zzz_test");

            migrationBuilder.DropTable(
                name: "ZZZ_USR_TABLE_PETROMANAGER");

            migrationBuilder.DropTable(
                name: "ZZZ_WYNGRODZENIA_KOLKA");

            migrationBuilder.DropTable(
                name: "AppNewActions");

            migrationBuilder.DropTable(
                name: "PROFILE");

            migrationBuilder.DropTable(
                name: "cc_debug");

            migrationBuilder.DropTable(
                name: "Dictionary",
                schema: "ling");

            migrationBuilder.DropTable(
                name: "RightsProfileHist");

            migrationBuilder.DropTable(
                name: "SFM_MSG");

            migrationBuilder.DropTable(
                name: "SFM_MSGDEFMENU");

            migrationBuilder.DropTable(
                name: "SFM_Route_Obj");

            migrationBuilder.DropTable(
                name: "SFM_ROUTE");

            migrationBuilder.DropTable(
                name: "SolverFleet2OrdersMatrix",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverFleetFeatureTypes",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverMessageTypes",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverOrdersFeatureTypes",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverOrdersRelationRestrictionTypes",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverTimeWindowTypes",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverPoi2PoiMatrixes",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverPoiRelationTypes",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverPricelistFeatureTypes",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverOrdersItems",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverRouteBundles",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverEventCostTypes",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverPoiGates",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverRouteEvents",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverRouteRelationTypes",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "TerminateAppRequest");

            migrationBuilder.DropTable(
                name: "Tool",
                schema: "app");

            migrationBuilder.DropTable(
                name: "SolverPoi2PoiMatrixTypes",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverOrders",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverOrdersItemsBundleTypes",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverEventTypes",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverRoutes",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverOrderTypes",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverFleet",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverSolutions",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverPois",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverTasks",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverCountries",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverPricelist",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverTaskTypes",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverTaskStatuses",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverCarriers",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverTruckProfile",
                schema: "opti");

            migrationBuilder.DropTable(
                name: "SolverPricelistTypes",
                schema: "opti");
        }
    }
}
